<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="arrow-glib"/>
  <c:include name="arrow-glib/arrow-glib.h"/>
  <namespace name="Arrow"
             version="1.0"
             shared-library="libarrow-glib.so.1500"
             c:identifier-prefixes="GArrow"
             c:symbol-prefixes="garrow">
    <alias name="TimePoint" c:type="GArrowTimePoint">
      <source-position filename="arrow-glib/file-system.h" line="31"/>
      <type name="gint64" c:type="gint64"/>
    </alias>
    <class name="AggregateNodeOptions"
           c:symbol-prefix="aggregate_node_options"
           c:type="GArrowAggregateNodeOptions"
           parent="ExecuteNodeOptions"
           glib:type-name="GArrowAggregateNodeOptions"
           glib:get-type="garrow_aggregate_node_options_get_type"
           glib:type-struct="AggregateNodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="221"/>
      <constructor name="new"
                   c:identifier="garrow_aggregate_node_options_new"
                   version="6.0.0"
                   throws="1">
        <source-position filename="arrow-glib/compute.h" line="225"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1415">A newly created #GArrowAggregateNodeOptions on success,
  %NULL otherwise.</doc>
          <type name="AggregateNodeOptions"
                c:type="GArrowAggregateNodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="aggregations" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1410">A list of #GArrowAggregation.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Aggregation"/>
            </type>
          </parameter>
          <parameter name="keys"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1411">Group keys.</doc>
            <array length="2" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1412">The number of @keys.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="ExecuteNodeOptions" c:type="GArrowExecuteNodeOptions"/>
      </field>
    </class>
    <record name="AggregateNodeOptionsClass"
            c:type="GArrowAggregateNodeOptionsClass"
            glib:is-gtype-struct-for="AggregateNodeOptions">
      <source-position filename="arrow-glib/compute.h" line="221"/>
      <field name="parent_class">
        <type name="ExecuteNodeOptionsClass"
              c:type="GArrowExecuteNodeOptionsClass"/>
      </field>
    </record>
    <class name="Aggregation"
           c:symbol-prefix="aggregation"
           c:type="GArrowAggregation"
           parent="GObject.Object"
           glib:type-name="GArrowAggregation"
           glib:get-type="garrow_aggregation_get_type"
           glib:type-struct="AggregationClass">
      <source-position filename="arrow-glib/compute.h" line="202"/>
      <constructor name="new"
                   c:identifier="garrow_aggregation_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="206"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1375">A newly created #GArrowAggregation.</doc>
          <type name="Aggregation" c:type="GArrowAggregation*"/>
        </return-value>
        <parameters>
          <parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1370">A name of aggregate function.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1371">A #GArrowFunctionOptions of aggregate function.</doc>
            <type name="FunctionOptions" c:type="GArrowFunctionOptions*"/>
          </parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1372">An input field name of aggregate function.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="output" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1373">An output field name of aggregate function.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="function"
                version="6.0.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="1299">The function name to aggregate.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="input"
                version="6.0.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="1333">The input field name of aggregate function.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="options"
                version="6.0.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="1316">The options of aggregate function.</doc>
        <type name="FunctionOptions"/>
      </property>
      <property name="output"
                version="6.0.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="1350">The output field name of aggregate function.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="AggregationClass"
            c:type="GArrowAggregationClass"
            glib:is-gtype-struct-for="Aggregation">
      <source-position filename="arrow-glib/compute.h" line="202"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Array"
           c:symbol-prefix="array"
           c:type="GArrowArray"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GArrowArray"
           glib:get-type="garrow_array_get_type"
           glib:type-struct="ArrayClass">
      <source-position filename="arrow-glib/basic-array-definition.h"
                       line="35"/>
      <function name="import"
                c:identifier="garrow_array_import"
                version="6.0.0"
                throws="1">
        <source-position filename="arrow-glib/basic-array.h" line="50"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="583">An imported #GArrowArray
  on success, %NULL on error.

  You don't need to release the passed `struct ArrowArray *`,
  even if this function reports an error.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <parameter name="c_abi_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="579">A `struct ArrowArray *`.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="580">A #GArrowDataType of the C ABI array.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </function>
      <method name="cast"
              c:identifier="garrow_array_cast"
              version="0.7.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="902"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4684">
  A newly created casted array on success, %NULL on error.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4679">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="target_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4680">A #GArrowDataType of cast target data.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4681">A #GArrowCastOptions.</doc>
            <type name="CastOptions" c:type="GArrowCastOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="concatenate"
              c:identifier="garrow_array_concatenate"
              version="4.0.0"
              throws="1">
        <source-position filename="arrow-glib/basic-array.h" line="99"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="999">The concatenated array.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="994">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="other_arrays" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="995">A #GArrowArray to be
  concatenated.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="count"
              c:identifier="garrow_array_count"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="911"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4799">The number of target values on success. If an error is occurred,
  the returned value is untrustful value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4795">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4796">A #GArrowCountOptions.</doc>
            <type name="CountOptions" c:type="GArrowCountOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="count_values"
              c:identifier="garrow_array_count_values"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="915"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4834">
  A #GArrowStructArray of `{input type "values", int64_t "counts"}`
  on success, %NULL on error.</doc>
          <type name="StructArray" c:type="GArrowStructArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4831">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="dictionary_encode"
              c:identifier="garrow_array_dictionary_encode"
              version="0.8.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="908"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4761">
  A newly created #GArrowDictionaryArray for the @array on success,
  %NULL on error.</doc>
          <type name="DictionaryArray" c:type="GArrowDictionaryArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4758">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="diff_unified"
              c:identifier="garrow_array_diff_unified"
              version="0.15.0">
        <source-position filename="arrow-glib/basic-array.h" line="96"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="968">The string representation of
  the difference between two arrays as unified format. If there is
  no difference, the return value is %NULL.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="965">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="other_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="966">A #GArrowArray to be compared.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="garrow_array_equal" version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="659">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="656">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="other_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="657">A #GArrowArray to be compared.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal_approx"
              c:identifier="garrow_array_equal_approx"
              version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="706">%TRUE if both of them have the approx same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="703">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="other_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="704">A #GArrowArray to be compared.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal_options"
              c:identifier="garrow_array_equal_options"
              version="5.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="676">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="672">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="other_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="673">A #GArrowArray to be compared.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="674">A #GArrowEqualOptions to custom how to compare.</doc>
            <type name="EqualOptions" c:type="GArrowEqualOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal_range"
              c:identifier="garrow_array_equal_range"
              version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="730">%TRUE if both of them have the same data in the range,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="721">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="start_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="722">The start index of @array to be used.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="other_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="723">A #GArrowArray to be compared.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="other_start_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="724">The start index of @other_array to be used.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="end_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="725">The end index of @array to be used. The end index of
  @other_array is "@other_start_index + (@end_index -
  @start_index)".</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="728">A #GArrowEqualOptions to custom how to compare.</doc>
            <type name="EqualOptions" c:type="GArrowEqualOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="export"
              c:identifier="garrow_array_export"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/basic-array.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="619">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="609">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="c_abi_array"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="610">Return location for a `struct ArrowArray *`.
  It should be freed with the `ArrowArray::release` callback then
  g_free() when no longer needed.</doc>
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
          <parameter name="c_abi_schema"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="613">Return location for a
  `struct ArrowSchema *` or %NULL.
  It should be freed with the `ArrowSchema::release` callback then
  g_free() when no longer needed.</doc>
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter"
              c:identifier="garrow_array_filter"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1011"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5426">The #GArrowArray filterd
  with a boolean selection filter. Nulls in the filter will
  result in nulls in the output.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5421">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5422">The values indicates which values should be filtered out.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5423">A #GArrowFilterOptions.</doc>
            <type name="FilterOptions" c:type="GArrowFilterOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length" c:identifier="garrow_array_get_length">
        <source-position filename="arrow-glib/basic-array.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="796">The number of rows in the array.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="794">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_nulls" c:identifier="garrow_array_get_n_nulls">
        <source-position filename="arrow-glib/basic-array.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="822">The number of NULLs in the array.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="820">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_null_bitmap"
              c:identifier="garrow_array_get_null_bitmap"
              glib:get-property="null-bitmap"
              version="0.3.0">
        <source-position filename="arrow-glib/basic-array.h" line="83"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="835">The bitmap that indicates null
  value indices for the array as #GArrowBuffer or %NULL when
  garrow_array_get_n_nulls() returns 0.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="833">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_offset" c:identifier="garrow_array_get_offset">
        <source-position filename="arrow-glib/basic-array.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="809">The number of values in the array.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="807">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_data_type"
              c:identifier="garrow_array_get_value_data_type"
              glib:get-property="value-data-type"
              version="0.3.0">
        <source-position filename="arrow-glib/basic-array.h" line="84"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="859">The #GArrowDataType for each value of the
  array.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="857">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="garrow_array_get_value_type"
              version="0.3.0">
        <source-position filename="arrow-glib/basic-array.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="882">The #GArrowType for each value of the array.</doc>
          <type name="Type" c:type="GArrowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="880">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_in"
              c:identifier="garrow_array_is_in"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1017"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5464">The #GArrowBooleanArray
  showing whether each element in the left array is contained
  in right array.</doc>
          <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5460">A left hand side #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5461">A right hand side #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_in_chunked_array"
              c:identifier="garrow_array_is_in_chunked_array"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1022"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5492">The #GArrowBooleanArray
  showing whether each element in the left array is contained
  in right chunked array.</doc>
          <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5488">A left hand side #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5489">A right hand side #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_null"
              c:identifier="garrow_array_is_null"
              version="0.3.0">
        <source-position filename="arrow-glib/basic-array.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="765">Whether the @i-th value is null or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="762">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="763">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_valid"
              c:identifier="garrow_array_is_valid"
              version="0.8.0">
        <source-position filename="arrow-glib/basic-array.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="781">Whether the @i-th value is valid (not null) or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="778">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="779">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_end_encode"
              c:identifier="garrow_array_run_end_encode"
              version="13.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1108"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="6002">
  A newly created #GArrowRunEndEncodeArray for the @array on success,
  %NULL on error.</doc>
          <type name="RunEndEncodedArray" c:type="GArrowRunEndEncodedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5998">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5999">A #GArrowRunEndEncodeOptions.</doc>
            <type name="RunEndEncodeOptions"
                  c:type="GArrowRunEndEncodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="slice" c:identifier="garrow_array_slice">
        <source-position filename="arrow-glib/basic-array.h" line="86"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="899">The sub #GArrowArray. It covers only from
  `offset` to `offset + length` range. The sub #GArrowArray shares
  values with the base #GArrowArray.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="895">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="896">The offset of sub #GArrowArray.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="897">The length of sub #GArrowArray.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort_indices"
              c:identifier="garrow_array_sort_indices"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1029"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5522">The indices that would sort
  an array in the specified order on success, %NULL on error.</doc>
          <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5518">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="order" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5519">The order for sort.</doc>
            <type name="SortOrder" c:type="GArrowSortOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort_to_indices"
              c:identifier="garrow_array_sort_to_indices"
              version="0.15.0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">Use garrow_array_sort_indices() instead.</doc-deprecated>
        <source-position filename="arrow-glib/compute.h" line="1035"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5549">The indices that would sort
  an array in ascending order on success, %NULL on error.</doc>
          <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5546">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="take"
              c:identifier="garrow_array_take"
              version="0.14.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="969"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5202">The #GArrowArray taken from
  an array of values at indices in input array or %NULL on error.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5197">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5198">The indices of values to take.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5199">A #GArrowTakeOptions.</doc>
            <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_chunked_array"
              c:identifier="garrow_array_take_chunked_array"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="975"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5234">The #GArrowChunkedArray taken from
  an array of values at indices in chunked array or %NULL on error.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5229">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5230">The indices of values to take.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5231">A #GArrowTakeOptions.</doc>
            <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_array_to_string"
              version="0.4.0"
              throws="1">
        <source-position filename="arrow-glib/basic-array.h" line="89"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="921">
  The formatted array content or %NULL on error.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="918">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unique"
              c:identifier="garrow_array_unique"
              version="0.8.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="906"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4730">
  A newly created unique elements array on success, %NULL on error.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4727">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="view"
              c:identifier="garrow_array_view"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/basic-array.h" line="92"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="942">A zero-copy view of this array
  with the given type. This method checks if the `return_type` are
  layout-compatible.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="938">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </instance-parameter>
          <parameter name="return_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="939">A #GArrowDataType of the returned view.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </method>
      <property name="array"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="buffer1"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Buffer"/>
      </property>
      <property name="buffer2"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Buffer"/>
      </property>
      <property name="null-bitmap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_null_bitmap">
        <type name="Buffer"/>
      </property>
      <property name="parent"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Array"/>
      </property>
      <property name="value-data-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_value_data_type">
        <type name="DataType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="ArrayBuilder"
           c:symbol-prefix="array_builder"
           c:type="GArrowArrayBuilder"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GArrowArrayBuilder"
           glib:get-type="garrow_array_builder_get_type"
           glib:type-struct="ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="37"/>
      <method name="append_empty_value"
              c:identifier="garrow_array_builder_append_empty_value"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="838">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="835">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_empty_values"
              c:identifier="garrow_array_builder_append_empty_values"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="853">Append multiple empty values at once. It's more efficient than multiple
garrow_array_builder_append_empty_value() calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="862">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="855">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="856">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_array_builder_append_null"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="782">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="779">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_array_builder_append_nulls"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="795">Append multiple nulls at once. It's more efficient than multiple
garrow_array_builder_append_null() calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="804">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="797">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="798">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="finish"
              c:identifier="garrow_array_builder_finish"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="619">The built #GArrowArray on success,
  %NULL on error.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="616">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_capacity"
              c:identifier="garrow_array_builder_get_capacity"
              version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="652">The capacity of the building array.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="650">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child"
              c:identifier="garrow_array_builder_get_child"
              version="12.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="698">The #GArrowArrayBuilder for the i-th child.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="695">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="696">The index of the child.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="garrow_array_builder_get_children"
              version="12.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="715">
  The #GArrowArrayBuilder for all fields.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ArrayBuilder"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="713">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="garrow_array_builder_get_length"
              version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="667">The current length of the building array.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="665">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_nulls"
              c:identifier="garrow_array_builder_get_n_nulls"
              version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="682">The current number of null elements in the building array.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="680">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_data_type"
              c:identifier="garrow_array_builder_get_value_data_type"
              version="0.9.0">
        <source-position filename="arrow-glib/array-builder.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="585">The #GArrowDataType of the value of
  the array builder.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="583">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="garrow_array_builder_get_value_type"
              version="0.9.0">
        <source-position filename="arrow-glib/array-builder.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="602">The #GArrowType of the value of the array builder.</doc>
          <type name="Type" c:type="GArrowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="600">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reserve"
              c:identifier="garrow_array_builder_reserve"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="763">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="759">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
          <parameter name="additional_capacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="760">The additional capacity to be reserved.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset"
              c:identifier="garrow_array_builder_reset"
              version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="637">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="resize"
              c:identifier="garrow_array_builder_resize"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="743">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="739">A #GArrowArrayBuilder.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </instance-parameter>
          <parameter name="capacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="740">A new capacity.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="array-builder"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ArrayBuilderClass"
            c:type="GArrowArrayBuilderClass"
            glib:is-gtype-struct-for="ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="37"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ArrayClass"
            c:type="GArrowArrayClass"
            glib:is-gtype-struct-for="Array">
      <source-position filename="arrow-glib/basic-array-definition.h"
                       line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ArrayDatum"
           c:symbol-prefix="array_datum"
           c:type="GArrowArrayDatum"
           parent="Datum"
           glib:type-name="GArrowArrayDatum"
           glib:get-type="garrow_array_datum_get_type"
           glib:type-struct="ArrayDatumClass">
      <source-position filename="arrow-glib/datum.h" line="84"/>
      <constructor name="new"
                   c:identifier="garrow_array_datum_new"
                   version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="309">A newly created #GArrowArrayDatum.</doc>
          <type name="ArrayDatum" c:type="GArrowArrayDatum*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="307">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="Datum" c:type="GArrowDatum"/>
      </field>
    </class>
    <record name="ArrayDatumClass"
            c:type="GArrowArrayDatumClass"
            glib:is-gtype-struct-for="ArrayDatum">
      <source-position filename="arrow-glib/datum.h" line="84"/>
      <field name="parent_class">
        <type name="DatumClass" c:type="GArrowDatumClass"/>
      </field>
    </record>
    <class name="ArraySortOptions"
           c:symbol-prefix="array_sort_options"
           c:type="GArrowArraySortOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowArraySortOptions"
           glib:get-type="garrow_array_sort_options_get_type"
           glib:type-struct="ArraySortOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="548"/>
      <constructor name="new"
                   c:identifier="garrow_array_sort_options_new"
                   version="3.0.0">
        <source-position filename="arrow-glib/compute.h" line="552"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2949">A newly created #GArrowArraySortOptions.</doc>
          <type name="ArraySortOptions" c:type="GArrowArraySortOptions*"/>
        </return-value>
        <parameters>
          <parameter name="order" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2947">How to order by values.</doc>
            <type name="SortOrder" c:type="GArrowSortOrder"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal"
              c:identifier="garrow_array_sort_options_equal"
              version="3.0.0">
        <source-position filename="arrow-glib/compute.h" line="555"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2968">%TRUE if both of them have the same order, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2965">A #GArrowArraySortOptions.</doc>
            <type name="ArraySortOptions" c:type="GArrowArraySortOptions*"/>
          </instance-parameter>
          <parameter name="other_options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2966">A #GArrowArraySortOptions to be compared.</doc>
            <type name="ArraySortOptions" c:type="GArrowArraySortOptions*"/>
          </parameter>
        </parameters>
      </method>
      <property name="order"
                version="3.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_SORT_ORDER_ASCENDING">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2927">How to order values.</doc>
        <type name="SortOrder"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="ArraySortOptionsClass"
            c:type="GArrowArraySortOptionsClass"
            glib:is-gtype-struct-for="ArraySortOptions">
      <source-position filename="arrow-glib/compute.h" line="548"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <function-macro name="BUFFER_OUTPUT_STREAM"
                    c:identifier="GARROW_BUFFER_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="108"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUFFER_OUTPUT_STREAM_CLASS"
                    c:identifier="GARROW_BUFFER_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="112"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUFFER_OUTPUT_STREAM_GET_CLASS"
                    c:identifier="GARROW_BUFFER_OUTPUT_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="122"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="BaseBinaryScalar"
           c:symbol-prefix="base_binary_scalar"
           c:type="GArrowBaseBinaryScalar"
           parent="Scalar"
           abstract="1"
           glib:type-name="GArrowBaseBinaryScalar"
           glib:get-type="garrow_base_binary_scalar_get_type"
           glib:type-struct="BaseBinaryScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="325"/>
      <method name="get_value"
              c:identifier="garrow_base_binary_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="329"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1119">The value of this scalar.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1117">A #GArrowBaseBinaryScalar.</doc>
            <type name="BaseBinaryScalar" c:type="GArrowBaseBinaryScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                version="5.0.0"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/scalar.cpp"
             line="1083">The value of the scalar.</doc>
        <type name="Buffer"/>
      </property>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="BaseBinaryScalarClass"
            c:type="GArrowBaseBinaryScalarClass"
            glib:is-gtype-struct-for="BaseBinaryScalar">
      <source-position filename="arrow-glib/scalar.h" line="325"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="BaseListScalar"
           c:symbol-prefix="base_list_scalar"
           c:type="GArrowBaseListScalar"
           parent="Scalar"
           abstract="1"
           glib:type-name="GArrowBaseListScalar"
           glib:get-type="garrow_base_list_scalar_get_type"
           glib:type-struct="BaseListScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="622"/>
      <method name="get_value"
              c:identifier="garrow_base_list_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="626"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2091">The value of this scalar.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2089">A #GArrowBaseListScalar.</doc>
            <type name="BaseListScalar" c:type="GArrowBaseListScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                version="5.0.0"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/scalar.cpp"
             line="2051">The value of the scalar.</doc>
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="BaseListScalarClass"
            c:type="GArrowBaseListScalarClass"
            glib:is-gtype-struct-for="BaseListScalar">
      <source-position filename="arrow-glib/scalar.h" line="622"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="BinaryArray"
           c:symbol-prefix="binary_array"
           c:type="GArrowBinaryArray"
           parent="Array"
           glib:type-name="GArrowBinaryArray"
           glib:get-type="garrow_binary_array_get_type"
           glib:type-struct="BinaryArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="430"/>
      <constructor name="new"
                   c:identifier="garrow_binary_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="432"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2172">A newly created #GArrowBinaryArray.</doc>
          <type name="BinaryArray" c:type="GArrowBinaryArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2162">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2163">The value offsets of @data in Arrow format.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="value_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2164">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2165">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2169">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_buffer"
              c:identifier="garrow_binary_array_get_buffer"
              deprecated="1"
              deprecated-version="1.0.0">
        <doc-deprecated xml:space="preserve">Use garrow_binary_array_get_data_buffer() instead.</doc-deprecated>
        <source-position filename="arrow-glib/basic-array.h" line="442"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2211">The data of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2209">A #GArrowBinaryArray.</doc>
            <type name="BinaryArray" c:type="GArrowBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data_buffer"
              c:identifier="garrow_binary_array_get_data_buffer"
              version="1.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="445"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2225">The data of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2223">A #GArrowBinaryArray.</doc>
            <type name="BinaryArray" c:type="GArrowBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_offsets_buffer"
              c:identifier="garrow_binary_array_get_offsets_buffer">
        <source-position filename="arrow-glib/basic-array.h" line="446"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2240">The offsets of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2238">A #GArrowBinaryArray.</doc>
            <type name="BinaryArray" c:type="GArrowBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="garrow_binary_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="438"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2197">The @i-th value.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2194">A #GArrowBinaryArray.</doc>
            <type name="BinaryArray" c:type="GArrowBinaryArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2195">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <class name="BinaryArrayBuilder"
           c:symbol-prefix="binary_array_builder"
           c:type="GArrowBinaryArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowBinaryArrayBuilder"
           glib:get-type="garrow_binary_array_builder_get_type"
           glib:type-struct="BinaryArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="681"/>
      <constructor name="new" c:identifier="garrow_binary_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="683"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3050">A newly created #GArrowBinaryArrayBuilder.</doc>
          <type name="BinaryArrayBuilder" c:type="GArrowBinaryArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_binary_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_binary_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="687"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3068">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3063">A #GArrowBinaryArrayBuilder.</doc>
            <type name="BinaryArrayBuilder"
                  c:type="GArrowBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3064">A binary value.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3065">A value length.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_binary_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="710"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3177">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3174">A #GArrowBinaryArrayBuilder.</doc>
            <type name="BinaryArrayBuilder"
                  c:type="GArrowBinaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_binary_array_builder_append_nulls"
              version="0.16.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="714"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3195">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3191">A #GArrowBinaryArrayBuilder.</doc>
            <type name="BinaryArrayBuilder"
                  c:type="GArrowBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3192">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_binary_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="693"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3089">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3084">A #GArrowBinaryArrayBuilder.</doc>
            <type name="BinaryArrayBuilder"
                  c:type="GArrowBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3085">A binary value.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3086">A value length.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value_bytes"
              c:identifier="garrow_binary_array_builder_append_value_bytes"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="698"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3114">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3110">A #GArrowBinaryArrayBuilder.</doc>
            <type name="BinaryArrayBuilder"
                  c:type="GArrowBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3111">A binary value.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_binary_array_builder_append_values"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3135">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="702"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3150">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3137">A #GArrowBinaryArrayBuilder.</doc>
            <type name="BinaryArrayBuilder"
                  c:type="GArrowBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3138">The array of #GBytes.</doc>
            <array length="1" zero-terminated="0" c:type="GBytes**">
              <type name="GLib.Bytes" c:type="GBytes*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3139">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3140">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3144">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="BinaryArrayBuilderClass"
            c:type="GArrowBinaryArrayBuilderClass"
            glib:is-gtype-struct-for="BinaryArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="681"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="BinaryArrayClass"
            c:type="GArrowBinaryArrayClass"
            glib:is-gtype-struct-for="BinaryArray">
      <source-position filename="arrow-glib/basic-array.h" line="430"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="BinaryDataType"
           c:symbol-prefix="binary_data_type"
           c:type="GArrowBinaryDataType"
           parent="DataType"
           glib:type-name="GArrowBinaryDataType"
           glib:get-type="garrow_binary_data_type_get_type"
           glib:type-struct="BinaryDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="309"/>
      <constructor name="new" c:identifier="garrow_binary_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="311"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="863">The newly created binary data type.</doc>
          <type name="BinaryDataType" c:type="GArrowBinaryDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="BinaryDataTypeClass"
            c:type="GArrowBinaryDataTypeClass"
            glib:is-gtype-struct-for="BinaryDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="309"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <class name="BinaryDictionaryArrayBuilder"
           c:symbol-prefix="binary_dictionary_array_builder"
           c:type="GArrowBinaryDictionaryArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowBinaryDictionaryArrayBuilder"
           glib:get-type="garrow_binary_dictionary_array_builder_get_type"
           glib:type-struct="BinaryDictionaryArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1215"/>
      <constructor name="new"
                   c:identifier="garrow_binary_dictionary_array_builder_new"
                   version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1219"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5024">A newly created #GArrowBinaryDictionaryArrayBuilder.</doc>
          <type name="BinaryDictionaryArrayBuilder"
                c:type="GArrowBinaryDictionaryArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_array"
              c:identifier="garrow_binary_dictionary_array_builder_append_array"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1240"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5118">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5114">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5115">A #GArrowBinaryArray.</doc>
            <type name="BinaryArray" c:type="GArrowBinaryArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_indices"
              c:identifier="garrow_binary_dictionary_array_builder_append_indices"
              version="2.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="5137">Append dictionary indices directly without modifying the internal memo.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1245"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5151">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5139">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5140">The array of indices.</doc>
            <array length="1" zero-terminated="0" c:type="const gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5141">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5142">The array of
  %TRUE or %FALSE that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5146">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_binary_dictionary_array_builder_append_null"
              version="2.0.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1224"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5045">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5042">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_binary_dictionary_array_builder_append_value"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1229"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5066">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5061">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5062">A binary value.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5063">A value length.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value_bytes"
              c:identifier="garrow_binary_dictionary_array_builder_append_value_bytes"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1235"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5091">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5087">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5088">A binary value.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="finish_delta"
              c:identifier="garrow_binary_dictionary_array_builder_finish_delta"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1256"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5201">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5196">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="out_indices"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5197">The built #GArrowArray containing indices.</doc>
            <type name="Array" c:type="GArrowArray**"/>
          </parameter>
          <parameter name="out_delta"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5198">The built #GArrowArray containing dictionary.</doc>
            <type name="Array" c:type="GArrowArray**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dictionary_length"
              c:identifier="garrow_binary_dictionary_array_builder_get_dictionary_length"
              version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1253"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5182">A number of entries in the dicitonary.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5180">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_memo_values"
              c:identifier="garrow_binary_dictionary_array_builder_insert_memo_values"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1262"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5231">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5227">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5228">A #GArrowBinaryArray.</doc>
            <type name="BinaryArray" c:type="GArrowBinaryArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_full"
              c:identifier="garrow_binary_dictionary_array_builder_reset_full"
              version="2.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="5250">Reset and also clear accumulated dictionary values in memo table.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1267"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5252">A #GArrowBinaryDictionaryArrayBuilder.</doc>
            <type name="BinaryDictionaryArrayBuilder"
                  c:type="GArrowBinaryDictionaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="BinaryDictionaryArrayBuilderClass"
            c:type="GArrowBinaryDictionaryArrayBuilderClass"
            glib:is-gtype-struct-for="BinaryDictionaryArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1215"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <class name="BinaryScalar"
           c:symbol-prefix="binary_scalar"
           c:type="GArrowBinaryScalar"
           parent="BaseBinaryScalar"
           glib:type-name="GArrowBinaryScalar"
           glib:get-type="garrow_binary_scalar_get_type"
           glib:type-struct="BinaryScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="341"/>
      <constructor name="new"
                   c:identifier="garrow_binary_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="345"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1155">A newly created #GArrowBinaryScalar.</doc>
          <type name="BinaryScalar" c:type="GArrowBinaryScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1153">The value of this scalar.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseBinaryScalar" c:type="GArrowBaseBinaryScalar"/>
      </field>
    </class>
    <record name="BinaryScalarClass"
            c:type="GArrowBinaryScalarClass"
            glib:is-gtype-struct-for="BinaryScalar">
      <source-position filename="arrow-glib/scalar.h" line="341"/>
      <field name="parent_class">
        <type name="BaseBinaryScalarClass"
              c:type="GArrowBaseBinaryScalarClass"/>
      </field>
    </record>
    <class name="BooleanArray"
           c:symbol-prefix="boolean_array"
           c:type="GArrowBooleanArray"
           parent="PrimitiveArray"
           glib:type-name="GArrowBooleanArray"
           glib:get-type="garrow_boolean_array_get_type"
           glib:type-struct="BooleanArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="148"/>
      <constructor name="new"
                   c:identifier="garrow_boolean_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="150"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1188">A newly created #GArrowBooleanArray.</doc>
          <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1179">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1180">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1181">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1185">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="and"
              c:identifier="garrow_boolean_array_and"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="922"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4886">The element-wise AND operated boolean array.

  It should be freed with g_object_unref() when no longer needed.</doc>
          <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4882">A left hand side #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4883">A right hand side #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="garrow_boolean_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1210">The @i-th value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1207">A #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1208">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_boolean_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="157"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1225">
  The raw boolean values.

  It should be freed with g_free() when no longer needed.</doc>
          <array length="0" zero-terminated="0" c:type="gboolean*">
            <type name="gboolean" c:type="gboolean"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1222">A #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1223">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="invert"
              c:identifier="garrow_boolean_array_invert"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="919"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4860">The element-wise inverted boolean array.

  It should be freed with g_object_unref() when no longer needed.</doc>
          <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4857">A #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="or"
              c:identifier="garrow_boolean_array_or"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="926"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4914">The element-wise OR operated boolean array.

  It should be freed with g_object_unref() when no longer needed.</doc>
          <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4910">A left hand side #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4911">A right hand side #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="xor"
              c:identifier="garrow_boolean_array_xor"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="930"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4942">The element-wise XOR operated boolean array.

  It should be freed with g_object_unref() when no longer needed.</doc>
          <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4938">A left hand side #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4939">A right hand side #GArrowBooleanArray.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="PrimitiveArray" c:type="GArrowPrimitiveArray"/>
      </field>
    </class>
    <class name="BooleanArrayBuilder"
           c:symbol-prefix="boolean_array_builder"
           c:type="GArrowBooleanArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowBooleanArrayBuilder"
           glib:get-type="garrow_boolean_array_builder_get_type"
           glib:type-struct="BooleanArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="124"/>
      <constructor name="new" c:identifier="garrow_boolean_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="126"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="985">A newly created #GArrowBooleanArrayBuilder.</doc>
          <type name="BooleanArrayBuilder"
                c:type="GArrowBooleanArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_boolean_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_boolean_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1002">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="998">A #GArrowBooleanArrayBuilder.</doc>
            <type name="BooleanArrayBuilder"
                  c:type="GArrowBooleanArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="999">A boolean value.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_boolean_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1083">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1080">A #GArrowBooleanArrayBuilder.</doc>
            <type name="BooleanArrayBuilder"
                  c:type="GArrowBooleanArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_boolean_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1095">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1104">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1097">A #GArrowBooleanArrayBuilder.</doc>
            <type name="BooleanArrayBuilder"
                  c:type="GArrowBooleanArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1098">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_boolean_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1021">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1017">A #GArrowBooleanArrayBuilder.</doc>
            <type name="BooleanArrayBuilder"
                  c:type="GArrowBooleanArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1018">A boolean value.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_boolean_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1037">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1052">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1039">A #GArrowBooleanArrayBuilder.</doc>
            <type name="BooleanArrayBuilder"
                  c:type="GArrowBooleanArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1040">The array of boolean.</doc>
            <array length="1" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1041">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1042">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1046">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="BooleanArrayBuilderClass"
            c:type="GArrowBooleanArrayBuilderClass"
            glib:is-gtype-struct-for="BooleanArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="124"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="BooleanArrayClass"
            c:type="GArrowBooleanArrayClass"
            glib:is-gtype-struct-for="BooleanArray">
      <source-position filename="arrow-glib/basic-array.h" line="148"/>
      <field name="parent_class">
        <type name="PrimitiveArrayClass" c:type="GArrowPrimitiveArrayClass"/>
      </field>
    </record>
    <class name="BooleanDataType"
           c:symbol-prefix="boolean_data_type"
           c:type="GArrowBooleanDataType"
           parent="FixedWidthDataType"
           glib:type-name="GArrowBooleanDataType"
           glib:get-type="garrow_boolean_data_type_get_type"
           glib:type-struct="BooleanDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="101"/>
      <constructor name="new" c:identifier="garrow_boolean_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="416">The newly created boolean data type.</doc>
          <type name="BooleanDataType" c:type="GArrowBooleanDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="FixedWidthDataType" c:type="GArrowFixedWidthDataType"/>
      </field>
    </class>
    <record name="BooleanDataTypeClass"
            c:type="GArrowBooleanDataTypeClass"
            glib:is-gtype-struct-for="BooleanDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="101"/>
      <field name="parent_class">
        <type name="FixedWidthDataTypeClass"
              c:type="GArrowFixedWidthDataTypeClass"/>
      </field>
    </record>
    <class name="BooleanScalar"
           c:symbol-prefix="boolean_scalar"
           c:type="GArrowBooleanScalar"
           parent="Scalar"
           glib:type-name="GArrowBooleanScalar"
           glib:get-type="garrow_boolean_scalar_get_type"
           glib:type-struct="BooleanScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="97"/>
      <constructor name="new"
                   c:identifier="garrow_boolean_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="452">A newly created #GArrowBooleanScalar.</doc>
          <type name="BooleanScalar" c:type="GArrowBooleanScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="450">The value of this scalar.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_boolean_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="469">The value of this scalar.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="467">A #GArrowBooleanScalar.</doc>
            <type name="BooleanScalar" c:type="GArrowBooleanScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="BooleanScalarClass"
            c:type="GArrowBooleanScalarClass"
            glib:is-gtype-struct-for="BooleanScalar">
      <source-position filename="arrow-glib/scalar.h" line="97"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Buffer"
           c:symbol-prefix="buffer"
           c:type="GArrowBuffer"
           parent="GObject.Object"
           glib:type-name="GArrowBuffer"
           glib:get-type="garrow_buffer_get_type"
           glib:type-struct="BufferClass">
      <source-position filename="arrow-glib/buffer.h" line="35"/>
      <constructor name="new" c:identifier="garrow_buffer_new" version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="181">A newly created #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="176">Data for the buffer.
  They aren't owned by the new buffer.
  You must not free the data while the new buffer is alive.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="179">The number of bytes of the data.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_bytes"
                   c:identifier="garrow_buffer_new_bytes"
                   version="0.9.0">
        <source-position filename="arrow-glib/buffer.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="196">A newly created #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="194">Data for the buffer.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy"
              c:identifier="garrow_buffer_copy"
              version="0.3.0"
              throws="1">
        <source-position filename="arrow-glib/buffer.h" line="52"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="382">
  A newly copied #GArrowBuffer on success, %NULL on error.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="377">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
          <parameter name="start" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="378">An offset of data to be copied in byte.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="379">The number of bytes to be copied from the start.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="garrow_buffer_equal" version="0.4.0">
        <source-position filename="arrow-glib/buffer.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="216">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="213">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
          <parameter name="other_buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="214">A #GArrowBuffer to be compared.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal_n_bytes"
              c:identifier="garrow_buffer_equal_n_bytes"
              version="0.4.0">
        <source-position filename="arrow-glib/buffer.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="235">%TRUE if both of them have the same data in the first
  `n_bytes`, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="231">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
          <parameter name="other_buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="232">A #GArrowBuffer to be compared.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="233">The number of first bytes to be compared.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_capacity"
              c:identifier="garrow_buffer_get_capacity"
              version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="269">The number of bytes that where allocated for the buffer in
  total.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="267">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data"
              c:identifier="garrow_buffer_get_data"
              version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="285">The data of the buffer. The data is owned by
  the buffer. You should not free or modify the data.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="283">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mutable_data"
              c:identifier="garrow_buffer_get_mutable_data"
              version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="48"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="309">The data of the buffer. If the
  buffer is imutable, it returns %NULL. The data is owned by the
  buffer. You should not free the data.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="307">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="garrow_buffer_get_parent"
              glib:get-property="parent"
              version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="50"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="352">
  The parent #GArrowBuffer or %NULL.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="350">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="garrow_buffer_get_size"
              version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="337">The number of bytes that might have valid data.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="335">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_mutable"
              c:identifier="garrow_buffer_is_mutable"
              version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="254">%TRUE if the buffer is mutable, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="252">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="slice" c:identifier="garrow_buffer_slice" version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="408">A newly created #GArrowBuffer that shares
  data of the base #GArrowBuffer. The created #GArrowBuffer has data
  start with offset from the base buffer data and are the specified
  bytes size.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="404">A #GArrowBuffer.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="405">An offset in the buffer data in byte.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="406">The number of bytes of the sliced data.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="data"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.Bytes"/>
      </property>
      <property name="parent"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_parent">
        <type name="Buffer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="BufferClass"
            c:type="GArrowBufferClass"
            glib:is-gtype-struct-for="Buffer">
      <source-position filename="arrow-glib/buffer.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="BufferInputStream"
           c:symbol-prefix="buffer_input_stream"
           c:type="GArrowBufferInputStream"
           parent="SeekableInputStream"
           glib:type-name="GArrowBufferInputStream"
           glib:get-type="garrow_buffer_input_stream_get_type"
           glib:type-struct="BufferInputStreamClass">
      <source-position filename="arrow-glib/input-stream.h" line="100"/>
      <implements name="File"/>
      <implements name="Readable"/>
      <constructor name="new" c:identifier="garrow_buffer_input_stream_new">
        <source-position filename="arrow-glib/input-stream.h" line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="604">A newly created #GArrowBufferInputStream.</doc>
          <type name="BufferInputStream" c:type="GArrowBufferInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="602">The buffer to be read.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_buffer"
              c:identifier="garrow_buffer_input_stream_get_buffer"
              glib:get-property="buffer">
        <source-position filename="arrow-glib/input-stream.h" line="104"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="619">The data of the stream as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="617">A #GArrowBufferInputStream.</doc>
            <type name="BufferInputStream" c:type="GArrowBufferInputStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="buffer"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_buffer">
        <type name="Buffer"/>
      </property>
      <field name="parent_instance">
        <type name="SeekableInputStream" c:type="GArrowSeekableInputStream"/>
      </field>
    </class>
    <record name="BufferInputStreamClass"
            c:type="GArrowBufferInputStreamClass"
            glib:is-gtype-struct-for="BufferInputStream">
      <source-position filename="arrow-glib/input-stream.h" line="100"/>
      <field name="parent_class">
        <type name="SeekableInputStreamClass"
              c:type="GArrowSeekableInputStreamClass"/>
      </field>
    </record>
    <class name="BufferOutputStream"
           c:symbol-prefix="buffer_output_stream"
           c:type="GArrowBufferOutputStream"
           parent="OutputStream"
           glib:type-name="GArrowBufferOutputStream"
           glib:get-type="garrow_buffer_output_stream_get_type"
           glib:type-struct="BufferOutputStreamClass">
      <doc xml:space="preserve"
           filename="arrow-glib/output-stream.h"
           line="134">It wraps `arrow::io::BufferOutputStream`.</doc>
      <source-position filename="arrow-glib/output-stream.h" line="149"/>
      <implements name="File"/>
      <implements name="Writable"/>
      <constructor name="new" c:identifier="garrow_buffer_output_stream_new">
        <source-position filename="arrow-glib/output-stream.h" line="154"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="337">A newly created #GArrowBufferOutputStream.</doc>
          <type name="BufferOutputStream" c:type="GArrowBufferOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="335">The resizable buffer to be output.</doc>
            <type name="ResizableBuffer" c:type="GArrowResizableBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="OutputStream" c:type="GArrowOutputStream"/>
      </field>
    </class>
    <record name="BufferOutputStreamClass"
            c:type="GArrowBufferOutputStreamClass"
            glib:is-gtype-struct-for="BufferOutputStream">
      <source-position filename="arrow-glib/output-stream.h" line="149"/>
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GArrowOutputStreamClass"/>
      </field>
    </record>
    <class name="CSVReadOptions"
           c:symbol-prefix="csv_read_options"
           c:type="GArrowCSVReadOptions"
           parent="GObject.Object"
           glib:type-name="GArrowCSVReadOptions"
           glib:get-type="garrow_csv_read_options_get_type"
           glib:type-struct="CSVReadOptionsClass">
      <source-position filename="arrow-glib/reader.h" line="265"/>
      <constructor name="new"
                   c:identifier="garrow_csv_read_options_new"
                   version="0.12.0">
        <source-position filename="arrow-glib/reader.h" line="267"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1305">A newly created #GArrowCSVReadOptions.</doc>
          <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
        </return-value>
      </constructor>
      <method name="add_column_name"
              c:identifier="garrow_csv_read_options_add_column_name">
        <source-position filename="arrow-glib/reader.h" line="323"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="column_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_column_type"
              c:identifier="garrow_csv_read_options_add_column_type"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1316">Add value type of a column.</doc>
        <source-position filename="arrow-glib/reader.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1318">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1319">The name of the target column.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1320">The #GArrowDataType for the column.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_false_value"
              c:identifier="garrow_csv_read_options_add_false_value"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="311"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1574">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="false_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1575">The value to be processed as false.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_null_value"
              c:identifier="garrow_csv_read_options_add_null_value"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1438">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="null_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1439">The value to be processed as null.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_schema"
              c:identifier="garrow_csv_read_options_add_schema"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1336">Add value types for columns in the schema.</doc>
        <source-position filename="arrow-glib/reader.h" line="273"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1338">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1339">The #GArrowSchema that specifies columns and their types.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_true_value"
              c:identifier="garrow_csv_read_options_add_true_value"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="299"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1506">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="true_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1507">The value to be processed as true.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_names"
              c:identifier="garrow_csv_read_options_get_column_names"
              version="0.15.0">
        <source-position filename="arrow-glib/reader.h" line="320"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1613">
  The column names.

  If the number of values is zero, this returns %NULL.

  It's a %NULL-terminated string array. It must be freed with
  g_strfreev() when no longer needed.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1611">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_column_types"
              c:identifier="garrow_csv_read_options_get_column_types"
              version="0.12.0">
        <source-position filename="arrow-glib/reader.h" line="276"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1360">
  The column name and value type mapping of the options.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="DataType"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1358">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_false_values"
              c:identifier="garrow_csv_read_options_get_false_values"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="308"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1544">
  The values to be processed as false.

  If the number of values is zero, this returns %NULL.

  It's a %NULL-terminated string array. It must be freed with
  g_strfreev() when no longer needed.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1542">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_null_values"
              c:identifier="garrow_csv_read_options_get_null_values"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="284"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1408">
  The values to be processed as null.

  If the number of values is zero, this returns %NULL.

  It's a %NULL-terminated string array. It must be freed with
  g_strfreev() when no longer needed.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1406">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_true_values"
              c:identifier="garrow_csv_read_options_get_true_values"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="296"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1476">
  The values to be processed as true.

  If the number of values is zero, this returns %NULL.

  It's a %NULL-terminated string array. It must be freed with
  g_strfreev() when no longer needed.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1474">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_column_names"
              c:identifier="garrow_csv_read_options_set_column_names"
              version="0.15.0">
        <source-position filename="arrow-glib/reader.h" line="315"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1589">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="column_names" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1590">
  The column names (if empty, will be read from first
  row after `skip_rows`)</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_column_names" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1593">The number of the specified column names.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_false_values"
              c:identifier="garrow_csv_read_options_set_false_values"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="303"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1521">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="false_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1522">
  The values to be processed as false.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_false_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1524">The number of the specified false values.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_null_values"
              c:identifier="garrow_csv_read_options_set_null_values"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="279"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1385">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="null_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1386">
  The values to be processed as null.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_null_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1388">The number of the specified null values.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_true_values"
              c:identifier="garrow_csv_read_options_set_true_values"
              version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="291"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1453">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </instance-parameter>
          <parameter name="true_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1454">
  The values to be processed as true.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_true_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1456">The number of the specified true values.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-newlines-in-values"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1230">Whether values are allowed to contain CR (0x0d) and LF (0x0a) characters.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-null-strings"
                version="0.14.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1283">Whether string / binary columns can have null values.
If %TRUE, then strings in "null_values" are considered null for string columns.
If %FALSE, then all strings are valid string values.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="block-size"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="1048576">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1078">Block size we request from the IO layer; also determines the size
of chunks when #GArrowCSVReadOptions:use-threads is %TRUE.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="check-utf8"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1269">Whether to check UTF8 validity of string columns.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="delimiter"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="44">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1138">Field delimiter character.</doc>
        <type name="gchar" c:type="gchar"/>
      </property>
      <property name="escape-character"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="92">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1213">Escaping character. This is used only when
#GArrowCSVReadOptions:is-escaped is %TRUE.</doc>
        <type name="gchar" c:type="gchar"/>
      </property>
      <property name="generate-column-names"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="ignore-empty-lines"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1247">Whether empty lines are ignored. If %FALSE, an empty line
represents a simple empty value (assuming a one-column CSV file).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="is-double-quoted"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1185">Whether a quote inside a value is double quoted.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="is-escaped"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1199">Whether escaping is used.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="is-quoted"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1154">Whether quoting is used.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="n-skip-rows"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1097">The number of header rows to skip (not including
the row of column names, if any)</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="quote-character"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="34">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1168">Quoting character. This is used only when
#GArrowCSVReadOptions:is-quoted is %TRUE.</doc>
        <type name="gchar" c:type="gchar"/>
      </property>
      <property name="use-threads"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1064">Whether to use the global CPU thread pool.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="CSVReadOptionsClass"
            c:type="GArrowCSVReadOptionsClass"
            glib:is-gtype-struct-for="CSVReadOptions">
      <source-position filename="arrow-glib/reader.h" line="265"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="CSVReader"
           c:symbol-prefix="csv_reader"
           c:type="GArrowCSVReader"
           parent="GObject.Object"
           glib:type-name="GArrowCSVReader"
           glib:get-type="garrow_csv_reader_get_type"
           glib:type-struct="CSVReaderClass">
      <source-position filename="arrow-glib/reader.h" line="335"/>
      <constructor name="new"
                   c:identifier="garrow_csv_reader_new"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/reader.h" line="337"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1780">A newly created #GArrowCSVReader or %NULL on error.</doc>
          <type name="CSVReader" c:type="GArrowCSVReader*"/>
        </return-value>
        <parameters>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1776">The input to be read.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1777">A #GArrowCSVReadOptions.</doc>
            <type name="CSVReadOptions" c:type="GArrowCSVReadOptions*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="read"
              c:identifier="garrow_csv_reader_read"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="340"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="1822">A read #GArrowTable or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="1819">A #GArrowCSVReader.</doc>
            <type name="CSVReader" c:type="GArrowCSVReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="csv-table-reader"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="input"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InputStream"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="CSVReaderClass"
            c:type="GArrowCSVReaderClass"
            glib:is-gtype-struct-for="CSVReader">
      <source-position filename="arrow-glib/reader.h" line="335"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="CallExpression"
           c:symbol-prefix="call_expression"
           c:type="GArrowCallExpression"
           parent="Expression"
           glib:type-name="GArrowCallExpression"
           glib:get-type="garrow_call_expression_get_type"
           glib:type-struct="CallExpressionClass">
      <source-position filename="arrow-glib/expression.h" line="77"/>
      <constructor name="new"
                   c:identifier="garrow_call_expression_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/expression.h" line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/expression.cpp"
               line="209">A newly created #GArrowCallExpression.</doc>
          <type name="CallExpression" c:type="GArrowCallExpression*"/>
        </return-value>
        <parameters>
          <parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="205">A name of function to be called.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="arguments" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="206">Arguments of this call.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Expression"/>
            </type>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="207">A #GArrowFunctionOptions for the called function.</doc>
            <type name="FunctionOptions" c:type="GArrowFunctionOptions*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Expression" c:type="GArrowExpression"/>
      </field>
    </class>
    <record name="CallExpressionClass"
            c:type="GArrowCallExpressionClass"
            glib:is-gtype-struct-for="CallExpression">
      <source-position filename="arrow-glib/expression.h" line="77"/>
      <field name="parent_class">
        <type name="ExpressionClass" c:type="GArrowExpressionClass"/>
      </field>
    </record>
    <class name="CastOptions"
           c:symbol-prefix="cast_options"
           c:type="GArrowCastOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowCastOptions"
           glib:get-type="garrow_cast_options_get_type"
           glib:type-struct="CastOptionsClass">
      <source-position filename="arrow-glib/compute-definition.h" line="47"/>
      <constructor name="new"
                   c:identifier="garrow_cast_options_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/compute.h" line="408"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2500">A newly created #GArrowCastOptions.</doc>
          <type name="CastOptions" c:type="GArrowCastOptions*"/>
        </return-value>
      </constructor>
      <property name="allow-decimal-truncate"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2454">Whether truncating decimal value is allowed or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-float-truncate"
                version="0.12.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2468">Whether truncating float value is allowed or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-int-overflow"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2412">Whether integer overflow is allowed or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-invalid-utf8"
                version="0.13.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2482">Whether invalid UTF-8 string value is allowed or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-time-overflow"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2440">Whether time overflow is allowed or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-time-truncate"
                version="0.8.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2426">Whether truncating time value is allowed or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="to-data-type"
                version="1.0.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2398">The #GArrowDataType being casted to.</doc>
        <type name="DataType"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="CastOptionsClass"
            c:type="GArrowCastOptionsClass"
            glib:is-gtype-struct-for="CastOptions">
      <source-position filename="arrow-glib/compute-definition.h" line="47"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="ChunkedArray"
           c:symbol-prefix="chunked_array"
           c:type="GArrowChunkedArray"
           parent="GObject.Object"
           glib:type-name="GArrowChunkedArray"
           glib:get-type="garrow_chunked_array_get_type"
           glib:type-struct="ChunkedArrayClass">
      <source-position filename="arrow-glib/chunked-array-definition.h"
                       line="35"/>
      <constructor name="new"
                   c:identifier="garrow_chunked_array_new"
                   throws="1">
        <source-position filename="arrow-glib/chunked-array.h" line="28"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="156">
  A newly created #GArrowChunkedArray or %NULL on error.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <parameter name="chunks" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="153">The array chunks.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_empty"
                   c:identifier="garrow_chunked_array_new_empty"
                   version="11.0.0"
                   throws="1">
        <source-position filename="arrow-glib/chunked-array.h" line="32"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="182">
  A newly created empty #GArrowChunkedArray or %NULL on error.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="179">The #GArrowDataType of this chunked array.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="combine"
              c:identifier="garrow_chunked_array_combine"
              version="4.0.0"
              throws="1">
        <source-position filename="arrow-glib/chunked-array.h" line="59"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="396">The combined array that has
  all data in all chunks.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="393">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="garrow_chunked_array_equal"
              version="0.4.0">
        <source-position filename="arrow-glib/chunked-array.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="206">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="203">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="other_chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="204">A #GArrowChunkedArray to be compared.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter"
              c:identifier="garrow_chunked_array_filter"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1072"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5742">The #GArrowChunkedArray filterd
  with a boolean selection filter. Nulls in the filter will
  result in nulls in the output.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5737">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5738">The values indicates which values should be filtered out.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5739">A #GArrowFilterOptions.</doc>
            <type name="FilterOptions" c:type="GArrowFilterOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter_chunked_array"
              c:identifier="garrow_chunked_array_filter_chunked_array"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1078"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5781">The #GArrowChunkedArray filterd
  with a chunked array filter. Nulls in the filter will
  result in nulls in the output.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5776">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5777">The values indicates which values should be filtered out.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5778">A #GArrowFilterOptions.</doc>
            <type name="FilterOptions" c:type="GArrowFilterOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_chunk" c:identifier="garrow_chunked_array_get_chunk">
        <source-position filename="arrow-glib/chunked-array.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="319">The i-th chunk of the chunked array.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="316">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="317">The index of the target chunk.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_chunks" c:identifier="garrow_chunked_array_get_chunks">
        <source-position filename="arrow-glib/chunked-array.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="334">
  The chunks in the chunked array.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Array"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="332">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="garrow_chunked_array_get_length"
              deprecated="1"
              deprecated-version="0.15.0">
        <doc-deprecated xml:space="preserve">Use garrow_chunked_array_get_n_rows() instead.</doc-deprecated>
        <source-position filename="arrow-glib/chunked-array.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="263">The total number of rows in the chunked array.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="261">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_chunks"
              c:identifier="garrow_chunked_array_get_n_chunks">
        <source-position filename="arrow-glib/chunked-array.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="305">The total number of chunks in the chunked array.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="303">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_nulls"
              c:identifier="garrow_chunked_array_get_n_nulls">
        <source-position filename="arrow-glib/chunked-array.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="292">The total number of NULL in the chunked array.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="290">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_rows"
              c:identifier="garrow_chunked_array_get_n_rows"
              version="0.15.0">
        <source-position filename="arrow-glib/chunked-array.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="277">The total number of rows in the chunked array.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="275">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_data_type"
              c:identifier="garrow_chunked_array_get_value_data_type"
              version="0.9.0">
        <source-position filename="arrow-glib/chunked-array.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="225">The #GArrowDataType of the value of
  the chunked array.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="223">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="garrow_chunked_array_get_value_type"
              version="0.9.0">
        <source-position filename="arrow-glib/chunked-array.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="247">The #GArrowType of the value of the chunked array.</doc>
          <type name="Type" c:type="GArrowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="245">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="slice" c:identifier="garrow_chunked_array_slice">
        <source-position filename="arrow-glib/chunked-array.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="357">The sub #GArrowChunkedArray. It covers only from
  `offset` to `offset + length` range. The sub #GArrowChunkedArray shares
  values with the base #GArrowChunkedArray.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="353">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="354">The offset of sub #GArrowChunkedArray.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="355">The length of sub #GArrowChunkedArray.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort_indices"
              c:identifier="garrow_chunked_array_sort_indices"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1040"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5569">The indices that would sort
  a chunked array in the specified order on success, %NULL on error.</doc>
          <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5565">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="order" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5566">The order for sort.</doc>
            <type name="SortOrder" c:type="GArrowSortOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="take"
              c:identifier="garrow_chunked_array_take"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="993"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5330">The #GArrowChunkedArray taken from
  an array of values at indices in input array or %NULL on error.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5325">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5326">The indices of values to take.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5327">A #GArrowTakeOptions.</doc>
            <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_chunked_array"
              c:identifier="garrow_chunked_array_take_chunked_array"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="999"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5362">The #GArrowChunkedArray taken from
  an array of values at indices in chunked array or %NULL on error.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5357">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5358">The indices of values to take.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5359">A #GArrowTakeOptions.</doc>
            <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_chunked_array_to_string"
              version="0.11.0"
              throws="1">
        <source-position filename="arrow-glib/chunked-array.h" line="56"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/chunked-array.cpp"
               line="376">
  The formatted chunked array content or %NULL on error.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/chunked-array.cpp"
                 line="373">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="chunked-array"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="data-type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DataType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ChunkedArrayClass"
            c:type="GArrowChunkedArrayClass"
            glib:is-gtype-struct-for="ChunkedArray">
      <source-position filename="arrow-glib/chunked-array-definition.h"
                       line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ChunkedArrayDatum"
           c:symbol-prefix="chunked_array_datum"
           c:type="GArrowChunkedArrayDatum"
           parent="Datum"
           glib:type-name="GArrowChunkedArrayDatum"
           glib:get-type="garrow_chunked_array_datum_get_type"
           glib:type-struct="ChunkedArrayDatumClass">
      <source-position filename="arrow-glib/datum.h" line="98"/>
      <constructor name="new"
                   c:identifier="garrow_chunked_array_datum_new"
                   version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="515">A newly created #GArrowChunkedArrayDatum.</doc>
          <type name="ChunkedArrayDatum" c:type="GArrowChunkedArrayDatum*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="513">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ChunkedArray"/>
      </property>
      <field name="parent_instance">
        <type name="Datum" c:type="GArrowDatum"/>
      </field>
    </class>
    <record name="ChunkedArrayDatumClass"
            c:type="GArrowChunkedArrayDatumClass"
            glib:is-gtype-struct-for="ChunkedArrayDatum">
      <source-position filename="arrow-glib/datum.h" line="98"/>
      <field name="parent_class">
        <type name="DatumClass" c:type="GArrowDatumClass"/>
      </field>
    </record>
    <class name="Codec"
           c:symbol-prefix="codec"
           c:type="GArrowCodec"
           parent="GObject.Object"
           glib:type-name="GArrowCodec"
           glib:get-type="garrow_codec_get_type"
           glib:type-struct="CodecClass">
      <source-position filename="arrow-glib/codec.h" line="61"/>
      <constructor name="new"
                   c:identifier="garrow_codec_new"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/codec.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/codec.cpp"
               line="124">A newly created #GArrowCodec on success, %NULL on error.</doc>
          <type name="Codec" c:type="GArrowCodec*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/codec.cpp"
                 line="121">A #GArrowCompressionType.</doc>
            <type name="CompressionType" c:type="GArrowCompressionType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_compression_level"
              c:identifier="garrow_codec_get_compression_level"
              version="2.0.0">
        <source-position filename="arrow-glib/codec.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/codec.cpp"
               line="183">The compression level of the codec.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="codec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/codec.cpp"
                 line="181">A #GArrowCodec.</doc>
            <type name="Codec" c:type="GArrowCodec*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_compression_type"
              c:identifier="garrow_codec_get_compression_type"
              version="2.0.0">
        <source-position filename="arrow-glib/codec.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/codec.cpp"
               line="165">The compression type of the codec.</doc>
          <type name="CompressionType" c:type="GArrowCompressionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="codec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/codec.cpp"
                 line="163">A #GArrowCodec.</doc>
            <type name="Codec" c:type="GArrowCodec*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="garrow_codec_get_name"
              version="0.12.0">
        <source-position filename="arrow-glib/codec.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/codec.cpp"
               line="147">The name of the codec.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="codec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/codec.cpp"
                 line="145">A #GArrowCodec.</doc>
            <type name="Codec" c:type="GArrowCodec*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="codec"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="CodecClass"
            c:type="GArrowCodecClass"
            glib:is-gtype-struct-for="Codec">
      <source-position filename="arrow-glib/codec.h" line="61"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="CompressedInputStream"
           c:symbol-prefix="compressed_input_stream"
           c:type="GArrowCompressedInputStream"
           parent="InputStream"
           glib:type-name="GArrowCompressedInputStream"
           glib:get-type="garrow_compressed_input_stream_get_type"
           glib:type-struct="CompressedInputStreamClass">
      <source-position filename="arrow-glib/input-stream.h" line="208"/>
      <implements name="File"/>
      <implements name="Readable"/>
      <constructor name="new"
                   c:identifier="garrow_compressed_input_stream_new"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="211"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="1204">A newly created #GArrowCompressedInputStream.</doc>
          <type name="CompressedInputStream"
                c:type="GArrowCompressedInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="codec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="1200">A #GArrowCodec for compressed data in the @raw.</doc>
            <type name="Codec" c:type="GArrowCodec*"/>
          </parameter>
          <parameter name="raw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="1201">A #GArrowInputStream that contains compressed data.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="codec"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Codec"/>
      </property>
      <property name="raw"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InputStream"/>
      </property>
      <field name="parent_instance">
        <type name="InputStream" c:type="GArrowInputStream"/>
      </field>
    </class>
    <record name="CompressedInputStreamClass"
            c:type="GArrowCompressedInputStreamClass"
            glib:is-gtype-struct-for="CompressedInputStream">
      <source-position filename="arrow-glib/input-stream.h" line="208"/>
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GArrowInputStreamClass"/>
      </field>
    </record>
    <class name="CompressedOutputStream"
           c:symbol-prefix="compressed_output_stream"
           c:type="GArrowCompressedOutputStream"
           parent="OutputStream"
           glib:type-name="GArrowCompressedOutputStream"
           glib:get-type="garrow_compressed_output_stream_get_type"
           glib:type-struct="CompressedOutputStreamClass">
      <source-position filename="arrow-glib/output-stream.h" line="220"/>
      <implements name="File"/>
      <implements name="Writable"/>
      <constructor name="new"
                   c:identifier="garrow_compressed_output_stream_new"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/output-stream.h" line="223"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="679">A newly created #GArrowCompressedOutputStream.</doc>
          <type name="CompressedOutputStream"
                c:type="GArrowCompressedOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="codec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="675">A #GArrowCodec for compressed data in the @raw.</doc>
            <type name="Codec" c:type="GArrowCodec*"/>
          </parameter>
          <parameter name="raw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="676">A #GArrowOutputStream that is a sink for compressed data.</doc>
            <type name="OutputStream" c:type="GArrowOutputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="codec"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Codec"/>
      </property>
      <property name="raw"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="OutputStream"/>
      </property>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GArrowOutputStream"/>
      </field>
    </class>
    <record name="CompressedOutputStreamClass"
            c:type="GArrowCompressedOutputStreamClass"
            glib:is-gtype-struct-for="CompressedOutputStream">
      <source-position filename="arrow-glib/output-stream.h" line="220"/>
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GArrowOutputStreamClass"/>
      </field>
    </record>
    <enumeration name="CompressionType"
                 glib:type-name="GArrowCompressionType"
                 glib:get-type="garrow_compression_type_get_type"
                 c:type="GArrowCompressionType">
      <doc xml:space="preserve"
           filename="arrow-glib/codec.h"
           line="27">They are corresponding to `arrow::Compression::type` values.</doc>
      <member name="uncompressed"
              value="0"
              c:identifier="GARROW_COMPRESSION_TYPE_UNCOMPRESSED"
              glib:nick="uncompressed"
              glib:name="GARROW_COMPRESSION_TYPE_UNCOMPRESSED">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="29">Not compressed.</doc>
      </member>
      <member name="snappy"
              value="1"
              c:identifier="GARROW_COMPRESSION_TYPE_SNAPPY"
              glib:nick="snappy"
              glib:name="GARROW_COMPRESSION_TYPE_SNAPPY">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="30">Snappy compression.</doc>
      </member>
      <member name="gzip"
              value="2"
              c:identifier="GARROW_COMPRESSION_TYPE_GZIP"
              glib:nick="gzip"
              glib:name="GARROW_COMPRESSION_TYPE_GZIP">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="31">gzip compression.</doc>
      </member>
      <member name="brotli"
              value="3"
              c:identifier="GARROW_COMPRESSION_TYPE_BROTLI"
              glib:nick="brotli"
              glib:name="GARROW_COMPRESSION_TYPE_BROTLI">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="32">Brotli compression.</doc>
      </member>
      <member name="zstd"
              value="4"
              c:identifier="GARROW_COMPRESSION_TYPE_ZSTD"
              glib:nick="zstd"
              glib:name="GARROW_COMPRESSION_TYPE_ZSTD">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="33">Zstandard compression.</doc>
      </member>
      <member name="lz4"
              value="5"
              c:identifier="GARROW_COMPRESSION_TYPE_LZ4"
              glib:nick="lz4"
              glib:name="GARROW_COMPRESSION_TYPE_LZ4">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="34">LZ4 compression.</doc>
      </member>
      <member name="lzo"
              value="6"
              c:identifier="GARROW_COMPRESSION_TYPE_LZO"
              glib:nick="lzo"
              glib:name="GARROW_COMPRESSION_TYPE_LZO">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="35">LZO compression.</doc>
      </member>
      <member name="bz2"
              value="7"
              c:identifier="GARROW_COMPRESSION_TYPE_BZ2"
              glib:nick="bz2"
              glib:name="GARROW_COMPRESSION_TYPE_BZ2">
        <doc xml:space="preserve"
             filename="arrow-glib/codec.h"
             line="36">bzip2 compression.</doc>
      </member>
    </enumeration>
    <enumeration name="CountMode"
                 glib:type-name="GArrowCountMode"
                 glib:get-type="garrow_count_mode_get_type"
                 c:type="GArrowCountMode">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="427">They correspond to the values of `arrow::compute::CountOptions::CountMode`.</doc>
      <member name="only_valid"
              value="0"
              c:identifier="GARROW_COUNT_MODE_ONLY_VALID"
              glib:nick="only-valid"
              glib:name="GARROW_COUNT_MODE_ONLY_VALID">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="429">Only non-null values will be counted.</doc>
      </member>
      <member name="only_null"
              value="1"
              c:identifier="GARROW_COUNT_MODE_ONLY_NULL"
              glib:nick="only-null"
              glib:name="GARROW_COUNT_MODE_ONLY_NULL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="431">Only null values will be counted.</doc>
      </member>
      <member name="all"
              value="2"
              c:identifier="GARROW_COUNT_MODE_ALL"
              glib:nick="all"
              glib:name="GARROW_COUNT_MODE_ALL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="433">All will be counted.</doc>
      </member>
    </enumeration>
    <class name="CountOptions"
           c:symbol-prefix="count_options"
           c:type="GArrowCountOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowCountOptions"
           glib:get-type="garrow_count_options_get_type"
           glib:type-struct="CountOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="453"/>
      <constructor name="new"
                   c:identifier="garrow_count_options_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="457"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2718">A newly created #GArrowCountOptions.</doc>
          <type name="CountOptions" c:type="GArrowCountOptions*"/>
        </return-value>
      </constructor>
      <property name="mode"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_COUNT_MODE_ONLY_VALID">
        <type name="CountMode"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="CountOptionsClass"
            c:type="GArrowCountOptionsClass"
            glib:is-gtype-struct-for="CountOptions">
      <source-position filename="arrow-glib/compute.h" line="453"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <function-macro name="DEPRECATED_FOR"
                    c:identifier="GARROW_DEPRECATED_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="105"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_0_10_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_0_10_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="652"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_0_12_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_0_12_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="638"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_0_13_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_0_13_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="624"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_0_14_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_0_14_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="610"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_0_15_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_0_15_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="596"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_0_16_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_0_16_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="582"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_0_17_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_0_17_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="568"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_10_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_10_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="428"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_11_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_11_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="414"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_12_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_12_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="400"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_13_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_13_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="386"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_14_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_14_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="372"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_15_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_15_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="358"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_1_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_1_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="554"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_2_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_2_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="540"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_3_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_3_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="526"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_4_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_4_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="512"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_5_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_5_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="498"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_6_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_6_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="484"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_7_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_7_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="470"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_8_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_8_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="456"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_IN_9_0_FOR"
                    c:identifier="GARROW_DEPRECATED_IN_9_0_FOR"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="442"/>
      <parameters>
        <parameter name="function">
        </parameter>
      </parameters>
    </function-macro>
    <class name="DataType"
           c:symbol-prefix="data_type"
           c:type="GArrowDataType"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GArrowDataType"
           glib:get-type="garrow_data_type_get_type"
           glib:type-struct="DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="39"/>
      <function name="import"
                c:identifier="garrow_data_type_import"
                version="6.0.0"
                throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="43"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="224">An imported #GArrowDataType on success,
  %NULL on error.

  You don't need to release the passed `struct ArrowSchema *`,
  even if this function reports an error.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <parameter name="c_abi_schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="221">A `struct ArrowSchema *`.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="equal" c:identifier="garrow_data_type_equal">
        <source-position filename="arrow-glib/basic-data-type.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="276">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="273">A #GArrowDataType.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </instance-parameter>
          <parameter name="other_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="274">A #GArrowDataType to be compared.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="export"
              c:identifier="garrow_data_type_export"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="48"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="249">An exported #GArrowDataType as
  `struct ArrowStruct *` on success, %NULL on error.

  It should be freed with the `ArrowSchema::release` callback then
  g_free() when no longer needed.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="246">A #GArrowDataType.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="garrow_data_type_get_id">
        <source-position filename="arrow-glib/basic-data-type.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="308">The #GArrowType of the data type.</doc>
          <type name="Type" c:type="GArrowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="306">A #GArrowDataType.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="garrow_data_type_get_name"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="321">The name of the data type.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="319">A #GArrowDataType.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="garrow_data_type_to_string">
        <source-position filename="arrow-glib/basic-data-type.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="292">The string representation of the data type.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="290">A #GArrowDataType.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="data-type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DataTypeClass"
            c:type="GArrowDataTypeClass"
            glib:is-gtype-struct-for="DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="39"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Date32Array"
           c:symbol-prefix="date32_array"
           c:type="GArrowDate32Array"
           parent="NumericArray"
           glib:type-name="GArrowDate32Array"
           glib:get-type="garrow_date32_array_get_type"
           glib:type-struct="Date32ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="536"/>
      <constructor name="new"
                   c:identifier="garrow_date32_array_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="538"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2525">A newly created #GArrowDate32Array.</doc>
          <type name="Date32Array" c:type="GArrowDate32Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2516">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2517">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2518">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2522">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_date32_array_get_value"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="543"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2547">The @i-th value.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2544">A #GArrowDate32Array.</doc>
            <type name="Date32Array" c:type="GArrowDate32Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2545">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_date32_array_get_values"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="545"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2564">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint32*">
            <type name="gint32" c:type="gint32"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2561">A #GArrowDate32Array.</doc>
            <type name="Date32Array" c:type="GArrowDate32Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2562">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Date32ArrayBuilder"
           c:symbol-prefix="date32_array_builder"
           c:type="GArrowDate32ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowDate32ArrayBuilder"
           glib:get-type="garrow_date32_array_builder_get_type"
           glib:type-struct="Date32ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="911"/>
      <constructor name="new"
                   c:identifier="garrow_date32_array_builder_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/array-builder.h" line="913"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3895">A newly created #GArrowDate32ArrayBuilder.</doc>
          <type name="Date32ArrayBuilder" c:type="GArrowDate32ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_date32_array_builder_append"
              version="0.7.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_date32_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="917"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3914">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3910">A #GArrowDate32ArrayBuilder.</doc>
            <type name="Date32ArrayBuilder"
                  c:type="GArrowDate32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3911">The number of days since UNIX epoch in signed 32bit integer.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_date32_array_builder_append_null"
              version="0.7.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="933"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3994">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3991">A #GArrowDate32ArrayBuilder.</doc>
            <type name="Date32ArrayBuilder"
                  c:type="GArrowDate32ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_date32_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4008">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="936"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4017">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4010">A #GArrowDate32ArrayBuilder.</doc>
            <type name="Date32ArrayBuilder"
                  c:type="GArrowDate32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4011">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_date32_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="922"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3935">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3931">A #GArrowDate32ArrayBuilder.</doc>
            <type name="Date32ArrayBuilder"
                  c:type="GArrowDate32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3932">The number of days since UNIX epoch in signed 32bit integer.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_date32_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3951">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="925"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3967">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3953">A #GArrowDate32ArrayBuilder.</doc>
            <type name="Date32ArrayBuilder"
                  c:type="GArrowDate32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3954">The array of
  the number of days since UNIX epoch in signed 32bit integer.</doc>
            <array length="1" zero-terminated="0" c:type="const gint32*">
              <type name="gint32" c:type="gint32"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3956">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3957">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3961">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Date32ArrayBuilderClass"
            c:type="GArrowDate32ArrayBuilderClass"
            glib:is-gtype-struct-for="Date32ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="911"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Date32ArrayClass"
            c:type="GArrowDate32ArrayClass"
            glib:is-gtype-struct-for="Date32Array">
      <source-position filename="arrow-glib/basic-array.h" line="536"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Date32DataType"
           c:symbol-prefix="date32_data_type"
           c:type="GArrowDate32DataType"
           parent="TemporalDataType"
           glib:type-name="GArrowDate32DataType"
           glib:get-type="garrow_date32_data_type_get_type"
           glib:type-struct="Date32DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="398"/>
      <constructor name="new"
                   c:identifier="garrow_date32_data_type_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="400"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1063">A newly created the number of milliseconds
  since UNIX epoch in 32-bit signed integer data type.</doc>
          <type name="Date32DataType" c:type="GArrowDate32DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="TemporalDataType" c:type="GArrowTemporalDataType"/>
      </field>
    </class>
    <record name="Date32DataTypeClass"
            c:type="GArrowDate32DataTypeClass"
            glib:is-gtype-struct-for="Date32DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="398"/>
      <field name="parent_class">
        <type name="TemporalDataTypeClass"
              c:type="GArrowTemporalDataTypeClass"/>
      </field>
    </record>
    <class name="Date32Scalar"
           c:symbol-prefix="date32_scalar"
           c:type="GArrowDate32Scalar"
           parent="Scalar"
           glib:type-name="GArrowDate32Scalar"
           glib:get-type="garrow_date32_scalar_get_type"
           glib:type-struct="Date32ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="423"/>
      <constructor name="new"
                   c:identifier="garrow_date32_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="427"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1318">A newly created #GArrowDate32Scalar.</doc>
          <type name="Date32Scalar" c:type="GArrowDate32Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1316">The value of this scalar.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_date32_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="430"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1335">The value of this scalar.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1333">A #GArrowDate32Scalar.</doc>
            <type name="Date32Scalar" c:type="GArrowDate32Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Date32ScalarClass"
            c:type="GArrowDate32ScalarClass"
            glib:is-gtype-struct-for="Date32Scalar">
      <source-position filename="arrow-glib/scalar.h" line="423"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Date64Array"
           c:symbol-prefix="date64_array"
           c:type="GArrowDate64Array"
           parent="NumericArray"
           glib:type-name="GArrowDate64Array"
           glib:get-type="garrow_date64_array_get_type"
           glib:type-struct="Date64ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="558"/>
      <constructor name="new"
                   c:identifier="garrow_date64_array_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="560"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2602">A newly created #GArrowDate64Array.</doc>
          <type name="Date64Array" c:type="GArrowDate64Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2593">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2594">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2595">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2599">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_date64_array_get_value"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="565"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2624">The @i-th value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2621">A #GArrowDate64Array.</doc>
            <type name="Date64Array" c:type="GArrowDate64Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2622">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_date64_array_get_values"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="567"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2641">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2638">A #GArrowDate64Array.</doc>
            <type name="Date64Array" c:type="GArrowDate64Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2639">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Date64ArrayBuilder"
           c:symbol-prefix="date64_array_builder"
           c:type="GArrowDate64ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowDate64ArrayBuilder"
           glib:get-type="garrow_date64_array_builder_get_type"
           glib:type-struct="Date64ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="952"/>
      <constructor name="new"
                   c:identifier="garrow_date64_array_builder_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/array-builder.h" line="954"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4052">A newly created #GArrowDate64ArrayBuilder.</doc>
          <type name="Date64ArrayBuilder" c:type="GArrowDate64ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_date64_array_builder_append"
              version="0.7.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_date64_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="958"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4071">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4067">A #GArrowDate64ArrayBuilder.</doc>
            <type name="Date64ArrayBuilder"
                  c:type="GArrowDate64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4068">The number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_date64_array_builder_append_null"
              version="0.7.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="974"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4151">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4148">A #GArrowDate64ArrayBuilder.</doc>
            <type name="Date64ArrayBuilder"
                  c:type="GArrowDate64ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_date64_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4165">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="977"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4174">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4167">A #GArrowDate64ArrayBuilder.</doc>
            <type name="Date64ArrayBuilder"
                  c:type="GArrowDate64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4168">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_date64_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="963"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4092">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4088">A #GArrowDate64ArrayBuilder.</doc>
            <type name="Date64ArrayBuilder"
                  c:type="GArrowDate64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4089">The number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_date64_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4108">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="966"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4124">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4110">A #GArrowDate64ArrayBuilder.</doc>
            <type name="Date64ArrayBuilder"
                  c:type="GArrowDate64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4111">The array of
  the number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <array length="1" zero-terminated="0" c:type="const gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4113">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4114">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4118">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Date64ArrayBuilderClass"
            c:type="GArrowDate64ArrayBuilderClass"
            glib:is-gtype-struct-for="Date64ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="952"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Date64ArrayClass"
            c:type="GArrowDate64ArrayClass"
            glib:is-gtype-struct-for="Date64Array">
      <source-position filename="arrow-glib/basic-array.h" line="558"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Date64DataType"
           c:symbol-prefix="date64_data_type"
           c:type="GArrowDate64DataType"
           parent="TemporalDataType"
           glib:type-name="GArrowDate64DataType"
           glib:get-type="garrow_date64_data_type_get_type"
           glib:type-struct="Date64DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="412"/>
      <constructor name="new"
                   c:identifier="garrow_date64_data_type_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="414"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1098">A newly created the number of milliseconds
  since UNIX epoch in 64-bit signed integer data type.</doc>
          <type name="Date64DataType" c:type="GArrowDate64DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="TemporalDataType" c:type="GArrowTemporalDataType"/>
      </field>
    </class>
    <record name="Date64DataTypeClass"
            c:type="GArrowDate64DataTypeClass"
            glib:is-gtype-struct-for="Date64DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="412"/>
      <field name="parent_class">
        <type name="TemporalDataTypeClass"
              c:type="GArrowTemporalDataTypeClass"/>
      </field>
    </record>
    <class name="Date64Scalar"
           c:symbol-prefix="date64_scalar"
           c:type="GArrowDate64Scalar"
           parent="Scalar"
           glib:type-name="GArrowDate64Scalar"
           glib:get-type="garrow_date64_scalar_get_type"
           glib:type-struct="Date64ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="442"/>
      <constructor name="new"
                   c:identifier="garrow_date64_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="446"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1367">A newly created #GArrowDate64Scalar.</doc>
          <type name="Date64Scalar" c:type="GArrowDate64Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1365">The value of this scalar.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_date64_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="449"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1384">The value of this scalar.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1382">A #GArrowDate64Scalar.</doc>
            <type name="Date64Scalar" c:type="GArrowDate64Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Date64ScalarClass"
            c:type="GArrowDate64ScalarClass"
            glib:is-gtype-struct-for="Date64Scalar">
      <source-position filename="arrow-glib/scalar.h" line="442"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Datum"
           c:symbol-prefix="datum"
           c:type="GArrowDatum"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GArrowDatum"
           glib:get-type="garrow_datum_get_type"
           glib:type-struct="DatumClass">
      <source-position filename="arrow-glib/datum.h" line="39"/>
      <method name="equal" c:identifier="garrow_datum_equal" version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="183">%TRUE if both of them have the same datum, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="180">A #GArrowDatum.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </instance-parameter>
          <parameter name="other_datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="181">A #GArrowDatum to be compared.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_array"
              c:identifier="garrow_datum_is_array"
              version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="119">%TRUE if the datum holds a #GArrowArray, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="117">A #GArrowDatum.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_array_like"
              c:identifier="garrow_datum_is_array_like"
              version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="135">%TRUE if the datum holds a #GArrowArray or
  #GArrowChunkedArray, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="133">A #GArrowDatum.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_scalar"
              c:identifier="garrow_datum_is_scalar"
              version="5.0.0">
        <source-position filename="arrow-glib/datum.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="151">%TRUE if the datum holds a #GArrowScalar, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="149">A #GArrowDatum.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_value"
              c:identifier="garrow_datum_is_value"
              version="5.0.0">
        <source-position filename="arrow-glib/datum.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="166">%TRUE if the datum holds a #GArrowArray, #GArrowChunkedArray or
  #GArrowScalar, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="164">A #GArrowDatum.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_datum_to_string"
              version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="200">The formatted datum content.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="198">A #GArrowDatum.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="datum"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DatumClass"
            c:type="GArrowDatumClass"
            glib:is-gtype-struct-for="Datum">
      <source-position filename="arrow-glib/datum.h" line="39"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="DayMillisecond"
           c:symbol-prefix="day_millisecond"
           c:type="GArrowDayMillisecond"
           parent="GObject.Object"
           glib:type-name="GArrowDayMillisecond"
           glib:get-type="garrow_day_millisecond_get_type"
           glib:type-struct="DayMillisecondClass">
      <source-position filename="arrow-glib/interval.h" line="37"/>
      <constructor name="new"
                   c:identifier="garrow_day_millisecond_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/interval.h" line="41"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/interval.cpp"
               line="160">
  A newly created #GArrowDayMillisecond.</doc>
          <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
        </return-value>
        <parameters>
          <parameter name="day" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="157">A day part value.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="millisecond" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="158">A millisecond part value.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal"
              c:identifier="garrow_day_millisecond_equal"
              version="8.0.0">
        <source-position filename="arrow-glib/interval.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/interval.cpp"
               line="178">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="day_millisecond" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="175">A #GArrowDayMillisecond.</doc>
            <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
          </instance-parameter>
          <parameter name="other_day_millisecond" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="176">A #GArrowDayMillisecond to be compared.</doc>
            <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
          </parameter>
        </parameters>
      </method>
      <method name="less_than"
              c:identifier="garrow_day_millisecond_less_than"
              version="8.0.0">
        <source-position filename="arrow-glib/interval.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/interval.cpp"
               line="197">%TRUE if the value is less than the other value,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="day_millisecond" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="194">A #GArrowDayMillisecond.</doc>
            <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
          </instance-parameter>
          <parameter name="other_day_millisecond" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="195">A #GArrowDayMillisecond to be compared.</doc>
            <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
          </parameter>
        </parameters>
      </method>
      <property name="day"
                version="8.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/interval.cpp"
             line="118">The day part value.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="millisecond"
                version="8.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/interval.cpp"
             line="136">The millisecond part value.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DayMillisecondClass"
            c:type="GArrowDayMillisecondClass"
            glib:is-gtype-struct-for="DayMillisecond">
      <source-position filename="arrow-glib/interval.h" line="37"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="DayTimeIntervalArray"
           c:symbol-prefix="day_time_interval_array"
           c:type="GArrowDayTimeIntervalArray"
           parent="PrimitiveArray"
           glib:type-name="GArrowDayTimeIntervalArray"
           glib:get-type="garrow_day_time_interval_array_get_type"
           glib:type-struct="DayTimeIntervalArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="678"/>
      <constructor name="new"
                   c:identifier="garrow_day_time_interval_array_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="682"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3006">A newly created #GArrowDayTimeIntervalArray.</doc>
          <type name="DayTimeIntervalArray"
                c:type="GArrowDayTimeIntervalArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2997">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2998">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2999">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3003">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_day_time_interval_array_get_value"
              version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="688"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3029">The @i-th value.</doc>
          <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3026">A #GArrowDayTimeIntervalArray.</doc>
            <type name="DayTimeIntervalArray"
                  c:type="GArrowDayTimeIntervalArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3027">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_day_time_interval_array_get_values"
              version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="692"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3048">
  The list of #GArrowDayMillisecond.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DayMillisecond"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3046">A #GArrowDayTimeIntervalArray.</doc>
            <type name="DayTimeIntervalArray"
                  c:type="GArrowDayTimeIntervalArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="PrimitiveArray" c:type="GArrowPrimitiveArray"/>
      </field>
    </class>
    <class name="DayTimeIntervalArrayBuilder"
           c:symbol-prefix="day_time_interval_array_builder"
           c:type="GArrowDayTimeIntervalArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowDayTimeIntervalArrayBuilder"
           glib:get-type="garrow_day_time_interval_array_builder_get_type"
           glib:type-struct="DayTimeIntervalArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1150"/>
      <constructor name="new"
                   c:identifier="garrow_day_time_interval_array_builder_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1154"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4782">A newly created #GArrowDayTimeIntervalArrayBuilder.</doc>
          <type name="DayTimeIntervalArrayBuilder"
                c:type="GArrowDayTimeIntervalArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_value"
              c:identifier="garrow_day_time_interval_array_builder_append_value"
              version="8.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1158"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4801">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4797">A #GArrowDayTimeIntervalArrayBuilder.</doc>
            <type name="DayTimeIntervalArrayBuilder"
                  c:type="GArrowDayTimeIntervalArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4798">A #GArrowDayMillisecond.</doc>
            <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_day_time_interval_array_builder_append_values"
              version="8.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4824">Append multiple values at once. It's more efficient than multiple
`append` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4839">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4826">A #GArrowDayTimeIntervalArrayBuilder.</doc>
            <type name="DayTimeIntervalArrayBuilder"
                  c:type="GArrowDayTimeIntervalArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4827">The array of a #GArrowDayMillisecond.</doc>
            <array length="1"
                   zero-terminated="0"
                   c:type="const GArrowDayMillisecond**">
              <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4828">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4829">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4833">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="DayTimeIntervalArrayBuilderClass"
            c:type="GArrowDayTimeIntervalArrayBuilderClass"
            glib:is-gtype-struct-for="DayTimeIntervalArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1150"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="DayTimeIntervalArrayClass"
            c:type="GArrowDayTimeIntervalArrayClass"
            glib:is-gtype-struct-for="DayTimeIntervalArray">
      <source-position filename="arrow-glib/basic-array.h" line="678"/>
      <field name="parent_class">
        <type name="PrimitiveArrayClass" c:type="GArrowPrimitiveArrayClass"/>
      </field>
    </record>
    <class name="DayTimeIntervalDataType"
           c:symbol-prefix="day_time_interval_data_type"
           c:type="GArrowDayTimeIntervalDataType"
           parent="IntervalDataType"
           glib:type-name="GArrowDayTimeIntervalDataType"
           glib:get-type="garrow_day_time_interval_data_type_get_type"
           glib:type-struct="DayTimeIntervalDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="520"/>
      <constructor name="new"
                   c:identifier="garrow_day_time_interval_data_type_new"
                   version="7.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="524"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1423">The newly created day time interval data type.</doc>
          <type name="DayTimeIntervalDataType"
                c:type="GArrowDayTimeIntervalDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntervalDataType" c:type="GArrowIntervalDataType"/>
      </field>
    </class>
    <record name="DayTimeIntervalDataTypeClass"
            c:type="GArrowDayTimeIntervalDataTypeClass"
            glib:is-gtype-struct-for="DayTimeIntervalDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="520"/>
      <field name="parent_class">
        <type name="IntervalDataTypeClass"
              c:type="GArrowIntervalDataTypeClass"/>
      </field>
    </record>
    <class name="DayTimeIntervalScalar"
           c:symbol-prefix="day_time_interval_scalar"
           c:type="GArrowDayTimeIntervalScalar"
           parent="Scalar"
           glib:type-name="GArrowDayTimeIntervalScalar"
           glib:get-type="garrow_day_time_interval_scalar_get_type"
           glib:type-struct="DayTimeIntervalScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="542"/>
      <constructor name="new"
                   c:identifier="garrow_day_time_interval_scalar_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/scalar.h" line="546"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1643">A newly created #GArrowDayTimeIntervalScalar.</doc>
          <type name="DayTimeIntervalScalar"
                c:type="GArrowDayTimeIntervalScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1641">The value of GArrowDayMillisecond.</doc>
            <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_day_time_interval_scalar_get_value"
              version="8.0.0">
        <source-position filename="arrow-glib/scalar.h" line="549"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1661">The value of this scalar.</doc>
          <type name="DayMillisecond" c:type="GArrowDayMillisecond*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1659">A #GArrowDayTimeIntervalScalar.</doc>
            <type name="DayTimeIntervalScalar"
                  c:type="GArrowDayTimeIntervalScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="DayTimeIntervalScalarClass"
            c:type="GArrowDayTimeIntervalScalarClass"
            glib:is-gtype-struct-for="DayTimeIntervalScalar">
      <source-position filename="arrow-glib/scalar.h" line="542"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Decimal128"
           c:symbol-prefix="decimal128"
           c:type="GArrowDecimal128"
           parent="GObject.Object"
           glib:type-name="GArrowDecimal128"
           glib:get-type="garrow_decimal128_get_type"
           glib:type-struct="Decimal128Class">
      <source-position filename="arrow-glib/decimal.h" line="38"/>
      <constructor name="new_integer"
                   c:identifier="garrow_decimal128_new_integer"
                   version="0.10.0">
        <source-position filename="arrow-glib/decimal.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="405">A newly created #GArrowDecimal128.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="403">The data of the decimal.</doc>
            <type name="gint64" c:type="const gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_string"
                   c:identifier="garrow_decimal128_new_string"
                   version="0.10.0"
                   throws="1">
        <source-position filename="arrow-glib/decimal.h" line="41"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="389">
  A newly created #GArrowDecimal128 on success, %NULL on error.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="386">The data of the decimal.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="abs" c:identifier="garrow_decimal128_abs" version="0.10.0">
        <doc xml:space="preserve"
             filename="arrow-glib/decimal.cpp"
             line="578">Computes the absolute value of the @decimal destructively.</doc>
        <source-position filename="arrow-glib/decimal.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="580">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="copy"
              c:identifier="garrow_decimal128_copy"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="45"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="419">A copied #GArrowDecimal128.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="417">The decimal to be copied.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="divide"
              c:identifier="garrow_decimal128_divide"
              version="0.11.0"
              throws="1">
        <source-position filename="arrow-glib/decimal.h" line="78"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="678">The divided value of
  these decimals or %NULL on error.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="671">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="672">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
          <parameter name="remainder"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="673">A return location for the remainder
  value of these decimals. The returned #GArrowDecimal128 be
  unreferred with g_object_unref() when no longer needed.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128**"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="garrow_decimal128_equal"
              version="0.12.0">
        <source-position filename="arrow-glib/decimal.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="434">%TRUE if the decimal is equal to the other decimal, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="431">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="432">A #GArrowDecimal128 to be compared.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="greater_than"
              c:identifier="garrow_decimal128_greater_than"
              version="0.12.0">
        <source-position filename="arrow-glib/decimal.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="502">%TRUE if the decimal is greater than the other decimal,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="499">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="500">A #GArrowDecimal128 to be compared.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="greater_than_or_equal"
              c:identifier="garrow_decimal128_greater_than_or_equal"
              version="0.12.0">
        <source-position filename="arrow-glib/decimal.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="519">%TRUE if the decimal is greater than the other decimal
  or equal to the other decimal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="516">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="517">A #GArrowDecimal128 to be compared.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="less_than"
              c:identifier="garrow_decimal128_less_than"
              version="0.12.0">
        <source-position filename="arrow-glib/decimal.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="468">%TRUE if the decimal is less than the other decimal,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="465">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="466">A #GArrowDecimal128 to be compared.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="less_than_or_equal"
              c:identifier="garrow_decimal128_less_than_or_equal"
              version="0.12.0">
        <source-position filename="arrow-glib/decimal.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="485">%TRUE if the decimal is less than the other decimal
  or equal to the other decimal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="482">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="483">A #GArrowDecimal128 to be compared.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="minus"
              c:identifier="garrow_decimal128_minus"
              version="0.11.0">
        <source-position filename="arrow-glib/decimal.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="642">The subtracted value of these decimals.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="639">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="640">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="multiply"
              c:identifier="garrow_decimal128_multiply"
              version="0.11.0">
        <source-position filename="arrow-glib/decimal.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="658">The multiplied value of these decimals.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="655">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="656">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="negate"
              c:identifier="garrow_decimal128_negate"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="arrow-glib/decimal.cpp"
             line="592">Negate the current value of the @decimal destructively.</doc>
        <source-position filename="arrow-glib/decimal.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="594">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="not_equal"
              c:identifier="garrow_decimal128_not_equal"
              version="0.12.0">
        <source-position filename="arrow-glib/decimal.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="451">%TRUE if the decimal isn't equal to the other decimal,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="448">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="449">A #GArrowDecimal128 to be compared.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="plus"
              c:identifier="garrow_decimal128_plus"
              version="0.11.0">
        <source-position filename="arrow-glib/decimal.h" line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="626">The added value of these decimals.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="623">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="624">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rescale"
              c:identifier="garrow_decimal128_rescale"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/decimal.h" line="84"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="703">The rescaled decimal or %NULL on error.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="698">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="original_scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="699">A scale to be converted from.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="new_scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="700">A scale to be converted to.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_bytes"
              c:identifier="garrow_decimal128_to_bytes"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="568">The binary representation of the decimal.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="566">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_integer"
              c:identifier="garrow_decimal128_to_integer"
              version="0.10.0">
        <source-position filename="arrow-glib/decimal.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="610">The 64-bit integer representation of the decimal.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="608">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_decimal128_to_string"
              version="0.10.0">
        <source-position filename="arrow-glib/decimal.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="552">The string representation of the decimal.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="550">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string_scale"
              c:identifier="garrow_decimal128_to_string_scale"
              version="0.10.0">
        <source-position filename="arrow-glib/decimal.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="536">The string representation of the decimal.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="533">A #GArrowDecimal128.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="534">The scale of the decimal.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <property name="decimal128"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="Decimal128Array"
           c:symbol-prefix="decimal128_array"
           c:type="GArrowDecimal128Array"
           parent="FixedSizeBinaryArray"
           glib:type-name="GArrowDecimal128Array"
           glib:get-type="garrow_decimal128_array_get_type"
           glib:type-struct="Decimal128ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="763"/>
      <method name="format_value"
              c:identifier="garrow_decimal128_array_format_value"
              version="0.10.0">
        <source-position filename="arrow-glib/basic-array.h" line="765"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3294">The formatted @i-th value.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3291">A #GArrowDecimal128Array.</doc>
            <type name="Decimal128Array" c:type="GArrowDecimal128Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3292">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="garrow_decimal128_array_get_value"
              version="0.10.0">
        <source-position filename="arrow-glib/basic-array.h" line="767"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3316">The @i-th value.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3313">A #GArrowDecimal128Array.</doc>
            <type name="Decimal128Array" c:type="GArrowDecimal128Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3314">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FixedSizeBinaryArray" c:type="GArrowFixedSizeBinaryArray"/>
      </field>
    </class>
    <class name="Decimal128ArrayBuilder"
           c:symbol-prefix="decimal128_array_builder"
           c:type="GArrowDecimal128ArrayBuilder"
           parent="FixedSizeBinaryArrayBuilder"
           glib:type-name="GArrowDecimal128ArrayBuilder"
           glib:get-type="garrow_decimal128_array_builder_get_type"
           glib:type-struct="Decimal128ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1486"/>
      <constructor name="new"
                   c:identifier="garrow_decimal128_array_builder_new"
                   version="0.10.0">
        <source-position filename="arrow-glib/array-builder.h" line="1488"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6292">A newly created #GArrowDecimal128ArrayBuilder.</doc>
          <type name="Decimal128ArrayBuilder"
                c:type="GArrowDecimal128ArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6290">#GArrowDecimal128DataType for the decimal.</doc>
            <type name="Decimal128DataType"
                  c:type="GArrowDecimal128DataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append"
              c:identifier="garrow_decimal128_array_builder_append"
              version="0.10.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_decimal128_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1492"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6312">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6308">A #GArrowDecimal128ArrayBuilder.</doc>
            <type name="Decimal128ArrayBuilder"
                  c:type="GArrowDecimal128ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6309">A decimal value.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_decimal128_array_builder_append_null"
              version="0.12.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1512"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6402">%TRUE on success, %FALSE if there was an error.

It appends a new NULL element.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6399">A #GArrowDecimal128ArrayBuilder.</doc>
            <type name="Decimal128ArrayBuilder"
                  c:type="GArrowDecimal128ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_decimal128_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1497"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6333">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6329">A #GArrowDecimal128ArrayBuilder.</doc>
            <type name="Decimal128ArrayBuilder"
                  c:type="GArrowDecimal128ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6330">A decimal value.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_decimal128_array_builder_append_values"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="6355">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1502"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6370">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6357">A #GArrowDecimal128ArrayBuilder.</doc>
            <type name="Decimal128ArrayBuilder"
                  c:type="GArrowDecimal128ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6358">The array of #GArrowDecimal128.</doc>
            <array length="1" zero-terminated="0" c:type="GArrowDecimal128**">
              <type name="Decimal128" c:type="GArrowDecimal128*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6359">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6360">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6364">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FixedSizeBinaryArrayBuilder"
              c:type="GArrowFixedSizeBinaryArrayBuilder"/>
      </field>
    </class>
    <record name="Decimal128ArrayBuilderClass"
            c:type="GArrowDecimal128ArrayBuilderClass"
            glib:is-gtype-struct-for="Decimal128ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1486"/>
      <field name="parent_class">
        <type name="FixedSizeBinaryArrayBuilderClass"
              c:type="GArrowFixedSizeBinaryArrayBuilderClass"/>
      </field>
    </record>
    <record name="Decimal128ArrayClass"
            c:type="GArrowDecimal128ArrayClass"
            glib:is-gtype-struct-for="Decimal128Array">
      <source-position filename="arrow-glib/basic-array.h" line="763"/>
      <field name="parent_class">
        <type name="FixedSizeBinaryArrayClass"
              c:type="GArrowFixedSizeBinaryArrayClass"/>
      </field>
    </record>
    <record name="Decimal128Class"
            c:type="GArrowDecimal128Class"
            glib:is-gtype-struct-for="Decimal128">
      <source-position filename="arrow-glib/decimal.h" line="38"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Decimal128DataType"
           c:symbol-prefix="decimal128_data_type"
           c:type="GArrowDecimal128DataType"
           parent="DecimalDataType"
           glib:type-name="GArrowDecimal128DataType"
           glib:get-type="garrow_decimal128_data_type_get_type"
           glib:type-struct="Decimal128DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="570"/>
      <constructor name="new"
                   c:identifier="garrow_decimal128_data_type_new"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="578"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1587">
  The newly created 128-bit decimal data type on success, %NULL on error.</doc>
          <type name="Decimal128DataType" c:type="GArrowDecimal128DataType*"/>
        </return-value>
        <parameters>
          <parameter name="precision" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1583">The precision of decimal data.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1584">The scale of decimal data.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="max_precision"
                c:identifier="garrow_decimal128_data_type_max_precision"
                version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="574"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1571">The max precision of 128-bit decimal data type.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
      </function>
      <field name="parent_instance">
        <type name="DecimalDataType" c:type="GArrowDecimalDataType"/>
      </field>
    </class>
    <record name="Decimal128DataTypeClass"
            c:type="GArrowDecimal128DataTypeClass"
            glib:is-gtype-struct-for="Decimal128DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="570"/>
      <field name="parent_class">
        <type name="DecimalDataTypeClass" c:type="GArrowDecimalDataTypeClass"/>
      </field>
    </record>
    <class name="Decimal128Scalar"
           c:symbol-prefix="decimal128_scalar"
           c:type="GArrowDecimal128Scalar"
           parent="Scalar"
           glib:type-name="GArrowDecimal128Scalar"
           glib:get-type="garrow_decimal128_scalar_get_type"
           glib:type-struct="Decimal128ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="582"/>
      <constructor name="new"
                   c:identifier="garrow_decimal128_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="586"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1827">A newly created #GArrowDecimal128Scalar.</doc>
          <type name="Decimal128Scalar" c:type="GArrowDecimal128Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1824">A #GArrowDecimal128DataType for this scalar.</doc>
            <type name="Decimal128DataType"
                  c:type="GArrowDecimal128DataType*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1825">The value of this scalar.</doc>
            <type name="Decimal128" c:type="GArrowDecimal128*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_decimal128_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="590"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1852">The value of this scalar.</doc>
          <type name="Decimal128" c:type="GArrowDecimal128*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1850">A #GArrowDecimal128Scalar.</doc>
            <type name="Decimal128Scalar" c:type="GArrowDecimal128Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                version="5.0.0"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/scalar.cpp"
             line="1806">The value of the scalar.</doc>
        <type name="Decimal128"/>
      </property>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Decimal128ScalarClass"
            c:type="GArrowDecimal128ScalarClass"
            glib:is-gtype-struct-for="Decimal128Scalar">
      <source-position filename="arrow-glib/scalar.h" line="582"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Decimal256"
           c:symbol-prefix="decimal256"
           c:type="GArrowDecimal256"
           parent="GObject.Object"
           glib:type-name="GArrowDecimal256"
           glib:get-type="garrow_decimal256_get_type"
           glib:type-struct="Decimal256Class">
      <source-position filename="arrow-glib/decimal.h" line="101"/>
      <constructor name="new_integer"
                   c:identifier="garrow_decimal256_new_integer"
                   version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="813">A newly created #GArrowDecimal256.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="811">The data of the decimal.</doc>
            <type name="gint64" c:type="const gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_string"
                   c:identifier="garrow_decimal256_new_string"
                   version="3.0.0"
                   throws="1">
        <source-position filename="arrow-glib/decimal.h" line="105"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="797">
  A newly created #GArrowDecimal256 on success, %NULL on error.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="794">The data of the decimal.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="abs" c:identifier="garrow_decimal256_abs" version="3.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/decimal.cpp"
             line="986">Computes the absolute value of the @decimal destructively.</doc>
        <source-position filename="arrow-glib/decimal.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="988">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="copy"
              c:identifier="garrow_decimal256_copy"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="110"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="827">A copied #GArrowDecimal256.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="825">The decimal to be copied.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="divide"
              c:identifier="garrow_decimal256_divide"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/decimal.h" line="147"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="1055">The divided value of
  these decimals or %NULL on error.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1048">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1049">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
          <parameter name="remainder"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1050">A return location for the remainder
  value of these decimals. The returned #GArrowDecimal256 be
  unreferred with g_object_unref() when no longer needed.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256**"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="garrow_decimal256_equal"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="842">%TRUE if the decimal is equal to the other decimal, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="839">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="840">A #GArrowDecimal256 to be compared.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="greater_than"
              c:identifier="garrow_decimal256_greater_than"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="910">%TRUE if the decimal is greater than the other decimal,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="907">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="908">A #GArrowDecimal256 to be compared.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="greater_than_or_equal"
              c:identifier="garrow_decimal256_greater_than_or_equal"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="927">%TRUE if the decimal is greater than the other decimal
  or equal to the other decimal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="924">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="925">A #GArrowDecimal256 to be compared.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="less_than"
              c:identifier="garrow_decimal256_less_than"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="876">%TRUE if the decimal is less than the other decimal,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="873">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="874">A #GArrowDecimal256 to be compared.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="less_than_or_equal"
              c:identifier="garrow_decimal256_less_than_or_equal"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="893">%TRUE if the decimal is less than the other decimal
  or equal to the other decimal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="890">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="891">A #GArrowDecimal256 to be compared.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="multiply"
              c:identifier="garrow_decimal256_multiply"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="144"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="1035">The multiplied value of these decimals.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1032">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1033">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="negate"
              c:identifier="garrow_decimal256_negate"
              version="3.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/decimal.cpp"
             line="1000">Negate the current value of the @decimal destructively.</doc>
        <source-position filename="arrow-glib/decimal.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1002">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="not_equal"
              c:identifier="garrow_decimal256_not_equal"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="859">%TRUE if the decimal isn't equal to the other decimal,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="856">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="other_decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="857">A #GArrowDecimal256 to be compared.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="plus"
              c:identifier="garrow_decimal256_plus"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="141"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="1019">The added value of these decimals.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <instance-parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1016">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1017">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rescale"
              c:identifier="garrow_decimal256_rescale"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/decimal.h" line="153"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="1080">The rescaled decimal or %NULL on error.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1075">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="original_scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1076">A scale to be converted from.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="new_scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="1077">A scale to be converted to.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_bytes"
              c:identifier="garrow_decimal256_to_bytes"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="135"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="976">The binary representation of the decimal.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="974">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_decimal256_to_string"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="133"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="960">The string representation of the decimal.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="958">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string_scale"
              c:identifier="garrow_decimal256_to_string_scale"
              version="3.0.0">
        <source-position filename="arrow-glib/decimal.h" line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/decimal.cpp"
               line="944">The string representation of the decimal.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="941">A #GArrowDecimal256.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/decimal.cpp"
                 line="942">The scale of the decimal.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <property name="decimal256"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="Decimal256Array"
           c:symbol-prefix="decimal256_array"
           c:type="GArrowDecimal256Array"
           parent="FixedSizeBinaryArray"
           glib:type-name="GArrowDecimal256Array"
           glib:get-type="garrow_decimal256_array_get_type"
           glib:type-struct="Decimal256ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="779"/>
      <method name="format_value"
              c:identifier="garrow_decimal256_array_format_value"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="781"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3351">The formatted @i-th value.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3348">A #GArrowDecimal256Array.</doc>
            <type name="Decimal256Array" c:type="GArrowDecimal256Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3349">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="garrow_decimal256_array_get_value"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="783"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3373">The @i-th value.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3370">A #GArrowDecimal256Array.</doc>
            <type name="Decimal256Array" c:type="GArrowDecimal256Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3371">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FixedSizeBinaryArray" c:type="GArrowFixedSizeBinaryArray"/>
      </field>
    </class>
    <class name="Decimal256ArrayBuilder"
           c:symbol-prefix="decimal256_array_builder"
           c:type="GArrowDecimal256ArrayBuilder"
           parent="FixedSizeBinaryArrayBuilder"
           glib:type-name="GArrowDecimal256ArrayBuilder"
           glib:get-type="garrow_decimal256_array_builder_get_type"
           glib:type-struct="Decimal256ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1526"/>
      <constructor name="new"
                   c:identifier="garrow_decimal256_array_builder_new"
                   version="3.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1528"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6437">A newly created #GArrowDecimal256ArrayBuilder.</doc>
          <type name="Decimal256ArrayBuilder"
                c:type="GArrowDecimal256ArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6435">#GArrowDecimal256DataType for the decimal.</doc>
            <type name="Decimal256DataType"
                  c:type="GArrowDecimal256DataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append_value"
              c:identifier="garrow_decimal256_array_builder_append_value"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1531"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6457">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6453">A #GArrowDecimal256ArrayBuilder.</doc>
            <type name="Decimal256ArrayBuilder"
                  c:type="GArrowDecimal256ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6454">A decimal value.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_decimal256_array_builder_append_values"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="6479">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1536"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6494">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6481">A #GArrowDecimal256ArrayBuilder.</doc>
            <type name="Decimal256ArrayBuilder"
                  c:type="GArrowDecimal256ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6482">The array of #GArrowDecimal256.</doc>
            <array length="1" zero-terminated="0" c:type="GArrowDecimal256**">
              <type name="Decimal256" c:type="GArrowDecimal256*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6483">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6484">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6488">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FixedSizeBinaryArrayBuilder"
              c:type="GArrowFixedSizeBinaryArrayBuilder"/>
      </field>
    </class>
    <record name="Decimal256ArrayBuilderClass"
            c:type="GArrowDecimal256ArrayBuilderClass"
            glib:is-gtype-struct-for="Decimal256ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1526"/>
      <field name="parent_class">
        <type name="FixedSizeBinaryArrayBuilderClass"
              c:type="GArrowFixedSizeBinaryArrayBuilderClass"/>
      </field>
    </record>
    <record name="Decimal256ArrayClass"
            c:type="GArrowDecimal256ArrayClass"
            glib:is-gtype-struct-for="Decimal256Array">
      <source-position filename="arrow-glib/basic-array.h" line="779"/>
      <field name="parent_class">
        <type name="FixedSizeBinaryArrayClass"
              c:type="GArrowFixedSizeBinaryArrayClass"/>
      </field>
    </record>
    <record name="Decimal256Class"
            c:type="GArrowDecimal256Class"
            glib:is-gtype-struct-for="Decimal256">
      <source-position filename="arrow-glib/decimal.h" line="101"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Decimal256DataType"
           c:symbol-prefix="decimal256_data_type"
           c:type="GArrowDecimal256DataType"
           parent="DecimalDataType"
           glib:type-name="GArrowDecimal256DataType"
           glib:get-type="garrow_decimal256_data_type_get_type"
           glib:type-struct="Decimal256DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="590"/>
      <constructor name="new"
                   c:identifier="garrow_decimal256_data_type_new"
                   version="3.0.0"
                   throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="598"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1645">
  The newly created 256-bit decimal data type on success, %NULL on error.</doc>
          <type name="Decimal256DataType" c:type="GArrowDecimal256DataType*"/>
        </return-value>
        <parameters>
          <parameter name="precision" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1641">The precision of decimal data.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1642">The scale of decimal data.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="max_precision"
                c:identifier="garrow_decimal256_data_type_max_precision"
                version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="594"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1629">The max precision of 256-bit decimal data type.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
      </function>
      <field name="parent_instance">
        <type name="DecimalDataType" c:type="GArrowDecimalDataType"/>
      </field>
    </class>
    <record name="Decimal256DataTypeClass"
            c:type="GArrowDecimal256DataTypeClass"
            glib:is-gtype-struct-for="Decimal256DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="590"/>
      <field name="parent_class">
        <type name="DecimalDataTypeClass" c:type="GArrowDecimalDataTypeClass"/>
      </field>
    </record>
    <class name="Decimal256Scalar"
           c:symbol-prefix="decimal256_scalar"
           c:type="GArrowDecimal256Scalar"
           parent="Scalar"
           glib:type-name="GArrowDecimal256Scalar"
           glib:get-type="garrow_decimal256_scalar_get_type"
           glib:type-struct="Decimal256ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="602"/>
      <constructor name="new"
                   c:identifier="garrow_decimal256_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="606"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1950">A newly created #GArrowDecimal256Scalar.</doc>
          <type name="Decimal256Scalar" c:type="GArrowDecimal256Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1947">A #GArrowDecimal256DataType for this scalar.</doc>
            <type name="Decimal256DataType"
                  c:type="GArrowDecimal256DataType*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1948">The value of this scalar.</doc>
            <type name="Decimal256" c:type="GArrowDecimal256*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_decimal256_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="610"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1974">The value of this scalar.</doc>
          <type name="Decimal256" c:type="GArrowDecimal256*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1972">A #GArrowDecimal256Scalar.</doc>
            <type name="Decimal256Scalar" c:type="GArrowDecimal256Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                version="5.0.0"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/scalar.cpp"
             line="1929">The value of the scalar.</doc>
        <type name="Decimal256"/>
      </property>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Decimal256ScalarClass"
            c:type="GArrowDecimal256ScalarClass"
            glib:is-gtype-struct-for="Decimal256Scalar">
      <source-position filename="arrow-glib/scalar.h" line="602"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="DecimalDataType"
           c:symbol-prefix="decimal_data_type"
           c:type="GArrowDecimalDataType"
           parent="FixedSizeBinaryDataType"
           abstract="1"
           glib:type-name="GArrowDecimalDataType"
           glib:get-type="garrow_decimal_data_type_get_type"
           glib:type-struct="DecimalDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="553"/>
      <constructor name="new"
                   c:identifier="garrow_decimal_data_type_new"
                   version="0.10.0"
                   throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="556"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1494">
  The newly created decimal data type on success, %NULL on error.

  #GArrowDecimal256DataType is used if @precision is larger than
  garrow_decimal128_data_type_max_precision(),
  #GArrowDecimal128DataType is used otherwise.</doc>
          <type name="DecimalDataType" c:type="GArrowDecimalDataType*"/>
        </return-value>
        <parameters>
          <parameter name="precision" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1490">The precision of decimal data.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1491">The scale of decimal data.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_precision"
              c:identifier="garrow_decimal_data_type_get_precision"
              version="0.10.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="557"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1521">The precision of the decimal data type.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1519">The #GArrowDecimalDataType.</doc>
            <type name="DecimalDataType" c:type="GArrowDecimalDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scale"
              c:identifier="garrow_decimal_data_type_get_scale"
              version="0.10.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="558"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1539">The scale of the decimal data type.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="decimal_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1537">The #GArrowDecimalDataType.</doc>
            <type name="DecimalDataType" c:type="GArrowDecimalDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FixedSizeBinaryDataType"
              c:type="GArrowFixedSizeBinaryDataType"/>
      </field>
    </class>
    <record name="DecimalDataTypeClass"
            c:type="GArrowDecimalDataTypeClass"
            glib:is-gtype-struct-for="DecimalDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="553"/>
      <field name="parent_class">
        <type name="FixedSizeBinaryDataTypeClass"
              c:type="GArrowFixedSizeBinaryDataTypeClass"/>
      </field>
    </record>
    <class name="DenseUnionArray"
           c:symbol-prefix="dense_union_array"
           c:type="GArrowDenseUnionArray"
           parent="UnionArray"
           glib:type-name="GArrowDenseUnionArray"
           glib:get-type="garrow_dense_union_array_get_type"
           glib:type-struct="DenseUnionArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="207"/>
      <constructor name="new"
                   c:identifier="garrow_dense_union_array_new"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="210"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1482">A newly created #GArrowDenseUnionArray
  or %NULL on error.</doc>
          <type name="DenseUnionArray" c:type="GArrowDenseUnionArray*"/>
        </return-value>
        <parameters>
          <parameter name="type_ids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1475">The field type IDs for each value as #GArrowInt8Array.</doc>
            <type name="Int8Array" c:type="GArrowInt8Array*"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1476">The value offsets for each value as #GArrowInt32Array.
  Each offset is counted for each type.</doc>
            <type name="Int32Array" c:type="GArrowInt32Array*"/>
          </parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1478">The arrays for each field
  as #GList of #GArrowArray.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_data_type"
                   c:identifier="garrow_dense_union_array_new_data_type"
                   version="0.14.0"
                   throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="215"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1511">A newly created #GArrowSparseUnionArray
  or %NULL on error.</doc>
          <type name="DenseUnionArray" c:type="GArrowDenseUnionArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1503">The data type for the dense array.</doc>
            <type name="DenseUnionDataType"
                  c:type="GArrowDenseUnionDataType*"/>
          </parameter>
          <parameter name="type_ids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1504">The field type IDs for each value as #GArrowInt8Array.</doc>
            <type name="Int8Array" c:type="GArrowInt8Array*"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1505">The value offsets for each value as #GArrowInt32Array.
  Each offset is counted for each type.</doc>
            <type name="Int32Array" c:type="GArrowInt32Array*"/>
          </parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1507">The arrays for each field
  as #GList of #GArrowArray.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value_offset"
              c:identifier="garrow_dense_union_array_get_value_offset"
              version="12.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="222"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1537">The offset of the i-th value.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1534">A #GArrowUnionArray.</doc>
            <type name="DenseUnionArray" c:type="GArrowDenseUnionArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1535">The index of the offset of the value in the union.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="value-offsets"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Int32Array"/>
      </property>
      <field name="parent_instance">
        <type name="UnionArray" c:type="GArrowUnionArray"/>
      </field>
    </class>
    <class name="DenseUnionArrayBuilder"
           c:symbol-prefix="dense_union_array_builder"
           c:type="GArrowDenseUnionArrayBuilder"
           parent="UnionArrayBuilder"
           glib:type-name="GArrowDenseUnionArrayBuilder"
           glib:get-type="garrow_dense_union_array_builder_get_type"
           glib:type-struct="DenseUnionArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1580"/>
      <constructor name="new"
                   c:identifier="garrow_dense_union_array_builder_new"
                   version="12.0.0"
                   throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1584"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6648">A newly created #GArrowDenseUnionArrayBuilder
  on success, %NULL on error.</doc>
          <type name="DenseUnionArrayBuilder"
                c:type="GArrowDenseUnionArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6642">#GArrowDenseUnionDataType for the dense
  union. If this is %NULL, you start an empty children dense
  union. You can add children by
  multiple `garrow_union_array_builder_append_child()` calls.</doc>
            <type name="DenseUnionDataType"
                  c:type="GArrowDenseUnionDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="UnionArrayBuilder" c:type="GArrowUnionArrayBuilder"/>
      </field>
    </class>
    <record name="DenseUnionArrayBuilderClass"
            c:type="GArrowDenseUnionArrayBuilderClass"
            glib:is-gtype-struct-for="DenseUnionArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1580"/>
      <field name="parent_class">
        <type name="UnionArrayBuilderClass"
              c:type="GArrowUnionArrayBuilderClass"/>
      </field>
    </record>
    <record name="DenseUnionArrayClass"
            c:type="GArrowDenseUnionArrayClass"
            glib:is-gtype-struct-for="DenseUnionArray">
      <source-position filename="arrow-glib/composite-array.h" line="207"/>
      <field name="parent_class">
        <type name="UnionArrayClass" c:type="GArrowUnionArrayClass"/>
      </field>
    </record>
    <class name="DenseUnionDataType"
           c:symbol-prefix="dense_union_data_type"
           c:type="GArrowDenseUnionDataType"
           parent="UnionDataType"
           glib:type-name="GArrowDenseUnionDataType"
           glib:get-type="garrow_dense_union_data_type_get_type"
           glib:type-struct="DenseUnionDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="167"/>
      <constructor name="new" c:identifier="garrow_dense_union_data_type_new">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="170"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="603">The newly created dense union data type.</doc>
          <type name="DenseUnionDataType" c:type="GArrowDenseUnionDataType*"/>
        </return-value>
        <parameters>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="599">The fields of the union.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Field"/>
            </type>
          </parameter>
          <parameter name="type_codes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="600">The codes to specify each field.</doc>
            <array length="2" zero-terminated="0" c:type="gint8*">
              <type name="gint8" c:type="gint8"/>
            </array>
          </parameter>
          <parameter name="n_type_codes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="601">The number of type codes.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="UnionDataType" c:type="GArrowUnionDataType"/>
      </field>
    </class>
    <record name="DenseUnionDataTypeClass"
            c:type="GArrowDenseUnionDataTypeClass"
            glib:is-gtype-struct-for="DenseUnionDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="167"/>
      <field name="parent_class">
        <type name="UnionDataTypeClass" c:type="GArrowUnionDataTypeClass"/>
      </field>
    </record>
    <class name="DenseUnionScalar"
           c:symbol-prefix="dense_union_scalar"
           c:type="GArrowDenseUnionScalar"
           parent="UnionScalar"
           glib:type-name="GArrowDenseUnionScalar"
           glib:get-type="garrow_dense_union_scalar_get_type"
           glib:type-struct="DenseUnionScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="742"/>
      <constructor name="new"
                   c:identifier="garrow_dense_union_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="746"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2505">A newly created #GArrowDenseUnionScalar.</doc>
          <type name="DenseUnionScalar" c:type="GArrowDenseUnionScalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2501">A #GArrowDenseUnionDataType for this scalar.</doc>
            <type name="DenseUnionDataType"
                  c:type="GArrowDenseUnionDataType*"/>
          </parameter>
          <parameter name="type_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2502">The type code of this scalar.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2503">The value of this scalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="UnionScalar" c:type="GArrowUnionScalar"/>
      </field>
    </class>
    <record name="DenseUnionScalarClass"
            c:type="GArrowDenseUnionScalarClass"
            glib:is-gtype-struct-for="DenseUnionScalar">
      <source-position filename="arrow-glib/scalar.h" line="742"/>
      <field name="parent_class">
        <type name="UnionScalarClass" c:type="GArrowUnionScalarClass"/>
      </field>
    </record>
    <class name="DictionaryArray"
           c:symbol-prefix="dictionary_array"
           c:type="GArrowDictionaryArray"
           parent="Array"
           glib:type-name="GArrowDictionaryArray"
           glib:get-type="garrow_dictionary_array_get_type"
           glib:type-struct="DictionaryArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="235"/>
      <constructor name="new"
                   c:identifier="garrow_dictionary_array_new"
                   version="0.8.0"
                   throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="238"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1670">A newly created #GArrowDictionaryArray
  or %NULL on error.</doc>
          <type name="DictionaryArray" c:type="GArrowDictionaryArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1665">The data type of the dictionary array.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1666">The indices of values in dictionary.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="dictionary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1667">The dictionary of the dictionary array.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_dictionary"
              c:identifier="garrow_dictionary_array_get_dictionary"
              glib:get-property="dictionary"
              version="0.8.0">
        <source-position filename="arrow-glib/composite-array.h" line="245"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1734">The dictionary of this array.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1732">A #GArrowDictionaryArray.</doc>
            <type name="DictionaryArray" c:type="GArrowDictionaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dictionary_data_type"
              c:identifier="garrow_dictionary_array_get_dictionary_data_type"
              version="0.8.0"
              deprecated="1"
              deprecated-version="1.0.0">
        <doc-deprecated xml:space="preserve">Use garrow_array_get_value_data_type() instead.</doc-deprecated>
        <source-position filename="arrow-glib/composite-array.h" line="249"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1758">The dictionary data type of this array.</doc>
          <type name="DictionaryDataType" c:type="GArrowDictionaryDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1756">A #GArrowDictionaryArray.</doc>
            <type name="DictionaryArray" c:type="GArrowDictionaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_indices"
              c:identifier="garrow_dictionary_array_get_indices"
              glib:get-property="indices"
              version="0.8.0">
        <source-position filename="arrow-glib/composite-array.h" line="243"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1710">The indices of values in dictionary.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1708">A #GArrowDictionaryArray.</doc>
            <type name="DictionaryArray" c:type="GArrowDictionaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="dictionary"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_dictionary">
        <type name="Array"/>
      </property>
      <property name="indices"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_indices">
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <record name="DictionaryArrayClass"
            c:type="GArrowDictionaryArrayClass"
            glib:is-gtype-struct-for="DictionaryArray">
      <source-position filename="arrow-glib/composite-array.h" line="235"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="DictionaryDataType"
           c:symbol-prefix="dictionary_data_type"
           c:type="GArrowDictionaryDataType"
           parent="FixedWidthDataType"
           glib:type-name="GArrowDictionaryDataType"
           glib:get-type="garrow_dictionary_data_type_get_type"
           glib:type-struct="DictionaryDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="184"/>
      <constructor name="new"
                   c:identifier="garrow_dictionary_data_type_new"
                   version="0.8.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="187"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="652">The newly created dictionary data type.</doc>
          <type name="DictionaryDataType" c:type="GArrowDictionaryDataType*"/>
        </return-value>
        <parameters>
          <parameter name="index_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="648">The data type of index.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="value_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="649">The data type of dictionary values.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="ordered" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="650">Whether dictionary contents are ordered or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_index_data_type"
              c:identifier="garrow_dictionary_data_type_get_index_data_type"
              version="0.8.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="191"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="673">The #GArrowDataType of index.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dictionary_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="671">The #GArrowDictionaryDataType.</doc>
            <type name="DictionaryDataType"
                  c:type="GArrowDictionaryDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_data_type"
              c:identifier="garrow_dictionary_data_type_get_value_data_type"
              version="0.14.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="194"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="691">The #GArrowDataType of dictionary values.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dictionary_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="689">The #GArrowDictionaryDataType.</doc>
            <type name="DictionaryDataType"
                  c:type="GArrowDictionaryDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_ordered"
              c:identifier="garrow_dictionary_data_type_is_ordered"
              version="0.8.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="196"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="709">Whether dictionary contents are ordered or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="dictionary_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="707">The #GArrowDictionaryDataType.</doc>
            <type name="DictionaryDataType"
                  c:type="GArrowDictionaryDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FixedWidthDataType" c:type="GArrowFixedWidthDataType"/>
      </field>
    </class>
    <record name="DictionaryDataTypeClass"
            c:type="GArrowDictionaryDataTypeClass"
            glib:is-gtype-struct-for="DictionaryDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="184"/>
      <field name="parent_class">
        <type name="FixedWidthDataTypeClass"
              c:type="GArrowFixedWidthDataTypeClass"/>
      </field>
    </record>
    <class name="DoubleArray"
           c:symbol-prefix="double_array"
           c:type="GArrowDoubleArray"
           parent="NumericArray"
           glib:type-name="GArrowDoubleArray"
           glib:get-type="garrow_double_array_get_type"
           glib:type-struct="DoubleArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="408"/>
      <constructor name="new"
                   c:identifier="garrow_double_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="410"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2023">A newly created #GArrowDoubleArray.</doc>
          <type name="DoubleArray" c:type="GArrowDoubleArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2014">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2015">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2016">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2020">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_double_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="415"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2045">The @i-th value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2042">A #GArrowDoubleArray.</doc>
            <type name="DoubleArray" c:type="GArrowDoubleArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2043">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_double_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="417"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2060">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2057">A #GArrowDoubleArray.</doc>
            <type name="DoubleArray" c:type="GArrowDoubleArray*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2058">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_double_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="966"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5180">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5177">A #GArrowDoubleArray.</doc>
            <type name="DoubleArray" c:type="GArrowDoubleArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="DoubleArrayBuilder"
           c:symbol-prefix="double_array_builder"
           c:type="GArrowDoubleArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowDoubleArrayBuilder"
           glib:get-type="garrow_double_array_builder_get_type"
           glib:type-struct="DoubleArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="640"/>
      <constructor name="new" c:identifier="garrow_double_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="642"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2900">A newly created #GArrowDoubleArrayBuilder.</doc>
          <type name="DoubleArrayBuilder" c:type="GArrowDoubleArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_double_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_double_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="646"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2917">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2913">A #GArrowDoubleArrayBuilder.</doc>
            <type name="DoubleArrayBuilder"
                  c:type="GArrowDoubleArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2914">A double value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_double_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="662"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2994">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2991">A #GArrowDoubleArrayBuilder.</doc>
            <type name="DoubleArrayBuilder"
                  c:type="GArrowDoubleArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_double_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3006">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="665"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3015">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3008">A #GArrowDoubleArrayBuilder.</doc>
            <type name="DoubleArrayBuilder"
                  c:type="GArrowDoubleArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3009">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_double_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="651"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2936">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2932">A #GArrowDoubleArrayBuilder.</doc>
            <type name="DoubleArrayBuilder"
                  c:type="GArrowDoubleArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2933">A double value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_double_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2952">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="654"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2967">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2954">A #GArrowDoubleArrayBuilder.</doc>
            <type name="DoubleArrayBuilder"
                  c:type="GArrowDoubleArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2955">The array of double.</doc>
            <array length="1" zero-terminated="0" c:type="const gdouble*">
              <type name="gdouble" c:type="gdouble"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2956">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2957">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2961">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="DoubleArrayBuilderClass"
            c:type="GArrowDoubleArrayBuilderClass"
            glib:is-gtype-struct-for="DoubleArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="640"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="DoubleArrayClass"
            c:type="GArrowDoubleArrayClass"
            glib:is-gtype-struct-for="DoubleArray">
      <source-position filename="arrow-glib/basic-array.h" line="408"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="DoubleDataType"
           c:symbol-prefix="double_data_type"
           c:type="GArrowDoubleDataType"
           parent="FloatingPointDataType"
           glib:type-name="GArrowDoubleDataType"
           glib:get-type="garrow_double_data_type_get_type"
           glib:type-struct="DoubleDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="295"/>
      <constructor name="new" c:identifier="garrow_double_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="297"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="831">The newly created 64-bit floating point data type.</doc>
          <type name="DoubleDataType" c:type="GArrowDoubleDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="FloatingPointDataType"
              c:type="GArrowFloatingPointDataType"/>
      </field>
    </class>
    <record name="DoubleDataTypeClass"
            c:type="GArrowDoubleDataTypeClass"
            glib:is-gtype-struct-for="DoubleDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="295"/>
      <field name="parent_class">
        <type name="FloatingPointDataTypeClass"
              c:type="GArrowFloatingPointDataTypeClass"/>
      </field>
    </record>
    <class name="DoubleScalar"
           c:symbol-prefix="double_scalar"
           c:type="GArrowDoubleScalar"
           parent="Scalar"
           glib:type-name="GArrowDoubleScalar"
           glib:get-type="garrow_double_scalar_get_type"
           glib:type-struct="DoubleScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="306"/>
      <constructor name="new"
                   c:identifier="garrow_double_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="310"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="991">A newly created #GArrowDoubleScalar.</doc>
          <type name="DoubleScalar" c:type="GArrowDoubleScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="989">The value of this scalar.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_double_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="313"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1008">The value of this scalar.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1006">A #GArrowDoubleScalar.</doc>
            <type name="DoubleScalar" c:type="GArrowDoubleScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="DoubleScalarClass"
            c:type="GArrowDoubleScalarClass"
            glib:is-gtype-struct-for="DoubleScalar">
      <source-position filename="arrow-glib/scalar.h" line="306"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="EqualOptions"
           c:symbol-prefix="equal_options"
           c:type="GArrowEqualOptions"
           parent="GObject.Object"
           glib:type-name="GArrowEqualOptions"
           glib:get-type="garrow_equal_options_get_type"
           glib:type-struct="EqualOptionsClass">
      <source-position filename="arrow-glib/basic-array.h" line="38"/>
      <constructor name="new"
                   c:identifier="garrow_equal_options_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="333">A newly created #GArrowEqualOptions.</doc>
          <type name="EqualOptions" c:type="GArrowEqualOptions*"/>
        </return-value>
      </constructor>
      <method name="is_approx"
              c:identifier="garrow_equal_options_is_approx"
              version="5.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="348">%TRUE if approximate comparison is used, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="346">A #GArrowEqualOptions.</doc>
            <type name="EqualOptions" c:type="GArrowEqualOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="absolute-tolerance"
                version="5.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0.000010">
        <doc xml:space="preserve"
             filename="arrow-glib/basic-array.cpp"
             line="311">The absolute tolerance for approximate comparison of
floating-point values.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="approx"
                version="5.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/basic-array.cpp"
             line="283">Whether or not approximate comparison is used.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="nans-equal"
                version="5.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/basic-array.cpp"
             line="297">Whether or not NaNs are considered equal.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="EqualOptionsClass"
            c:type="GArrowEqualOptionsClass"
            glib:is-gtype-struct-for="EqualOptions">
      <source-position filename="arrow-glib/basic-array.h" line="38"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="Error"
                 glib:type-name="GArrowError"
                 glib:get-type="garrow_error_get_type"
                 c:type="GArrowError"
                 glib:error-domain="garrow-error-quark">
      <doc xml:space="preserve"
           filename="arrow-glib/error.h"
           line="26">The error codes are used by all arrow-glib functions.

They are corresponding to `arrow::Status` values.</doc>
      <member name="out_of_memory"
              value="1"
              c:identifier="GARROW_ERROR_OUT_OF_MEMORY"
              glib:nick="out-of-memory"
              glib:name="GARROW_ERROR_OUT_OF_MEMORY">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="28">Out of memory error.</doc>
      </member>
      <member name="key"
              value="2"
              c:identifier="GARROW_ERROR_KEY"
              glib:nick="key"
              glib:name="GARROW_ERROR_KEY">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="29">Key error.</doc>
      </member>
      <member name="type"
              value="3"
              c:identifier="GARROW_ERROR_TYPE"
              glib:nick="type"
              glib:name="GARROW_ERROR_TYPE">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="30">Type error.</doc>
      </member>
      <member name="invalid"
              value="4"
              c:identifier="GARROW_ERROR_INVALID"
              glib:nick="invalid"
              glib:name="GARROW_ERROR_INVALID">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="31">Invalid value error.</doc>
      </member>
      <member name="io"
              value="5"
              c:identifier="GARROW_ERROR_IO"
              glib:nick="io"
              glib:name="GARROW_ERROR_IO">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="32">IO error.</doc>
      </member>
      <member name="capacity"
              value="6"
              c:identifier="GARROW_ERROR_CAPACITY"
              glib:nick="capacity"
              glib:name="GARROW_ERROR_CAPACITY">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="33">Capacity error.</doc>
      </member>
      <member name="index"
              value="7"
              c:identifier="GARROW_ERROR_INDEX"
              glib:nick="index"
              glib:name="GARROW_ERROR_INDEX">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="34">Index error.</doc>
      </member>
      <member name="unknown"
              value="9"
              c:identifier="GARROW_ERROR_UNKNOWN"
              glib:nick="unknown"
              glib:name="GARROW_ERROR_UNKNOWN">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="35">Unknown error.</doc>
      </member>
      <member name="not_implemented"
              value="10"
              c:identifier="GARROW_ERROR_NOT_IMPLEMENTED"
              glib:nick="not-implemented"
              glib:name="GARROW_ERROR_NOT_IMPLEMENTED">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="36">The feature is not implemented.</doc>
      </member>
      <member name="serialization"
              value="11"
              c:identifier="GARROW_ERROR_SERIALIZATION"
              glib:nick="serialization"
              glib:name="GARROW_ERROR_SERIALIZATION">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="37">Serialization error.</doc>
      </member>
      <member name="code_generation"
              value="40"
              c:identifier="GARROW_ERROR_CODE_GENERATION"
              glib:nick="code-generation"
              glib:name="GARROW_ERROR_CODE_GENERATION">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="38">Error generating code for expression evaluation
  in Gandiva.</doc>
      </member>
      <member name="expression_validation"
              value="41"
              c:identifier="GARROW_ERROR_EXPRESSION_VALIDATION"
              glib:nick="expression-validation"
              glib:name="GARROW_ERROR_EXPRESSION_VALIDATION">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="40">Validation errors in expression given for code generation.</doc>
      </member>
      <member name="execution"
              value="42"
              c:identifier="GARROW_ERROR_EXECUTION"
              glib:nick="execution"
              glib:name="GARROW_ERROR_EXECUTION">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="41">Execution error while evaluating the expression against a record batch.</doc>
      </member>
      <member name="already_exists"
              value="45"
              c:identifier="GARROW_ERROR_ALREADY_EXISTS"
              glib:nick="already-exists"
              glib:name="GARROW_ERROR_ALREADY_EXISTS">
        <doc xml:space="preserve"
             filename="arrow-glib/error.h"
             line="42">Item already exists error.</doc>
      </member>
      <function name="quark" c:identifier="garrow_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="ExecuteContext"
           c:symbol-prefix="execute_context"
           c:type="GArrowExecuteContext"
           parent="GObject.Object"
           glib:type-name="GArrowExecuteContext"
           glib:get-type="garrow_execute_context_get_type"
           glib:type-struct="ExecuteContextClass">
      <source-position filename="arrow-glib/compute.h" line="37"/>
      <constructor name="new"
                   c:identifier="garrow_execute_context_new"
                   version="1.0.0">
        <source-position filename="arrow-glib/compute.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="286">A newly created #GArrowExecuteContext.</doc>
          <type name="ExecuteContext" c:type="GArrowExecuteContext*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ExecuteContextClass"
            c:type="GArrowExecuteContextClass"
            glib:is-gtype-struct-for="ExecuteContext">
      <source-position filename="arrow-glib/compute.h" line="37"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExecuteNode"
           c:symbol-prefix="execute_node"
           c:type="GArrowExecuteNode"
           parent="GObject.Object"
           glib:type-name="GArrowExecuteNode"
           glib:get-type="garrow_execute_node_get_type"
           glib:type-struct="ExecuteNodeClass">
      <source-position filename="arrow-glib/compute.h" line="322"/>
      <method name="get_kind_name"
              c:identifier="garrow_execute_node_get_kind_name"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="326"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1803">The kind name of the node.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1801">A #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_output_schema"
              c:identifier="garrow_execute_node_get_output_schema"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="329"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1818">The output schema of the node.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1816">A #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="node"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="options"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ExecuteNodeOptions"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ExecuteNodeClass"
            c:type="GArrowExecuteNodeClass"
            glib:is-gtype-struct-for="ExecuteNode">
      <source-position filename="arrow-glib/compute.h" line="322"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExecuteNodeOptions"
           c:symbol-prefix="execute_node_options"
           c:type="GArrowExecuteNodeOptions"
           parent="GObject.Object"
           glib:type-name="GArrowExecuteNodeOptions"
           glib:get-type="garrow_execute_node_options_get_type"
           glib:type-struct="ExecuteNodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="133"/>
      <property name="options"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ExecuteNodeOptionsClass"
            c:type="GArrowExecuteNodeOptionsClass"
            glib:is-gtype-struct-for="ExecuteNodeOptions">
      <source-position filename="arrow-glib/compute.h" line="133"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExecutePlan"
           c:symbol-prefix="execute_plan"
           c:type="GArrowExecutePlan"
           parent="GObject.Object"
           glib:type-name="GArrowExecutePlan"
           glib:get-type="garrow_execute_plan_get_type"
           glib:type-struct="ExecutePlanClass">
      <source-position filename="arrow-glib/compute.h" line="341"/>
      <constructor name="new"
                   c:identifier="garrow_execute_plan_new"
                   version="6.0.0"
                   throws="1">
        <source-position filename="arrow-glib/compute.h" line="345"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1914">A newly created #GArrowExecutePlan on success,
  %NULL on error.</doc>
          <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
        </return-value>
      </constructor>
      <method name="build_aggregate_node"
              c:identifier="garrow_execute_plan_build_aggregate_node"
              version="6.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2069">This is a shortcut of garrow_execute_plan_build_node() for aggregate
node.</doc>
        <source-position filename="arrow-glib/compute.h" line="372"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2079">A newly built and added #GArrowExecuteNode
  for aggregation on success, %NULL on error.</doc>
          <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2071">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2072">A #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2073">A #GArrowAggregateNodeOptions.</doc>
            <type name="AggregateNodeOptions"
                  c:type="GArrowAggregateNodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_filter_node"
              c:identifier="garrow_execute_plan_build_filter_node"
              version="12.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2003">This is a shortcut of garrow_execute_plan_build_node() for filter
node.</doc>
        <source-position filename="arrow-glib/compute.h" line="360"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2013">A newly built and added #GArrowExecuteNode
  for filter on success, %NULL on error.</doc>
          <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2005">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2006">A #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2007">A #GArrowFilterNodeOptions.</doc>
            <type name="FilterNodeOptions" c:type="GArrowFilterNodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_hash_join_node"
              c:identifier="garrow_execute_plan_build_hash_join_node"
              version="7.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2135">This is a shortcut of garrow_execute_plan_build_node() for hash
join node.</doc>
        <source-position filename="arrow-glib/compute.h" line="384"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2146">A newly built and added #GArrowExecuteNode
  for hash join on success, %NULL on error.</doc>
          <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2137">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
          <parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2138">A left #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2139">A right #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2140">A #GArrowHashJoinNodeOptions.</doc>
            <type name="HashJoinNodeOptions"
                  c:type="GArrowHashJoinNodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_node"
              c:identifier="garrow_execute_plan_build_node"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="348"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1940">A newly built and added #GArrowExecuteNode
  on success, %NULL on error.</doc>
          <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1934">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
          <parameter name="factory_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1935">A factory name to build a #GArrowExecuteNode.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="inputs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1936">An inputs to execute new node.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="ExecuteNode"/>
            </type>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1937">A #GArrowExecuteNodeOptions for new node.</doc>
            <type name="ExecuteNodeOptions"
                  c:type="GArrowExecuteNodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_project_node"
              c:identifier="garrow_execute_plan_build_project_node"
              version="11.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2036">This is a shortcut of garrow_execute_plan_build_node() for project
node.</doc>
        <source-position filename="arrow-glib/compute.h" line="366"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2046">A newly built and added #GArrowExecuteNode
  for project on success, %NULL on error.</doc>
          <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2038">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2039">A #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2040">A #GArrowProjectNodeOptions.</doc>
            <type name="ProjectNodeOptions"
                  c:type="GArrowProjectNodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_sink_node"
              c:identifier="garrow_execute_plan_build_sink_node"
              version="6.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2102">This is a shortcut of garrow_execute_plan_build_node() for sink
node.</doc>
        <source-position filename="arrow-glib/compute.h" line="378"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2112">A newly built and added #GArrowExecuteNode
  for sink on success, %NULL on error.</doc>
          <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2104">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2105">A #GArrowExecuteNode.</doc>
            <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2106">A #GArrowSinkNodeOptions.</doc>
            <type name="SinkNodeOptions" c:type="GArrowSinkNodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_source_node"
              c:identifier="garrow_execute_plan_build_source_node"
              version="6.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="1977">This is a shortcut of garrow_execute_plan_build_node() for source
node.</doc>
        <source-position filename="arrow-glib/compute.h" line="355"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1986">A newly built and added #GArrowExecuteNode
  for source on success, %NULL on error.</doc>
          <type name="ExecuteNode" c:type="GArrowExecuteNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1979">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1980">A #GArrowSourceNodeOptions.</doc>
            <type name="SourceNodeOptions" c:type="GArrowSourceNodeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_nodes"
              c:identifier="garrow_execute_plan_get_nodes"
              version="13.0.0">
        <source-position filename="arrow-glib/compute.h" line="391"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2175">A list of
  #GArrowExecuteNode of this plan.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ExecuteNode"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2173">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="start"
              c:identifier="garrow_execute_plan_start"
              version="6.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2206">Starts this plan.</doc>
        <source-position filename="arrow-glib/compute.h" line="398"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2208">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stop"
              c:identifier="garrow_execute_plan_stop"
              version="6.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2221">Stops this plan.</doc>
        <source-position filename="arrow-glib/compute.h" line="401"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2223">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="validate"
              c:identifier="garrow_execute_plan_validate"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="394"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2192">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2189">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="wait"
              c:identifier="garrow_execute_plan_wait"
              version="6.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2236">Waits for finishing this plan.</doc>
        <source-position filename="arrow-glib/compute.h" line="404"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2243">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="plan" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="2238">A #GArrowExecutePlan.</doc>
            <type name="ExecutePlan" c:type="GArrowExecutePlan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="plan"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ExecutePlanClass"
            c:type="GArrowExecutePlanClass"
            glib:is-gtype-struct-for="ExecutePlan">
      <source-position filename="arrow-glib/compute.h" line="341"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Expression"
           c:symbol-prefix="expression"
           c:type="GArrowExpression"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GArrowExpression"
           glib:get-type="garrow_expression_get_type"
           glib:type-struct="ExpressionClass">
      <source-position filename="arrow-glib/compute-definition.h" line="58"/>
      <method name="equal"
              c:identifier="garrow_expression_equal"
              version="6.0.0">
        <source-position filename="arrow-glib/expression.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/expression.cpp"
               line="104">%TRUE if both of them have the same content, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="expression" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="101">A #GArrowExpression.</doc>
            <type name="Expression" c:type="GArrowExpression*"/>
          </instance-parameter>
          <parameter name="other_expression" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="102">A #GArrowExpression.</doc>
            <type name="Expression" c:type="GArrowExpression*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_expression_to_string"
              version="6.0.0">
        <source-position filename="arrow-glib/expression.h" line="28"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/expression.cpp"
               line="85">The formatted expression.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="expression" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="83">A #GArrowExpression.</doc>
            <type name="Expression" c:type="GArrowExpression*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ExpressionClass"
            c:type="GArrowExpressionClass"
            glib:is-gtype-struct-for="Expression">
      <source-position filename="arrow-glib/compute-definition.h" line="58"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExtensionArray"
           c:symbol-prefix="extension_array"
           c:type="GArrowExtensionArray"
           parent="Array"
           glib:type-name="GArrowExtensionArray"
           glib:get-type="garrow_extension_array_get_type"
           glib:type-struct="ExtensionArrayClass">
      <source-position filename="arrow-glib/basic-array-definition.h"
                       line="46"/>
      <method name="get_storage"
              c:identifier="garrow_extension_array_get_storage"
              glib:get-property="storage"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="789"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3484">The underlying storage of the array.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3482">A #GArrowExtensionArray.</doc>
            <type name="ExtensionArray" c:type="GArrowExtensionArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="storage"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_storage">
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <record name="ExtensionArrayClass"
            c:type="GArrowExtensionArrayClass"
            glib:is-gtype-struct-for="ExtensionArray">
      <source-position filename="arrow-glib/basic-array-definition.h"
                       line="46"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="ExtensionDataType"
           c:symbol-prefix="extension_data_type"
           c:type="GArrowExtensionDataType"
           parent="DataType"
           glib:type-name="GArrowExtensionDataType"
           glib:get-type="garrow_extension_data_type_get_type"
           glib:type-struct="ExtensionDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="633"/>
      <virtual-method name="deserialize" introspectable="0" throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="627"/>
        <return-value>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
          <parameter name="storage_data_type" transfer-ownership="none">
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="serialized_data" transfer-ownership="none">
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="equal">
        <source-position filename="arrow-glib/basic-data-type.h" line="625"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
          <parameter name="other_data_type" transfer-ownership="none">
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_array_gtype">
        <source-position filename="arrow-glib/basic-data-type.h" line="632"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_extension_name"
                      invoker="get_extension_name"
                      version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="624"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1763">The extension name of the type.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1761">A #GArrowExtensionDataType.</doc>
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="serialize">
        <source-position filename="arrow-glib/basic-data-type.h" line="631"/>
        <return-value transfer-ownership="full">
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_extension_name"
              c:identifier="garrow_extension_data_type_get_extension_name"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="637"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1763">The extension name of the type.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1761">A #GArrowExtensionDataType.</doc>
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="wrap_array"
              c:identifier="garrow_extension_data_type_wrap_array"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="641"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1784">The array that wraps underlying storage array.</doc>
          <type name="ExtensionArray" c:type="GArrowExtensionArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1781">A #GArrowExtensionDataType.</doc>
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
          <parameter name="storage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1782">A #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="wrap_chunked_array"
              c:identifier="garrow_extension_data_type_wrap_chunked_array"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="646"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1805">The chunked array that wraps underlying
  storage chunked array.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1802">A #GArrowExtensionDataType.</doc>
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </instance-parameter>
          <parameter name="storage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1803">A #GArrowChunkedArray.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
        </parameters>
      </method>
      <property name="storage-data-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DataType"/>
      </property>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="ExtensionDataTypeClass"
            c:type="GArrowExtensionDataTypeClass"
            glib:is-gtype-struct-for="ExtensionDataType"
            version="3.0.0">
      <source-position filename="arrow-glib/basic-data-type.h" line="633"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
      <field name="get_extension_name">
        <callback name="get_extension_name">
          <source-position filename="arrow-glib/basic-data-type.h" line="624"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1763">The extension name of the type.

  It should be freed with g_free() when no longer needed.</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="data_type" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="arrow-glib/basic-data-type.cpp"
                   line="1761">A #GArrowExtensionDataType.</doc>
              <type name="ExtensionDataType"
                    c:type="GArrowExtensionDataType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal">
          <source-position filename="arrow-glib/basic-data-type.h" line="625"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="data_type" transfer-ownership="none">
              <type name="ExtensionDataType"
                    c:type="GArrowExtensionDataType*"/>
            </parameter>
            <parameter name="other_data_type" transfer-ownership="none">
              <type name="ExtensionDataType"
                    c:type="GArrowExtensionDataType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deserialize" introspectable="0">
        <callback name="deserialize" introspectable="0" throws="1">
          <source-position filename="arrow-glib/basic-data-type.h" line="627"/>
          <return-value>
            <type name="DataType" c:type="GArrowDataType*"/>
          </return-value>
          <parameters>
            <parameter name="data_type" transfer-ownership="none">
              <type name="ExtensionDataType"
                    c:type="GArrowExtensionDataType*"/>
            </parameter>
            <parameter name="storage_data_type" transfer-ownership="none">
              <type name="DataType" c:type="GArrowDataType*"/>
            </parameter>
            <parameter name="serialized_data" transfer-ownership="none">
              <type name="GLib.Bytes" c:type="GBytes*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="serialize">
        <callback name="serialize">
          <source-position filename="arrow-glib/basic-data-type.h" line="631"/>
          <return-value transfer-ownership="full">
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </return-value>
          <parameters>
            <parameter name="data_type" transfer-ownership="none">
              <type name="ExtensionDataType"
                    c:type="GArrowExtensionDataType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_array_gtype">
        <callback name="get_array_gtype">
          <source-position filename="arrow-glib/basic-data-type.h" line="632"/>
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="data_type" transfer-ownership="none">
              <type name="ExtensionDataType"
                    c:type="GArrowExtensionDataType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ExtensionDataTypeRegistry"
           c:symbol-prefix="extension_data_type_registry"
           c:type="GArrowExtensionDataTypeRegistry"
           parent="GObject.Object"
           glib:type-name="GArrowExtensionDataTypeRegistry"
           glib:get-type="garrow_extension_data_type_registry_get_type"
           glib:type-struct="ExtensionDataTypeRegistryClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="660"/>
      <function name="default"
                c:identifier="garrow_extension_data_type_registry_default"
                version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="664"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1994">The default global extension data type registry.</doc>
          <type name="ExtensionDataTypeRegistry"
                c:type="GArrowExtensionDataTypeRegistry*"/>
        </return-value>
      </function>
      <method name="lookup"
              c:identifier="garrow_extension_data_type_registry_lookup"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="680"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="2095">A found #GArrowExtensionDataType on
  found, %NULL on not found.</doc>
          <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="registry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="2092">A #GArrowExtensionDataTypeRegistry.</doc>
            <type name="ExtensionDataTypeRegistry"
                  c:type="GArrowExtensionDataTypeRegistry*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="2093">An extension data type name to be looked up.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="register"
              c:identifier="garrow_extension_data_type_registry_register"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/basic-data-type.cpp"
             line="2005">Register the given @data_type to the @registry.</doc>
        <source-position filename="arrow-glib/basic-data-type.h" line="668"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="2013">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="registry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="2007">A #GArrowExtensionDataTypeRegistry.</doc>
            <type name="ExtensionDataTypeRegistry"
                  c:type="GArrowExtensionDataTypeRegistry*"/>
          </instance-parameter>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="2008">A #GArrowExtensionDataType to be registered.</doc>
            <type name="ExtensionDataType" c:type="GArrowExtensionDataType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unregister"
              c:identifier="garrow_extension_data_type_registry_unregister"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/basic-data-type.cpp"
             line="2064">Unregister an extension data type that has the given @name from the
@registry.</doc>
        <source-position filename="arrow-glib/basic-data-type.h" line="674"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="2073">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="registry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="2066">A #GArrowExtensionDataTypeRegistry.</doc>
            <type name="ExtensionDataTypeRegistry"
                  c:type="GArrowExtensionDataTypeRegistry*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="2067">An extension data type name to be unregistered.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="registry"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ExtensionDataTypeRegistryClass"
            c:type="GArrowExtensionDataTypeRegistryClass"
            glib:is-gtype-struct-for="ExtensionDataTypeRegistry">
      <source-position filename="arrow-glib/basic-data-type.h" line="660"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExtensionScalar"
           c:symbol-prefix="extension_scalar"
           c:type="GArrowExtensionScalar"
           parent="Scalar"
           glib:type-name="GArrowExtensionScalar"
           glib:get-type="garrow_extension_scalar_get_type"
           glib:type-struct="ExtensionScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="760"/>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="ExtensionScalarClass"
            c:type="GArrowExtensionScalarClass"
            glib:is-gtype-struct-for="ExtensionScalar">
      <source-position filename="arrow-glib/scalar.h" line="760"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <function-macro name="FILE_OUTPUT_STREAM"
                    c:identifier="GARROW_FILE_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="58"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FILE_OUTPUT_STREAM_CLASS"
                    c:identifier="GARROW_FILE_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="62"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FILE_OUTPUT_STREAM_GET_CLASS"
                    c:identifier="GARROW_FILE_OUTPUT_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="72"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="FeatherFileReader"
           c:symbol-prefix="feather_file_reader"
           c:type="GArrowFeatherFileReader"
           parent="GObject.Object"
           glib:type-name="GArrowFeatherFileReader"
           glib:get-type="garrow_feather_file_reader_get_type"
           glib:type-struct="FeatherFileReaderClass">
      <source-position filename="arrow-glib/reader.h" line="234"/>
      <constructor name="new"
                   c:identifier="garrow_feather_file_reader_new"
                   version="0.4.0"
                   throws="1">
        <source-position filename="arrow-glib/reader.h" line="236"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="776">A newly created #GArrowFeatherFileReader
  or %NULL on error.</doc>
          <type name="FeatherFileReader" c:type="GArrowFeatherFileReader*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="773">The file to be read.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_version"
              c:identifier="garrow_feather_file_reader_get_version"
              version="0.4.0">
        <source-position filename="arrow-glib/reader.h" line="240"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="798">The format version of the file.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="796">A #GArrowFeatherFileReader.</doc>
            <type name="FeatherFileReader" c:type="GArrowFeatherFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read"
              c:identifier="garrow_feather_file_reader_read"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="243"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="814">The table in the file that has all columns.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="811">A #GArrowFeatherFileReader.</doc>
            <type name="FeatherFileReader" c:type="GArrowFeatherFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_indices"
              c:identifier="garrow_feather_file_reader_read_indices"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="246"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="839">The table in the file that has only the
  specified columns.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="834">A #GArrowFeatherFileReader.</doc>
            <type name="FeatherFileReader" c:type="GArrowFeatherFileReader*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="835">The indices of column to be read.</doc>
            <array length="1" zero-terminated="0" c:type="const gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
          <parameter name="n_indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="836">The number of indices.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_names"
              c:identifier="garrow_feather_file_reader_read_names"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="251"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="871">The table in the file that has only the
  specified columns.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="866">A #GArrowFeatherFileReader.</doc>
            <type name="FeatherFileReader" c:type="GArrowFeatherFileReader*"/>
          </instance-parameter>
          <parameter name="names" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="867">The names of column to be read.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_names" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="868">The number of names.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="feather-reader"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FeatherFileReaderClass"
            c:type="GArrowFeatherFileReaderClass"
            glib:is-gtype-struct-for="FeatherFileReader">
      <source-position filename="arrow-glib/reader.h" line="234"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="FeatherWriteProperties"
           c:symbol-prefix="feather_write_properties"
           c:type="GArrowFeatherWriteProperties"
           parent="GObject.Object"
           glib:type-name="GArrowFeatherWriteProperties"
           glib:get-type="garrow_feather_write_properties_get_type"
           glib:type-struct="FeatherWritePropertiesClass">
      <source-position filename="arrow-glib/table.h" line="143"/>
      <constructor name="new"
                   c:identifier="garrow_feather_write_properties_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/table.h" line="147"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="899">A newly created #GArrowFeatherWriteProperties.</doc>
          <type name="FeatherWriteProperties"
                c:type="GArrowFeatherWriteProperties*"/>
        </return-value>
      </constructor>
      <property name="compression"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_COMPRESSION_TYPE_LZO">
        <doc xml:space="preserve"
             filename="arrow-glib/table.cpp"
             line="872">Compression type to use. Only
%GARROW_COMPRESSION_TYPE_UNCOMPRESSED,
%GARROW_COMPRESSION_TYPE_LZ4 and %GARROW_COMPRESSION_TYPE_ZSTD
are supported. The default compression is
%GARROW_COMPRESSION_TYPE_LZ4 if Apache Arrow C++ is built with
support for it, otherwise %GARROW_COMPRESSION_TYPE_UNCOMPRESSED.
%GARROW_COMPRESSION_TYPE_UNCOMPRESSED is set as the object
default here.</doc>
        <type name="CompressionType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FeatherWritePropertiesClass"
            c:type="GArrowFeatherWritePropertiesClass"
            glib:is-gtype-struct-for="FeatherWriteProperties">
      <source-position filename="arrow-glib/table.h" line="143"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Field"
           c:symbol-prefix="field"
           c:type="GArrowField"
           parent="GObject.Object"
           glib:type-name="GArrowField"
           glib:get-type="garrow_field_get_type"
           glib:type-struct="FieldClass">
      <source-position filename="arrow-glib/field.h" line="35"/>
      <constructor name="new" c:identifier="garrow_field_new">
        <source-position filename="arrow-glib/field.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="165">A newly created #GArrowField.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="162">The name of the field.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data_type" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="163">The data type of the field.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full" c:identifier="garrow_field_new_full">
        <source-position filename="arrow-glib/field.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="182">A newly created #GArrowField.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="178">The name of the field.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="179">The data type of the field.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="nullable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="180">Whether null may be included or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="import"
                c:identifier="garrow_field_import"
                version="6.0.0"
                throws="1">
        <source-position filename="arrow-glib/field.h" line="39"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="140">An imported #GArrowField on success,
  %NULL on error.

  You don't need to release the passed `struct ArrowSchema *`,
  even if this function reports an error.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <parameter name="c_abi_schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="137">A `struct ArrowSchema *`.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="equal" c:identifier="garrow_field_equal">
        <source-position filename="arrow-glib/field.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="267">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="264">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
          <parameter name="other_field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="265">A #GArrowField to be compared.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
        </parameters>
      </method>
      <method name="export"
              c:identifier="garrow_field_export"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/field.h" line="50"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="201">An exported #GArrowField as
  `struct ArrowStruct *` on success, %NULL on error.

  It should be freed with the `ArrowSchema::release` callback then
  g_free() when no longer needed.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="198">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data_type" c:identifier="garrow_field_get_data_type">
        <source-position filename="arrow-glib/field.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="240">The data type of the field.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="238">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="garrow_field_get_metadata"
              version="3.0.0">
        <source-position filename="arrow-glib/field.h" line="72"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="331">The
  metadata in the field.

  It should be freed with g_hash_table_unref() when no longer needed.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="329">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="garrow_field_get_name">
        <source-position filename="arrow-glib/field.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="227">The name of the field.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="225">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_metadata"
              c:identifier="garrow_field_has_metadata"
              version="3.0.0">
        <source-position filename="arrow-glib/field.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="316">%TRUE if the field has metadata, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="314">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_nullable" c:identifier="garrow_field_is_nullable">
        <source-position filename="arrow-glib/field.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="253">Whether the filed may include null or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="251">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_metadata"
              c:identifier="garrow_field_remove_metadata"
              version="3.0.0">
        <source-position filename="arrow-glib/field.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="403">The new field that doesn't have metadata.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="401">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="garrow_field_to_string">
        <source-position filename="arrow-glib/field.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="283">The string representation of the field.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="281">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string_metadata"
              c:identifier="garrow_field_to_string_metadata"
              version="3.0.0">
        <source-position filename="arrow-glib/field.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="298">The string representation of the field.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="295">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
          <parameter name="show_metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="296">Whether include metadata or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="with_merged_metadata"
              c:identifier="garrow_field_with_merged_metadata"
              version="3.0.0">
        <source-position filename="arrow-glib/field.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="382">The new field that also has the given
  metadata. If both of the existing metadata and the given metadata
  have the same keys, the values in the given metadata are used.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="379">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="380">An additional associated metadata.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="with_metadata"
              c:identifier="garrow_field_with_metadata"
              version="3.0.0">
        <source-position filename="arrow-glib/field.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/field.cpp"
               line="362">The new field with the given metadata.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="359">A #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </instance-parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/field.cpp"
                 line="360">A new associated metadata.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="data-type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DataType"/>
      </property>
      <property name="field"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FieldClass"
            c:type="GArrowFieldClass"
            glib:is-gtype-struct-for="Field">
      <source-position filename="arrow-glib/field.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="FieldExpression"
           c:symbol-prefix="field_expression"
           c:type="GArrowFieldExpression"
           parent="Expression"
           glib:type-name="GArrowFieldExpression"
           glib:get-type="garrow_field_expression_get_type"
           glib:type-struct="FieldExpressionClass">
      <source-position filename="arrow-glib/expression.h" line="60"/>
      <constructor name="new"
                   c:identifier="garrow_field_expression_new"
                   version="6.0.0"
                   throws="1">
        <source-position filename="arrow-glib/expression.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/expression.cpp"
               line="169">A newly created #GArrowFieldExpression on sucess, %NULL on
  error.</doc>
          <type name="FieldExpression" c:type="GArrowFieldExpression*"/>
        </return-value>
        <parameters>
          <parameter name="reference" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="166">A field name or dot path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Expression" c:type="GArrowExpression"/>
      </field>
    </class>
    <record name="FieldExpressionClass"
            c:type="GArrowFieldExpressionClass"
            glib:is-gtype-struct-for="FieldExpression">
      <source-position filename="arrow-glib/expression.h" line="60"/>
      <field name="parent_class">
        <type name="ExpressionClass" c:type="GArrowExpressionClass"/>
      </field>
    </record>
    <interface name="File"
               c:symbol-prefix="file"
               c:type="GArrowFile"
               glib:type-name="GArrowFile"
               glib:get-type="garrow_file_get_type"
               glib:type-struct="FileInterface">
      <source-position filename="arrow-glib/file.h" line="29"/>
      <method name="close" c:identifier="garrow_file_close" throws="1">
        <source-position filename="arrow-glib/file.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file.cpp"
               line="50">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file.cpp"
                 line="47">A #GArrowFile.</doc>
            <type name="File" c:type="GArrowFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode" c:identifier="garrow_file_get_mode">
        <source-position filename="arrow-glib/file.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file.cpp"
               line="102">The mode of the file.</doc>
          <type name="FileMode" c:type="GArrowFileMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file.cpp"
                 line="100">A #GArrowFile.</doc>
            <type name="File" c:type="GArrowFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_closed"
              c:identifier="garrow_file_is_closed"
              version="0.13.0">
        <source-position filename="arrow-glib/file.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file.cpp"
               line="66">%TRUE if the @file is already closed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file.cpp"
                 line="64">A #GArrowFile.</doc>
            <type name="File" c:type="GArrowFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="tell" c:identifier="garrow_file_tell" throws="1">
        <source-position filename="arrow-glib/file.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file.cpp"
               line="82">The current offset on success, -1 if there was an error.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file.cpp"
                 line="79">A #GArrowFile.</doc>
            <type name="File" c:type="GArrowFile*"/>
          </instance-parameter>
        </parameters>
      </method>
    </interface>
    <class name="FileInfo"
           c:symbol-prefix="file_info"
           c:type="GArrowFileInfo"
           parent="GObject.Object"
           glib:type-name="GArrowFileInfo"
           glib:get-type="garrow_file_info_get_type"
           glib:type-struct="FileInfoClass">
      <source-position filename="arrow-glib/file-system.h" line="65"/>
      <constructor name="new"
                   c:identifier="garrow_file_info_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/file-system.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="308">A newly created #GArrowFileInfo.</doc>
          <type name="FileInfo" c:type="GArrowFileInfo*"/>
        </return-value>
      </constructor>
      <method name="equal"
              c:identifier="garrow_file_info_equal"
              version="0.17.0">
        <source-position filename="arrow-glib/file-system.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="323">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="320">A #GArrowFileInfo.</doc>
            <type name="FileInfo" c:type="GArrowFileInfo*"/>
          </instance-parameter>
          <parameter name="other_file_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="321">A #GArrowFileInfo to be compared.</doc>
            <type name="FileInfo" c:type="GArrowFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_dir"
              c:identifier="garrow_file_info_is_dir"
              version="0.17.0">
        <source-position filename="arrow-glib/file-system.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="356">%TRUE if the entry is a directory, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="354">A #GArrowFileInfo.</doc>
            <type name="FileInfo" c:type="GArrowFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_file"
              c:identifier="garrow_file_info_is_file"
              version="0.17.0">
        <source-position filename="arrow-glib/file-system.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="341">%TRUE if the entry is a file, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="339">A #GArrowFileInfo.</doc>
            <type name="FileInfo" c:type="GArrowFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_file_info_to_string"
              version="0.17.0">
        <source-position filename="arrow-glib/file-system.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="371">The string representation of the file statistics.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="369">A #GArrowFileInfo.</doc>
            <type name="FileInfo" c:type="GArrowFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="base-name" version="0.17.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="223">The file base name (component after the last directory separator).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="dir-name" version="0.17.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="239">The directory base name (component before the file base name).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="extension" version="0.17.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="255">The file extension (excluding the dot).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mtime"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="-1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="288">The time of last modification, if available.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="path"
                version="0.17.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="209">The full file path in the file system.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="size"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="-1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="271">The size in bytes, if available
Only regular files are guaranteed to have a size.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="type"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_FILE_TYPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="194">The type of the entry.</doc>
        <type name="FileType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FileInfoClass"
            c:type="GArrowFileInfoClass"
            glib:is-gtype-struct-for="FileInfo">
      <source-position filename="arrow-glib/file-system.h" line="65"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="FileInputStream"
           c:symbol-prefix="file_input_stream"
           c:type="GArrowFileInputStream"
           parent="SeekableInputStream"
           glib:type-name="GArrowFileInputStream"
           glib:get-type="garrow_file_input_stream_get_type"
           glib:type-struct="FileInputStreamClass">
      <source-position filename="arrow-glib/input-stream.h" line="116"/>
      <implements name="File"/>
      <implements name="Readable"/>
      <constructor name="new"
                   c:identifier="garrow_file_input_stream_new"
                   version="6.0.0"
                   throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="119"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="655">A newly created #GArrowFileInputStream
  or %NULL on error.</doc>
          <type name="FileInputStream" c:type="GArrowFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="652">The path of the file to be opened.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_file_descriptor"
                   c:identifier="garrow_file_input_stream_new_file_descriptor"
                   version="6.0.0"
                   throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="122"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="678">A newly created #GArrowFileInputStream
  or %NULL on error.</doc>
          <type name="FileInputStream" c:type="GArrowFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file_descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="675">The file descriptor of this input stream.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_file_descriptor"
              c:identifier="garrow_file_input_stream_get_file_descriptor"
              version="6.0.0">
        <source-position filename="arrow-glib/input-stream.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="702">The file descriptor of @stream.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="700">A #GArrowFileInuptStream.</doc>
            <type name="FileInputStream" c:type="GArrowFileInputStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SeekableInputStream" c:type="GArrowSeekableInputStream"/>
      </field>
    </class>
    <record name="FileInputStreamClass"
            c:type="GArrowFileInputStreamClass"
            glib:is-gtype-struct-for="FileInputStream">
      <source-position filename="arrow-glib/input-stream.h" line="116"/>
      <field name="parent_class">
        <type name="SeekableInputStreamClass"
              c:type="GArrowSeekableInputStreamClass"/>
      </field>
    </record>
    <record name="FileInterface"
            c:type="GArrowFileInterface"
            disguised="1"
            opaque="1"
            glib:is-gtype-struct-for="File">
      <source-position filename="arrow-glib/file.h" line="29"/>
    </record>
    <enumeration name="FileMode"
                 glib:type-name="GArrowFileMode"
                 glib:get-type="garrow_file_mode_get_type"
                 c:type="GArrowFileMode">
      <doc xml:space="preserve"
           filename="arrow-glib/file-mode.h"
           line="26">They are corresponding to `arrow::io::FileMode::type` values.</doc>
      <member name="read"
              value="0"
              c:identifier="GARROW_FILE_MODE_READ"
              glib:nick="read"
              glib:name="GARROW_FILE_MODE_READ">
        <doc xml:space="preserve"
             filename="arrow-glib/file-mode.h"
             line="28">For read.</doc>
      </member>
      <member name="write"
              value="1"
              c:identifier="GARROW_FILE_MODE_WRITE"
              glib:nick="write"
              glib:name="GARROW_FILE_MODE_WRITE">
        <doc xml:space="preserve"
             filename="arrow-glib/file-mode.h"
             line="29">For write.</doc>
      </member>
      <member name="readwrite"
              value="2"
              c:identifier="GARROW_FILE_MODE_READWRITE"
              glib:nick="readwrite"
              glib:name="GARROW_FILE_MODE_READWRITE">
        <doc xml:space="preserve"
             filename="arrow-glib/file-mode.h"
             line="30">For read-write.</doc>
      </member>
    </enumeration>
    <class name="FileOutputStream"
           c:symbol-prefix="file_output_stream"
           c:type="GArrowFileOutputStream"
           parent="OutputStream"
           glib:type-name="GArrowFileOutputStream"
           glib:get-type="garrow_file_output_stream_get_type"
           glib:type-struct="FileOutputStreamClass">
      <doc xml:space="preserve"
           filename="arrow-glib/output-stream.h"
           line="83">It wraps `arrow::io::FileOutputStream`.</doc>
      <source-position filename="arrow-glib/output-stream.h" line="98"/>
      <implements name="File"/>
      <implements name="Writable"/>
      <constructor name="new"
                   c:identifier="garrow_file_output_stream_new"
                   throws="1">
        <source-position filename="arrow-glib/output-stream.h" line="103"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="295">A newly opened #GArrowFileOutputStream or
  %NULL on error.</doc>
          <type name="FileOutputStream" c:type="GArrowFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="291">The path of the file output stream.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="append" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="292">Whether the path is opened as append mode or recreate mode.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="OutputStream" c:type="GArrowOutputStream"/>
      </field>
    </class>
    <record name="FileOutputStreamClass"
            c:type="GArrowFileOutputStreamClass"
            glib:is-gtype-struct-for="FileOutputStream">
      <source-position filename="arrow-glib/output-stream.h" line="98"/>
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GArrowOutputStreamClass"/>
      </field>
    </record>
    <class name="FileSelector"
           c:symbol-prefix="file_selector"
           c:type="GArrowFileSelector"
           parent="GObject.Object"
           glib:type-name="GArrowFileSelector"
           glib:get-type="garrow_file_selector_get_type"
           glib:type-struct="FileSelectorClass">
      <source-position filename="arrow-glib/file-system.h" line="92"/>
      <property name="allow-not-found"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="507">The behavior if `base_dir` isn't found in the file system.
If false, an error is returned.  If true, an empty selection is returned.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="base-dir"
                version="0.17.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="489">The directory in which to select files.
If the path exists but doesn't point to a directory, this should
be an error.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="max-recursion"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="2147483647">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="540">The maximum number of subdirectories to recurse into.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="recursive"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="524">Whether to recurse into subdirectories.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FileSelectorClass"
            c:type="GArrowFileSelectorClass"
            glib:is-gtype-struct-for="FileSelector">
      <source-position filename="arrow-glib/file-system.h" line="92"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="FileSystem"
           c:symbol-prefix="file_system"
           c:type="GArrowFileSystem"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GArrowFileSystem"
           glib:get-type="garrow_file_system_get_type"
           glib:type-struct="FileSystemClass">
      <source-position filename="arrow-glib/file-system.h" line="105"/>
      <function name="create"
                c:identifier="garrow_file_system_create"
                version="3.0.0"
                throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="632">This is a factory function to create a specific #GArrowFileSystem
object.</doc>
        <source-position filename="arrow-glib/file-system.h" line="109"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="641">The newly created file system
  that is an object of a subclass of #GArrowFileSystem.</doc>
          <type name="FileSystem" c:type="GArrowFileSystem*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="634">An URI to specify file system with options. If you only have an
  absolute path, g_filename_to_uri() will help you.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="copy_file"
              c:identifier="garrow_file_system_copy_file"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="942">Copy a file.
If the destination exists and is a directory, an error is returned.
Otherwise, it is replaced.</doc>
        <source-position filename="arrow-glib/file-system.h" line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="953">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="944">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="945">The path of the source file.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="946">The path of the destination.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_dir"
              c:identifier="garrow_file_system_create_dir"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="790">Create a directory and subdirectories.
This function succeeds if the directory already exists.</doc>
        <source-position filename="arrow-glib/file-system.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="800">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="792">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="793">The paths of the directory.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="recursive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="794">Whether creating directory recursively or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_dir"
              c:identifier="garrow_file_system_delete_dir"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="815">Delete a directory and its contents, recursively.</doc>
        <source-position filename="arrow-glib/file-system.h" line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="823">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="817">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="818">The paths of the directory.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_dir_contents"
              c:identifier="garrow_file_system_delete_dir_contents"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="837">Delete a directory's contents, recursively. Like
garrow_file_system_delete_dir(), but doesn't delete the directory
itself. Passing an empty path (`""`) will wipe the entire file
system tree.</doc>
        <source-position filename="arrow-glib/file-system.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="848">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="839">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="840">The paths of the directory.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_file"
              c:identifier="garrow_file_system_delete_file"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="862">Delete a file.</doc>
        <source-position filename="arrow-glib/file-system.h" line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="870">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="864">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="865">The paths of the file to be delete.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_files"
              c:identifier="garrow_file_system_delete_files"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="884">Delete many files.</doc>
        <source-position filename="arrow-glib/file-system.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="894">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="886">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="paths" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="887">
  The paths of the files to be delete.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_paths" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="889">The number of items in @paths.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_info"
              c:identifier="garrow_file_system_get_file_info"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="678">Get information for the given target.

Any symlink is automatically dereferenced, recursively.
A non-existing or unreachable file returns an OK status and has
a #GArrowFileType of value %GARROW_FILE_TYPE_NOT_FOUND.
An error status indicates a truly exceptional condition
(low-level I/O error, etc.).</doc>
        <source-position filename="arrow-glib/file-system.h" line="117"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="692">A #GArrowFileInfo.</doc>
          <type name="FileInfo" c:type="GArrowFileInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="680">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="681">The path of the target.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_infos_paths"
              c:identifier="garrow_file_system_get_file_infos_paths"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="729">Get information same as garrow_file_system_get_file_info()
for the given many targets at once.</doc>
        <source-position filename="arrow-glib/file-system.h" line="122"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="739">
  A list of #GArrowFileInfo.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="FileInfo"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="731">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="paths" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="732">The paths of the targets.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_paths" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="733">The number of items in @paths.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_infos_selector"
              c:identifier="garrow_file_system_get_file_infos_selector"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="760">Get information same as garrow_file_system_get_file_info()
according to a selector.

The selector's base directory will not be part of the results,
even if it exists.</doc>
        <source-position filename="arrow-glib/file-system.h" line="129"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="772">
  A list of #GArrowFileInfo.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="FileInfo"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="762">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="file_selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="763">A #GArrowFileSelector.</doc>
            <type name="FileSelector" c:type="GArrowFileSelector*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_type_name"
              c:identifier="garrow_file_system_get_type_name"
              version="0.17.0">
        <source-position filename="arrow-glib/file-system.h" line="113"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="664">The name of file system type.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="662">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move"
              c:identifier="garrow_file_system_move"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="914">Move / rename a file or a directory.
If the destination exists:
- if it is a non-empty directory, an error is returned
- otherwise, if it has the same type as the source, it is replaced
- otherwise, behavior is unspecified (implementation-dependent).</doc>
        <source-position filename="arrow-glib/file-system.h" line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="927">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="916">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="917">The path of the source file.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="918">The path of the destination.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_append_stream"
              c:identifier="garrow_file_system_open_append_stream"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1056">Open an output stream for appending.
If the target doesn't exist, a new empty file is created.</doc>
        <source-position filename="arrow-glib/file-system.h" line="192"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1065">A newly created #GArrowOutputStream
  for appending.</doc>
          <type name="OutputStream" c:type="GArrowOutputStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1058">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1059">The path of the output stream.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_input_file"
              c:identifier="garrow_file_system_open_input_file"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="997">Open an input file for random access reading.</doc>
        <source-position filename="arrow-glib/file-system.h" line="180"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1005">A newly created
  #GArrowSeekableInputStream.</doc>
          <type name="SeekableInputStream"
                c:type="GArrowSeekableInputStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="999">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1000">The path of the input file.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_input_stream"
              c:identifier="garrow_file_system_open_input_stream"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="968">Open an input stream for sequential reading.</doc>
        <source-position filename="arrow-glib/file-system.h" line="174"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="976">A newly created
  #GArrowInputStream.</doc>
          <type name="InputStream" c:type="GArrowInputStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="970">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="971">The path of the input stream.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_output_stream"
              c:identifier="garrow_file_system_open_output_stream"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1026">Open an output stream for sequential writing.
If the target already exists, the existing data is truncated.</doc>
        <source-position filename="arrow-glib/file-system.h" line="186"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1035">A newly created
  #GArrowOutputStream.</doc>
          <type name="OutputStream" c:type="GArrowOutputStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1028">A #GArrowFileSystem.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1029">The path of the output stream.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="file-system"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FileSystemClass"
            c:type="GArrowFileSystemClass"
            glib:is-gtype-struct-for="FileSystem">
      <source-position filename="arrow-glib/file-system.h" line="105"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="FileType"
                 version="1.0.0"
                 glib:type-name="GArrowFileType"
                 glib:get-type="garrow_file_type_get_type"
                 c:type="GArrowFileType">
      <doc xml:space="preserve"
           filename="arrow-glib/file-system.h"
           line="35">They are corresponding to `arrow::fs::FileType` values.</doc>
      <member name="not_found"
              value="0"
              c:identifier="GARROW_FILE_TYPE_NOT_FOUND"
              glib:nick="not-found"
              glib:name="GARROW_FILE_TYPE_NOT_FOUND">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="37">Entry is not found</doc>
      </member>
      <member name="unknown"
              value="1"
              c:identifier="GARROW_FILE_TYPE_UNKNOWN"
              glib:nick="unknown"
              glib:name="GARROW_FILE_TYPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="38">Entry exists but its type is unknown</doc>
      </member>
      <member name="file"
              value="2"
              c:identifier="GARROW_FILE_TYPE_FILE"
              glib:nick="file"
              glib:name="GARROW_FILE_TYPE_FILE">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="39">Entry is a regular file</doc>
      </member>
      <member name="dir"
              value="3"
              c:identifier="GARROW_FILE_TYPE_DIR"
              glib:nick="dir"
              glib:name="GARROW_FILE_TYPE_DIR">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="40">Entry is a directory</doc>
      </member>
    </enumeration>
    <class name="FilterNodeOptions"
           c:symbol-prefix="filter_node_options"
           c:type="GArrowFilterNodeOptions"
           parent="ExecuteNodeOptions"
           glib:type-name="GArrowFilterNodeOptions"
           glib:get-type="garrow_filter_node_options_get_type"
           glib:type-struct="FilterNodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="168"/>
      <constructor name="new"
                   c:identifier="garrow_filter_node_options_new"
                   version="12.0.0">
        <source-position filename="arrow-glib/compute.h" line="172"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1114">A newly created #GArrowFilterNodeOptions.</doc>
          <type name="FilterNodeOptions" c:type="GArrowFilterNodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="expression" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1112">A #GArrowExpression to be used for filter.</doc>
            <type name="Expression" c:type="GArrowExpression*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="ExecuteNodeOptions" c:type="GArrowExecuteNodeOptions"/>
      </field>
    </class>
    <record name="FilterNodeOptionsClass"
            c:type="GArrowFilterNodeOptionsClass"
            glib:is-gtype-struct-for="FilterNodeOptions">
      <source-position filename="arrow-glib/compute.h" line="168"/>
      <field name="parent_class">
        <type name="ExecuteNodeOptionsClass"
              c:type="GArrowExecuteNodeOptionsClass"/>
      </field>
    </record>
    <enumeration name="FilterNullSelectionBehavior"
                 glib:type-name="GArrowFilterNullSelectionBehavior"
                 glib:get-type="garrow_filter_null_selection_behavior_get_type"
                 c:type="GArrowFilterNullSelectionBehavior">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="460">They are corresponding to
`arrow::compute::FilterOptions::NullSelectionBehavior` values.</doc>
      <member name="drop"
              value="0"
              c:identifier="GARROW_FILTER_NULL_SELECTION_DROP"
              glib:nick="drop"
              glib:name="GARROW_FILTER_NULL_SELECTION_DROP">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="462">Filtered value will be removed in the output.</doc>
      </member>
      <member name="emit_null"
              value="1"
              c:identifier="GARROW_FILTER_NULL_SELECTION_EMIT_NULL"
              glib:nick="emit-null"
              glib:name="GARROW_FILTER_NULL_SELECTION_EMIT_NULL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="464">Filtered value will be null in the output.</doc>
      </member>
    </enumeration>
    <class name="FilterOptions"
           c:symbol-prefix="filter_options"
           c:type="GArrowFilterOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowFilterOptions"
           glib:get-type="garrow_filter_options_get_type"
           glib:type-struct="FilterOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="484"/>
      <constructor name="new"
                   c:identifier="garrow_filter_options_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/compute.h" line="488"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2817">A newly created #GArrowFilterOptions.</doc>
          <type name="FilterOptions" c:type="GArrowFilterOptions*"/>
        </return-value>
      </constructor>
      <property name="null-selection-behavior"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_FILTER_NULL_SELECTION_DROP">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2795">How to handle filtered values.</doc>
        <type name="FilterNullSelectionBehavior"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="FilterOptionsClass"
            c:type="GArrowFilterOptionsClass"
            glib:is-gtype-struct-for="FilterOptions">
      <source-position filename="arrow-glib/compute.h" line="484"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="FixedSizeBinaryArray"
           c:symbol-prefix="fixed_size_binary_array"
           c:type="GArrowFixedSizeBinaryArray"
           parent="PrimitiveArray"
           glib:type-name="GArrowFixedSizeBinaryArray"
           glib:get-type="garrow_fixed_size_binary_array_get_type"
           glib:type-struct="FixedSizeBinaryArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="733"/>
      <constructor name="new"
                   c:identifier="garrow_fixed_size_binary_array_new"
                   version="3.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="737"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3196">A newly created #GArrowFixedSizeBinaryArray.</doc>
          <type name="FixedSizeBinaryArray"
                c:type="GArrowFixedSizeBinaryArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3186">A #GArrowFixedSizeBinaryDataType for the array.</doc>
            <type name="FixedSizeBinaryDataType"
                  c:type="GArrowFixedSizeBinaryDataType*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3187">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3188">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3189">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3193">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_byte_width"
              c:identifier="garrow_fixed_size_binary_array_get_byte_width"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="744"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3221">The number of bytes of each value.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3219">A #GArrowFixedSizeBinaryArray.</doc>
            <type name="FixedSizeBinaryArray"
                  c:type="GArrowFixedSizeBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="garrow_fixed_size_binary_array_get_value"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="747"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3239">The @i-th value.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3236">A #GArrowFixedSizeBinaryArray.</doc>
            <type name="FixedSizeBinaryArray"
                  c:type="GArrowFixedSizeBinaryArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3237">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values_bytes"
              c:identifier="garrow_fixed_size_binary_array_get_values_bytes"
              version="3.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="751"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3259">All values as a #GBytes.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3257">A #GArrowFixedSizeBinaryArray.</doc>
            <type name="FixedSizeBinaryArray"
                  c:type="GArrowFixedSizeBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="PrimitiveArray" c:type="GArrowPrimitiveArray"/>
      </field>
    </class>
    <class name="FixedSizeBinaryArrayBuilder"
           c:symbol-prefix="fixed_size_binary_array_builder"
           c:type="GArrowFixedSizeBinaryArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowFixedSizeBinaryArrayBuilder"
           glib:get-type="garrow_fixed_size_binary_array_builder_get_type"
           glib:type-struct="FixedSizeBinaryArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="863"/>
      <constructor name="new"
                   c:identifier="garrow_fixed_size_binary_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="867"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3704">A newly created #GArrowFixedSizeBinaryArrayBuilder.</doc>
          <type name="FixedSizeBinaryArrayBuilder"
                c:type="GArrowFixedSizeBinaryArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3702">A #GArrowFixedSizeBinaryDataType for created array.</doc>
            <type name="FixedSizeBinaryDataType"
                  c:type="GArrowFixedSizeBinaryDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append_value"
              c:identifier="garrow_fixed_size_binary_array_builder_append_value"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="872"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3725">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3720">A #GArrowFixedSizeBinaryArrayBuilder.</doc>
            <type name="FixedSizeBinaryArrayBuilder"
                  c:type="GArrowFixedSizeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3721">A binary value.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3722">A value length.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value_bytes"
              c:identifier="garrow_fixed_size_binary_array_builder_append_value_bytes"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="879"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3765">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3761">A #GArrowFixedSizeBinaryArrayBuilder.</doc>
            <type name="FixedSizeBinaryArrayBuilder"
                  c:type="GArrowFixedSizeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3762">A binary value.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_fixed_size_binary_array_builder_append_values"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3796">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="885"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3811">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3798">A #GArrowFixedSizeBinaryArrayBuilder.</doc>
            <type name="FixedSizeBinaryArrayBuilder"
                  c:type="GArrowFixedSizeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3799">The array of #GBytes.</doc>
            <array length="1" zero-terminated="0" c:type="GBytes**">
              <type name="GLib.Bytes" c:type="GBytes*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3800">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3801">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3805">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values_packed"
              c:identifier="garrow_fixed_size_binary_array_builder_append_values_packed"
              version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3839">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.

This is more efficient than
garrow_fixed_size_binary_array_builder_append_values().</doc>
        <source-position filename="arrow-glib/array-builder.h" line="894"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3856">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3841">A #GArrowFixedSizeBinaryArrayBuilder.</doc>
            <type name="FixedSizeBinaryArrayBuilder"
                  c:type="GArrowFixedSizeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3842">A #GBytes that contains multiple values.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3843">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="2" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3847">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="FixedSizeBinaryArrayBuilderClass"
            c:type="GArrowFixedSizeBinaryArrayBuilderClass"
            glib:is-gtype-struct-for="FixedSizeBinaryArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="863"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="FixedSizeBinaryArrayClass"
            c:type="GArrowFixedSizeBinaryArrayClass"
            glib:is-gtype-struct-for="FixedSizeBinaryArray">
      <source-position filename="arrow-glib/basic-array.h" line="733"/>
      <field name="parent_class">
        <type name="PrimitiveArrayClass" c:type="GArrowPrimitiveArrayClass"/>
      </field>
    </record>
    <class name="FixedSizeBinaryDataType"
           c:symbol-prefix="fixed_size_binary_data_type"
           c:type="GArrowFixedSizeBinaryDataType"
           parent="FixedWidthDataType"
           glib:type-name="GArrowFixedSizeBinaryDataType"
           glib:get-type="garrow_fixed_size_binary_data_type_get_type"
           glib:type-struct="FixedSizeBinaryDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="323"/>
      <constructor name="new"
                   c:identifier="garrow_fixed_size_binary_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="327"/>
        <return-value transfer-ownership="full">
          <type name="FixedSizeBinaryDataType"
                c:type="GArrowFixedSizeBinaryDataType*"/>
        </return-value>
        <parameters>
          <parameter name="byte_width" transfer-ownership="none">
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_byte_width"
              c:identifier="garrow_fixed_size_binary_data_type_get_byte_width"
              version="0.12.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="330"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="916">The number of bytes for one data.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="914">A #GArrowFixedSizeBinaryDataType.</doc>
            <type name="FixedSizeBinaryDataType"
                  c:type="GArrowFixedSizeBinaryDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="FixedSizeBinaryDataTypeClass"
            c:type="GArrowFixedSizeBinaryDataTypeClass"
            glib:is-gtype-struct-for="FixedSizeBinaryDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="323"/>
      <field name="parent_class">
        <type name="FixedWidthDataTypeClass"
              c:type="GArrowFixedWidthDataTypeClass"/>
      </field>
    </record>
    <class name="FixedSizeBinaryScalar"
           c:symbol-prefix="fixed_size_binary_scalar"
           c:type="GArrowFixedSizeBinaryScalar"
           parent="BaseBinaryScalar"
           glib:type-name="GArrowFixedSizeBinaryScalar"
           glib:get-type="garrow_fixed_size_binary_scalar_get_type"
           glib:type-struct="FixedSizeBinaryScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="406"/>
      <constructor name="new"
                   c:identifier="garrow_fixed_size_binary_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="410"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1277">A newly created #GArrowFixedSizeBinaryScalar.</doc>
          <type name="FixedSizeBinaryScalar"
                c:type="GArrowFixedSizeBinaryScalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1274">A #GArrowFixedSizeBinaryDataType for this scalar.</doc>
            <type name="FixedSizeBinaryDataType"
                  c:type="GArrowFixedSizeBinaryDataType*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1275">The value of this scalar.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseBinaryScalar" c:type="GArrowBaseBinaryScalar"/>
      </field>
    </class>
    <record name="FixedSizeBinaryScalarClass"
            c:type="GArrowFixedSizeBinaryScalarClass"
            glib:is-gtype-struct-for="FixedSizeBinaryScalar">
      <source-position filename="arrow-glib/scalar.h" line="406"/>
      <field name="parent_class">
        <type name="BaseBinaryScalarClass"
              c:type="GArrowBaseBinaryScalarClass"/>
      </field>
    </record>
    <class name="FixedWidthDataType"
           c:symbol-prefix="fixed_width_data_type"
           c:type="GArrowFixedWidthDataType"
           parent="DataType"
           abstract="1"
           glib:type-name="GArrowFixedWidthDataType"
           glib:get-type="garrow_fixed_width_data_type_get_type"
           glib:type-struct="FixedWidthDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="69"/>
      <method name="get_bit_width"
              c:identifier="garrow_fixed_width_data_type_get_bit_width">
        <source-position filename="arrow-glib/basic-data-type.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="354">The number of bits for one data.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="352">A #GArrowFixedWidthDataType.</doc>
            <type name="FixedWidthDataType"
                  c:type="GArrowFixedWidthDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="FixedWidthDataTypeClass"
            c:type="GArrowFixedWidthDataTypeClass"
            glib:is-gtype-struct-for="FixedWidthDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="69"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <class name="FloatArray"
           c:symbol-prefix="float_array"
           c:type="GArrowFloatArray"
           parent="NumericArray"
           glib:type-name="GArrowFloatArray"
           glib:get-type="garrow_float_array_get_type"
           glib:type-struct="FloatArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="386"/>
      <constructor name="new"
                   c:identifier="garrow_float_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="388"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1950">A newly created #GArrowFloatArray.</doc>
          <type name="FloatArray" c:type="GArrowFloatArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1941">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1942">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1943">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1947">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_float_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="393"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1972">The @i-th value.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1969">A #GArrowFloatArray.</doc>
            <type name="FloatArray" c:type="GArrowFloatArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1970">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_float_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="395"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1987">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gfloat*">
            <type name="gfloat" c:type="gfloat"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1984">A #GArrowFloatArray.</doc>
            <type name="FloatArray" c:type="GArrowFloatArray*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1985">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_float_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="963"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5160">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5157">A #GArrowFloatArray.</doc>
            <type name="FloatArray" c:type="GArrowFloatArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="FloatArrayBuilder"
           c:symbol-prefix="float_array_builder"
           c:type="GArrowFloatArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowFloatArrayBuilder"
           glib:get-type="garrow_float_array_builder_get_type"
           glib:type-struct="FloatArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="599"/>
      <constructor name="new" c:identifier="garrow_float_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="601"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2750">A newly created #GArrowFloatArrayBuilder.</doc>
          <type name="FloatArrayBuilder" c:type="GArrowFloatArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_float_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_float_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="605"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2767">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2763">A #GArrowFloatArrayBuilder.</doc>
            <type name="FloatArrayBuilder" c:type="GArrowFloatArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2764">A float value.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_float_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="621"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2844">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2841">A #GArrowFloatArrayBuilder.</doc>
            <type name="FloatArrayBuilder" c:type="GArrowFloatArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_float_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2856">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="624"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2865">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2858">A #GArrowFloatArrayBuilder.</doc>
            <type name="FloatArrayBuilder" c:type="GArrowFloatArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2859">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_float_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="610"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2786">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2782">A #GArrowFloatArrayBuilder.</doc>
            <type name="FloatArrayBuilder" c:type="GArrowFloatArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2783">A float value.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_float_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2802">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="613"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2817">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2804">A #GArrowFloatArrayBuilder.</doc>
            <type name="FloatArrayBuilder" c:type="GArrowFloatArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2805">The array of float.</doc>
            <array length="1" zero-terminated="0" c:type="const gfloat*">
              <type name="gfloat" c:type="gfloat"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2806">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2807">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2811">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="FloatArrayBuilderClass"
            c:type="GArrowFloatArrayBuilderClass"
            glib:is-gtype-struct-for="FloatArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="599"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="FloatArrayClass"
            c:type="GArrowFloatArrayClass"
            glib:is-gtype-struct-for="FloatArray">
      <source-position filename="arrow-glib/basic-array.h" line="386"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="FloatDataType"
           c:symbol-prefix="float_data_type"
           c:type="GArrowFloatDataType"
           parent="FloatingPointDataType"
           glib:type-name="GArrowFloatDataType"
           glib:get-type="garrow_float_data_type_get_type"
           glib:type-struct="FloatDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="281"/>
      <constructor name="new" c:identifier="garrow_float_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="283"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="799">The newly created float data type.</doc>
          <type name="FloatDataType" c:type="GArrowFloatDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="FloatingPointDataType"
              c:type="GArrowFloatingPointDataType"/>
      </field>
    </class>
    <record name="FloatDataTypeClass"
            c:type="GArrowFloatDataTypeClass"
            glib:is-gtype-struct-for="FloatDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="281"/>
      <field name="parent_class">
        <type name="FloatingPointDataTypeClass"
              c:type="GArrowFloatingPointDataTypeClass"/>
      </field>
    </record>
    <class name="FloatScalar"
           c:symbol-prefix="float_scalar"
           c:type="GArrowFloatScalar"
           parent="Scalar"
           glib:type-name="GArrowFloatScalar"
           glib:get-type="garrow_float_scalar_get_type"
           glib:type-struct="FloatScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="287"/>
      <constructor name="new"
                   c:identifier="garrow_float_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="291"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="942">A newly created #GArrowFloatScalar.</doc>
          <type name="FloatScalar" c:type="GArrowFloatScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="940">The value of this scalar.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_float_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="294"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="959">The value of this scalar.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="957">A #GArrowFloatScalar.</doc>
            <type name="FloatScalar" c:type="GArrowFloatScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="FloatScalarClass"
            c:type="GArrowFloatScalarClass"
            glib:is-gtype-struct-for="FloatScalar">
      <source-position filename="arrow-glib/scalar.h" line="287"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="FloatingPointDataType"
           c:symbol-prefix="floating_point_data_type"
           c:type="GArrowFloatingPointDataType"
           parent="NumericDataType"
           abstract="1"
           glib:type-name="GArrowFloatingPointDataType"
           glib:get-type="garrow_floating_point_data_type_get_type"
           glib:type-struct="FloatingPointDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="254"/>
      <field name="parent_instance">
        <type name="NumericDataType" c:type="GArrowNumericDataType"/>
      </field>
    </class>
    <record name="FloatingPointDataTypeClass"
            c:type="GArrowFloatingPointDataTypeClass"
            glib:is-gtype-struct-for="FloatingPointDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="254"/>
      <field name="parent_class">
        <type name="NumericDataTypeClass" c:type="GArrowNumericDataTypeClass"/>
      </field>
    </record>
    <class name="Function"
           c:symbol-prefix="function"
           c:type="GArrowFunction"
           parent="GObject.Object"
           glib:type-name="GArrowFunction"
           glib:get-type="garrow_function_get_type"
           glib:type-struct="FunctionClass">
      <source-position filename="arrow-glib/compute.h" line="86"/>
      <function name="all" c:identifier="garrow_function_all" version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="612">
  The all available functions.

  It should be freed with g_list_free_full() and g_object_unref()
  when no longer needed.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Function"/>
          </type>
        </return-value>
      </function>
      <function name="find"
                c:identifier="garrow_function_find"
                version="1.0.0">
        <source-position filename="arrow-glib/compute.h" line="90"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="592">
  The found #GArrowFunction or %NULL on not found.</doc>
          <type name="Function" c:type="GArrowFunction*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="590">A function name to be found.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="equal"
              c:identifier="garrow_function_equal"
              version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="769">%TRUE if both of them have the same name, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="766">A #GArrowFunction.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </instance-parameter>
          <parameter name="other_function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="767">A #GArrowFunction to be compared.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="execute"
              c:identifier="garrow_function_execute"
              version="1.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="96"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="646">
  A return value of the execution as #GArrowDatum on success, %NULL on error.</doc>
          <type name="Datum" c:type="GArrowDatum*"/>
        </return-value>
        <parameters>
          <instance-parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="639">A #GArrowFunction.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </instance-parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="640">A list of #GArrowDatum.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Datum"/>
            </type>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="641">Options for the execution as an object that
  implements  #GArrowFunctionOptions.</doc>
            <type name="FunctionOptions" c:type="GArrowFunctionOptions*"/>
          </parameter>
          <parameter name="context"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="643">A #GArrowExecuteContext for the execution.</doc>
            <type name="ExecuteContext" c:type="GArrowExecuteContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_options"
              c:identifier="garrow_function_get_default_options"
              version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="110"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="725">The default options of this
  function if exists, %NULL otherwise.</doc>
          <type name="FunctionOptions" c:type="GArrowFunctionOptions*"/>
        </return-value>
        <parameters>
          <instance-parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="723">A #GArrowFunction.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_doc"
              c:identifier="garrow_function_get_doc"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="709">The function documentation.</doc>
          <type name="FunctionDoc" c:type="GArrowFunctionDoc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="707">A #GArrowFunction.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="garrow_function_get_name"
              version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="694">The function name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="692">A #GArrowFunction.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_options_type"
              c:identifier="garrow_function_get_options_type"
              version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="745">%G_TYPE_NONE if this function doesn't have options, the
  #GType of options of this function if it exists and Apache Arrow
  GLib bindings of it also exist, %G_TYPE_INVALID if options of this
  function exists but Apache Arrow GLib bindings of it don't exist.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="743">A #GArrowFunction.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_function_to_string"
              version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="121"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="787">The formatted function.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="785">A #GArrowFunction.</doc>
            <type name="Function" c:type="GArrowFunction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="function"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FunctionClass"
            c:type="GArrowFunctionClass"
            glib:is-gtype-struct-for="Function">
      <source-position filename="arrow-glib/compute.h" line="86"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="FunctionDoc"
           c:symbol-prefix="function_doc"
           c:type="GArrowFunctionDoc"
           parent="GObject.Object"
           glib:type-name="GArrowFunctionDoc"
           glib:get-type="garrow_function_doc_get_type"
           glib:type-struct="FunctionDocClass">
      <source-position filename="arrow-glib/compute.h" line="61"/>
      <method name="get_arg_names"
              c:identifier="garrow_function_doc_get_arg_names"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="469">
  Symbolic names (identifiers) for the function arguments.

  It's a %NULL-terminated string array. It must be freed with
  g_strfreev() when no longer needed.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="467">A #GArrowFunctionDoc.</doc>
            <type name="FunctionDoc" c:type="GArrowFunctionDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="garrow_function_doc_get_description"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="450">A detailed description of the function, meant to follow
  the summary.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="448">A #GArrowFunctionDoc.</doc>
            <type name="FunctionDoc" c:type="GArrowFunctionDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_options_class_name"
              c:identifier="garrow_function_doc_get_options_class_name"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="496">Name of the options class, if any.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="494">A #GArrowFunctionDoc.</doc>
            <type name="FunctionDoc" c:type="GArrowFunctionDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="garrow_function_doc_get_summary"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="432">A one-line summary of the function, using a verb.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="430">A #GArrowFunctionDoc.</doc>
            <type name="FunctionDoc" c:type="GArrowFunctionDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="doc"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FunctionDocClass"
            c:type="GArrowFunctionDocClass"
            glib:is-gtype-struct-for="FunctionDoc">
      <source-position filename="arrow-glib/compute.h" line="61"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="FunctionOptions"
           c:symbol-prefix="function_options"
           c:type="GArrowFunctionOptions"
           parent="GObject.Object"
           glib:type-name="GArrowFunctionOptions"
           glib:get-type="garrow_function_options_get_type"
           glib:type-struct="FunctionOptionsClass">
      <source-position filename="arrow-glib/compute-definition.h" line="35"/>
      <method name="equal"
              c:identifier="garrow_function_options_equal"
              version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="336">%TRUE if both of them have the same values, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="333">A #GArrowFunctionOptions.</doc>
            <type name="FunctionOptions" c:type="GArrowFunctionOptions*"/>
          </instance-parameter>
          <parameter name="other_options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="334">A #GArrowFunctionOptions to be compared.</doc>
            <type name="FunctionOptions" c:type="GArrowFunctionOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_function_options_to_string"
              version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="49"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="357">The formatted options.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="355">A #GArrowFunctionOptions.</doc>
            <type name="FunctionOptions" c:type="GArrowFunctionOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FunctionOptionsClass"
            c:type="GArrowFunctionOptionsClass"
            glib:is-gtype-struct-for="FunctionOptions">
      <source-position filename="arrow-glib/compute-definition.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="GCSFileSystem"
           c:symbol-prefix="gcs_file_system"
           c:type="GArrowGCSFileSystem"
           parent="FileSystem"
           glib:type-name="GArrowGCSFileSystem"
           glib:get-type="garrow_gcs_file_system_get_type"
           glib:type-struct="GCSFileSystemClass">
      <source-position filename="arrow-glib/file-system.h" line="345"/>
      <field name="parent_instance">
        <type name="FileSystem" c:type="GArrowFileSystem"/>
      </field>
    </class>
    <record name="GCSFileSystemClass"
            c:type="GArrowGCSFileSystemClass"
            glib:is-gtype-struct-for="GCSFileSystem">
      <source-position filename="arrow-glib/file-system.h" line="345"/>
      <field name="parent_class">
        <type name="FileSystemClass" c:type="GArrowFileSystemClass"/>
      </field>
    </record>
    <class name="GIOInputStream"
           c:symbol-prefix="gio_input_stream"
           c:type="GArrowGIOInputStream"
           parent="SeekableInputStream"
           glib:type-name="GArrowGIOInputStream"
           glib:get-type="garrow_gio_input_stream_get_type"
           glib:type-struct="GIOInputStreamClass">
      <doc xml:space="preserve"
           filename="arrow-glib/input-stream.h"
           line="171">It's an input stream for `GInputStream`.</doc>
      <source-position filename="arrow-glib/input-stream.h" line="186"/>
      <implements name="File"/>
      <implements name="Readable"/>
      <constructor name="new"
                   c:identifier="garrow_gio_input_stream_new"
                   version="0.5.0">
        <source-position filename="arrow-glib/input-stream.h" line="191"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="1053">A newly created #GArrowGIOInputStream.</doc>
          <type name="GIOInputStream" c:type="GArrowGIOInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="gio_input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="1051">The stream to be read.</doc>
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_raw"
              c:identifier="garrow_gio_input_stream_get_raw"
              glib:get-property="raw"
              version="0.5.0"
              deprecated="1"
              deprecated-version="0.12.0">
        <doc-deprecated xml:space="preserve">Use GArrowGIOInputStream::raw property instead.</doc-deprecated>
        <source-position filename="arrow-glib/input-stream.h" line="195"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="1074">The wrapped #GInputStream.</doc>
          <type name="Gio.InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="1072">A #GArrowGIOInputStream.</doc>
            <type name="GIOInputStream" c:type="GArrowGIOInputStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="raw"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_raw">
        <type name="Gio.InputStream"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="SeekableInputStream" c:type="GArrowSeekableInputStream"/>
      </field>
    </class>
    <record name="GIOInputStreamClass"
            c:type="GArrowGIOInputStreamClass"
            glib:is-gtype-struct-for="GIOInputStream">
      <source-position filename="arrow-glib/input-stream.h" line="186"/>
      <field name="parent_class">
        <type name="SeekableInputStreamClass"
              c:type="GArrowSeekableInputStreamClass"/>
      </field>
    </record>
    <class name="GIOOutputStream"
           c:symbol-prefix="gio_output_stream"
           c:type="GArrowGIOOutputStream"
           parent="OutputStream"
           glib:type-name="GArrowGIOOutputStream"
           glib:get-type="garrow_gio_output_stream_get_type"
           glib:type-struct="GIOOutputStreamClass">
      <doc xml:space="preserve"
           filename="arrow-glib/output-stream.h"
           line="183">It's an output stream for `GOutputStream`.</doc>
      <source-position filename="arrow-glib/output-stream.h" line="198"/>
      <implements name="File"/>
      <implements name="Writable"/>
      <constructor name="new" c:identifier="garrow_gio_output_stream_new">
        <source-position filename="arrow-glib/output-stream.h" line="203"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="530">A newly created #GArrowGIOOutputStream.</doc>
          <type name="GIOOutputStream" c:type="GArrowGIOOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="gio_output_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="528">The stream to be output.</doc>
            <type name="Gio.OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_raw"
              c:identifier="garrow_gio_output_stream_get_raw"
              glib:get-property="raw"
              version="0.5.0"
              deprecated="1"
              deprecated-version="0.12.0">
        <doc-deprecated xml:space="preserve">Use GArrowGIOOutputStream::raw property instead.</doc-deprecated>
        <source-position filename="arrow-glib/output-stream.h" line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="549">The wrapped #GOutputStream.</doc>
          <type name="Gio.OutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="output_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="547">A #GArrowGIOOutputStream.</doc>
            <type name="GIOOutputStream" c:type="GArrowGIOOutputStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="raw"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_raw">
        <type name="Gio.OutputStream"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="OutputStream" c:type="GArrowOutputStream"/>
      </field>
    </class>
    <record name="GIOOutputStreamClass"
            c:type="GArrowGIOOutputStreamClass"
            glib:is-gtype-struct-for="GIOOutputStream">
      <source-position filename="arrow-glib/output-stream.h" line="198"/>
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GArrowOutputStreamClass"/>
      </field>
    </record>
    <function-macro name="GIO_INPUT_STREAM"
                    c:identifier="GARROW_GIO_INPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/input-stream.h" line="143"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GIO_INPUT_STREAM_CLASS"
                    c:identifier="GARROW_GIO_INPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/input-stream.h" line="147"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GIO_INPUT_STREAM_GET_CLASS"
                    c:identifier="GARROW_GIO_INPUT_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/input-stream.h" line="157"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GIO_OUTPUT_STREAM"
                    c:identifier="GARROW_GIO_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="156"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GIO_OUTPUT_STREAM_CLASS"
                    c:identifier="GARROW_GIO_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="160"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GIO_OUTPUT_STREAM_GET_CLASS"
                    c:identifier="GARROW_GIO_OUTPUT_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="170"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="HDFSFileSystem"
           c:symbol-prefix="hdfs_file_system"
           c:type="GArrowHDFSFileSystem"
           parent="FileSystem"
           glib:type-name="GArrowHDFSFileSystem"
           glib:get-type="garrow_hdfs_file_system_get_type"
           glib:type-struct="HDFSFileSystemClass">
      <source-position filename="arrow-glib/file-system.h" line="268"/>
      <field name="parent_instance">
        <type name="FileSystem" c:type="GArrowFileSystem"/>
      </field>
    </class>
    <record name="HDFSFileSystemClass"
            c:type="GArrowHDFSFileSystemClass"
            glib:is-gtype-struct-for="HDFSFileSystem">
      <source-position filename="arrow-glib/file-system.h" line="268"/>
      <field name="parent_class">
        <type name="FileSystemClass" c:type="GArrowFileSystemClass"/>
      </field>
    </record>
    <class name="HalfFloatArray"
           c:symbol-prefix="half_float_array"
           c:type="GArrowHalfFloatArray"
           parent="NumericArray"
           glib:type-name="GArrowHalfFloatArray"
           glib:get-type="garrow_half_float_array_get_type"
           glib:type-struct="HalfFloatArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="357"/>
      <constructor name="new"
                   c:identifier="garrow_half_float_array_new"
                   version="11.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="362"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1873">A newly created #GArrowHalfFloatArray.</doc>
          <type name="HalfFloatArray" c:type="GArrowHalfFloatArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1864">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1865">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1866">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1870">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_half_float_array_get_value"
              version="11.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="369"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1895">The @i-th value.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1892">A #GArrowHalfFloatArray.</doc>
            <type name="HalfFloatArray" c:type="GArrowHalfFloatArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1893">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_half_float_array_get_values"
              version="11.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="373"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1912">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const guint16*">
            <type name="guint16" c:type="guint16"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1909">A #GArrowHalfFloatArray.</doc>
            <type name="HalfFloatArray" c:type="GArrowHalfFloatArray*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1910">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="HalfFloatArrayBuilder"
           c:symbol-prefix="half_float_array_builder"
           c:type="GArrowHalfFloatArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowHalfFloatArrayBuilder"
           glib:get-type="garrow_half_float_array_builder_get_type"
           glib:type-struct="HalfFloatArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="568"/>
      <constructor name="new"
                   c:identifier="garrow_half_float_array_builder_new"
                   version="11.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="572"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2658">A newly created #GArrowHalfFloatArrayBuilder.</doc>
          <type name="HalfFloatArrayBuilder"
                c:type="GArrowHalfFloatArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_value"
              c:identifier="garrow_half_float_array_builder_append_value"
              version="11.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="576"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2677">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2673">A #GArrowHalfFloatArrayBuilder.</doc>
            <type name="HalfFloatArrayBuilder"
                  c:type="GArrowHalfFloatArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2674">A 16-bit float value.</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_half_float_array_builder_append_values"
              version="11.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2694">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="581"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2709">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2696">A #GArrowHalfFloatArrayBuilder.</doc>
            <type name="HalfFloatArrayBuilder"
                  c:type="GArrowHalfFloatArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2697">The array of 16-bit float.</doc>
            <array length="1" zero-terminated="0" c:type="const guint16*">
              <type name="guint16" c:type="guint16"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2698">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2699">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2703">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="HalfFloatArrayBuilderClass"
            c:type="GArrowHalfFloatArrayBuilderClass"
            glib:is-gtype-struct-for="HalfFloatArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="568"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="HalfFloatArrayClass"
            c:type="GArrowHalfFloatArrayClass"
            glib:is-gtype-struct-for="HalfFloatArray">
      <source-position filename="arrow-glib/basic-array.h" line="357"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="HalfFloatDataType"
           c:symbol-prefix="half_float_data_type"
           c:type="GArrowHalfFloatDataType"
           parent="FloatingPointDataType"
           glib:type-name="GArrowHalfFloatDataType"
           glib:get-type="garrow_half_float_data_type_get_type"
           glib:type-struct="HalfFloatDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="266"/>
      <constructor name="new"
                   c:identifier="garrow_half_float_data_type_new"
                   version="11.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="269"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="766">The newly created half float data type.</doc>
          <type name="HalfFloatDataType" c:type="GArrowHalfFloatDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="FloatingPointDataType"
              c:type="GArrowFloatingPointDataType"/>
      </field>
    </class>
    <record name="HalfFloatDataTypeClass"
            c:type="GArrowHalfFloatDataTypeClass"
            glib:is-gtype-struct-for="HalfFloatDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="266"/>
      <field name="parent_class">
        <type name="FloatingPointDataTypeClass"
              c:type="GArrowFloatingPointDataTypeClass"/>
      </field>
    </record>
    <class name="HalfFloatScalar"
           c:symbol-prefix="half_float_scalar"
           c:type="GArrowHalfFloatScalar"
           parent="Scalar"
           glib:type-name="GArrowHalfFloatScalar"
           glib:get-type="garrow_half_float_scalar_get_type"
           glib:type-struct="HalfFloatScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="268"/>
      <constructor name="new"
                   c:identifier="garrow_half_float_scalar_new"
                   version="11.0.0">
        <source-position filename="arrow-glib/scalar.h" line="272"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="893">A newly created #GArrowHalfFloatScalar.</doc>
          <type name="HalfFloatScalar" c:type="GArrowHalfFloatScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="891">The value of this scalar.</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_half_float_scalar_get_value"
              version="11.0.0">
        <source-position filename="arrow-glib/scalar.h" line="275"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="910">The value of this scalar.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="908">A #GArrowHalfFloatScalar.</doc>
            <type name="HalfFloatScalar" c:type="GArrowHalfFloatScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="HalfFloatScalarClass"
            c:type="GArrowHalfFloatScalarClass"
            glib:is-gtype-struct-for="HalfFloatScalar">
      <source-position filename="arrow-glib/scalar.h" line="268"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="HashJoinNodeOptions"
           c:symbol-prefix="hash_join_node_options"
           c:type="GArrowHashJoinNodeOptions"
           parent="ExecuteNodeOptions"
           glib:type-name="GArrowHashJoinNodeOptions"
           glib:get-type="garrow_hash_join_node_options_get_type"
           glib:type-struct="HashJoinNodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="287"/>
      <constructor name="new"
                   c:identifier="garrow_hash_join_node_options_new"
                   version="7.0.0"
                   throws="1">
        <source-position filename="arrow-glib/compute.h" line="291"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1585">A newly created #GArrowHashJoinNodeOptions on success,
  %NULL otherwise.</doc>
          <type name="HashJoinNodeOptions"
                c:type="GArrowHashJoinNodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1578">A #GArrowJoinType to be used.</doc>
            <type name="JoinType" c:type="GArrowJoinType"/>
          </parameter>
          <parameter name="left_keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1579">Left join keys.</doc>
            <array length="2" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_left_keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1580">The number of @left_keys.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="right_keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1581">Right join keys.</doc>
            <array length="4" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_right_keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1582">The number of @right_keys.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_left_outputs"
              c:identifier="garrow_hash_join_node_options_set_left_outputs"
              version="7.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="299"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1634">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1629">A #GArrowHashJoinNodeOptions.</doc>
            <type name="HashJoinNodeOptions"
                  c:type="GArrowHashJoinNodeOptions*"/>
          </instance-parameter>
          <parameter name="outputs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1630">Output fields.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_outputs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1631">The number of @outputs.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_right_outputs"
              c:identifier="garrow_hash_join_node_options_set_right_outputs"
              version="7.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="306"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1669">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1664">A #GArrowHashJoinNodeOptions.</doc>
            <type name="HashJoinNodeOptions"
                  c:type="GArrowHashJoinNodeOptions*"/>
          </instance-parameter>
          <parameter name="outputs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1665">Output fields.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_outputs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1666">The number of @outputs.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ExecuteNodeOptions" c:type="GArrowExecuteNodeOptions"/>
      </field>
    </class>
    <record name="HashJoinNodeOptionsClass"
            c:type="GArrowHashJoinNodeOptionsClass"
            glib:is-gtype-struct-for="HashJoinNodeOptions">
      <source-position filename="arrow-glib/compute.h" line="287"/>
      <field name="parent_class">
        <type name="ExecuteNodeOptionsClass"
              c:type="GArrowExecuteNodeOptionsClass"/>
      </field>
    </record>
    <function-macro name="IS_BUFFER_OUTPUT_STREAM"
                    c:identifier="GARROW_IS_BUFFER_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="116"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUFFER_OUTPUT_STREAM_CLASS"
                    c:identifier="GARROW_IS_BUFFER_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="119"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FILE_OUTPUT_STREAM"
                    c:identifier="GARROW_IS_FILE_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="66"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FILE_OUTPUT_STREAM_CLASS"
                    c:identifier="GARROW_IS_FILE_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="69"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GIO_INPUT_STREAM"
                    c:identifier="GARROW_IS_GIO_INPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/input-stream.h" line="151"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GIO_INPUT_STREAM_CLASS"
                    c:identifier="GARROW_IS_GIO_INPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/input-stream.h" line="154"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GIO_OUTPUT_STREAM"
                    c:identifier="GARROW_IS_GIO_OUTPUT_STREAM"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="164"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GIO_OUTPUT_STREAM_CLASS"
                    c:identifier="GARROW_IS_GIO_OUTPUT_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/output-stream.h" line="167"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_FILE_READER"
                    c:identifier="GARROW_IS_RECORD_BATCH_FILE_READER"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="164"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_FILE_READER_CLASS"
                    c:identifier="GARROW_IS_RECORD_BATCH_FILE_READER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="167"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_FILE_WRITER"
                    c:identifier="GARROW_IS_RECORD_BATCH_FILE_WRITER"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="148"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_FILE_WRITER_CLASS"
                    c:identifier="GARROW_IS_RECORD_BATCH_FILE_WRITER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="151"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_STREAM_READER"
                    c:identifier="GARROW_IS_RECORD_BATCH_STREAM_READER"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="114"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_STREAM_READER_CLASS"
                    c:identifier="GARROW_IS_RECORD_BATCH_STREAM_READER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="117"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_STREAM_WRITER"
                    c:identifier="GARROW_IS_RECORD_BATCH_STREAM_WRITER"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="97"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_STREAM_WRITER_CLASS"
                    c:identifier="GARROW_IS_RECORD_BATCH_STREAM_WRITER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="100"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_WRITER"
                    c:identifier="GARROW_IS_RECORD_BATCH_WRITER"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECORD_BATCH_WRITER_CLASS"
                    c:identifier="GARROW_IS_RECORD_BATCH_WRITER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="IndexOptions"
           c:symbol-prefix="index_options"
           c:type="GArrowIndexOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowIndexOptions"
           glib:get-type="garrow_index_options_get_type"
           glib:type-struct="IndexOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="838"/>
      <constructor name="new"
                   c:identifier="garrow_index_options_new"
                   version="12.0.0">
        <source-position filename="arrow-glib/compute.h" line="842"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4451">A newly created #GArrowIndexOptions.</doc>
          <type name="IndexOptions" c:type="GArrowIndexOptions*"/>
        </return-value>
      </constructor>
      <property name="value"
                version="12.0.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4433">The value to be compared.</doc>
        <type name="Scalar"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="IndexOptionsClass"
            c:type="GArrowIndexOptionsClass"
            glib:is-gtype-struct-for="IndexOptions">
      <source-position filename="arrow-glib/compute.h" line="838"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="InputStream"
           c:symbol-prefix="input_stream"
           c:type="GArrowInputStream"
           parent="Gio.InputStream"
           glib:type-name="GArrowInputStream"
           glib:get-type="garrow_input_stream_get_type"
           glib:type-struct="InputStreamClass">
      <source-position filename="arrow-glib/input-stream.h" line="41"/>
      <implements name="File"/>
      <implements name="Readable"/>
      <method name="advance"
              c:identifier="garrow_input_stream_advance"
              version="0.11.0"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="244">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="240">A #GArrowInputStream.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </instance-parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="241">The number of bytes to be advanced.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="align"
              c:identifier="garrow_input_stream_align"
              version="0.11.0"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="265">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="260">A #GArrowInputStream.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </instance-parameter>
          <parameter name="alignment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="261">The byte multiple for the metadata prefix, usually 8
  or 64, to ensure the body starts on a multiple of that alignment.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_record_batch"
              c:identifier="garrow_input_stream_read_record_batch"
              version="1.0.0"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="53"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="311">
  #GArrowRecordBatch on success, %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="306">A #GArrowInputStream.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </instance-parameter>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="307">A #GArrowSchema for a read record batch.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="308">A #GArrowReadOptions.</doc>
            <type name="ReadOptions" c:type="GArrowReadOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_tensor"
              c:identifier="garrow_input_stream_read_tensor"
              version="0.11.0"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="49"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="285">
  #GArrowTensor on success, %NULL on error.</doc>
          <type name="Tensor" c:type="GArrowTensor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="282">A #GArrowInputStream.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="input-stream"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="Gio.InputStream" c:type="GInputStream"/>
      </field>
    </class>
    <record name="InputStreamClass"
            c:type="GArrowInputStreamClass"
            glib:is-gtype-struct-for="InputStream">
      <source-position filename="arrow-glib/input-stream.h" line="41"/>
      <field name="parent_class">
        <type name="Gio.InputStreamClass" c:type="GInputStreamClass"/>
      </field>
    </record>
    <class name="Int16Array"
           c:symbol-prefix="int16_array"
           c:type="GArrowInt16Array"
           parent="NumericArray"
           glib:type-name="GArrowInt16Array"
           glib:get-type="garrow_int16_array_get_type"
           glib:type-struct="Int16ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="225"/>
      <constructor name="new"
                   c:identifier="garrow_int16_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="227"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1431">A newly created #GArrowInt16Array.</doc>
          <type name="Int16Array" c:type="GArrowInt16Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1422">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1423">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1424">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1428">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_int16_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="232"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1453">The @i-th value.</doc>
          <type name="gint16" c:type="gint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1450">A #GArrowInt16Array.</doc>
            <type name="Int16Array" c:type="GArrowInt16Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1451">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_int16_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="234"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1468">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint16*">
            <type name="gint16" c:type="gint16"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1465">A #GArrowInt16Array.</doc>
            <type name="Int16Array" c:type="GArrowInt16Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1466">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_int16_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="945"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5040">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5037">A #GArrowInt16Array.</doc>
            <type name="Int16Array" c:type="GArrowInt16Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Int16ArrayBuilder"
           c:symbol-prefix="int16_array_builder"
           c:type="GArrowInt16ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowInt16ArrayBuilder"
           glib:get-type="garrow_int16_array_builder_get_type"
           glib:type-struct="Int16ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="324"/>
      <constructor name="new" c:identifier="garrow_int16_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="326"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1757">A newly created #GArrowInt16ArrayBuilder.</doc>
          <type name="Int16ArrayBuilder" c:type="GArrowInt16ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_int16_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_int16_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="330"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1774">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1770">A #GArrowInt16ArrayBuilder.</doc>
            <type name="Int16ArrayBuilder" c:type="GArrowInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1771">A int16 value.</doc>
            <type name="gint16" c:type="gint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_int16_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="346"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1851">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1848">A #GArrowInt16ArrayBuilder.</doc>
            <type name="Int16ArrayBuilder" c:type="GArrowInt16ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_int16_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1863">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="349"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1872">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1865">A #GArrowInt16ArrayBuilder.</doc>
            <type name="Int16ArrayBuilder" c:type="GArrowInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1866">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_int16_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="335"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1793">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1789">A #GArrowInt16ArrayBuilder.</doc>
            <type name="Int16ArrayBuilder" c:type="GArrowInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1790">A int16 value.</doc>
            <type name="gint16" c:type="gint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_int16_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1809">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="338"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1824">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1811">A #GArrowInt16ArrayBuilder.</doc>
            <type name="Int16ArrayBuilder" c:type="GArrowInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1812">The array of int16.</doc>
            <array length="1" zero-terminated="0" c:type="const gint16*">
              <type name="gint16" c:type="gint16"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1813">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1814">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1818">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Int16ArrayBuilderClass"
            c:type="GArrowInt16ArrayBuilderClass"
            glib:is-gtype-struct-for="Int16ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="324"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Int16ArrayClass"
            c:type="GArrowInt16ArrayClass"
            glib:is-gtype-struct-for="Int16Array">
      <source-position filename="arrow-glib/basic-array.h" line="225"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Int16DataType"
           c:symbol-prefix="int16_data_type"
           c:type="GArrowInt16DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowInt16DataType"
           glib:get-type="garrow_int16_data_type_get_type"
           glib:type-struct="Int16DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="169"/>
      <constructor name="new" c:identifier="garrow_int16_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="171"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="559">The newly created 16-bit integer data type.</doc>
          <type name="Int16DataType" c:type="GArrowInt16DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="Int16DataTypeClass"
            c:type="GArrowInt16DataTypeClass"
            glib:is-gtype-struct-for="Int16DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="169"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="Int16Scalar"
           c:symbol-prefix="int16_scalar"
           c:type="GArrowInt16Scalar"
           parent="Scalar"
           glib:type-name="GArrowInt16Scalar"
           glib:get-type="garrow_int16_scalar_get_type"
           glib:type-struct="Int16ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="135"/>
      <constructor name="new"
                   c:identifier="garrow_int16_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="139"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="550">A newly created #GArrowInt16Scalar.</doc>
          <type name="Int16Scalar" c:type="GArrowInt16Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="548">The value of this scalar.</doc>
            <type name="gint16" c:type="gint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_int16_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="567">The value of this scalar.</doc>
          <type name="gint16" c:type="gint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="565">A #GArrowInt16Scalar.</doc>
            <type name="Int16Scalar" c:type="GArrowInt16Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Int16ScalarClass"
            c:type="GArrowInt16ScalarClass"
            glib:is-gtype-struct-for="Int16Scalar">
      <source-position filename="arrow-glib/scalar.h" line="135"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Int32Array"
           c:symbol-prefix="int32_array"
           c:type="GArrowInt32Array"
           parent="NumericArray"
           glib:type-name="GArrowInt32Array"
           glib:get-type="garrow_int32_array_get_type"
           glib:type-struct="Int32ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="269"/>
      <constructor name="new"
                   c:identifier="garrow_int32_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="271"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1577">A newly created #GArrowInt32Array.</doc>
          <type name="Int32Array" c:type="GArrowInt32Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1568">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1569">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1570">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1574">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_int32_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="276"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1599">The @i-th value.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1596">A #GArrowInt32Array.</doc>
            <type name="Int32Array" c:type="GArrowInt32Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1597">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_int32_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="278"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1614">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint32*">
            <type name="gint32" c:type="gint32"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1611">A #GArrowInt32Array.</doc>
            <type name="Int32Array" c:type="GArrowInt32Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1612">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_int32_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="951"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5080">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5077">A #GArrowInt32Array.</doc>
            <type name="Int32Array" c:type="GArrowInt32Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Int32ArrayBuilder"
           c:symbol-prefix="int32_array_builder"
           c:type="GArrowInt32ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowInt32ArrayBuilder"
           glib:get-type="garrow_int32_array_builder_get_type"
           glib:type-struct="Int32ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="405"/>
      <constructor name="new" c:identifier="garrow_int32_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="407"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2057">A newly created #GArrowInt32ArrayBuilder.</doc>
          <type name="Int32ArrayBuilder" c:type="GArrowInt32ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_int32_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_int32_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="411"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2074">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2070">A #GArrowInt32ArrayBuilder.</doc>
            <type name="Int32ArrayBuilder" c:type="GArrowInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2071">A int32 value.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_int32_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="427"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2151">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2148">A #GArrowInt32ArrayBuilder.</doc>
            <type name="Int32ArrayBuilder" c:type="GArrowInt32ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_int32_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2163">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="430"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2172">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2165">A #GArrowInt32ArrayBuilder.</doc>
            <type name="Int32ArrayBuilder" c:type="GArrowInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2166">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_int32_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="416"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2093">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2089">A #GArrowInt32ArrayBuilder.</doc>
            <type name="Int32ArrayBuilder" c:type="GArrowInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2090">A int32 value.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_int32_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2109">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="419"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2124">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2111">A #GArrowInt32ArrayBuilder.</doc>
            <type name="Int32ArrayBuilder" c:type="GArrowInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2112">The array of int32.</doc>
            <array length="1" zero-terminated="0" c:type="const gint32*">
              <type name="gint32" c:type="gint32"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2113">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2114">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2118">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Int32ArrayBuilderClass"
            c:type="GArrowInt32ArrayBuilderClass"
            glib:is-gtype-struct-for="Int32ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="405"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Int32ArrayClass"
            c:type="GArrowInt32ArrayClass"
            glib:is-gtype-struct-for="Int32Array">
      <source-position filename="arrow-glib/basic-array.h" line="269"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Int32DataType"
           c:symbol-prefix="int32_data_type"
           c:type="GArrowInt32DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowInt32DataType"
           glib:get-type="garrow_int32_data_type_get_type"
           glib:type-struct="Int32DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="197"/>
      <constructor name="new" c:identifier="garrow_int32_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="199"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="623">The newly created 32-bit integer data type.</doc>
          <type name="Int32DataType" c:type="GArrowInt32DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="Int32DataTypeClass"
            c:type="GArrowInt32DataTypeClass"
            glib:is-gtype-struct-for="Int32DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="197"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="Int32Scalar"
           c:symbol-prefix="int32_scalar"
           c:type="GArrowInt32Scalar"
           parent="Scalar"
           glib:type-name="GArrowInt32Scalar"
           glib:get-type="garrow_int32_scalar_get_type"
           glib:type-struct="Int32ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="154"/>
      <constructor name="new"
                   c:identifier="garrow_int32_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="158"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="599">A newly created #GArrowInt32Scalar.</doc>
          <type name="Int32Scalar" c:type="GArrowInt32Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="597">The value of this scalar.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_int32_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="616">The value of this scalar.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="614">A #GArrowInt32Scalar.</doc>
            <type name="Int32Scalar" c:type="GArrowInt32Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Int32ScalarClass"
            c:type="GArrowInt32ScalarClass"
            glib:is-gtype-struct-for="Int32Scalar">
      <source-position filename="arrow-glib/scalar.h" line="154"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Int64Array"
           c:symbol-prefix="int64_array"
           c:type="GArrowInt64Array"
           parent="NumericArray"
           glib:type-name="GArrowInt64Array"
           glib:get-type="garrow_int64_array_get_type"
           glib:type-struct="Int64ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="313"/>
      <constructor name="new"
                   c:identifier="garrow_int64_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="315"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1723">A newly created #GArrowInt64Array.</doc>
          <type name="Int64Array" c:type="GArrowInt64Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1714">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1715">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1716">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1720">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_int64_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="320"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1745">The @i-th value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1742">A #GArrowInt64Array.</doc>
            <type name="Int64Array" c:type="GArrowInt64Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1743">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_int64_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="322"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1760">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1757">A #GArrowInt64Array.</doc>
            <type name="Int64Array" c:type="GArrowInt64Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1758">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_int64_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="957"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5120">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5117">A #GArrowInt64Array.</doc>
            <type name="Int64Array" c:type="GArrowInt64Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Int64ArrayBuilder"
           c:symbol-prefix="int64_array_builder"
           c:type="GArrowInt64ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowInt64ArrayBuilder"
           glib:get-type="garrow_int64_array_builder_get_type"
           glib:type-struct="Int64ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="486"/>
      <constructor name="new" c:identifier="garrow_int64_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="488"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2357">A newly created #GArrowInt64ArrayBuilder.</doc>
          <type name="Int64ArrayBuilder" c:type="GArrowInt64ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_int64_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_int64_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="492"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2374">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2370">A #GArrowInt64ArrayBuilder.</doc>
            <type name="Int64ArrayBuilder" c:type="GArrowInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2371">A int64 value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_int64_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="508"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2451">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2448">A #GArrowInt64ArrayBuilder.</doc>
            <type name="Int64ArrayBuilder" c:type="GArrowInt64ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_int64_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2463">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="511"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2472">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2465">A #GArrowInt64ArrayBuilder.</doc>
            <type name="Int64ArrayBuilder" c:type="GArrowInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2466">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_int64_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="497"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2393">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2389">A #GArrowInt64ArrayBuilder.</doc>
            <type name="Int64ArrayBuilder" c:type="GArrowInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2390">A int64 value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_int64_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2409">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="500"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2424">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2411">A #GArrowInt64ArrayBuilder.</doc>
            <type name="Int64ArrayBuilder" c:type="GArrowInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2412">The array of int64.</doc>
            <array length="1" zero-terminated="0" c:type="const gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2413">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2414">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2418">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Int64ArrayBuilderClass"
            c:type="GArrowInt64ArrayBuilderClass"
            glib:is-gtype-struct-for="Int64ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="486"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Int64ArrayClass"
            c:type="GArrowInt64ArrayClass"
            glib:is-gtype-struct-for="Int64Array">
      <source-position filename="arrow-glib/basic-array.h" line="313"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Int64DataType"
           c:symbol-prefix="int64_data_type"
           c:type="GArrowInt64DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowInt64DataType"
           glib:get-type="garrow_int64_data_type_get_type"
           glib:type-struct="Int64DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="225"/>
      <constructor name="new" c:identifier="garrow_int64_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="227"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="687">The newly created 64-bit integer data type.</doc>
          <type name="Int64DataType" c:type="GArrowInt64DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="Int64DataTypeClass"
            c:type="GArrowInt64DataTypeClass"
            glib:is-gtype-struct-for="Int64DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="225"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="Int64Scalar"
           c:symbol-prefix="int64_scalar"
           c:type="GArrowInt64Scalar"
           parent="Scalar"
           glib:type-name="GArrowInt64Scalar"
           glib:get-type="garrow_int64_scalar_get_type"
           glib:type-struct="Int64ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="173"/>
      <constructor name="new"
                   c:identifier="garrow_int64_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="177"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="648">A newly created #GArrowInt64Scalar.</doc>
          <type name="Int64Scalar" c:type="GArrowInt64Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="646">The value of this scalar.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_int64_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="665">The value of this scalar.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="663">A #GArrowInt64Scalar.</doc>
            <type name="Int64Scalar" c:type="GArrowInt64Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Int64ScalarClass"
            c:type="GArrowInt64ScalarClass"
            glib:is-gtype-struct-for="Int64Scalar">
      <source-position filename="arrow-glib/scalar.h" line="173"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Int8Array"
           c:symbol-prefix="int8_array"
           c:type="GArrowInt8Array"
           parent="NumericArray"
           glib:type-name="GArrowInt8Array"
           glib:get-type="garrow_int8_array_get_type"
           glib:type-struct="Int8ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="181"/>
      <constructor name="new"
                   c:identifier="garrow_int8_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="183"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1286">A newly created #GArrowInt8Array.</doc>
          <type name="Int8Array" c:type="GArrowInt8Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1277">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1278">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1279">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1283">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_int8_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1308">The @i-th value.</doc>
          <type name="gint8" c:type="gint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1305">A #GArrowInt8Array.</doc>
            <type name="Int8Array" c:type="GArrowInt8Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1306">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_int8_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1323">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint8*">
            <type name="gint8" c:type="gint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1320">A #GArrowInt8Array.</doc>
            <type name="Int8Array" c:type="GArrowInt8Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1321">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_int8_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="939"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5000">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4997">A #GArrowInt8Array.</doc>
            <type name="Int8Array" c:type="GArrowInt8Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Int8ArrayBuilder"
           c:symbol-prefix="int8_array_builder"
           c:type="GArrowInt8ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowInt8ArrayBuilder"
           glib:get-type="garrow_int8_array_builder_get_type"
           glib:type-struct="Int8ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="244"/>
      <constructor name="new" c:identifier="garrow_int8_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="246"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1457">A newly created #GArrowInt8ArrayBuilder.</doc>
          <type name="Int8ArrayBuilder" c:type="GArrowInt8ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_int8_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_int8_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="250"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1474">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1470">A #GArrowInt8ArrayBuilder.</doc>
            <type name="Int8ArrayBuilder" c:type="GArrowInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1471">A int8 value.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_int8_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="266"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1551">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1548">A #GArrowInt8ArrayBuilder.</doc>
            <type name="Int8ArrayBuilder" c:type="GArrowInt8ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_int8_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1563">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="269"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1572">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1565">A #GArrowInt8ArrayBuilder.</doc>
            <type name="Int8ArrayBuilder" c:type="GArrowInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1566">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_int8_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="255"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1493">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1489">A #GArrowInt8ArrayBuilder.</doc>
            <type name="Int8ArrayBuilder" c:type="GArrowInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1490">A int8 value.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_int8_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1509">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="258"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1524">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1511">A #GArrowInt8ArrayBuilder.</doc>
            <type name="Int8ArrayBuilder" c:type="GArrowInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1512">The array of int8.</doc>
            <array length="1" zero-terminated="0" c:type="const gint8*">
              <type name="gint8" c:type="gint8"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1513">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1514">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1518">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Int8ArrayBuilderClass"
            c:type="GArrowInt8ArrayBuilderClass"
            glib:is-gtype-struct-for="Int8ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="244"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Int8ArrayClass"
            c:type="GArrowInt8ArrayClass"
            glib:is-gtype-struct-for="Int8Array">
      <source-position filename="arrow-glib/basic-array.h" line="181"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Int8DataType"
           c:symbol-prefix="int8_data_type"
           c:type="GArrowInt8DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowInt8DataType"
           glib:get-type="garrow_int8_data_type_get_type"
           glib:type-struct="Int8DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="141"/>
      <constructor name="new" c:identifier="garrow_int8_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="143"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="495">The newly created 8-bit integer data type.</doc>
          <type name="Int8DataType" c:type="GArrowInt8DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="Int8DataTypeClass"
            c:type="GArrowInt8DataTypeClass"
            glib:is-gtype-struct-for="Int8DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="141"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="Int8Scalar"
           c:symbol-prefix="int8_scalar"
           c:type="GArrowInt8Scalar"
           parent="Scalar"
           glib:type-name="GArrowInt8Scalar"
           glib:get-type="garrow_int8_scalar_get_type"
           glib:type-struct="Int8ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="116"/>
      <constructor name="new"
                   c:identifier="garrow_int8_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="120"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="501">A newly created #GArrowInt8Scalar.</doc>
          <type name="Int8Scalar" c:type="GArrowInt8Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="499">The value of this scalar.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_int8_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="518">The value of this scalar.</doc>
          <type name="gint8" c:type="gint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="516">A #GArrowInt8Scalar.</doc>
            <type name="Int8Scalar" c:type="GArrowInt8Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Int8ScalarClass"
            c:type="GArrowInt8ScalarClass"
            glib:is-gtype-struct-for="Int8Scalar">
      <source-position filename="arrow-glib/scalar.h" line="116"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="IntArrayBuilder"
           c:symbol-prefix="int_array_builder"
           c:type="GArrowIntArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowIntArrayBuilder"
           glib:get-type="garrow_int_array_builder_get_type"
           glib:type-struct="IntArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="164"/>
      <constructor name="new"
                   c:identifier="garrow_int_array_builder_new"
                   version="0.6.0">
        <source-position filename="arrow-glib/array-builder.h" line="166"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1139">A newly created #GArrowIntArrayBuilder.</doc>
          <type name="IntArrayBuilder" c:type="GArrowIntArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_int_array_builder_append"
              version="0.6.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_int_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1161">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1157">A #GArrowIntArrayBuilder.</doc>
            <type name="IntArrayBuilder" c:type="GArrowIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1158">A int value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_int_array_builder_append_null"
              version="0.6.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="186"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1240">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1237">A #GArrowIntArrayBuilder.</doc>
            <type name="IntArrayBuilder" c:type="GArrowIntArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_int_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1254">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1263">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1256">A #GArrowIntArrayBuilder.</doc>
            <type name="IntArrayBuilder" c:type="GArrowIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1257">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_int_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="175"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1182">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1178">A #GArrowIntArrayBuilder.</doc>
            <type name="IntArrayBuilder" c:type="GArrowIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1179">A int value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_int_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1198">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1213">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1200">A #GArrowIntArrayBuilder.</doc>
            <type name="IntArrayBuilder" c:type="GArrowIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1201">The array of int.</doc>
            <array length="1" zero-terminated="0" c:type="const gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1202">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1203">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1207">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="IntArrayBuilderClass"
            c:type="GArrowIntArrayBuilderClass"
            glib:is-gtype-struct-for="IntArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="164"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <class name="IntegerDataType"
           c:symbol-prefix="integer_data_type"
           c:type="GArrowIntegerDataType"
           parent="NumericDataType"
           abstract="1"
           glib:type-name="GArrowIntegerDataType"
           glib:get-type="garrow_integer_data_type_get_type"
           glib:type-struct="IntegerDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="127"/>
      <method name="is_signed"
              c:identifier="garrow_integer_data_type_is_signed"
              version="0.16.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="464">%TRUE if the data type is signed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="462">A #GArrowIntegerDataType.</doc>
            <type name="IntegerDataType" c:type="GArrowIntegerDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericDataType" c:type="GArrowNumericDataType"/>
      </field>
    </class>
    <record name="IntegerDataTypeClass"
            c:type="GArrowIntegerDataTypeClass"
            glib:is-gtype-struct-for="IntegerDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="127"/>
      <field name="parent_class">
        <type name="NumericDataTypeClass" c:type="GArrowNumericDataTypeClass"/>
      </field>
    </record>
    <class name="IntervalDataType"
           c:symbol-prefix="interval_data_type"
           c:type="GArrowIntervalDataType"
           parent="TemporalDataType"
           abstract="1"
           glib:type-name="GArrowIntervalDataType"
           glib:get-type="garrow_interval_data_type_get_type"
           glib:type-struct="IntervalDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="486"/>
      <method name="get_interval_type"
              c:identifier="garrow_interval_data_type_get_interval_type"
              version="7.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="490"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1358">The interval type of the given @type.</doc>
          <type name="IntervalType" c:type="GArrowIntervalType"/>
        </return-value>
        <parameters>
          <instance-parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1356">The #GArrowIntervalDataType.</doc>
            <type name="IntervalDataType" c:type="GArrowIntervalDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="TimeDataType" c:type="GArrowTimeDataType"/>
      </field>
    </class>
    <record name="IntervalDataTypeClass"
            c:type="GArrowIntervalDataTypeClass"
            glib:is-gtype-struct-for="IntervalDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="486"/>
      <field name="parent_class">
        <type name="TimeDataTypeClass" c:type="GArrowTimeDataTypeClass"/>
      </field>
    </record>
    <enumeration name="IntervalType"
                 glib:type-name="GArrowIntervalType"
                 glib:get-type="garrow_interval_type_get_type"
                 c:type="GArrowIntervalType">
      <doc xml:space="preserve"
           filename="arrow-glib/type.h"
           line="133">They are corresponding to `arrow::IntervalType::type` values.

Since 7.0.0</doc>
      <member name="month"
              value="0"
              c:identifier="GARROW_INTERVAL_TYPE_MONTH"
              glib:nick="month"
              glib:name="GARROW_INTERVAL_TYPE_MONTH">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="135">A number of months.</doc>
      </member>
      <member name="day_time"
              value="1"
              c:identifier="GARROW_INTERVAL_TYPE_DAY_TIME"
              glib:nick="day-time"
              glib:name="GARROW_INTERVAL_TYPE_DAY_TIME">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="136">A number of days and
  milliseconds (fraction of day).</doc>
      </member>
      <member name="month_day_nano"
              value="2"
              c:identifier="GARROW_INTERVAL_TYPE_MONTH_DAY_NANO"
              glib:nick="month-day-nano"
              glib:name="GARROW_INTERVAL_TYPE_MONTH_DAY_NANO">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="138">A number of months, days and
  nanoseconds between two dates.</doc>
      </member>
    </enumeration>
    <class name="JSONReadOptions"
           c:symbol-prefix="json_read_options"
           c:type="GArrowJSONReadOptions"
           parent="GObject.Object"
           glib:type-name="GArrowJSONReadOptions"
           glib:get-type="garrow_json_read_options_get_type"
           glib:type-struct="JSONReadOptionsClass">
      <source-position filename="arrow-glib/reader.h" line="367"/>
      <constructor name="new"
                   c:identifier="garrow_json_read_options_new"
                   version="0.14.0">
        <source-position filename="arrow-glib/reader.h" line="370"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="2066">A newly created #GArrowJSONReadOptions.</doc>
          <type name="JSONReadOptions" c:type="GArrowJSONReadOptions*"/>
        </return-value>
      </constructor>
      <property name="allow-newlines-in-values"
                version="0.14.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="2010">Whether objects may be printed across multiple lines (for example pretty printed).
if %FALSE, input must end with an empty line.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="block-size"
                version="0.14.0"
                writable="1"
                transfer-ownership="none"
                default-value="1048576">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1986">Block size we request from the IO layer; also determines the size
of chunks when #GArrowJSONReadOptions:use-threads is %TRUE.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="schema"
                version="0.14.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="2046">Schema for passing custom conversion rules.</doc>
        <type name="Schema"/>
      </property>
      <property name="unexpected-field-behavior"
                version="0.14.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_JSON_READ_INFER_TYPE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="2029">How to parse handle fields outside the explicit schema.</doc>
        <type name="JSONReadUnexpectedFieldBehavior"/>
      </property>
      <property name="use-threads"
                version="0.14.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="1970">Whether to use the global CPU thread pool.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="JSONReadOptionsClass"
            c:type="GArrowJSONReadOptionsClass"
            glib:is-gtype-struct-for="JSONReadOptions">
      <source-position filename="arrow-glib/reader.h" line="367"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="JSONReadUnexpectedFieldBehavior"
                 glib:type-name="GArrowJSONReadUnexpectedFieldBehavior"
                 glib:get-type="garrow_json_read_unexpected_field_behavior_get_type"
                 c:type="GArrowJSONReadUnexpectedFieldBehavior">
      <doc xml:space="preserve"
           filename="arrow-glib/reader.h"
           line="344">They are corresponding to `arrow::json::UnexpectedFieldBehavior` values.</doc>
      <member name="ignore"
              value="0"
              c:identifier="GARROW_JSON_READ_IGNORE"
              glib:nick="ignore"
              glib:name="GARROW_JSON_READ_IGNORE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.h"
             line="346">Ignore other fields.</doc>
      </member>
      <member name="error"
              value="1"
              c:identifier="GARROW_JSON_READ_ERROR"
              glib:nick="error"
              glib:name="GARROW_JSON_READ_ERROR">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.h"
             line="347">Return error.</doc>
      </member>
      <member name="infer_type"
              value="2"
              c:identifier="GARROW_JSON_READ_INFER_TYPE"
              glib:nick="infer-type"
              glib:name="GARROW_JSON_READ_INFER_TYPE">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.h"
             line="348">Infer a type.</doc>
      </member>
    </enumeration>
    <class name="JSONReader"
           c:symbol-prefix="json_reader"
           c:type="GArrowJSONReader"
           parent="GObject.Object"
           glib:type-name="GArrowJSONReader"
           glib:get-type="garrow_json_reader_get_type"
           glib:type-struct="JSONReaderClass">
      <source-position filename="arrow-glib/reader.h" line="381"/>
      <constructor name="new"
                   c:identifier="garrow_json_reader_new"
                   version="0.14.0"
                   throws="1">
        <source-position filename="arrow-glib/reader.h" line="384"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="2202">A newly created #GArrowJSONReader or %NULL on error.</doc>
          <type name="JSONReader" c:type="GArrowJSONReader*"/>
        </return-value>
        <parameters>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="2198">The input to be read.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="2199">A #GArrowJSONReadOptions.</doc>
            <type name="JSONReadOptions" c:type="GArrowJSONReadOptions*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="read"
              c:identifier="garrow_json_reader_read"
              version="0.14.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="388"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="2240">A read #GArrowTable or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="2237">A #GArrowJSONReader.</doc>
            <type name="JSONReader" c:type="GArrowJSONReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="input"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InputStream"/>
      </property>
      <property name="json-table-reader"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="JSONReaderClass"
            c:type="GArrowJSONReaderClass"
            glib:is-gtype-struct-for="JSONReader">
      <source-position filename="arrow-glib/reader.h" line="381"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="JoinType"
                 version="7.0.0"
                 glib:type-name="GArrowJoinType"
                 glib:get-type="garrow_join_type_get_type"
                 c:type="GArrowJoinType">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="251">They correspond to the values of `arrow::compute::JoinType`.</doc>
      <member name="left_semi"
              value="0"
              c:identifier="GARROW_JOIN_TYPE_LEFT_SEMI"
              glib:nick="left-semi"
              glib:name="GARROW_JOIN_TYPE_LEFT_SEMI">
      </member>
      <member name="right_semi"
              value="1"
              c:identifier="GARROW_JOIN_TYPE_RIGHT_SEMI"
              glib:nick="right-semi"
              glib:name="GARROW_JOIN_TYPE_RIGHT_SEMI">
      </member>
      <member name="left_anti"
              value="2"
              c:identifier="GARROW_JOIN_TYPE_LEFT_ANTI"
              glib:nick="left-anti"
              glib:name="GARROW_JOIN_TYPE_LEFT_ANTI">
      </member>
      <member name="right_anti"
              value="3"
              c:identifier="GARROW_JOIN_TYPE_RIGHT_ANTI"
              glib:nick="right-anti"
              glib:name="GARROW_JOIN_TYPE_RIGHT_ANTI">
      </member>
      <member name="inner"
              value="4"
              c:identifier="GARROW_JOIN_TYPE_INNER"
              glib:nick="inner"
              glib:name="GARROW_JOIN_TYPE_INNER">
      </member>
      <member name="left_outer"
              value="5"
              c:identifier="GARROW_JOIN_TYPE_LEFT_OUTER"
              glib:nick="left-outer"
              glib:name="GARROW_JOIN_TYPE_LEFT_OUTER">
      </member>
      <member name="right_outer"
              value="6"
              c:identifier="GARROW_JOIN_TYPE_RIGHT_OUTER"
              glib:nick="right-outer"
              glib:name="GARROW_JOIN_TYPE_RIGHT_OUTER">
      </member>
      <member name="full_outer"
              value="7"
              c:identifier="GARROW_JOIN_TYPE_FULL_OUTER"
              glib:nick="full-outer"
              glib:name="GARROW_JOIN_TYPE_FULL_OUTER">
      </member>
    </enumeration>
    <class name="LargeBinaryArray"
           c:symbol-prefix="large_binary_array"
           c:type="GArrowLargeBinaryArray"
           parent="Array"
           glib:type-name="GArrowLargeBinaryArray"
           glib:get-type="garrow_large_binary_array_get_type"
           glib:type-struct="LargeBinaryArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="458"/>
      <constructor name="new"
                   c:identifier="garrow_large_binary_array_new"
                   version="0.16.0">
        <source-position filename="arrow-glib/basic-array.h" line="461"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2276">A newly created #GArrowLargeBinaryArray.</doc>
          <type name="LargeBinaryArray" c:type="GArrowLargeBinaryArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2266">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2267">The value offsets of @data in Arrow format.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="value_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2268">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2269">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2273">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_buffer"
              c:identifier="garrow_large_binary_array_get_buffer"
              version="0.16.0"
              deprecated="1"
              deprecated-version="1.0.0">
        <doc-deprecated xml:space="preserve">Use garrow_large_binary_array_get_data_buffer() instead.</doc-deprecated>
        <source-position filename="arrow-glib/basic-array.h" line="474"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2317">The data of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2315">A #GArrowLargeBinaryArray.</doc>
            <type name="LargeBinaryArray" c:type="GArrowLargeBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data_buffer"
              c:identifier="garrow_large_binary_array_get_data_buffer"
              version="1.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="478"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2333">The data of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2331">A #GArrowLargeBinaryArray.</doc>
            <type name="LargeBinaryArray" c:type="GArrowLargeBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_offsets_buffer"
              c:identifier="garrow_large_binary_array_get_offsets_buffer"
              version="0.16.0">
        <source-position filename="arrow-glib/basic-array.h" line="480"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2348">The offsets of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2346">A #GArrowLargeBinaryArray.</doc>
            <type name="LargeBinaryArray" c:type="GArrowLargeBinaryArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="garrow_large_binary_array_get_value"
              version="0.16.0">
        <source-position filename="arrow-glib/basic-array.h" line="468"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2301">The @i-th value.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2298">A #GArrowLargeBinaryArray.</doc>
            <type name="LargeBinaryArray" c:type="GArrowLargeBinaryArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2299">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <class name="LargeBinaryArrayBuilder"
           c:symbol-prefix="large_binary_array_builder"
           c:type="GArrowLargeBinaryArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowLargeBinaryArrayBuilder"
           glib:get-type="garrow_large_binary_array_builder_get_type"
           glib:type-struct="LargeBinaryArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="730"/>
      <constructor name="new"
                   c:identifier="garrow_large_binary_array_builder_new"
                   version="0.16.0">
        <source-position filename="arrow-glib/array-builder.h" line="733"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3230">A newly created #GArrowLargeBinaryArrayBuilder.</doc>
          <type name="LargeBinaryArrayBuilder"
                c:type="GArrowLargeBinaryArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_null"
              c:identifier="garrow_large_binary_array_builder_append_null"
              version="0.16.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="753"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3338">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3335">A #GArrowLargeBinaryArrayBuilder.</doc>
            <type name="LargeBinaryArrayBuilder"
                  c:type="GArrowLargeBinaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_large_binary_array_builder_append_nulls"
              version="0.16.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="757"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3358">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3354">A #GArrowLargeBinaryArrayBuilder.</doc>
            <type name="LargeBinaryArrayBuilder"
                  c:type="GArrowLargeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3355">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_large_binary_array_builder_append_value"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="735"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3250">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3245">A #GArrowLargeBinaryArrayBuilder.</doc>
            <type name="LargeBinaryArrayBuilder"
                  c:type="GArrowLargeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3246">A binary value.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3247">A value length.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value_bytes"
              c:identifier="garrow_large_binary_array_builder_append_value_bytes"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="740"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3275">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3271">A #GArrowLargeBinaryArrayBuilder.</doc>
            <type name="LargeBinaryArrayBuilder"
                  c:type="GArrowLargeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3272">A binary value.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_large_binary_array_builder_append_values"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3296">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="744"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3311">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3298">A #GArrowLargeBinaryArrayBuilder.</doc>
            <type name="LargeBinaryArrayBuilder"
                  c:type="GArrowLargeBinaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3299">The array of #GBytes.</doc>
            <array length="1" zero-terminated="0" c:type="GBytes**">
              <type name="GLib.Bytes" c:type="GBytes*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3300">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3301">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3305">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="LargeBinaryArrayBuilderClass"
            c:type="GArrowLargeBinaryArrayBuilderClass"
            glib:is-gtype-struct-for="LargeBinaryArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="730"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="LargeBinaryArrayClass"
            c:type="GArrowLargeBinaryArrayClass"
            glib:is-gtype-struct-for="LargeBinaryArray">
      <source-position filename="arrow-glib/basic-array.h" line="458"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="LargeBinaryDataType"
           c:symbol-prefix="large_binary_data_type"
           c:type="GArrowLargeBinaryDataType"
           parent="DataType"
           glib:type-name="GArrowLargeBinaryDataType"
           glib:get-type="garrow_large_binary_data_type_get_type"
           glib:type-struct="LargeBinaryDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="342"/>
      <constructor name="new"
                   c:identifier="garrow_large_binary_data_type_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="345"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="948">The newly created #GArrowLargeBinaryDataType.</doc>
          <type name="LargeBinaryDataType"
                c:type="GArrowLargeBinaryDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="LargeBinaryDataTypeClass"
            c:type="GArrowLargeBinaryDataTypeClass"
            glib:is-gtype-struct-for="LargeBinaryDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="342"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <class name="LargeBinaryScalar"
           c:symbol-prefix="large_binary_scalar"
           c:type="GArrowLargeBinaryScalar"
           parent="BaseBinaryScalar"
           glib:type-name="GArrowLargeBinaryScalar"
           glib:get-type="garrow_large_binary_scalar_get_type"
           glib:type-struct="LargeBinaryScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="373"/>
      <constructor name="new"
                   c:identifier="garrow_large_binary_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="377"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1215">A newly created #GArrowLargeBinaryScalar.</doc>
          <type name="LargeBinaryScalar" c:type="GArrowLargeBinaryScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1213">The value of this scalar.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseBinaryScalar" c:type="GArrowBaseBinaryScalar"/>
      </field>
    </class>
    <record name="LargeBinaryScalarClass"
            c:type="GArrowLargeBinaryScalarClass"
            glib:is-gtype-struct-for="LargeBinaryScalar">
      <source-position filename="arrow-glib/scalar.h" line="373"/>
      <field name="parent_class">
        <type name="BaseBinaryScalarClass"
              c:type="GArrowBaseBinaryScalarClass"/>
      </field>
    </record>
    <class name="LargeListArray"
           c:symbol-prefix="large_list_array"
           c:type="GArrowLargeListArray"
           parent="Array"
           glib:type-name="GArrowLargeListArray"
           glib:get-type="garrow_large_list_array_get_type"
           glib:type-struct="LargeListArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="73"/>
      <constructor name="new"
                   c:identifier="garrow_large_list_array_new"
                   version="0.16.0">
        <source-position filename="arrow-glib/composite-array.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="497">A newly created #GArrowLargeListArray.</doc>
          <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="486">The data type of the list.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="487">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="488">The offsets of @values in Arrow format.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="489">The values as #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="490">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="494">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_large_list_array_get_value"
              version="0.16.0">
        <source-position filename="arrow-glib/composite-array.h" line="86"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="539">The @i-th list.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="536">A #GArrowLargeListArray.</doc>
            <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="537">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_length"
              c:identifier="garrow_large_list_array_get_value_length">
        <source-position filename="arrow-glib/composite-array.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_offset"
              c:identifier="garrow_large_list_array_get_value_offset"
              version="2.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="572">The target offset in the array containing the list's values.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="569">A #GArrowLargeListArray.</doc>
            <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="570">The index of the offset of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_offsets"
              c:identifier="garrow_large_list_array_get_value_offsets"
              version="2.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="604">The target offsets in the array
containing the list's values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="601">A #GArrowLargeListArray.</doc>
            <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
          </instance-parameter>
          <parameter name="n_offsets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="602">The number of offsets to be returned.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="garrow_large_list_array_get_value_type"
              version="0.16.0">
        <source-position filename="arrow-glib/composite-array.h" line="84"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="523">The data type of value in each list.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="521">A #GArrowLargeListArray.</doc>
            <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_large_list_array_get_values"
              version="2.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="556">The array containing the list's values.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="554">A #GArrowLargeListArray.</doc>
            <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="raw-values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <class name="LargeListArrayBuilder"
           c:symbol-prefix="large_list_array_builder"
           c:type="GArrowLargeListArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowLargeListArrayBuilder"
           glib:get-type="garrow_large_list_array_builder_get_type"
           glib:type-struct="LargeListArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1368"/>
      <constructor name="new"
                   c:identifier="garrow_large_list_array_builder_new"
                   version="0.16.0"
                   throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1371"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5763">A newly created #GArrowLargeListArrayBuilder.</doc>
          <type name="LargeListArrayBuilder"
                c:type="GArrowLargeListArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5760">A #GArrowLargeListDataType for value.</doc>
            <type name="LargeListDataType" c:type="GArrowLargeListDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append_null"
              c:identifier="garrow_large_list_array_builder_append_null"
              version="0.16.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1379"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5818">%TRUE on success, %FALSE if there was an error.

It appends a new NULL element.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5815">A #GArrowLargeListArrayBuilder.</doc>
            <type name="LargeListArrayBuilder"
                  c:type="GArrowLargeListArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_large_list_array_builder_append_value"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1374"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5792">%TRUE on success, %FALSE if there was an error.

It appends a new list element. To append a new list element, you
need to call this function then append list element values to
`value_builder`. `value_builder` is the #GArrowArrayBuilder
specified to constructor. You can get `value_builder` by
garrow_large_list_array_builder_get_value_builder().</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5789">A #GArrowLargeListArrayBuilder.</doc>
            <type name="LargeListArrayBuilder"
                  c:type="GArrowLargeListArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_builder"
              c:identifier="garrow_large_list_array_builder_get_value_builder"
              version="0.16.0">
        <source-position filename="arrow-glib/array-builder.h" line="1383"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5838">The #GArrowArrayBuilder for values.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5836">A #GArrowLargeListArrayBuilder.</doc>
            <type name="LargeListArrayBuilder"
                  c:type="GArrowLargeListArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="LargeListArrayBuilderClass"
            c:type="GArrowLargeListArrayBuilderClass"
            glib:is-gtype-struct-for="LargeListArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1368"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="LargeListArrayClass"
            c:type="GArrowLargeListArrayClass"
            glib:is-gtype-struct-for="LargeListArray">
      <source-position filename="arrow-glib/composite-array.h" line="73"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="LargeListDataType"
           c:symbol-prefix="large_list_data_type"
           c:type="GArrowLargeListDataType"
           parent="DataType"
           glib:type-name="GArrowLargeListDataType"
           glib:get-type="garrow_large_list_data_type_get_type"
           glib:type-struct="LargeListDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="58"/>
      <constructor name="new"
                   c:identifier="garrow_large_list_data_type_new"
                   version="0.16.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="142">The newly created large list data type.</doc>
          <type name="LargeListDataType" c:type="GArrowLargeListDataType*"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="140">The field of elements</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_field"
              c:identifier="garrow_large_list_data_type_get_field"
              version="0.16.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="164">The field of value.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="large_list_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="162">A #GArrowLargeListDataType.</doc>
            <type name="LargeListDataType" c:type="GArrowLargeListDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="LargeListDataTypeClass"
            c:type="GArrowLargeListDataTypeClass"
            glib:is-gtype-struct-for="LargeListDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="58"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <class name="LargeListScalar"
           c:symbol-prefix="large_list_scalar"
           c:type="GArrowLargeListScalar"
           parent="BaseListScalar"
           glib:type-name="GArrowLargeListScalar"
           glib:get-type="garrow_large_list_scalar_get_type"
           glib:type-struct="LargeListScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="653"/>
      <constructor name="new"
                   c:identifier="garrow_large_list_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="657"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2157">A newly created #GArrowLargeListScalar.</doc>
          <type name="LargeListScalar" c:type="GArrowLargeListScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2155">The value of this scalar.</doc>
            <type name="LargeListArray" c:type="GArrowLargeListArray*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseListScalar" c:type="GArrowBaseListScalar"/>
      </field>
    </class>
    <record name="LargeListScalarClass"
            c:type="GArrowLargeListScalarClass"
            glib:is-gtype-struct-for="LargeListScalar">
      <source-position filename="arrow-glib/scalar.h" line="653"/>
      <field name="parent_class">
        <type name="BaseListScalarClass" c:type="GArrowBaseListScalarClass"/>
      </field>
    </record>
    <class name="LargeStringArray"
           c:symbol-prefix="large_string_array"
           c:type="GArrowLargeStringArray"
           parent="LargeBinaryArray"
           glib:type-name="GArrowLargeStringArray"
           glib:get-type="garrow_large_string_array_get_type"
           glib:type-struct="LargeStringArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="513"/>
      <constructor name="new"
                   c:identifier="garrow_large_string_array_new"
                   version="0.16.0">
        <source-position filename="arrow-glib/basic-array.h" line="516"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2462">A newly created #GArrowLargeStringArray.</doc>
          <type name="LargeStringArray" c:type="GArrowLargeStringArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2452">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2453">The value offsets of @data in Arrow format.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="value_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2454">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2455">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2459">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_string"
              c:identifier="garrow_large_string_array_get_string"
              version="0.16.0">
        <source-position filename="arrow-glib/basic-array.h" line="523"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2487">The @i-th UTF-8 encoded string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2484">A #GArrowLargeStringArray.</doc>
            <type name="LargeStringArray" c:type="GArrowLargeStringArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2485">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="LargeBinaryArray" c:type="GArrowLargeBinaryArray"/>
      </field>
    </class>
    <class name="LargeStringArrayBuilder"
           c:symbol-prefix="large_string_array_builder"
           c:type="GArrowLargeStringArrayBuilder"
           parent="LargeBinaryArrayBuilder"
           glib:type-name="GArrowLargeStringArrayBuilder"
           glib:get-type="garrow_large_string_array_builder_get_type"
           glib:type-struct="LargeStringArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="830"/>
      <constructor name="new"
                   c:identifier="garrow_large_string_array_builder_new"
                   version="0.16.0">
        <source-position filename="arrow-glib/array-builder.h" line="833"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3585">A newly created #GArrowLargeStringArrayBuilder.</doc>
          <type name="LargeStringArrayBuilder"
                c:type="GArrowLargeStringArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_string"
              c:identifier="garrow_large_string_array_builder_append_string"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="835"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3604">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3600">A #GArrowLargeStringArrayBuilder.</doc>
            <type name="LargeStringArrayBuilder"
                  c:type="GArrowLargeStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3601">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_string_len"
              c:identifier="garrow_large_string_array_builder_append_string_len"
              version="8.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="839"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3627">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3622">A #GArrowLargeStringArrayBuilder.</doc>
            <type name="LargeStringArrayBuilder"
                  c:type="GArrowLargeStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3623">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3624">The length of @value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_strings"
              c:identifier="garrow_large_string_array_builder_append_strings"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3646">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="845"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3661">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3648">A #GArrowLargeStringArrayBuilder.</doc>
            <type name="LargeStringArrayBuilder"
                  c:type="GArrowLargeStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3649">The array of strings.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3650">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3651">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3655">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="LargeBinaryArrayBuilder"
              c:type="GArrowLargeBinaryArrayBuilder"/>
      </field>
    </class>
    <record name="LargeStringArrayBuilderClass"
            c:type="GArrowLargeStringArrayBuilderClass"
            glib:is-gtype-struct-for="LargeStringArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="830"/>
      <field name="parent_class">
        <type name="LargeBinaryArrayBuilderClass"
              c:type="GArrowLargeBinaryArrayBuilderClass"/>
      </field>
    </record>
    <record name="LargeStringArrayClass"
            c:type="GArrowLargeStringArrayClass"
            glib:is-gtype-struct-for="LargeStringArray">
      <source-position filename="arrow-glib/basic-array.h" line="513"/>
      <field name="parent_class">
        <type name="LargeBinaryArrayClass"
              c:type="GArrowLargeBinaryArrayClass"/>
      </field>
    </record>
    <class name="LargeStringDataType"
           c:symbol-prefix="large_string_data_type"
           c:type="GArrowLargeStringDataType"
           parent="DataType"
           glib:type-name="GArrowLargeStringDataType"
           glib:get-type="garrow_large_string_data_type_get_type"
           glib:type-struct="LargeStringDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="371"/>
      <constructor name="new"
                   c:identifier="garrow_large_string_data_type_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="374"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1014">The newly created #GArrowLargeStringDataType.</doc>
          <type name="LargeStringDataType"
                c:type="GArrowLargeStringDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="LargeBinaryDataType" c:type="GArrowLargeBinaryDataType"/>
      </field>
    </class>
    <record name="LargeStringDataTypeClass"
            c:type="GArrowLargeStringDataTypeClass"
            glib:is-gtype-struct-for="LargeStringDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="371"/>
      <field name="parent_class">
        <type name="LargeBinaryDataTypeClass"
              c:type="GArrowLargeBinaryDataTypeClass"/>
      </field>
    </record>
    <class name="LargeStringScalar"
           c:symbol-prefix="large_string_scalar"
           c:type="GArrowLargeStringScalar"
           parent="BaseBinaryScalar"
           glib:type-name="GArrowLargeStringScalar"
           glib:get-type="garrow_large_string_scalar_get_type"
           glib:type-struct="LargeStringScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="389"/>
      <constructor name="new"
                   c:identifier="garrow_large_string_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="393"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1245">A newly created #GArrowLargeStringScalar.</doc>
          <type name="LargeStringScalar" c:type="GArrowLargeStringScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1243">The value of this scalar.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseBinaryScalar" c:type="GArrowBaseBinaryScalar"/>
      </field>
    </class>
    <record name="LargeStringScalarClass"
            c:type="GArrowLargeStringScalarClass"
            glib:is-gtype-struct-for="LargeStringScalar">
      <source-position filename="arrow-glib/scalar.h" line="389"/>
      <field name="parent_class">
        <type name="BaseBinaryScalarClass"
              c:type="GArrowBaseBinaryScalarClass"/>
      </field>
    </record>
    <class name="ListArray"
           c:symbol-prefix="list_array"
           c:type="GArrowListArray"
           parent="Array"
           glib:type-name="GArrowListArray"
           glib:get-type="garrow_list_array_get_type"
           glib:type-struct="ListArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="38"/>
      <constructor name="new"
                   c:identifier="garrow_list_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/composite-array.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="283">A newly created #GArrowListArray.</doc>
          <type name="ListArray" c:type="GArrowListArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="272">The data type of the list.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="273">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="274">The offsets of @values in Arrow format.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="275">The values as #GArrowArray.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="276">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="280">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_list_array_get_value">
        <source-position filename="arrow-glib/composite-array.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="323">The i-th list.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="320">A #GArrowListArray.</doc>
            <type name="ListArray" c:type="GArrowListArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="321">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_length"
              c:identifier="garrow_list_array_get_value_length"
              version="2.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="369">The target length in the array containing the list's values.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="366">A #GArrowListArray.</doc>
            <type name="ListArray" c:type="GArrowListArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="367">The index of the length of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_offset"
              c:identifier="garrow_list_array_get_value_offset">
        <source-position filename="arrow-glib/composite-array.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <type name="ListArray" c:type="GArrowListArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_offsets"
              c:identifier="garrow_list_array_get_value_offsets"
              version="2.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="385">The target offsets in the array
containing the list's values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint32*">
            <type name="gint32" c:type="gint32"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="382">A #GArrowListArray.</doc>
            <type name="ListArray" c:type="GArrowListArray*"/>
          </instance-parameter>
          <parameter name="n_offsets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="383">The number of offsets to be returned.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="garrow_list_array_get_value_type">
        <source-position filename="arrow-glib/composite-array.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="309">The data type of value in each list.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="307">A #GArrowListArray.</doc>
            <type name="ListArray" c:type="GArrowListArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_list_array_get_values"
              version="2.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="337">The array containing the list's values.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="335">A #GArrowListArray.</doc>
            <type name="ListArray" c:type="GArrowListArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="raw-values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <class name="ListArrayBuilder"
           c:symbol-prefix="list_array_builder"
           c:type="GArrowListArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowListArrayBuilder"
           glib:get-type="garrow_list_array_builder_get_type"
           glib:type-struct="ListArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1337"/>
      <constructor name="new"
                   c:identifier="garrow_list_array_builder_new"
                   throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1339"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5548">A newly created #GArrowListArrayBuilder.</doc>
          <type name="ListArrayBuilder" c:type="GArrowListArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5545">A #GArrowListDataType for value.</doc>
            <type name="ListDataType" c:type="GArrowListDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append"
              c:identifier="garrow_list_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_list_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1344"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5575">%TRUE on success, %FALSE if there was an error.

It appends a new list element. To append a new list element, you
need to call this function then append list element values to
`value_builder`. `value_builder` is the #GArrowArrayBuilder
specified to constructor. You can get `value_builder` by
garrow_list_array_builder_get_value_builder().

|[&lt;!-- language="C" --&gt;
GArrowInt8ArrayBuilder *value_builder;
GArrowListArrayBuilder *builder;

value_builder = garrow_int8_array_builder_new();
builder = garrow_list_array_builder_new(value_builder, NULL);

// Start 0th list element: [1, 0, -1]
garrow_list_array_builder_append(builder, NULL);
garrow_int8_array_builder_append(value_builder, 1);
garrow_int8_array_builder_append(value_builder, 0);
garrow_int8_array_builder_append(value_builder, -1);

// Start 1st list element: [-29, 29]
garrow_list_array_builder_append(builder, NULL);
garrow_int8_array_builder_append(value_builder, -29);
garrow_int8_array_builder_append(value_builder, 29);

{
  // [[1, 0, -1], [-29, 29]]
  GArrowArray *array = garrow_array_builder_finish(builder);
  // Now, builder is needless.
  g_object_unref(builder);
  g_object_unref(value_builder);

  // Use array...
  g_object_unref(array);
}
]|</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5572">A #GArrowListArrayBuilder.</doc>
            <type name="ListArrayBuilder" c:type="GArrowListArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_list_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1352"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5684">%TRUE on success, %FALSE if there was an error.

It appends a new NULL element.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5681">A #GArrowListArrayBuilder.</doc>
            <type name="ListArrayBuilder" c:type="GArrowListArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_list_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1348"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5628">%TRUE on success, %FALSE if there was an error.

It appends a new list element. To append a new list element, you
need to call this function then append list element values to
`value_builder`. `value_builder` is the #GArrowArrayBuilder
specified to constructor. You can get `value_builder` by
garrow_list_array_builder_get_value_builder().

|[&lt;!-- language="C" --&gt;
GArrowInt8ArrayBuilder *value_builder;
GArrowListArrayBuilder *builder;

value_builder = garrow_int8_array_builder_new();
builder = garrow_list_array_builder_new(value_builder, NULL);

// Start 0th list element: [1, 0, -1]
garrow_list_array_builder_append(builder, NULL);
garrow_int8_array_builder_append(value_builder, 1);
garrow_int8_array_builder_append(value_builder, 0);
garrow_int8_array_builder_append(value_builder, -1);

// Start 1st list element: [-29, 29]
garrow_list_array_builder_append(builder, NULL);
garrow_int8_array_builder_append(value_builder, -29);
garrow_int8_array_builder_append(value_builder, 29);

{
  // [[1, 0, -1], [-29, 29]]
  GArrowArray *array = garrow_array_builder_finish(builder);
  // Now, builder is needless.
  g_object_unref(builder);
  g_object_unref(value_builder);

  // Use array...
  g_object_unref(array);
}
]|</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5625">A #GArrowListArrayBuilder.</doc>
            <type name="ListArrayBuilder" c:type="GArrowListArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_builder"
              c:identifier="garrow_list_array_builder_get_value_builder">
        <source-position filename="arrow-glib/array-builder.h" line="1356"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5702">The #GArrowArrayBuilder for values.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5700">A #GArrowListArrayBuilder.</doc>
            <type name="ListArrayBuilder" c:type="GArrowListArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="ListArrayBuilderClass"
            c:type="GArrowListArrayBuilderClass"
            glib:is-gtype-struct-for="ListArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1337"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="ListArrayClass"
            c:type="GArrowListArrayClass"
            glib:is-gtype-struct-for="ListArray">
      <source-position filename="arrow-glib/composite-array.h" line="38"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="ListDataType"
           c:symbol-prefix="list_data_type"
           c:type="GArrowListDataType"
           parent="DataType"
           glib:type-name="GArrowListDataType"
           glib:get-type="garrow_list_data_type_get_type"
           glib:type-struct="ListDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="38"/>
      <constructor name="new" c:identifier="garrow_list_data_type_new">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="72">The newly created list data type.</doc>
          <type name="ListDataType" c:type="GArrowListDataType*"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="70">The field of elements</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_field"
              c:identifier="garrow_list_data_type_get_field"
              version="0.13.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="107">The field of value.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="105">A #GArrowListDataType.</doc>
            <type name="ListDataType" c:type="GArrowListDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_field"
              c:identifier="garrow_list_data_type_get_value_field"
              deprecated="1"
              deprecated-version="0.13.0">
        <doc-deprecated xml:space="preserve">
  Use garrow_list_data_type_get_field() instead.</doc-deprecated>
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="92">The field of value.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="90">A #GArrowListDataType.</doc>
            <type name="ListDataType" c:type="GArrowListDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="ListDataTypeClass"
            c:type="GArrowListDataTypeClass"
            glib:is-gtype-struct-for="ListDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="38"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <class name="ListScalar"
           c:symbol-prefix="list_scalar"
           c:type="GArrowListScalar"
           parent="BaseListScalar"
           glib:type-name="GArrowListScalar"
           glib:get-type="garrow_list_scalar_get_type"
           glib:type-struct="ListScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="637"/>
      <constructor name="new"
                   c:identifier="garrow_list_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="641"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2127">A newly created #GArrowListScalar.</doc>
          <type name="ListScalar" c:type="GArrowListScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2125">The value of this scalar.</doc>
            <type name="ListArray" c:type="GArrowListArray*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseListScalar" c:type="GArrowBaseListScalar"/>
      </field>
    </class>
    <record name="ListScalarClass"
            c:type="GArrowListScalarClass"
            glib:is-gtype-struct-for="ListScalar">
      <source-position filename="arrow-glib/scalar.h" line="637"/>
      <field name="parent_class">
        <type name="BaseListScalarClass" c:type="GArrowBaseListScalarClass"/>
      </field>
    </record>
    <class name="LiteralExpression"
           c:symbol-prefix="literal_expression"
           c:type="GArrowLiteralExpression"
           parent="Expression"
           glib:type-name="GArrowLiteralExpression"
           glib:get-type="garrow_literal_expression_get_type"
           glib:type-struct="LiteralExpressionClass">
      <source-position filename="arrow-glib/expression.h" line="44"/>
      <constructor name="new"
                   c:identifier="garrow_literal_expression_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/expression.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/expression.cpp"
               line="137">A newly created #GArrowLiteralExpression.</doc>
          <type name="LiteralExpression" c:type="GArrowLiteralExpression*"/>
        </return-value>
        <parameters>
          <parameter name="datum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/expression.cpp"
                 line="135">A #GArrowDatum.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Expression" c:type="GArrowExpression"/>
      </field>
    </class>
    <record name="LiteralExpressionClass"
            c:type="GArrowLiteralExpressionClass"
            glib:is-gtype-struct-for="LiteralExpression">
      <source-position filename="arrow-glib/expression.h" line="44"/>
      <field name="parent_class">
        <type name="ExpressionClass" c:type="GArrowExpressionClass"/>
      </field>
    </record>
    <class name="LocalFileSystem"
           c:symbol-prefix="local_file_system"
           c:type="GArrowLocalFileSystem"
           parent="FileSystem"
           glib:type-name="GArrowLocalFileSystem"
           glib:get-type="garrow_local_file_system_get_type"
           glib:type-struct="LocalFileSystemClass">
      <source-position filename="arrow-glib/local-file-system.h" line="54"/>
      <constructor name="new"
                   c:identifier="garrow_local_file_system_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/local-file-system.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/local-file-system.cpp"
               line="173">A newly created #GArrowLocalFileSystem.</doc>
          <type name="LocalFileSystem" c:type="GArrowLocalFileSystem*"/>
        </return-value>
        <parameters>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/local-file-system.cpp"
                 line="171">A #GArrowLocalFileSystemOptions.</doc>
            <type name="LocalFileSystemOptions"
                  c:type="GArrowLocalFileSystemOptions*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="FileSystem" c:type="GArrowFileSystem"/>
      </field>
    </class>
    <record name="LocalFileSystemClass"
            c:type="GArrowLocalFileSystemClass"
            glib:is-gtype-struct-for="LocalFileSystem">
      <source-position filename="arrow-glib/local-file-system.h" line="54"/>
      <field name="parent_class">
        <type name="FileSystemClass" c:type="GArrowFileSystemClass"/>
      </field>
    </record>
    <class name="LocalFileSystemOptions"
           c:symbol-prefix="local_file_system_options"
           c:type="GArrowLocalFileSystemOptions"
           parent="GObject.Object"
           glib:type-name="GArrowLocalFileSystemOptions"
           glib:get-type="garrow_local_file_system_options_get_type"
           glib:type-struct="LocalFileSystemOptionsClass">
      <source-position filename="arrow-glib/local-file-system.h" line="37"/>
      <constructor name="new"
                   c:identifier="garrow_local_file_system_options_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/local-file-system.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/local-file-system.cpp"
               line="142">A newly created #GArrowLocalFileSystemOptions.</doc>
          <type name="LocalFileSystemOptions"
                c:type="GArrowLocalFileSystemOptions*"/>
        </return-value>
      </constructor>
      <property name="use-mmap"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/local-file-system.cpp"
             line="121">Whether open_input_stream and open_input_file return a mmap'ed file,
or a regular one.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="LocalFileSystemOptionsClass"
            c:type="GArrowLocalFileSystemOptionsClass"
            glib:is-gtype-struct-for="LocalFileSystemOptions">
      <source-position filename="arrow-glib/local-file-system.h" line="37"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="MapArray"
           c:symbol-prefix="map_array"
           c:type="GArrowMapArray"
           parent="ListArray"
           glib:type-name="GArrowMapArray"
           glib:get-type="garrow_map_array_get_type"
           glib:type-struct="MapArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="137"/>
      <constructor name="new"
                   c:identifier="garrow_map_array_new"
                   version="0.17.0"
                   throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="141"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="946">A newly created #GArrowMapArray
  or %NULL on error.</doc>
          <type name="MapArray" c:type="GArrowMapArray*"/>
        </return-value>
        <parameters>
          <parameter name="offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="941">The offsets Array containing n + 1 offsets encoding length and size.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="942">The Array containing key values.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="items" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="943">The items Array containing item values.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_items"
              c:identifier="garrow_map_array_get_items"
              glib:get-property="items"
              version="0.17.0">
        <source-position filename="arrow-glib/composite-array.h" line="150"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1006">The items Array containing item values.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1004">A #GArrowMapArray.</doc>
            <type name="MapArray" c:type="GArrowMapArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_keys"
              c:identifier="garrow_map_array_get_keys"
              glib:get-property="keys"
              version="0.17.0">
        <source-position filename="arrow-glib/composite-array.h" line="147"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="982">The Array containing key values.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="980">A #GArrowMapArray.</doc>
            <type name="MapArray" c:type="GArrowMapArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="items"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_items">
        <type name="Array"/>
      </property>
      <property name="keys"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_keys">
        <type name="Array"/>
      </property>
      <property name="offsets"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="ListArray" c:type="GArrowListArray"/>
      </field>
    </class>
    <class name="MapArrayBuilder"
           c:symbol-prefix="map_array_builder"
           c:type="GArrowMapArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowMapArrayBuilder"
           glib:get-type="garrow_map_array_builder_get_type"
           glib:type-struct="MapArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1436"/>
      <constructor name="new"
                   c:identifier="garrow_map_array_builder_new"
                   version="0.17.0"
                   throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1439"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6072">A newly created #GArrowMapArrayBuilder on success,
  %NULL on error.</doc>
          <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6069">#GArrowMapDataType for the map.</doc>
            <type name="MapDataType" c:type="GArrowMapDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append_null"
              c:identifier="garrow_map_array_builder_append_null"
              version="0.17.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1457"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6164">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6161">A #GArrowMapArrayBuilder.</doc>
            <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_map_array_builder_append_nulls"
              version="0.17.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="6178">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1462"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6187">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6180">A #GArrowMapArrayBuilder.</doc>
            <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6181">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_map_array_builder_append_value"
              version="0.17.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1443"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6105">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6102">A #GArrowMapArrayBuilder.</doc>
            <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_map_array_builder_append_values"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="6122">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1447"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6137">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6124">A #GArrowMapArrayBuilder.</doc>
            <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
          </instance-parameter>
          <parameter name="offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6125">The array of signed int.</doc>
            <array length="1" zero-terminated="0" c:type="const gint32*">
              <type name="gint32" c:type="gint32"/>
            </array>
          </parameter>
          <parameter name="offsets_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6126">The length of `offsets`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6127">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6131">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_item_builder"
              c:identifier="garrow_map_array_builder_get_item_builder"
              version="0.17.0">
        <source-position filename="arrow-glib/array-builder.h" line="1471"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6230">The #GArrowArrayBuilder for item values.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6228">A #GArrowMapArrayBuilder.</doc>
            <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key_builder"
              c:identifier="garrow_map_array_builder_get_key_builder"
              version="0.17.0">
        <source-position filename="arrow-glib/array-builder.h" line="1468"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6208">The #GArrowArrayBuilder for key values.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6206">A #GArrowMapArrayBuilder.</doc>
            <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_builder"
              c:identifier="garrow_map_array_builder_get_value_builder"
              version="0.17.0">
        <source-position filename="arrow-glib/array-builder.h" line="1474"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6252">The #GArrowArrayBuilder to add map entries as struct values.
  This can be used instead of garrow_map_array_builder_get_key_builder() and
  garrow_map_array_builder_get_item_builder(). You can build map entries as a list of
  struct values with this builder.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6250">A #GArrowMapArrayBuilder.</doc>
            <type name="MapArrayBuilder" c:type="GArrowMapArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="MapArrayBuilderClass"
            c:type="GArrowMapArrayBuilderClass"
            glib:is-gtype-struct-for="MapArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1436"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="MapArrayClass"
            c:type="GArrowMapArrayClass"
            glib:is-gtype-struct-for="MapArray">
      <source-position filename="arrow-glib/composite-array.h" line="137"/>
      <field name="parent_class">
        <type name="ListArrayClass" c:type="GArrowListArrayClass"/>
      </field>
    </record>
    <class name="MapDataType"
           c:symbol-prefix="map_data_type"
           c:type="GArrowMapDataType"
           parent="ListDataType"
           glib:type-name="GArrowMapDataType"
           glib:get-type="garrow_map_data_type_get_type"
           glib:type-struct="MapDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="102"/>
      <constructor name="new"
                   c:identifier="garrow_map_data_type_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="359">The newly created map data type.</doc>
          <type name="MapDataType" c:type="GArrowMapDataType*"/>
        </return-value>
        <parameters>
          <parameter name="key_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="356">The key type of the map.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="item_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="357">The item type of the map.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_item_type"
              c:identifier="garrow_map_data_type_get_item_type"
              version="0.17.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="113"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="400">The item type of the map.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="398">A #GArrowMapDataType.</doc>
            <type name="MapDataType" c:type="GArrowMapDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key_type"
              c:identifier="garrow_map_data_type_get_key_type"
              version="0.17.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="110"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="381">The key type of the map.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="379">A #GArrowMapDataType.</doc>
            <type name="MapDataType" c:type="GArrowMapDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ListDataType" c:type="GArrowListDataType"/>
      </field>
    </class>
    <record name="MapDataTypeClass"
            c:type="GArrowMapDataTypeClass"
            glib:is-gtype-struct-for="MapDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="102"/>
      <field name="parent_class">
        <type name="ListDataTypeClass" c:type="GArrowListDataTypeClass"/>
      </field>
    </record>
    <class name="MapScalar"
           c:symbol-prefix="map_scalar"
           c:type="GArrowMapScalar"
           parent="BaseListScalar"
           glib:type-name="GArrowMapScalar"
           glib:get-type="garrow_map_scalar_get_type"
           glib:type-struct="MapScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="669"/>
      <constructor name="new"
                   c:identifier="garrow_map_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="673"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2187">A newly created #GArrowMapScalar.</doc>
          <type name="MapScalar" c:type="GArrowMapScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2185">The value of this scalar.</doc>
            <type name="StructArray" c:type="GArrowStructArray*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseListScalar" c:type="GArrowBaseListScalar"/>
      </field>
    </class>
    <record name="MapScalarClass"
            c:type="GArrowMapScalarClass"
            glib:is-gtype-struct-for="MapScalar">
      <source-position filename="arrow-glib/scalar.h" line="669"/>
      <field name="parent_class">
        <type name="BaseListScalarClass" c:type="GArrowBaseListScalarClass"/>
      </field>
    </record>
    <class name="MatchSubstringOptions"
           c:symbol-prefix="match_substring_options"
           c:type="GArrowMatchSubstringOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowMatchSubstringOptions"
           glib:get-type="garrow_match_substring_options_get_type"
           glib:type-struct="MatchSubstringOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="734"/>
      <constructor name="new"
                   c:identifier="garrow_match_substring_options_new"
                   version="12.0.0">
        <source-position filename="arrow-glib/compute.h" line="738"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3996">A newly created #GArrowMatchSubstringOptions.</doc>
          <type name="MatchSubstringOptions"
                c:type="GArrowMatchSubstringOptions*"/>
        </return-value>
      </constructor>
      <property name="ignore-case"
                version="12.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3976">Whether to perform a case-insensitive match.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="pattern"
                version="12.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3959">The exact substring (or regex, depending on kernel) to look for
inside input values.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="MatchSubstringOptionsClass"
            c:type="GArrowMatchSubstringOptionsClass"
            glib:is-gtype-struct-for="MatchSubstringOptions">
      <source-position filename="arrow-glib/compute.h" line="734"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="MemoryMappedInputStream"
           c:symbol-prefix="memory_mapped_input_stream"
           c:type="GArrowMemoryMappedInputStream"
           parent="SeekableInputStream"
           glib:type-name="GArrowMemoryMappedInputStream"
           glib:get-type="garrow_memory_mapped_input_stream_get_type"
           glib:type-struct="MemoryMappedInputStreamClass">
      <source-position filename="arrow-glib/input-stream.h" line="138"/>
      <implements name="File"/>
      <implements name="Readable"/>
      <constructor name="new"
                   c:identifier="garrow_memory_mapped_input_stream_new"
                   throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="141"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="735">A newly created #GArrowMemoryMappedInputStream
  or %NULL on error.</doc>
          <type name="MemoryMappedInputStream"
                c:type="GArrowMemoryMappedInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="732">The path of the file to be mapped on memory.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="SeekableInputStream" c:type="GArrowSeekableInputStream"/>
      </field>
    </class>
    <record name="MemoryMappedInputStreamClass"
            c:type="GArrowMemoryMappedInputStreamClass"
            glib:is-gtype-struct-for="MemoryMappedInputStream">
      <source-position filename="arrow-glib/input-stream.h" line="138"/>
      <field name="parent_class">
        <type name="SeekableInputStreamClass"
              c:type="GArrowSeekableInputStreamClass"/>
      </field>
    </record>
    <class name="MemoryPool"
           c:symbol-prefix="memory_pool"
           c:type="GArrowMemoryPool"
           parent="GObject.Object"
           glib:type-name="GArrowMemoryPool"
           glib:get-type="garrow_memory_pool_get_type"
           glib:type-struct="MemoryPoolClass">
      <source-position filename="arrow-glib/memory-pool.h" line="35"/>
      <function name="default"
                c:identifier="garrow_memory_pool_default"
                version="9.0.0">
        <source-position filename="arrow-glib/memory-pool.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/memory-pool.cpp"
               line="92">The process-wide default memory pool.</doc>
          <type name="MemoryPool" c:type="GArrowMemoryPool*"/>
        </return-value>
      </function>
      <method name="get_backend_name"
              c:identifier="garrow_memory_pool_get_backend_name"
              version="9.0.0">
        <source-position filename="arrow-glib/memory-pool.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/memory-pool.cpp"
               line="141">The name of the backend used by this MemoryPool
  (e.g. "system" or "jemalloc").

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="memory_pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/memory-pool.cpp"
                 line="139">A #GArrowMemoryPool.</doc>
            <type name="MemoryPool" c:type="GArrowMemoryPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bytes_allocated"
              c:identifier="garrow_memory_pool_get_bytes_allocated"
              version="9.0.0">
        <source-position filename="arrow-glib/memory-pool.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/memory-pool.cpp"
               line="107">The number of bytes that were allocated and not yet free’d
  through this allocator.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="memory_pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/memory-pool.cpp"
                 line="105">A #GArrowMemoryPool.</doc>
            <type name="MemoryPool" c:type="GArrowMemoryPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_memory"
              c:identifier="garrow_memory_pool_get_max_memory"
              version="9.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/memory-pool.cpp"
             line="119">Return peak memory allocation in this memory pool.</doc>
        <source-position filename="arrow-glib/memory-pool.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/memory-pool.cpp"
               line="125">Maximum bytes allocated. If not known (or not implemented),
  returns -1.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="memory_pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/memory-pool.cpp"
                 line="121">A #GArrowMemoryPool.</doc>
            <type name="MemoryPool" c:type="GArrowMemoryPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="memory-pool"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="MemoryPoolClass"
            c:type="GArrowMemoryPoolClass"
            glib:is-gtype-struct-for="MemoryPool">
      <source-position filename="arrow-glib/memory-pool.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="MetadataVersion"
                 glib:type-name="GArrowMetadataVersion"
                 glib:get-type="garrow_metadata_version_get_type"
                 c:type="GArrowMetadataVersion">
      <doc xml:space="preserve"
           filename="arrow-glib/metadata-version.h"
           line="26">They are corresponding to `arrow::ipc::MetadataVersion::type`
values.</doc>
      <member name="v1"
              value="0"
              c:identifier="GARROW_METADATA_VERSION_V1"
              glib:nick="v1"
              glib:name="GARROW_METADATA_VERSION_V1">
        <doc xml:space="preserve"
             filename="arrow-glib/metadata-version.h"
             line="28">Version 1.</doc>
      </member>
      <member name="v2"
              value="1"
              c:identifier="GARROW_METADATA_VERSION_V2"
              glib:nick="v2"
              glib:name="GARROW_METADATA_VERSION_V2">
        <doc xml:space="preserve"
             filename="arrow-glib/metadata-version.h"
             line="29">Version 2.</doc>
      </member>
      <member name="v3"
              value="2"
              c:identifier="GARROW_METADATA_VERSION_V3"
              glib:nick="v3"
              glib:name="GARROW_METADATA_VERSION_V3">
        <doc xml:space="preserve"
             filename="arrow-glib/metadata-version.h"
             line="30">Version 3.</doc>
      </member>
    </enumeration>
    <class name="MockFileSystem"
           c:symbol-prefix="mock_file_system"
           c:type="GArrowMockFileSystem"
           parent="FileSystem"
           glib:type-name="GArrowMockFileSystem"
           glib:get-type="garrow_mock_file_system_get_type"
           glib:type-struct="MockFileSystemClass">
      <source-position filename="arrow-glib/file-system.h" line="256"/>
      <field name="parent_instance">
        <type name="FileSystem" c:type="GArrowFileSystem"/>
      </field>
    </class>
    <record name="MockFileSystemClass"
            c:type="GArrowMockFileSystemClass"
            glib:is-gtype-struct-for="MockFileSystem">
      <source-position filename="arrow-glib/file-system.h" line="256"/>
      <field name="parent_class">
        <type name="FileSystemClass" c:type="GArrowFileSystemClass"/>
      </field>
    </record>
    <class name="MonthDayNano"
           c:symbol-prefix="month_day_nano"
           c:type="GArrowMonthDayNano"
           parent="GObject.Object"
           glib:type-name="GArrowMonthDayNano"
           glib:get-type="garrow_month_day_nano_get_type"
           glib:type-struct="MonthDayNanoClass">
      <source-position filename="arrow-glib/interval.h" line="62"/>
      <constructor name="new"
                   c:identifier="garrow_month_day_nano_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/interval.h" line="66"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/interval.cpp"
               line="358">
  A newly created #GArrowMonthDayNano.</doc>
          <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
        </return-value>
        <parameters>
          <parameter name="month" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="354">A month part value.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="day" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="355">A day part value.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="nanosecond" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="356">The nanosecond value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal"
              c:identifier="garrow_month_day_nano_equal"
              version="8.0.0">
        <source-position filename="arrow-glib/interval.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/interval.cpp"
               line="378">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="month_nano_day" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="375">A #GArrowMonthDayNano.</doc>
            <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
          </instance-parameter>
          <parameter name="other_month_nano_day" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/interval.cpp"
                 line="376">A #GArrowMonthDayNano to be compared.</doc>
            <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
          </parameter>
        </parameters>
      </method>
      <property name="day"
                version="8.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/interval.cpp"
             line="315">The day part value.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="month"
                version="8.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/interval.cpp"
             line="297">The month part value.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="nanosecond"
                version="8.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/interval.cpp"
             line="333">The nanosecond part value.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="MonthDayNanoClass"
            c:type="GArrowMonthDayNanoClass"
            glib:is-gtype-struct-for="MonthDayNano">
      <source-position filename="arrow-glib/interval.h" line="62"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="MonthDayNanoIntervalArray"
           c:symbol-prefix="month_day_nano_interval_array"
           c:type="GArrowMonthDayNanoIntervalArray"
           parent="PrimitiveArray"
           glib:type-name="GArrowMonthDayNanoIntervalArray"
           glib:get-type="garrow_month_day_nano_interval_array_get_type"
           glib:type-struct="MonthDayNanoIntervalArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="705"/>
      <constructor name="new"
                   c:identifier="garrow_month_day_nano_interval_array_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="709"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3101">A newly created #GArrowMonthDayNanoIntervalArray.</doc>
          <type name="MonthDayNanoIntervalArray"
                c:type="GArrowMonthDayNanoIntervalArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3092">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3093">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3094">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3098">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_month_day_nano_interval_array_get_value"
              version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="715"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3124">The @i-th value.</doc>
          <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3121">A #GArrowMonthDayNanoIntervalArray.</doc>
            <type name="MonthDayNanoIntervalArray"
                  c:type="GArrowMonthDayNanoIntervalArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3122">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_month_day_nano_interval_array_get_values"
              version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="720"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="3144">
  The list of #GArrowMonthDayNano.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MonthDayNano"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="3142">A #GArrowMonthDayNanoIntervalArray.</doc>
            <type name="MonthDayNanoIntervalArray"
                  c:type="GArrowMonthDayNanoIntervalArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="PrimitiveArray" c:type="GArrowPrimitiveArray"/>
      </field>
    </class>
    <class name="MonthDayNanoIntervalArrayBuilder"
           c:symbol-prefix="month_day_nano_interval_array_builder"
           c:type="GArrowMonthDayNanoIntervalArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowMonthDayNanoIntervalArrayBuilder"
           glib:get-type="garrow_month_day_nano_interval_array_builder_get_type"
           glib:type-struct="MonthDayNanoIntervalArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1183"/>
      <constructor name="new"
                   c:identifier="garrow_month_day_nano_interval_array_builder_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1187"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4903">A newly created #GArrowMonthDayNanoIntervalArrayBuilder.</doc>
          <type name="MonthDayNanoIntervalArrayBuilder"
                c:type="GArrowMonthDayNanoIntervalArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_value"
              c:identifier="garrow_month_day_nano_interval_array_builder_append_value"
              version="8.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4923">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4919">A #GArrowMonthDayNanoIntervalArrayBuilder.</doc>
            <type name="MonthDayNanoIntervalArrayBuilder"
                  c:type="GArrowMonthDayNanoIntervalArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4920">A #GArrowMonthDayNano.</doc>
            <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_month_day_nano_interval_array_builder_append_values"
              version="8.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4946">Append multiple values at once. It's more efficient than multiple
`append` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4961">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4948">A #GArrowMonthDayNanoIntervalArrayBuilder.</doc>
            <type name="MonthDayNanoIntervalArrayBuilder"
                  c:type="GArrowMonthDayNanoIntervalArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4949">The array of a #GArrowMonthDayNano.</doc>
            <array length="1"
                   zero-terminated="0"
                   c:type="const GArrowMonthDayNano**">
              <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4950">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4951">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4955">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="MonthDayNanoIntervalArrayBuilderClass"
            c:type="GArrowMonthDayNanoIntervalArrayBuilderClass"
            glib:is-gtype-struct-for="MonthDayNanoIntervalArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1183"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="MonthDayNanoIntervalArrayClass"
            c:type="GArrowMonthDayNanoIntervalArrayClass"
            glib:is-gtype-struct-for="MonthDayNanoIntervalArray">
      <source-position filename="arrow-glib/basic-array.h" line="705"/>
      <field name="parent_class">
        <type name="PrimitiveArrayClass" c:type="GArrowPrimitiveArrayClass"/>
      </field>
    </record>
    <class name="MonthDayNanoIntervalDataType"
           c:symbol-prefix="month_day_nano_interval_data_type"
           c:type="GArrowMonthDayNanoIntervalDataType"
           parent="IntervalDataType"
           glib:type-name="GArrowMonthDayNanoIntervalDataType"
           glib:get-type="garrow_month_day_nano_interval_data_type_get_type"
           glib:type-struct="MonthDayNanoIntervalDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="537"/>
      <constructor name="new"
                   c:identifier="garrow_month_day_nano_interval_data_type_new"
                   version="7.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="541"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1458">The newly created month day nano interval data type.</doc>
          <type name="MonthDayNanoIntervalDataType"
                c:type="GArrowMonthDayNanoIntervalDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntervalDataType" c:type="GArrowIntervalDataType"/>
      </field>
    </class>
    <record name="MonthDayNanoIntervalDataTypeClass"
            c:type="GArrowMonthDayNanoIntervalDataTypeClass"
            glib:is-gtype-struct-for="MonthDayNanoIntervalDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="537"/>
      <field name="parent_class">
        <type name="IntervalDataTypeClass"
              c:type="GArrowIntervalDataTypeClass"/>
      </field>
    </record>
    <class name="MonthDayNanoIntervalScalar"
           c:symbol-prefix="month_day_nano_interval_scalar"
           c:type="GArrowMonthDayNanoIntervalScalar"
           parent="Scalar"
           glib:type-name="GArrowMonthDayNanoIntervalScalar"
           glib:get-type="garrow_month_day_nano_interval_scalar_get_type"
           glib:type-struct="MonthDayNanoIntervalScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="562"/>
      <constructor name="new"
                   c:identifier="garrow_month_day_nano_interval_scalar_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/scalar.h" line="566"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1710">A newly created #GArrowMonthDayNanoIntervalScalar.</doc>
          <type name="MonthDayNanoIntervalScalar"
                c:type="GArrowMonthDayNanoIntervalScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1708">The value of GArrowMonthDayNano.</doc>
            <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_month_day_nano_interval_scalar_get_value"
              version="8.0.0">
        <source-position filename="arrow-glib/scalar.h" line="569"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1729">The value of this scalar.</doc>
          <type name="MonthDayNano" c:type="GArrowMonthDayNano*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1727">A #GArrowMonthDayNanoIntervalScalar.</doc>
            <type name="MonthDayNanoIntervalScalar"
                  c:type="GArrowMonthDayNanoIntervalScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="MonthDayNanoIntervalScalarClass"
            c:type="GArrowMonthDayNanoIntervalScalarClass"
            glib:is-gtype-struct-for="MonthDayNanoIntervalScalar">
      <source-position filename="arrow-glib/scalar.h" line="562"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="MonthIntervalArray"
           c:symbol-prefix="month_interval_array"
           c:type="GArrowMonthIntervalArray"
           parent="NumericArray"
           glib:type-name="GArrowMonthIntervalArray"
           glib:get-type="garrow_month_interval_array_get_type"
           glib:type-struct="MonthIntervalArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="650"/>
      <constructor name="new"
                   c:identifier="garrow_month_interval_array_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="654"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2928">A newly created #GArrowMonthIntervalArray.</doc>
          <type name="MonthIntervalArray" c:type="GArrowMonthIntervalArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2919">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2920">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2921">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2925">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_month_interval_array_get_value"
              version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="660"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2950">The @i-th value.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2947">A #GArrowMonthIntervalArray.</doc>
            <type name="MonthIntervalArray"
                  c:type="GArrowMonthIntervalArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2948">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_month_interval_array_get_values"
              version="8.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="664"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2967">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint32*">
            <type name="gint32" c:type="gint32"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2964">A #GArrowMonthIntervalArray.</doc>
            <type name="MonthIntervalArray"
                  c:type="GArrowMonthIntervalArray*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2965">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="MonthIntervalArrayBuilder"
           c:symbol-prefix="month_interval_array_builder"
           c:type="GArrowMonthIntervalArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowMonthIntervalArrayBuilder"
           glib:get-type="garrow_month_interval_array_builder_get_type"
           glib:type-struct="MonthIntervalArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1117"/>
      <constructor name="new"
                   c:identifier="garrow_month_interval_array_builder_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1121"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4688">A newly created #GArrowMonthIntervalArrayBuilder.</doc>
          <type name="MonthIntervalArrayBuilder"
                c:type="GArrowMonthIntervalArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_value"
              c:identifier="garrow_month_interval_array_builder_append_value"
              version="8.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4707">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4703">A #GArrowMonthIntervalArrayBuilder.</doc>
            <type name="MonthIntervalArrayBuilder"
                  c:type="GArrowMonthIntervalArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4704">The month.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_month_interval_array_builder_append_values"
              version="8.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4724">Append multiple values at once. It's more efficient than multiple
`append` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4739">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4726">A #GArrowMonthIntervalArrayBuilder.</doc>
            <type name="MonthIntervalArrayBuilder"
                  c:type="GArrowMonthIntervalArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4727">The array of the month.</doc>
            <array length="1" zero-terminated="0" c:type="const gint32*">
              <type name="gint32" c:type="gint32"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4728">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4729">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4733">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="MonthIntervalArrayBuilderClass"
            c:type="GArrowMonthIntervalArrayBuilderClass"
            glib:is-gtype-struct-for="MonthIntervalArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1117"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="MonthIntervalArrayClass"
            c:type="GArrowMonthIntervalArrayClass"
            glib:is-gtype-struct-for="MonthIntervalArray">
      <source-position filename="arrow-glib/basic-array.h" line="650"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="MonthIntervalDataType"
           c:symbol-prefix="month_interval_data_type"
           c:type="GArrowMonthIntervalDataType"
           parent="IntervalDataType"
           glib:type-name="GArrowMonthIntervalDataType"
           glib:get-type="garrow_month_interval_data_type_get_type"
           glib:type-struct="MonthIntervalDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="503"/>
      <constructor name="new"
                   c:identifier="garrow_month_interval_data_type_new"
                   version="7.0.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="507"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1389">The newly created month interval data type.</doc>
          <type name="MonthIntervalDataType"
                c:type="GArrowMonthIntervalDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntervalDataType" c:type="GArrowIntervalDataType"/>
      </field>
    </class>
    <record name="MonthIntervalDataTypeClass"
            c:type="GArrowMonthIntervalDataTypeClass"
            glib:is-gtype-struct-for="MonthIntervalDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="503"/>
      <field name="parent_class">
        <type name="IntervalDataTypeClass"
              c:type="GArrowIntervalDataTypeClass"/>
      </field>
    </record>
    <class name="MonthIntervalScalar"
           c:symbol-prefix="month_interval_scalar"
           c:type="GArrowMonthIntervalScalar"
           parent="Scalar"
           glib:type-name="GArrowMonthIntervalScalar"
           glib:get-type="garrow_month_interval_scalar_get_type"
           glib:type-struct="MonthIntervalScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="522"/>
      <constructor name="new"
                   c:identifier="garrow_month_interval_scalar_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/scalar.h" line="526"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1584">A newly created #GArrowMonthIntervalScalar.</doc>
          <type name="MonthIntervalScalar"
                c:type="GArrowMonthIntervalScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1582">The value of this scalar.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_month_interval_scalar_get_value"
              version="8.0.0">
        <source-position filename="arrow-glib/scalar.h" line="529"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1601">The value of this scalar.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1599">A #GArrowMonthIntervalScalar.</doc>
            <type name="MonthIntervalScalar"
                  c:type="GArrowMonthIntervalScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="MonthIntervalScalarClass"
            c:type="GArrowMonthIntervalScalarClass"
            glib:is-gtype-struct-for="MonthIntervalScalar">
      <source-position filename="arrow-glib/scalar.h" line="522"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="MutableBuffer"
           c:symbol-prefix="mutable_buffer"
           c:type="GArrowMutableBuffer"
           parent="Buffer"
           glib:type-name="GArrowMutableBuffer"
           glib:get-type="garrow_mutable_buffer_get_type"
           glib:type-struct="MutableBufferClass">
      <source-position filename="arrow-glib/buffer.h" line="70"/>
      <constructor name="new"
                   c:identifier="garrow_mutable_buffer_new"
                   version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="447">A newly created #GArrowMutableBuffer.</doc>
          <type name="MutableBuffer" c:type="GArrowMutableBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="442">Data for the buffer.
  They aren't owned by the new buffer.
  You must not free the data while the new buffer is alive.</doc>
            <array length="1" zero-terminated="0" c:type="guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="445">The number of bytes of the data.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_bytes"
                   c:identifier="garrow_mutable_buffer_new_bytes"
                   version="0.9.0">
        <source-position filename="arrow-glib/buffer.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="462">A newly created #GArrowMutableBuffer.</doc>
          <type name="MutableBuffer" c:type="GArrowMutableBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="460">Data for the buffer.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_data"
              c:identifier="garrow_mutable_buffer_set_data"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/buffer.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="516">%TRUE on success, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="510">A #GArrowMutableBuffer.</doc>
            <type name="MutableBuffer" c:type="GArrowMutableBuffer*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="511">A write offset in the buffer data in byte.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="512">The data to be written.</doc>
            <array length="2" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="513">The number of bytes of the data to be written.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="slice"
              c:identifier="garrow_mutable_buffer_slice"
              version="0.3.0">
        <source-position filename="arrow-glib/buffer.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="484">A newly created #GArrowMutableBuffer that
  shares data of the base #GArrowMutableBuffer. The created
  #GArrowMutableBuffer has data start with offset from the base
  buffer data and are the specified bytes size.</doc>
          <type name="MutableBuffer" c:type="GArrowMutableBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="480">A #GArrowMutableBuffer.</doc>
            <type name="MutableBuffer" c:type="GArrowMutableBuffer*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="481">An offset in the buffer data in byte.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="482">The number of bytes of the sliced data.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Buffer" c:type="GArrowBuffer"/>
      </field>
    </class>
    <record name="MutableBufferClass"
            c:type="GArrowMutableBufferClass"
            glib:is-gtype-struct-for="MutableBuffer">
      <source-position filename="arrow-glib/buffer.h" line="70"/>
      <field name="parent_class">
        <type name="BufferClass" c:type="GArrowBufferClass"/>
      </field>
    </record>
    <class name="NullArray"
           c:symbol-prefix="null_array"
           c:type="GArrowNullArray"
           parent="Array"
           glib:type-name="GArrowNullArray"
           glib:get-type="garrow_null_array_get_type"
           glib:type-struct="NullArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="113"/>
      <constructor name="new" c:identifier="garrow_null_array_new">
        <source-position filename="arrow-glib/basic-array.h" line="115"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1047">A newly created #GArrowNullArray.</doc>
          <type name="NullArray" c:type="GArrowNullArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1045">An array length.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <class name="NullArrayBuilder"
           c:symbol-prefix="null_array_builder"
           c:type="GArrowNullArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowNullArrayBuilder"
           glib:get-type="garrow_null_array_builder_get_type"
           glib:type-struct="NullArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="96"/>
      <constructor name="new"
                   c:identifier="garrow_null_array_builder_new"
                   version="0.13.0">
        <source-position filename="arrow-glib/array-builder.h" line="99"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="909">A newly created #GArrowNullArrayBuilder.</doc>
          <type name="NullArrayBuilder" c:type="GArrowNullArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_null"
              c:identifier="garrow_null_array_builder_append_null"
              version="0.13.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="927">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="924">A #GArrowNullArrayBuilder.</doc>
            <type name="NullArrayBuilder" c:type="GArrowNullArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_null_array_builder_append_nulls"
              version="0.13.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="941">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="950">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="943">A #GArrowNullArrayBuilder.</doc>
            <type name="NullArrayBuilder" c:type="GArrowNullArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="944">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="NullArrayBuilderClass"
            c:type="GArrowNullArrayBuilderClass"
            glib:is-gtype-struct-for="NullArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="96"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="NullArrayClass"
            c:type="GArrowNullArrayClass"
            glib:is-gtype-struct-for="NullArray">
      <source-position filename="arrow-glib/basic-array.h" line="113"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="NullDataType"
           c:symbol-prefix="null_data_type"
           c:type="GArrowNullDataType"
           parent="DataType"
           glib:type-name="GArrowNullDataType"
           glib:get-type="garrow_null_data_type_get_type"
           glib:type-struct="NullDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="87"/>
      <constructor name="new" c:identifier="garrow_null_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="384">The newly created null data type.</doc>
          <type name="NullDataType" c:type="GArrowNullDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="NullDataTypeClass"
            c:type="GArrowNullDataTypeClass"
            glib:is-gtype-struct-for="NullDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="87"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <enumeration name="NullPlacement"
                 version="12.0.0"
                 glib:type-name="GArrowNullPlacement"
                 glib:get-type="garrow_null_placement_get_type"
                 c:type="GArrowNullPlacement">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="521">They are corresponding to `arrow::compute::NullPlacement` values.</doc>
      <member name="at_start"
              value="0"
              c:identifier="GARROW_NULL_PLACEMENT_AT_START"
              glib:nick="at-start"
              glib:name="GARROW_NULL_PLACEMENT_AT_START">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="523">Place nulls and NaNs before any non-null values.
  NaNs will come after nulls.</doc>
      </member>
      <member name="at_end"
              value="1"
              c:identifier="GARROW_NULL_PLACEMENT_AT_END"
              glib:nick="at-end"
              glib:name="GARROW_NULL_PLACEMENT_AT_END">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="526">Place nulls and NaNs after any non-null values.
  NaNs will come before nulls.</doc>
      </member>
    </enumeration>
    <class name="NullScalar"
           c:symbol-prefix="null_scalar"
           c:type="GArrowNullScalar"
           parent="Scalar"
           glib:type-name="GArrowNullScalar"
           glib:get-type="garrow_null_scalar_get_type"
           glib:type-struct="NullScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="81"/>
      <constructor name="new"
                   c:identifier="garrow_null_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="85"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="420">A newly created #GArrowNullScalar.</doc>
          <type name="NullScalar" c:type="GArrowNullScalar*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="NullScalarClass"
            c:type="GArrowNullScalarClass"
            glib:is-gtype-struct-for="NullScalar">
      <source-position filename="arrow-glib/scalar.h" line="81"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="NumericArray"
           c:symbol-prefix="numeric_array"
           c:type="GArrowNumericArray"
           parent="PrimitiveArray"
           glib:type-name="GArrowNumericArray"
           glib:get-type="garrow_numeric_array_get_type"
           glib:type-struct="NumericArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="169"/>
      <method name="mean"
              c:identifier="garrow_numeric_array_mean"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="935"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4970">The value of the computed mean.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4967">A #GArrowNumericArray.</doc>
            <type name="NumericArray" c:type="GArrowNumericArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="PrimitiveArray" c:type="GArrowPrimitiveArray"/>
      </field>
    </class>
    <record name="NumericArrayClass"
            c:type="GArrowNumericArrayClass"
            glib:is-gtype-struct-for="NumericArray">
      <source-position filename="arrow-glib/basic-array.h" line="169"/>
      <field name="parent_class">
        <type name="PrimitiveArrayClass" c:type="GArrowPrimitiveArrayClass"/>
      </field>
    </record>
    <class name="NumericDataType"
           c:symbol-prefix="numeric_data_type"
           c:type="GArrowNumericDataType"
           parent="FixedWidthDataType"
           abstract="1"
           glib:type-name="GArrowNumericDataType"
           glib:get-type="garrow_numeric_data_type_get_type"
           glib:type-struct="NumericDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="115"/>
      <field name="parent_instance">
        <type name="FixedWidthDataType" c:type="GArrowFixedWidthDataType"/>
      </field>
    </class>
    <record name="NumericDataTypeClass"
            c:type="GArrowNumericDataTypeClass"
            glib:is-gtype-struct-for="NumericDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="115"/>
      <field name="parent_class">
        <type name="FixedWidthDataTypeClass"
              c:type="GArrowFixedWidthDataTypeClass"/>
      </field>
    </record>
    <class name="ORCFileReader"
           c:symbol-prefix="orc_file_reader"
           c:type="GArrowORCFileReader"
           parent="GObject.Object"
           glib:type-name="GArrowORCFileReader"
           glib:get-type="garrow_orc_file_reader_get_type"
           glib:type-struct="ORCFileReaderClass">
      <source-position filename="arrow-glib/orc-file-reader.h" line="35"/>
      <constructor name="new"
                   c:identifier="garrow_orc_file_reader_new"
                   version="0.10.0"
                   throws="1">
        <source-position filename="arrow-glib/orc-file-reader.h" line="38"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="165">A newly created #GArrowORCFileReader
  or %NULL on error.</doc>
          <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="162">The file to be read.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_field_indexes"
              c:identifier="garrow_orc_file_reader_get_field_indexes"
              version="0.10.0"
              deprecated="1"
              deprecated-version="0.12.0">
        <doc-deprecated xml:space="preserve">
  Use garrow_orc_file_reader_get_field_indices() instead.</doc-deprecated>
        <source-position filename="arrow-glib/orc-file-reader.h" line="56"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="243">
 The field indexes to be read.</doc>
          <array length="0" zero-terminated="0" c:type="const gint*">
            <type name="gint" c:type="gint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="240">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
          <parameter name="n_field_indexes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="241">The number of the specified indexes.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field_indices"
              c:identifier="garrow_orc_file_reader_get_field_indices"
              version="0.12.0">
        <source-position filename="arrow-glib/orc-file-reader.h" line="61"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="263">
 The field indices to be read.</doc>
          <array length="0" zero-terminated="0" c:type="const gint*">
            <type name="gint" c:type="gint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="260">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
          <parameter name="n_field_indices"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="261">The number of the specified indices.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_rows"
              c:identifier="garrow_orc_file_reader_get_n_rows"
              version="0.10.0">
        <source-position filename="arrow-glib/orc-file-reader.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="422">The number of rows in the file.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="420">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_stripes"
              c:identifier="garrow_orc_file_reader_get_n_stripes"
              version="0.10.0">
        <source-position filename="arrow-glib/orc-file-reader.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="407">The number of stripes in the file.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="405">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_stripe"
              c:identifier="garrow_orc_file_reader_read_stripe"
              version="0.10.0"
              throws="1">
        <source-position filename="arrow-glib/orc-file-reader.h" line="70"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="358">A newly read stripe as
  #GArrowRecordBatch or %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="354">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="355">The stripe index to be read.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_stripes"
              c:identifier="garrow_orc_file_reader_read_stripes"
              version="0.10.0"
              throws="1">
        <source-position filename="arrow-glib/orc-file-reader.h" line="67"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="313">A newly read stripes as
  #GArrowTable or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="310">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_type"
              c:identifier="garrow_orc_file_reader_read_type"
              version="0.10.0"
              throws="1">
        <source-position filename="arrow-glib/orc-file-reader.h" line="64"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/orc-file-reader.cpp"
               line="287">A newly read type as
  #GArrowSchema or %NULL on error.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="284">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_field_indexes"
              c:identifier="garrow_orc_file_reader_set_field_indexes"
              version="0.10.0"
              deprecated="1"
              deprecated-version="0.12.0">
        <doc-deprecated xml:space="preserve">
  Use garrow_orc_file_reader_set_field_indices() instead.</doc-deprecated>
        <source-position filename="arrow-glib/orc-file-reader.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="189">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
          <parameter name="field_indexes"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="190">
  The field indexes to be read.</doc>
            <array length="1" zero-terminated="0" c:type="const gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
          <parameter name="n_field_indexes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="192">The number of the specified indexes.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_field_indices"
              c:identifier="garrow_orc_file_reader_set_field_indices"
              version="0.12.0">
        <source-position filename="arrow-glib/orc-file-reader.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="211">A #GArrowORCFileReader.</doc>
            <type name="ORCFileReader" c:type="GArrowORCFileReader*"/>
          </instance-parameter>
          <parameter name="field_indices"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="212">
  The field indices to be read.</doc>
            <array length="1" zero-terminated="0" c:type="const gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
          <parameter name="n_field_indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/orc-file-reader.cpp"
                 line="214">The number of the specified indices.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="input"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SeekableInputStream"/>
      </property>
      <property name="orc-file-reader"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ORCFileReaderClass"
            c:type="GArrowORCFileReaderClass"
            glib:is-gtype-struct-for="ORCFileReader">
      <source-position filename="arrow-glib/orc-file-reader.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="OutputStream"
           c:symbol-prefix="output_stream"
           c:type="GArrowOutputStream"
           parent="GObject.Object"
           glib:type-name="GArrowOutputStream"
           glib:get-type="garrow_output_stream_get_type"
           glib:type-struct="OutputStreamClass">
      <source-position filename="arrow-glib/output-stream.h" line="41"/>
      <implements name="File"/>
      <implements name="Writable"/>
      <method name="align"
              c:identifier="garrow_output_stream_align"
              version="0.11.0"
              throws="1">
        <source-position filename="arrow-glib/output-stream.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="183">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="178">A #GArrowOutputStream.</doc>
            <type name="OutputStream" c:type="GArrowOutputStream*"/>
          </instance-parameter>
          <parameter name="alignment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="179">The byte multiple for the metadata prefix, usually 8
  or 64, to ensure the body starts on a multiple of that alignment.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_record_batch"
              c:identifier="garrow_output_stream_write_record_batch"
              version="1.0.0"
              throws="1">
        <source-position filename="arrow-glib/output-stream.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="234">The number of written bytes on success, -1 on error.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="229">A #GArrowOutputStream.</doc>
            <type name="OutputStream" c:type="GArrowOutputStream*"/>
          </instance-parameter>
          <parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="230">A #GArrowRecordBatch to be written.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="231">A #GArrowWriteOptions.</doc>
            <type name="WriteOptions" c:type="GArrowWriteOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_tensor"
              c:identifier="garrow_output_stream_write_tensor"
              version="0.4.0"
              throws="1">
        <source-position filename="arrow-glib/output-stream.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/output-stream.cpp"
               line="203">The number of written bytes on success, -1 on error.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="199">A #GArrowOutputStream.</doc>
            <type name="OutputStream" c:type="GArrowOutputStream*"/>
          </instance-parameter>
          <parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/output-stream.cpp"
                 line="200">A #GArrowTensor to be written.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </parameter>
        </parameters>
      </method>
      <property name="output-stream"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="OutputStreamClass"
            c:type="GArrowOutputStreamClass"
            glib:is-gtype-struct-for="OutputStream">
      <source-position filename="arrow-glib/output-stream.h" line="41"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="PrimitiveArray"
           c:symbol-prefix="primitive_array"
           c:type="GArrowPrimitiveArray"
           parent="Array"
           glib:type-name="GArrowPrimitiveArray"
           glib:get-type="garrow_primitive_array_get_type"
           glib:type-struct="PrimitiveArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="127"/>
      <method name="get_buffer"
              c:identifier="garrow_primitive_array_get_buffer"
              deprecated="1"
              deprecated-version="1.0.0">
        <doc-deprecated xml:space="preserve">Use garrow_primitive_array_get_data_buffer() instead.</doc-deprecated>
        <source-position filename="arrow-glib/basic-array.h" line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1128">The data of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1126">A #GArrowPrimitiveArray.</doc>
            <type name="PrimitiveArray" c:type="GArrowPrimitiveArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data_buffer"
              c:identifier="garrow_primitive_array_get_data_buffer"
              version="1.0.0">
        <source-position filename="arrow-glib/basic-array.h" line="136"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1142">The data of the array as #GArrowBuffer.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1140">A #GArrowPrimitiveArray.</doc>
            <type name="PrimitiveArray" c:type="GArrowPrimitiveArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <record name="PrimitiveArrayClass"
            c:type="GArrowPrimitiveArrayClass"
            glib:is-gtype-struct-for="PrimitiveArray">
      <source-position filename="arrow-glib/basic-array.h" line="127"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="ProjectNodeOptions"
           c:symbol-prefix="project_node_options"
           c:type="GArrowProjectNodeOptions"
           parent="ExecuteNodeOptions"
           glib:type-name="GArrowProjectNodeOptions"
           glib:get-type="garrow_project_node_options_get_type"
           glib:type-struct="ProjectNodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="184"/>
      <constructor name="new"
                   c:identifier="garrow_project_node_options_new"
                   version="11.0.0">
        <source-position filename="arrow-glib/compute.h" line="188"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1154">A newly created #GArrowProjectNodeOptions.</doc>
          <type name="ProjectNodeOptions" c:type="GArrowProjectNodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="expressions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1147">
  A list of #GArrowExpression to be executed.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Expression"/>
            </type>
          </parameter>
          <parameter name="names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1149">
  A list of output column names of @expressions. If @names is %NULL,
  the string representations of @expressions will be used.</doc>
            <array length="2" zero-terminated="0" c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_names" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1152">The number of @names.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="ExecuteNodeOptions" c:type="GArrowExecuteNodeOptions"/>
      </field>
    </class>
    <record name="ProjectNodeOptionsClass"
            c:type="GArrowProjectNodeOptionsClass"
            glib:is-gtype-struct-for="ProjectNodeOptions">
      <source-position filename="arrow-glib/compute.h" line="184"/>
      <field name="parent_class">
        <type name="ExecuteNodeOptionsClass"
              c:type="GArrowExecuteNodeOptionsClass"/>
      </field>
    </record>
    <enumeration name="QuantileInterpolation"
                 version="9.0.0"
                 glib:type-name="GArrowQuantileInterpolation"
                 glib:get-type="garrow_quantile_interpolation_get_type"
                 c:type="GArrowQuantileInterpolation">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="778">They correspond to the values of
`arrow::compute::QuantileOptions::Interpolation`.</doc>
      <member name="linear"
              value="0"
              c:identifier="GARROW_QUANTILE_INTERPOLATION_LINEAR"
              glib:nick="linear"
              glib:name="GARROW_QUANTILE_INTERPOLATION_LINEAR">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="780">Linear.</doc>
      </member>
      <member name="lower"
              value="1"
              c:identifier="GARROW_QUANTILE_INTERPOLATION_LOWER"
              glib:nick="lower"
              glib:name="GARROW_QUANTILE_INTERPOLATION_LOWER">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="781">Lower.</doc>
      </member>
      <member name="higher"
              value="2"
              c:identifier="GARROW_QUANTILE_INTERPOLATION_HIGHER"
              glib:nick="higher"
              glib:name="GARROW_QUANTILE_INTERPOLATION_HIGHER">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="782">Higher.</doc>
      </member>
      <member name="nearest"
              value="3"
              c:identifier="GARROW_QUANTILE_INTERPOLATION_NEAREST"
              glib:nick="nearest"
              glib:name="GARROW_QUANTILE_INTERPOLATION_NEAREST">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="783">Nearest.</doc>
      </member>
      <member name="midpoint"
              value="4"
              c:identifier="GARROW_QUANTILE_INTERPOLATION_MIDPOINT"
              glib:nick="midpoint"
              glib:name="GARROW_QUANTILE_INTERPOLATION_MIDPOINT">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="784">Midpoint.</doc>
      </member>
    </enumeration>
    <class name="QuantileOptions"
           c:symbol-prefix="quantile_options"
           c:type="GArrowQuantileOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowQuantileOptions"
           glib:get-type="garrow_quantile_options_get_type"
           glib:type-struct="QuantileOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="809"/>
      <constructor name="new"
                   c:identifier="garrow_quantile_options_new"
                   version="9.0.0">
        <source-position filename="arrow-glib/compute.h" line="813"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4262">A newly created #GArrowQuantileOptions.</doc>
          <type name="QuantileOptions" c:type="GArrowQuantileOptions*"/>
        </return-value>
      </constructor>
      <method name="get_qs"
              c:identifier="garrow_quantile_options_get_qs"
              version="9.0.0">
        <source-position filename="arrow-glib/compute.h" line="816"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4278">The `q`s to be used.</doc>
          <array length="0" zero-terminated="0" c:type="const gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4275">A #GArrowQuantileOptions.</doc>
            <type name="QuantileOptions" c:type="GArrowQuantileOptions*"/>
          </instance-parameter>
          <parameter name="n"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4276">The number of `q`s.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_q"
              c:identifier="garrow_quantile_options_set_q"
              version="9.0.0">
        <source-position filename="arrow-glib/compute.h" line="820"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4294">A #GArrowQuantileOptions.</doc>
            <type name="QuantileOptions" c:type="GArrowQuantileOptions*"/>
          </instance-parameter>
          <parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4295">A `q` to be used.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_qs"
              c:identifier="garrow_quantile_options_set_qs"
              version="9.0.0">
        <source-position filename="arrow-glib/compute.h" line="824"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4310">A #GArrowQuantileOptions.</doc>
            <type name="QuantileOptions" c:type="GArrowQuantileOptions*"/>
          </instance-parameter>
          <parameter name="qs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4311">`q`s to be used.</doc>
            <array length="1" zero-terminated="0" c:type="const gdouble*">
              <type name="gdouble" c:type="gdouble"/>
            </array>
          </parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4312">The number of @qs.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="interpolation"
                version="9.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_QUANTILE_INTERPOLATION_LINEAR">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4199">Interpolation method to use when quantile lies between two data
points.</doc>
        <type name="QuantileInterpolation"/>
      </property>
      <property name="min-count"
                version="9.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4239">If less than this many non-null values are observed, emit null.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="skip-nulls"
                version="9.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4219">If true (the default), null values are ignored. Otherwise, if any
value is null, emit null.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="QuantileOptionsClass"
            c:type="GArrowQuantileOptionsClass"
            glib:is-gtype-struct-for="QuantileOptions">
      <source-position filename="arrow-glib/compute.h" line="809"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <function-macro name="RECORD_BATCH_FILE_READER"
                    c:identifier="GARROW_RECORD_BATCH_FILE_READER"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="156"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_FILE_READER_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_FILE_READER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="160"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_FILE_READER_GET_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_FILE_READER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="170"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_FILE_WRITER"
                    c:identifier="GARROW_RECORD_BATCH_FILE_WRITER"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="140"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_FILE_WRITER_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_FILE_WRITER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="144"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_FILE_WRITER_GET_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_FILE_WRITER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="154"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_STREAM_READER"
                    c:identifier="GARROW_RECORD_BATCH_STREAM_READER"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="106"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_STREAM_READER_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_STREAM_READER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="110"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_STREAM_READER_GET_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_STREAM_READER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/reader.h" line="120"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_STREAM_WRITER"
                    c:identifier="GARROW_RECORD_BATCH_STREAM_WRITER"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="89"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_STREAM_WRITER_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_STREAM_WRITER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="93"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_STREAM_WRITER_GET_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_STREAM_WRITER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="103"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_WRITER"
                    c:identifier="GARROW_RECORD_BATCH_WRITER"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_WRITER_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_WRITER_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECORD_BATCH_WRITER_GET_CLASS"
                    c:identifier="GARROW_RECORD_BATCH_WRITER_GET_CLASS"
                    introspectable="0">
      <source-position filename="arrow-glib/writer.h" line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="RankOptions"
           c:symbol-prefix="rank_options"
           c:type="GArrowRankOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowRankOptions"
           glib:get-type="garrow_rank_options_get_type"
           glib:type-struct="RankOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="880"/>
      <constructor name="new"
                   c:identifier="garrow_rank_options_new"
                   version="12.0.0">
        <source-position filename="arrow-glib/compute.h" line="884"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4587">A newly created #GArrowRankOptions.</doc>
          <type name="RankOptions" c:type="GArrowRankOptions*"/>
        </return-value>
      </constructor>
      <method name="add_sort_key"
              c:identifier="garrow_rank_options_add_sort_key"
              version="12.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4659">Add a sort key to be used.</doc>
        <source-position filename="arrow-glib/compute.h" line="898"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4661">A #GArrowRankOptions.</doc>
            <type name="RankOptions" c:type="GArrowRankOptions*"/>
          </instance-parameter>
          <parameter name="sort_key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4662">The sort key to be added.</doc>
            <type name="SortKey" c:type="GArrowSortKey*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="garrow_rank_options_equal"
              version="12.0.0">
        <source-position filename="arrow-glib/compute.h" line="887"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4602">%TRUE if both of them have the same option values, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4599">A #GArrowRankOptions.</doc>
            <type name="RankOptions" c:type="GArrowRankOptions*"/>
          </instance-parameter>
          <parameter name="other_options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4600">A #GArrowRankOptions to be compared.</doc>
            <type name="RankOptions" c:type="GArrowRankOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sort_keys"
              c:identifier="garrow_rank_options_get_sort_keys"
              version="12.0.0">
        <source-position filename="arrow-glib/compute.h" line="891"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4630">
  The sort keys to be used.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="SortKey"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4628">A #GArrowSortOptions.</doc>
            <type name="RankOptions" c:type="GArrowRankOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_sort_keys"
              c:identifier="garrow_rank_options_set_sort_keys"
              version="12.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4642">Set sort keys to be used.</doc>
        <source-position filename="arrow-glib/compute.h" line="894"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4644">A #GArrowRankOptions.</doc>
            <type name="RankOptions" c:type="GArrowRankOptions*"/>
          </instance-parameter>
          <parameter name="sort_keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="4645">The sort keys to be used.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="SortKey"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="null-placement"
                version="12.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_NULL_PLACEMENT_AT_END">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4546">Whether nulls and NaNs are placed at the start or at the end.</doc>
        <type name="NullPlacement"/>
      </property>
      <property name="tiebreaker"
                version="12.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_RANK_TIEBREAKER_FIRST">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4565">Tiebreaker for dealing with equal values in ranks.</doc>
        <type name="RankTiebreaker"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="RankOptionsClass"
            c:type="GArrowRankOptionsClass"
            glib:is-gtype-struct-for="RankOptions">
      <source-position filename="arrow-glib/compute.h" line="880"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <enumeration name="RankTiebreaker"
                 glib:type-name="GArrowRankTiebreaker"
                 glib:get-type="garrow_rank_tiebreaker_get_type"
                 c:type="GArrowRankTiebreaker">
      <member name="min"
              value="0"
              c:identifier="GARROW_RANK_TIEBREAKER_MIN"
              glib:nick="min"
              glib:name="GARROW_RANK_TIEBREAKER_MIN">
      </member>
      <member name="max"
              value="1"
              c:identifier="GARROW_RANK_TIEBREAKER_MAX"
              glib:nick="max"
              glib:name="GARROW_RANK_TIEBREAKER_MAX">
      </member>
      <member name="first"
              value="2"
              c:identifier="GARROW_RANK_TIEBREAKER_FIRST"
              glib:nick="first"
              glib:name="GARROW_RANK_TIEBREAKER_FIRST">
      </member>
      <member name="dense"
              value="3"
              c:identifier="GARROW_RANK_TIEBREAKER_DENSE"
              glib:nick="dense"
              glib:name="GARROW_RANK_TIEBREAKER_DENSE">
      </member>
    </enumeration>
    <class name="ReadOptions"
           c:symbol-prefix="read_options"
           c:type="GArrowReadOptions"
           parent="GObject.Object"
           glib:type-name="GArrowReadOptions"
           glib:get-type="garrow_read_options_get_type"
           glib:type-struct="ReadOptionsClass">
      <source-position filename="arrow-glib/ipc-options.h" line="36"/>
      <constructor name="new"
                   c:identifier="garrow_read_options_new"
                   version="1.0.0">
        <source-position filename="arrow-glib/ipc-options.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/ipc-options.cpp"
               line="169">A newly created #GArrowReadOptions.</doc>
          <type name="ReadOptions" c:type="GArrowReadOptions*"/>
        </return-value>
      </constructor>
      <method name="get_included_fields"
              c:identifier="garrow_read_options_get_included_fields"
              version="1.0.0">
        <source-position filename="arrow-glib/ipc-options.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/ipc-options.cpp"
               line="185">
  Top-level schema fields to include when deserializing
  RecordBatch. If empty, return all deserialized fields.

  It should be freed with g_free() when no longer needed.</doc>
          <array length="0" zero-terminated="0" c:type="int*">
            <type name="gint" c:type="int"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/ipc-options.cpp"
                 line="182">A #GArrowReadOptions.</doc>
            <type name="ReadOptions" c:type="GArrowReadOptions*"/>
          </instance-parameter>
          <parameter name="n_fields"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/ipc-options.cpp"
                 line="183">The number of included fields.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_included_fields"
              c:identifier="garrow_read_options_set_included_fields"
              version="1.0.0">
        <source-position filename="arrow-glib/ipc-options.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/ipc-options.cpp"
                 line="218">A #GArrowReadOptions.</doc>
            <type name="ReadOptions" c:type="GArrowReadOptions*"/>
          </instance-parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/ipc-options.cpp"
                 line="219">Top-level schema fields to
  include when deserializing RecordBatch. If empty, return all
  deserialized fields.</doc>
            <array length="1" zero-terminated="0" c:type="int*">
              <type name="gint" c:type="int"/>
            </array>
          </parameter>
          <parameter name="n_fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/ipc-options.cpp"
                 line="222">The number of included fields.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="max-recursion-depth"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="64">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="131">The maximum permitted schema nesting depth.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="use-threads"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="149">Whether to use the global CPU thread pool.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ReadOptionsClass"
            c:type="GArrowReadOptionsClass"
            glib:is-gtype-struct-for="ReadOptions">
      <source-position filename="arrow-glib/ipc-options.h" line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="Readable"
               c:symbol-prefix="readable"
               c:type="GArrowReadable"
               glib:type-name="GArrowReadable"
               glib:get-type="garrow_readable_get_type"
               glib:type-struct="ReadableInterface">
      <source-position filename="arrow-glib/readable.h" line="29"/>
      <method name="read" c:identifier="garrow_readable_read" throws="1">
        <source-position filename="arrow-glib/readable.h" line="35"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/readable.cpp"
               line="53">#GArrowBuffer that has read
  data on success, %NULL if there was an error.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="readable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/readable.cpp"
                 line="49">A #GArrowReadable.</doc>
            <type name="Readable" c:type="GArrowReadable*"/>
          </instance-parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/readable.cpp"
                 line="50">The number of bytes to be read.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_bytes"
              c:identifier="garrow_readable_read_bytes"
              version="0.17.0"
              throws="1">
        <source-position filename="arrow-glib/readable.h" line="39"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/readable.cpp"
               line="78">#GBytes that has read data on
success, %NULL if there was an error.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="readable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/readable.cpp"
                 line="74">A #GArrowReadable.</doc>
            <type name="Readable" c:type="GArrowReadable*"/>
          </instance-parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/readable.cpp"
                 line="75">The number of bytes to be read.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="ReadableInterface"
            c:type="GArrowReadableInterface"
            disguised="1"
            opaque="1"
            glib:is-gtype-struct-for="Readable">
      <source-position filename="arrow-glib/readable.h" line="29"/>
    </record>
    <class name="RecordBatch"
           c:symbol-prefix="record_batch"
           c:type="GArrowRecordBatch"
           parent="GObject.Object"
           glib:type-name="GArrowRecordBatch"
           glib:get-type="garrow_record_batch_get_type"
           glib:type-struct="RecordBatchClass">
      <source-position filename="arrow-glib/record-batch.h" line="37"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_new"
                   throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="45"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="177">A newly created #GArrowRecordBatch or %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="172">The schema of the record batch.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
          <parameter name="n_rows" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="173">The number of the rows in the record batch.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="174">The columns in the record batch.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <function name="import"
                c:identifier="garrow_record_batch_import"
                version="6.0.0"
                throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="41"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="144">An imported #GArrowRecordBatch
  on success, %NULL on error.

  You don't need to release the passed `struct ArrowArray *`,
  even if this function reports an error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <parameter name="c_abi_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="140">A `struct ArrowArray *`.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="141">A #GArrowSchema of the C ABI array.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_column"
              c:identifier="garrow_record_batch_add_column"
              version="0.9.0"
              throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="79"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="433">The newly allocated
  #GArrowRecordBatch that has a new column or %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="427">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="428">The index of the new column.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="429">The field to be added.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="430">The column to be added.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="garrow_record_batch_equal"
              version="0.4.0">
        <source-position filename="arrow-glib/record-batch.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="263">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="260">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="other_record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="261">A #GArrowRecordBatch to be compared.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal_metadata"
              c:identifier="garrow_record_batch_equal_metadata"
              version="0.17.0">
        <source-position filename="arrow-glib/record-batch.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="284">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="280">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="other_record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="281">A #GArrowRecordBatch to be compared.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </parameter>
          <parameter name="check_metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="282">Whether to compare metadata.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="export"
              c:identifier="garrow_record_batch_export"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="223">%TRUE on success, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="213">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="c_abi_array"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="214">Return location for a `struct ArrowArray *`.
  It should be freed with the `ArrowArray::release` callback then
  g_free() when no longer needed.</doc>
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
          <parameter name="c_abi_schema"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="217">Return location for a
  `struct ArrowSchema *` or %NULL.
  It should be freed with the `ArrowSchema::release` callback then
  g_free() when no longer needed.</doc>
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter"
              c:identifier="garrow_record_batch_filter"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1084"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5822">The #GArrowRecordBatch filterd
  with a boolean selection filter. Nulls in the filter will
  result in nulls in the output.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5817">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5818">The values indicates which values should be filtered out.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5819">A #GArrowFilterOptions.</doc>
            <type name="FilterOptions" c:type="GArrowFilterOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_data"
              c:identifier="garrow_record_batch_get_column_data"
              version="0.15.0">
        <source-position filename="arrow-glib/record-batch.h" line="67"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="320">The i-th column in the record batch
  on success, %NULL on out of index.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="315">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="316">The index of the target column. If it's negative, index is
  counted backward from the end of the columns. `-1` means the last
  column.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_name"
              c:identifier="garrow_record_batch_get_column_name">
        <source-position filename="arrow-glib/record-batch.h" line="69"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="344">The name of the i-th column in the record batch
  on success, %NULL on out of index</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="339">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="340">The index of the target column. If it's negative, index is
  counted backward from the end of the columns. `-1` means the last
  column.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_columns"
              c:identifier="garrow_record_batch_get_n_columns">
        <source-position filename="arrow-glib/record-batch.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="362">The number of columns in the record batch.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="360">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_rows" c:identifier="garrow_record_batch_get_n_rows">
        <source-position filename="arrow-glib/record-batch.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="375">The number of rows in the record batch.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="373">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_schema" c:identifier="garrow_record_batch_get_schema">
        <source-position filename="arrow-glib/record-batch.h" line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="303">The schema of the record batch.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="301">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_column"
              c:identifier="garrow_record_batch_remove_column"
              version="0.9.0"
              throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="84"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="465">The newly allocated
  #GArrowRecordBatch that doesn't have the column or %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="461">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="462">The index of the new column.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="serialize"
              c:identifier="garrow_record_batch_serialize"
              version="1.0.0"
              throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="89"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="492">The newly allocated
  #GArrowBuffer that contains a serialized record batch or %NULL on
  error.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="488">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="489">A #GArrowWriteOptions.</doc>
            <type name="WriteOptions" c:type="GArrowWriteOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="slice" c:identifier="garrow_record_batch_slice">
        <source-position filename="arrow-glib/record-batch.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="390">The sub #GArrowRecordBatch. It covers
  only from `offset` to `offset + length` range. The sub
  #GArrowRecordBatch shares values with the base
  #GArrowRecordBatch.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="386">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="387">The offset of sub #GArrowRecordBatch.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="388">The length of sub #GArrowRecordBatch.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort_indices"
              c:identifier="garrow_record_batch_sort_indices"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1047"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5599">The indices that would sort
  a record batch with the specified options on success, %NULL on error.</doc>
          <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5595">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5596">The options to be used.</doc>
            <type name="SortOptions" c:type="GArrowSortOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take"
              c:identifier="garrow_record_batch_take"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1005"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5394">The #GArrowChunkedArray taken from
  an array of values at indices in input array or %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5389">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5390">The indices of values to take.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5391">A #GArrowTakeOptions.</doc>
            <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_record_batch_to_string"
              version="0.4.0"
              throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="77"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="410">
  The formatted record batch content or %NULL on error.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="407">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="record-batch"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="RecordBatchBuilder"
           c:symbol-prefix="record_batch_builder"
           c:type="GArrowRecordBatchBuilder"
           parent="GObject.Object"
           glib:type-name="GArrowRecordBatchBuilder"
           glib:get-type="garrow_record_batch_builder_get_type"
           glib:type-struct="RecordBatchBuilderClass">
      <source-position filename="arrow-glib/table-builder.h" line="38"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_builder_new"
                   version="0.8.0"
                   throws="1">
        <source-position filename="arrow-glib/table-builder.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="147">A newly created #GArrowRecordBatchBuilder on success,
  %NULL on error.</doc>
          <type name="RecordBatchBuilder" c:type="GArrowRecordBatchBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="144">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="flush"
              c:identifier="garrow_record_batch_builder_flush"
              version="0.8.0"
              throws="1">
        <source-position filename="arrow-glib/table-builder.h" line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="300">The built #GArrowRecordBatch on success,
  %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="297">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_column_builder"
              c:identifier="garrow_record_batch_builder_get_column_builder"
              version="0.13.0">
        <source-position filename="arrow-glib/table-builder.h" line="62"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="272">The #GArrowArrayBuilder for
  the `i`-th column on success, %NULL on out of index.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="268">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="269">The column index. If it's negative, index is counted backward
  from the end of the columns. `-1` means the last column.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field"
              c:identifier="garrow_record_batch_builder_get_field"
              version="0.8.0"
              deprecated="1"
              deprecated-version="0.13.0">
        <doc-deprecated xml:space="preserve">
  Use garrow_record_batch_builder_get_column_builder() instead.</doc-deprecated>
        <source-position filename="arrow-glib/table-builder.h" line="57"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="251">The #GArrowArrayBuilder for
  the `i`-th field on success, %NULL on out of index.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="247">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="248">The field index. If it's negative, index is counted backward
  from the end of the fields. `-1` means the last field.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_initial_capacity"
              c:identifier="garrow_record_batch_builder_get_initial_capacity"
              version="0.8.0">
        <source-position filename="arrow-glib/table-builder.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="171">The initial capacity for array builders.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="169">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_columns"
              c:identifier="garrow_record_batch_builder_get_n_columns"
              version="0.13.0">
        <source-position filename="arrow-glib/table-builder.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="234">The number of columns.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="232">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_fields"
              c:identifier="garrow_record_batch_builder_get_n_fields"
              version="0.8.0"
              deprecated="1"
              deprecated-version="0.13.0">
        <doc-deprecated xml:space="preserve">
  Use garrow_record_batch_builder_get_n_columns() instead.</doc-deprecated>
        <source-position filename="arrow-glib/table-builder.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="217">The number of fields.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="215">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_schema"
              c:identifier="garrow_record_batch_builder_get_schema"
              version="0.8.0">
        <source-position filename="arrow-glib/table-builder.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/table-builder.cpp"
               line="201">The #GArrowSchema of the record batch builder.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="199">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_initial_capacity"
              c:identifier="garrow_record_batch_builder_set_initial_capacity"
              version="0.8.0">
        <source-position filename="arrow-glib/table-builder.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="184">A #GArrowRecordBatchBuilder.</doc>
            <type name="RecordBatchBuilder"
                  c:type="GArrowRecordBatchBuilder*"/>
          </instance-parameter>
          <parameter name="capacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table-builder.cpp"
                 line="185">The new initial capacity for array builders.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="record-batch-builder"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RecordBatchBuilderClass"
            c:type="GArrowRecordBatchBuilderClass"
            glib:is-gtype-struct-for="RecordBatchBuilder">
      <source-position filename="arrow-glib/table-builder.h" line="38"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="RecordBatchClass"
            c:type="GArrowRecordBatchClass"
            glib:is-gtype-struct-for="RecordBatch">
      <source-position filename="arrow-glib/record-batch.h" line="37"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="RecordBatchDatum"
           c:symbol-prefix="record_batch_datum"
           c:type="GArrowRecordBatchDatum"
           parent="Datum"
           glib:type-name="GArrowRecordBatchDatum"
           glib:get-type="garrow_record_batch_datum_get_type"
           glib:type-struct="RecordBatchDatumClass">
      <source-position filename="arrow-glib/datum.h" line="113"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_datum_new"
                   version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="117"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="618">A newly created #GArrowRecordBatchDatum.</doc>
          <type name="RecordBatchDatum" c:type="GArrowRecordBatchDatum*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="616">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="RecordBatch"/>
      </property>
      <field name="parent_instance">
        <type name="Datum" c:type="GArrowDatum"/>
      </field>
    </class>
    <record name="RecordBatchDatumClass"
            c:type="GArrowRecordBatchDatumClass"
            glib:is-gtype-struct-for="RecordBatchDatum">
      <source-position filename="arrow-glib/datum.h" line="113"/>
      <field name="parent_class">
        <type name="DatumClass" c:type="GArrowDatumClass"/>
      </field>
    </record>
    <class name="RecordBatchFileReader"
           c:symbol-prefix="record_batch_file_reader"
           c:type="GArrowRecordBatchFileReader"
           parent="GObject.Object"
           glib:type-name="GArrowRecordBatchFileReader"
           glib:get-type="garrow_record_batch_file_reader_get_type"
           glib:type-struct="RecordBatchFileReaderClass">
      <doc xml:space="preserve"
           filename="arrow-glib/reader.h"
           line="182">It wraps `arrow::ipc::RecordBatchFileReader`.</doc>
      <source-position filename="arrow-glib/reader.h" line="197"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_file_reader_new"
                   version="0.4.0"
                   throws="1">
        <source-position filename="arrow-glib/reader.h" line="202"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="570">A newly created #GArrowRecordBatchFileReader
  or %NULL on error.</doc>
          <type name="RecordBatchFileReader"
                c:type="GArrowRecordBatchFileReader*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="567">The file to be read.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_n_record_batches"
              c:identifier="garrow_record_batch_file_reader_get_n_record_batches"
              version="0.4.0">
        <source-position filename="arrow-glib/reader.h" line="208"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="611">The number of record batches in the file.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="609">A #GArrowRecordBatchFileReader.</doc>
            <type name="RecordBatchFileReader"
                  c:type="GArrowRecordBatchFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_record_batch"
              c:identifier="garrow_record_batch_file_reader_get_record_batch"
              version="0.4.0"
              deprecated="1"
              deprecated-version="0.5.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_record_batch_file_reader_read_record_batch() instead.</doc-deprecated>
        <source-position filename="arrow-glib/reader.h" line="214"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="644">
  The i-th record batch in the file or %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="640">A #GArrowRecordBatchFileReader.</doc>
            <type name="RecordBatchFileReader"
                  c:type="GArrowRecordBatchFileReader*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="641">The index of the target record batch.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_schema"
              c:identifier="garrow_record_batch_file_reader_get_schema"
              version="0.4.0">
        <source-position filename="arrow-glib/reader.h" line="206"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="595">The schema in the file.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="593">A #GArrowRecordBatchFileReader.</doc>
            <type name="RecordBatchFileReader"
                  c:type="GArrowRecordBatchFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="garrow_record_batch_file_reader_get_version"
              version="0.4.0">
        <source-position filename="arrow-glib/reader.h" line="210"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="626">The format version in the file.</doc>
          <type name="MetadataVersion" c:type="GArrowMetadataVersion"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="624">A #GArrowRecordBatchFileReader.</doc>
            <type name="RecordBatchFileReader"
                  c:type="GArrowRecordBatchFileReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_record_batch"
              c:identifier="garrow_record_batch_file_reader_read_record_batch"
              version="0.5.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="219"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="666">
  The i-th record batch in the file or %NULL on error.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="662">A #GArrowRecordBatchFileReader.</doc>
            <type name="RecordBatchFileReader"
                  c:type="GArrowRecordBatchFileReader*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="663">The index of the target record batch.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="record-batch-file-reader"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RecordBatchFileReaderClass"
            c:type="GArrowRecordBatchFileReaderClass"
            glib:is-gtype-struct-for="RecordBatchFileReader">
      <source-position filename="arrow-glib/reader.h" line="197"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="RecordBatchFileWriter"
           c:symbol-prefix="record_batch_file_writer"
           c:type="GArrowRecordBatchFileWriter"
           parent="RecordBatchStreamWriter"
           glib:type-name="GArrowRecordBatchFileWriter"
           glib:get-type="garrow_record_batch_file_writer_get_type"
           glib:type-struct="RecordBatchFileWriterClass">
      <doc xml:space="preserve"
           filename="arrow-glib/writer.h"
           line="167">It wraps `arrow::ipc::RecordBatchFileWriter`.</doc>
      <source-position filename="arrow-glib/writer.h" line="182"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_file_writer_new"
                   version="0.4.0"
                   throws="1">
        <source-position filename="arrow-glib/writer.h" line="187"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/writer.cpp"
               line="269">A newly created #GArrowRecordBatchFileWriter
  or %NULL on error.</doc>
          <type name="RecordBatchFileWriter"
                c:type="GArrowRecordBatchFileWriter*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="265">The output of the writer.</doc>
            <type name="OutputStream" c:type="GArrowOutputStream*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="266">The schema of the writer.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="RecordBatchStreamWriter"
              c:type="GArrowRecordBatchStreamWriter"/>
      </field>
    </class>
    <record name="RecordBatchFileWriterClass"
            c:type="GArrowRecordBatchFileWriterClass"
            glib:is-gtype-struct-for="RecordBatchFileWriter">
      <source-position filename="arrow-glib/writer.h" line="182"/>
      <field name="parent_class">
        <type name="RecordBatchStreamWriterClass"
              c:type="GArrowRecordBatchStreamWriterClass"/>
      </field>
    </record>
    <class name="RecordBatchIterator"
           c:symbol-prefix="record_batch_iterator"
           c:type="GArrowRecordBatchIterator"
           parent="GObject.Object"
           glib:type-name="GArrowRecordBatchIterator"
           glib:get-type="garrow_record_batch_iterator_get_type"
           glib:type-struct="RecordBatchIteratorClass">
      <source-position filename="arrow-glib/record-batch.h" line="104"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_iterator_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/record-batch.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="603">A newly created #GArrowRecordBatchIterator.</doc>
          <type name="RecordBatchIterator"
                c:type="GArrowRecordBatchIterator*"/>
        </return-value>
        <parameters>
          <parameter name="record_batches" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="600">
  The record batches.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="RecordBatch"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal"
              c:identifier="garrow_record_batch_iterator_equal"
              version="0.17.0">
        <source-position filename="arrow-glib/record-batch.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="651">%TRUE if both iterators are the same, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iterator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="648">A #GArrowRecordBatchIterator.</doc>
            <type name="RecordBatchIterator"
                  c:type="GArrowRecordBatchIterator*"/>
          </instance-parameter>
          <parameter name="other_iterator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="649">A #GArrowRecordBatchIterator to be compared.</doc>
            <type name="RecordBatchIterator"
                  c:type="GArrowRecordBatchIterator*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next"
              c:identifier="garrow_record_batch_iterator_next"
              version="0.17.0"
              throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="112"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="625">
  The next #GArrowRecordBatch, or %NULL when the iterator is completed.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iterator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="622">A #GArrowRecordBatchIterator.</doc>
            <type name="RecordBatchIterator"
                  c:type="GArrowRecordBatchIterator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_list"
              c:identifier="garrow_record_batch_iterator_to_list"
              version="0.17.0"
              throws="1">
        <source-position filename="arrow-glib/record-batch.h" line="122"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/record-batch.cpp"
               line="669">
  A #GList contains every moved elements from the iterator.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="RecordBatch"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="iterator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/record-batch.cpp"
                 line="666">A #GArrowRecordBatchIterator.</doc>
            <type name="RecordBatchIterator"
                  c:type="GArrowRecordBatchIterator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="iterator"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RecordBatchIteratorClass"
            c:type="GArrowRecordBatchIteratorClass"
            glib:is-gtype-struct-for="RecordBatchIterator">
      <source-position filename="arrow-glib/record-batch.h" line="104"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="RecordBatchReader"
           c:symbol-prefix="record_batch_reader"
           c:type="GArrowRecordBatchReader"
           parent="GObject.Object"
           glib:type-name="GArrowRecordBatchReader"
           glib:get-type="garrow_record_batch_reader_get_type"
           glib:type-struct="RecordBatchReaderClass">
      <source-position filename="arrow-glib/reader.h" line="42"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_reader_new"
                   version="6.0.0"
                   throws="1">
        <source-position filename="arrow-glib/reader.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="192">The schema in the stream on success, %NULL on error.</doc>
          <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
        </return-value>
        <parameters>
          <parameter name="record_batches" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="187">
  A list of #GArrowRecordBatch.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="RecordBatch"/>
            </type>
          </parameter>
          <parameter name="schema"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="189">A #GArrowSchema to confirm to.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="import"
                c:identifier="garrow_record_batch_reader_import"
                version="6.0.0"
                throws="1">
        <source-position filename="arrow-glib/reader.h" line="46"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="162">An imported
  #GArrowRecordBatchReader on success, %NULL on error.

  You don't need to release the passed `struct ArrowArrayStream *`,
  even if this function reports an error.</doc>
          <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
        </return-value>
        <parameters>
          <parameter name="c_abi_array_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="159">A `struct ArrowArrayStream *`.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="export"
              c:identifier="garrow_record_batch_reader_export"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="57"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="227">An exported
  #GArrowRecordBatchReader as `struct ArrowArrayStream *` on
  success, %NULL on error.

  It should be freed with the `ArrowArrayStream::release` callback then
  g_free() when no longer needed.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="224">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_next_record_batch"
              c:identifier="garrow_record_batch_reader_get_next_record_batch"
              version="0.4.0"
              deprecated="1"
              deprecated-version="0.5.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_record_batch_reader_read_next() instead.</doc-deprecated>
        <source-position filename="arrow-glib/reader.h" line="64"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="273">
  The next record batch in the stream or %NULL on end of stream.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="270">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_schema"
              c:identifier="garrow_record_batch_reader_get_schema"
              version="0.4.0">
        <source-position filename="arrow-glib/reader.h" line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="256">The schema in the stream.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="254">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sources"
              c:identifier="garrow_record_batch_reader_get_sources"
              version="13.0.0">
        <source-position filename="arrow-glib/reader.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="370">A list of source
  of this reader.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GObject.Object"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="368">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_all"
              c:identifier="garrow_record_batch_reader_read_all"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="79"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="344">
  The all record batches in the stream as #GArrowTable.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="341">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_next"
              c:identifier="garrow_record_batch_reader_read_next"
              version="0.8.0"
              throws="1">
        <source-position filename="arrow-glib/reader.h" line="74"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="313">
  The next record batch in the stream or %NULL on end of stream.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="310">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_next_record_batch"
              c:identifier="garrow_record_batch_reader_read_next_record_batch"
              version="0.5.0"
              deprecated="1"
              deprecated-version="0.8.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_record_batch_reader_read_next() instead.</doc-deprecated>
        <source-position filename="arrow-glib/reader.h" line="70"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="293">
  The next record batch in the stream or %NULL on end of stream.</doc>
          <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="290">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="record-batch-reader"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="sources"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RecordBatchReaderClass"
            c:type="GArrowRecordBatchReaderClass"
            glib:is-gtype-struct-for="RecordBatchReader">
      <source-position filename="arrow-glib/reader.h" line="42"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="RecordBatchStreamReader"
           c:symbol-prefix="record_batch_stream_reader"
           c:type="GArrowRecordBatchStreamReader"
           parent="RecordBatchReader"
           glib:type-name="GArrowRecordBatchStreamReader"
           glib:get-type="garrow_record_batch_stream_reader_get_type"
           glib:type-struct="RecordBatchStreamReaderClass">
      <doc xml:space="preserve"
           filename="arrow-glib/reader.h"
           line="131">It wraps `arrow::ipc::RecordBatchStreamReader`.</doc>
      <source-position filename="arrow-glib/reader.h" line="146"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_stream_reader_new"
                   version="0.4.0"
                   throws="1">
        <source-position filename="arrow-glib/reader.h" line="151"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="454">A newly created #GArrowRecordBatchStreamReader
  or %NULL on error.</doc>
          <type name="RecordBatchStreamReader"
                c:type="GArrowRecordBatchStreamReader*"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="451">The stream to be read.</doc>
            <type name="InputStream" c:type="GArrowInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="RecordBatchReader" c:type="GArrowRecordBatchReader"/>
      </field>
    </class>
    <record name="RecordBatchStreamReaderClass"
            c:type="GArrowRecordBatchStreamReaderClass"
            glib:is-gtype-struct-for="RecordBatchStreamReader">
      <source-position filename="arrow-glib/reader.h" line="146"/>
      <field name="parent_class">
        <type name="RecordBatchReaderClass"
              c:type="GArrowRecordBatchReaderClass"/>
      </field>
    </record>
    <class name="RecordBatchStreamWriter"
           c:symbol-prefix="record_batch_stream_writer"
           c:type="GArrowRecordBatchStreamWriter"
           parent="RecordBatchWriter"
           glib:type-name="GArrowRecordBatchStreamWriter"
           glib:get-type="garrow_record_batch_stream_writer_get_type"
           glib:type-struct="RecordBatchStreamWriterClass">
      <doc xml:space="preserve"
           filename="arrow-glib/writer.h"
           line="115">It wraps `arrow::ipc::RecordBatchStreamWriter`.</doc>
      <source-position filename="arrow-glib/writer.h" line="130"/>
      <constructor name="new"
                   c:identifier="garrow_record_batch_stream_writer_new"
                   version="0.4.0"
                   throws="1">
        <source-position filename="arrow-glib/writer.h" line="135"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/writer.cpp"
               line="224">A newly created #GArrowRecordBatchStreamWriter
  or %NULL on error.</doc>
          <type name="RecordBatchStreamWriter"
                c:type="GArrowRecordBatchStreamWriter*"/>
        </return-value>
        <parameters>
          <parameter name="sink" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="220">The output of the writer.</doc>
            <type name="OutputStream" c:type="GArrowOutputStream*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="221">The schema of the writer.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="RecordBatchWriter" c:type="GArrowRecordBatchWriter"/>
      </field>
    </class>
    <record name="RecordBatchStreamWriterClass"
            c:type="GArrowRecordBatchStreamWriterClass"
            glib:is-gtype-struct-for="RecordBatchStreamWriter">
      <source-position filename="arrow-glib/writer.h" line="130"/>
      <field name="parent_class">
        <type name="RecordBatchWriterClass"
              c:type="GArrowRecordBatchWriterClass"/>
      </field>
    </record>
    <class name="RecordBatchWriter"
           c:symbol-prefix="record_batch_writer"
           c:type="GArrowRecordBatchWriter"
           parent="GObject.Object"
           glib:type-name="GArrowRecordBatchWriter"
           glib:get-type="garrow_record_batch_writer_get_type"
           glib:type-struct="RecordBatchWriterClass">
      <doc xml:space="preserve"
           filename="arrow-glib/writer.h"
           line="56">It wraps `arrow::ipc::RecordBatchWriter`.</doc>
      <source-position filename="arrow-glib/writer.h" line="71"/>
      <method name="close"
              c:identifier="garrow_record_batch_writer_close"
              version="0.4.0"
              throws="1">
        <source-position filename="arrow-glib/writer.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/writer.cpp"
               line="189">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="186">A #GArrowRecordBatchWriter.</doc>
            <type name="RecordBatchWriter" c:type="GArrowRecordBatchWriter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="write_record_batch"
              c:identifier="garrow_record_batch_writer_write_record_batch"
              version="0.4.0"
              throws="1">
        <source-position filename="arrow-glib/writer.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/writer.cpp"
               line="141">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="137">A #GArrowRecordBatchWriter.</doc>
            <type name="RecordBatchWriter" c:type="GArrowRecordBatchWriter*"/>
          </instance-parameter>
          <parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="138">The record batch to be written.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_table"
              c:identifier="garrow_record_batch_writer_write_table"
              version="0.8.0"
              throws="1">
        <source-position filename="arrow-glib/writer.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/writer.cpp"
               line="166">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="162">A #GArrowRecordBatchWriter.</doc>
            <type name="RecordBatchWriter" c:type="GArrowRecordBatchWriter*"/>
          </instance-parameter>
          <parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writer.cpp"
                 line="163">The table to be written.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="record-batch-writer"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RecordBatchWriterClass"
            c:type="GArrowRecordBatchWriterClass"
            glib:is-gtype-struct-for="RecordBatchWriter">
      <source-position filename="arrow-glib/writer.h" line="71"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ResizableBuffer"
           c:symbol-prefix="resizable_buffer"
           c:type="GArrowResizableBuffer"
           parent="MutableBuffer"
           glib:type-name="GArrowResizableBuffer"
           glib:get-type="garrow_resizable_buffer_get_type"
           glib:type-struct="ResizableBufferClass">
      <source-position filename="arrow-glib/buffer.h" line="94"/>
      <constructor name="new"
                   c:identifier="garrow_resizable_buffer_new"
                   version="0.10.0"
                   throws="1">
        <source-position filename="arrow-glib/buffer.h" line="97"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="566">A newly created #GArrowResizableBuffer.</doc>
          <type name="ResizableBuffer" c:type="GArrowResizableBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="initial_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="563">The initial buffer size in bytes.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="reserve"
              c:identifier="garrow_resizable_buffer_reserve"
              version="0.3.0"
              throws="1">
        <source-position filename="arrow-glib/buffer.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="613">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="609">A #GArrowResizableBuffer.</doc>
            <type name="ResizableBuffer" c:type="GArrowResizableBuffer*"/>
          </instance-parameter>
          <parameter name="new_capacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="610">The new buffer capacity in bytes.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="resize"
              c:identifier="garrow_resizable_buffer_resize"
              version="0.3.0"
              throws="1">
        <source-position filename="arrow-glib/buffer.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/buffer.cpp"
               line="591">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="587">A #GArrowResizableBuffer.</doc>
            <type name="ResizableBuffer" c:type="GArrowResizableBuffer*"/>
          </instance-parameter>
          <parameter name="new_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/buffer.cpp"
                 line="588">The new buffer size in bytes.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="MutableBuffer" c:type="GArrowMutableBuffer"/>
      </field>
    </class>
    <record name="ResizableBufferClass"
            c:type="GArrowResizableBufferClass"
            glib:is-gtype-struct-for="ResizableBuffer">
      <source-position filename="arrow-glib/buffer.h" line="94"/>
      <field name="parent_class">
        <type name="MutableBufferClass" c:type="GArrowMutableBufferClass"/>
      </field>
    </record>
    <enumeration name="RoundMode"
                 version="7.0.0"
                 glib:type-name="GArrowRoundMode"
                 glib:get-type="garrow_round_mode_get_type"
                 c:type="GArrowRoundMode">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="645">They correspond to the values of `arrow::compute::RoundMode`.</doc>
      <member name="down"
              value="0"
              c:identifier="GARROW_ROUND_DOWN"
              glib:nick="down"
              glib:name="GARROW_ROUND_DOWN">
      </member>
      <member name="up"
              value="1"
              c:identifier="GARROW_ROUND_UP"
              glib:nick="up"
              glib:name="GARROW_ROUND_UP">
      </member>
      <member name="towards_zero"
              value="2"
              c:identifier="GARROW_ROUND_TOWARDS_ZERO"
              glib:nick="towards-zero"
              glib:name="GARROW_ROUND_TOWARDS_ZERO">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="651">Get the integral part without fractional digits (aka "trunc")
@GARROW_ROUND_TOWARDS_INFINITY,
  Round negative values with @GARROW_ROUND_MODE_DOWN rule
  and positive values with UP rule (aka "away from zero")
@GARROW_ROUND_HALF_DOWN,
  Round ties with @GARROW_ROUND_MODE_DOWN rule
  (also called "round half towards negative infinity")
@GARROW_ROUND_HALF_UP,
  Round ties with @GARROW_ROUND_MODE_UP rule
  (also called "round half towards positive infinity")
@GARROW_ROUND_HALF_TOWARDS_ZERO,
  Round ties with GARROW_ROUND_MODE_TOWARDS_ZERO rule
  (also called "round half away from infinity")
@GARROW_ROUND_HALF_TOWARDS_INFINITY,
  Round ties with GARROW_ROUND_MODE_TOWARDS_INFINITY rule
  (also called "round half away from zero")
@GARROW_ROUND_HALF_TO_EVEN,
  Round ties to nearest even integer
@GARROW_ROUND_HALF_TO_ODD,
  Round ties to nearest odd integer</doc>
      </member>
      <member name="towards_infinity"
              value="3"
              c:identifier="GARROW_ROUND_TOWARDS_INFINITY"
              glib:nick="towards-infinity"
              glib:name="GARROW_ROUND_TOWARDS_INFINITY">
      </member>
      <member name="half_down"
              value="4"
              c:identifier="GARROW_ROUND_HALF_DOWN"
              glib:nick="half-down"
              glib:name="GARROW_ROUND_HALF_DOWN">
      </member>
      <member name="half_up"
              value="5"
              c:identifier="GARROW_ROUND_HALF_UP"
              glib:nick="half-up"
              glib:name="GARROW_ROUND_HALF_UP">
      </member>
      <member name="half_towards_zero"
              value="6"
              c:identifier="GARROW_ROUND_HALF_TOWARDS_ZERO"
              glib:nick="half-towards-zero"
              glib:name="GARROW_ROUND_HALF_TOWARDS_ZERO">
      </member>
      <member name="half_towards_infinity"
              value="7"
              c:identifier="GARROW_ROUND_HALF_TOWARDS_INFINITY"
              glib:nick="half-towards-infinity"
              glib:name="GARROW_ROUND_HALF_TOWARDS_INFINITY">
      </member>
      <member name="half_to_even"
              value="8"
              c:identifier="GARROW_ROUND_HALF_TO_EVEN"
              glib:nick="half-to-even"
              glib:name="GARROW_ROUND_HALF_TO_EVEN">
      </member>
      <member name="half_to_odd"
              value="9"
              c:identifier="GARROW_ROUND_HALF_TO_ODD"
              glib:nick="half-to-odd"
              glib:name="GARROW_ROUND_HALF_TO_ODD">
      </member>
    </enumeration>
    <class name="RoundOptions"
           c:symbol-prefix="round_options"
           c:type="GArrowRoundOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowRoundOptions"
           glib:get-type="garrow_round_options_get_type"
           glib:type-struct="RoundOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="700"/>
      <constructor name="new"
                   c:identifier="garrow_round_options_new"
                   version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="704"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3699">A newly created #GArrowRoundOptions.</doc>
          <type name="RoundOptions" c:type="GArrowRoundOptions*"/>
        </return-value>
      </constructor>
      <property name="mode"
                version="7.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_ROUND_HALF_TO_EVEN">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3678">The rounding and tie-breaking mode.</doc>
        <type name="RoundMode"/>
      </property>
      <property name="n-digits"
                version="7.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3660">The rounding precision (number of digits to round to).</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="RoundOptionsClass"
            c:type="GArrowRoundOptionsClass"
            glib:is-gtype-struct-for="RoundOptions">
      <source-position filename="arrow-glib/compute.h" line="700"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="RoundToMultipleOptions"
           c:symbol-prefix="round_to_multiple_options"
           c:type="GArrowRoundToMultipleOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowRoundToMultipleOptions"
           glib:get-type="garrow_round_to_multiple_options_get_type"
           glib:type-struct="RoundToMultipleOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="717"/>
      <constructor name="new"
                   c:identifier="garrow_round_to_multiple_options_new"
                   version="7.0.0">
        <source-position filename="arrow-glib/compute.h" line="721"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3871">A newly created #GArrowRoundToMultipleOptions.</doc>
          <type name="RoundToMultipleOptions"
                c:type="GArrowRoundToMultipleOptions*"/>
        </return-value>
      </constructor>
      <property name="mode"
                version="7.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_ROUND_HALF_TO_EVEN">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3850">The rounding and tie-breaking mode.</doc>
        <type name="RoundMode"/>
      </property>
      <property name="multiple"
                version="7.0.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3829">The rounding scale (multiple to round to).

Should be a scalar of a type compatible with the argument to be rounded.
For example, rounding a decimal value means a decimal multiple is
required. Rounding a floating point or integer value means a floating
point scalar is required.</doc>
        <type name="Scalar"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="RoundToMultipleOptionsClass"
            c:type="GArrowRoundToMultipleOptionsClass"
            glib:is-gtype-struct-for="RoundToMultipleOptions">
      <source-position filename="arrow-glib/compute.h" line="717"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="RunEndEncodeOptions"
           c:symbol-prefix="run_end_encode_options"
           c:type="GArrowRunEndEncodeOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowRunEndEncodeOptions"
           glib:get-type="garrow_run_end_encode_options_get_type"
           glib:type-struct="RunEndEncodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="1099"/>
      <constructor name="new"
                   c:identifier="garrow_run_end_encode_options_new"
                   version="13.0.0">
        <source-position filename="arrow-glib/compute.h" line="1103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5975">A newly created #GArrowRunEndEncodeOptions.</doc>
          <type name="RunEndEncodeOptions"
                c:type="GArrowRunEndEncodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="run_end_data_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5972">A #GArrowDataType for run-end. If this
  is %NULL, garrow_int32_data_type_new() is used.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="run-end-data-type"
                version="13.0.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="5953">The data type for run-end.</doc>
        <type name="DataType"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="RunEndEncodeOptionsClass"
            c:type="GArrowRunEndEncodeOptionsClass"
            glib:is-gtype-struct-for="RunEndEncodeOptions">
      <source-position filename="arrow-glib/compute.h" line="1099"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="RunEndEncodedArray"
           c:symbol-prefix="run_end_encoded_array"
           c:type="GArrowRunEndEncodedArray"
           parent="Array"
           glib:type-name="GArrowRunEndEncodedArray"
           glib:get-type="garrow_run_end_encoded_array_get_type"
           glib:type-struct="RunEndEncodedArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="263"/>
      <constructor name="new"
                   c:identifier="garrow_run_end_encoded_array_new"
                   version="13.0.0"
                   throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="267"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1892">A newly created #GArrowRunEndEncodedArray
  or %NULL on error.</doc>
          <type name="RunEndEncodedArray" c:type="GArrowRunEndEncodedArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1885">The data type of the run-end encoded array.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="logical_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1886">The logical length of the run-end encoded array.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="run_ends" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1887">The run-ends of the run-end encoded array.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1888">The values of the run-end encoded array.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="logical_offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1889">The offset of the run-end encoded array.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="decode"
              c:identifier="garrow_run_end_encoded_array_decode"
              version="13.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1113"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="6047">
  A newly decoded #GArrowArray for the @array on success,
  %NULL on error.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="6044">A #GArrowRunEndEncodeArray to be decoded.</doc>
            <type name="RunEndEncodedArray"
                  c:type="GArrowRunEndEncodedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_physical_length"
              c:identifier="garrow_run_end_encoded_array_find_physical_length"
              version="13.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="293"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="2073">Find the physical length of this array.

  The physical length of an run-end encoded array is the number of
  physical values (and run-ends) necessary to represent the logical
  range of values from offset to length.

  Avoid calling this function if the physical length can be
  estabilished in some other way (e.g. when iterating over the runs
  sequentially until the end). This function uses binary-search, so
  it has a O(log N) cost.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="2071">A #GArrowRunEndEncodedArray.</doc>
            <type name="RunEndEncodedArray"
                  c:type="GArrowRunEndEncodedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_physical_offset"
              c:identifier="garrow_run_end_encoded_array_find_physical_offset"
              version="13.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="289"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="2053">Find the physical offset of this array.

  This function uses binary-search, so it has a O(log N) cost.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="2051">A #GArrowRunEndEncodedArray.</doc>
            <type name="RunEndEncodedArray"
                  c:type="GArrowRunEndEncodedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_logical_run_ends"
              c:identifier="garrow_run_end_encoded_array_get_logical_run_ends"
              version="13.0.0"
              throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="281"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1990">The logical indexes of each run-end or
  %NULL on error.

  If a non-zero logical offset is set, this function allocates a
  new array and rewrites all the run end values to be relative to
  the logical offset and cuts the end of the array to the logical
  length.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1987">A #GArrowRunEndEncodedArray.</doc>
            <type name="RunEndEncodedArray"
                  c:type="GArrowRunEndEncodedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_logical_values"
              c:identifier="garrow_run_end_encoded_array_get_logical_values"
              version="13.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="286"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="2028">The logical values of each run.

  If a non-zero logical offset is set, this function allocates a
  new array containing only the values within the logical range.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="2026">A #GArrowRunEndEncodedArray.</doc>
            <type name="RunEndEncodedArray"
                  c:type="GArrowRunEndEncodedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_run_ends"
              c:identifier="garrow_run_end_encoded_array_get_run_ends"
              glib:get-property="run-ends"
              version="13.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="275"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1937">The indexes of each run-end.

  The physical offset to the array is applied.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1935">A #GArrowRunEndEncodedArray.</doc>
            <type name="RunEndEncodedArray"
                  c:type="GArrowRunEndEncodedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_run_end_encoded_array_get_values"
              glib:get-property="values"
              version="13.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="278"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1963">The values of each run.

  The physical offset to the array is applied.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1961">A #GArrowRunEndEncodedArray.</doc>
            <type name="RunEndEncodedArray"
                  c:type="GArrowRunEndEncodedArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="run-ends"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_run_ends">
        <type name="Array"/>
      </property>
      <property name="values"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_values">
        <type name="Array"/>
      </property>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <record name="RunEndEncodedArrayClass"
            c:type="GArrowRunEndEncodedArrayClass"
            glib:is-gtype-struct-for="RunEndEncodedArray">
      <source-position filename="arrow-glib/composite-array.h" line="263"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="RunEndEncodedDataType"
           c:symbol-prefix="run_end_encoded_data_type"
           c:type="GArrowRunEndEncodedDataType"
           parent="FixedWidthDataType"
           glib:type-name="GArrowRunEndEncodedDataType"
           glib:get-type="garrow_run_end_encoded_data_type_get_type"
           glib:type-struct="RunEndEncodedDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="209"/>
      <constructor name="new"
                   c:identifier="garrow_run_end_encoded_data_type_new"
                   version="13.0.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="213"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="743">The newly created run-end encoded data type.</doc>
          <type name="RunEndEncodedDataType"
                c:type="GArrowRunEndEncodedDataType*"/>
        </return-value>
        <parameters>
          <parameter name="run_end_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="740">The data type of run-end.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="value_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="741">The data type of value.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_run_end_data_type"
              c:identifier="garrow_run_end_encoded_data_type_get_run_end_data_type"
              version="13.0.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="217"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="763">The #GArrowDataType of run-end.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="761">The #GArrowRunEndEncodedDataType.</doc>
            <type name="RunEndEncodedDataType"
                  c:type="GArrowRunEndEncodedDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_data_type"
              c:identifier="garrow_run_end_encoded_data_type_get_value_data_type"
              version="13.0.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="221"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="782">The #GArrowDataType of value.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="780">The #GArrowRunEndEncodedDataType.</doc>
            <type name="RunEndEncodedDataType"
                  c:type="GArrowRunEndEncodedDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FixedWidthDataType" c:type="GArrowFixedWidthDataType"/>
      </field>
    </class>
    <record name="RunEndEncodedDataTypeClass"
            c:type="GArrowRunEndEncodedDataTypeClass"
            glib:is-gtype-struct-for="RunEndEncodedDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="209"/>
      <field name="parent_class">
        <type name="FixedWidthDataTypeClass"
              c:type="GArrowFixedWidthDataTypeClass"/>
      </field>
    </record>
    <class name="S3FileSystem"
           c:symbol-prefix="s3_file_system"
           c:type="GArrowS3FileSystem"
           parent="FileSystem"
           glib:type-name="GArrowS3FileSystem"
           glib:get-type="garrow_s3_file_system_get_type"
           glib:type-struct="S3FileSystemClass">
      <source-position filename="arrow-glib/file-system.h" line="333"/>
      <field name="parent_instance">
        <type name="FileSystem" c:type="GArrowFileSystem"/>
      </field>
    </class>
    <record name="S3FileSystemClass"
            c:type="GArrowS3FileSystemClass"
            glib:is-gtype-struct-for="S3FileSystem">
      <source-position filename="arrow-glib/file-system.h" line="333"/>
      <field name="parent_class">
        <type name="FileSystemClass" c:type="GArrowFileSystemClass"/>
      </field>
    </record>
    <class name="S3GlobalOptions"
           c:symbol-prefix="s3_global_options"
           c:type="GArrowS3GlobalOptions"
           parent="GObject.Object"
           glib:type-name="GArrowS3GlobalOptions"
           glib:get-type="garrow_s3_global_options_get_type"
           glib:type-struct="S3GlobalOptionsClass">
      <source-position filename="arrow-glib/file-system.h" line="305"/>
      <constructor name="new"
                   c:identifier="garrow_s3_global_options_new"
                   version="7.0.0">
        <source-position filename="arrow-glib/file-system.h" line="309"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1497">A newly created #GArrowS3GlobalOptions.</doc>
          <type name="S3GlobalOptions" c:type="GArrowS3GlobalOptions*"/>
        </return-value>
      </constructor>
      <property name="log-level"
                version="7.0.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="GARROW_S3_LOG_LEVEL_FATAL">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1475">The log level of S3 APIs.</doc>
        <type name="S3LogLevel"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="S3GlobalOptionsClass"
            c:type="GArrowS3GlobalOptionsClass"
            glib:is-gtype-struct-for="S3GlobalOptions">
      <source-position filename="arrow-glib/file-system.h" line="305"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="S3LogLevel"
                 version="7.0.0"
                 glib:type-name="GArrowS3LogLevel"
                 glib:get-type="garrow_s3_log_level_get_type"
                 c:type="GArrowS3LogLevel">
      <doc xml:space="preserve"
           filename="arrow-glib/file-system.h"
           line="271">They are corresponding to `arrow::fs::S3LogLevel` values.</doc>
      <member name="off"
              value="0"
              c:identifier="GARROW_S3_LOG_LEVEL_OFF"
              glib:nick="off"
              glib:name="GARROW_S3_LOG_LEVEL_OFF">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="273">Off.</doc>
      </member>
      <member name="fatal"
              value="1"
              c:identifier="GARROW_S3_LOG_LEVEL_FATAL"
              glib:nick="fatal"
              glib:name="GARROW_S3_LOG_LEVEL_FATAL">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="274">Fatal. This is the default.</doc>
      </member>
      <member name="error"
              value="2"
              c:identifier="GARROW_S3_LOG_LEVEL_ERROR"
              glib:nick="error"
              glib:name="GARROW_S3_LOG_LEVEL_ERROR">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="275">Error.</doc>
      </member>
      <member name="warn"
              value="3"
              c:identifier="GARROW_S3_LOG_LEVEL_WARN"
              glib:nick="warn"
              glib:name="GARROW_S3_LOG_LEVEL_WARN">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="276">Warn.</doc>
      </member>
      <member name="info"
              value="4"
              c:identifier="GARROW_S3_LOG_LEVEL_INFO"
              glib:nick="info"
              glib:name="GARROW_S3_LOG_LEVEL_INFO">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="277">Info.</doc>
      </member>
      <member name="debug"
              value="5"
              c:identifier="GARROW_S3_LOG_LEVEL_DEBUG"
              glib:nick="debug"
              glib:name="GARROW_S3_LOG_LEVEL_DEBUG">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="278">Debug.</doc>
      </member>
      <member name="trace"
              value="6"
              c:identifier="GARROW_S3_LOG_LEVEL_TRACE"
              glib:nick="trace"
              glib:name="GARROW_S3_LOG_LEVEL_TRACE">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.h"
             line="279">Trace.</doc>
      </member>
    </enumeration>
    <class name="Scalar"
           c:symbol-prefix="scalar"
           c:type="GArrowScalar"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GArrowScalar"
           glib:get-type="garrow_scalar_get_type"
           glib:type-struct="ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="36"/>
      <function name="parse"
                c:identifier="garrow_scalar_parse"
                version="5.0.0"
                throws="1">
        <source-position filename="arrow-glib/scalar.h" line="40"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="244">
  A newly created #GArrowScalar if the data is parsed successfully,
  %NULL otherwise.</doc>
          <type name="Scalar" c:type="GArrowScalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="239">A #GArrowDataType for the parsed scalar.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="240">Data to be parsed.</doc>
            <array length="2" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="241">The number of bytes of the data.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </function>
      <method name="cast"
              c:identifier="garrow_scalar_cast"
              version="5.0.0"
              throws="1">
        <source-position filename="arrow-glib/scalar.h" line="66"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="377">
  A newly created casted scalar on success, %NULL on error.</doc>
          <type name="Scalar" c:type="GArrowScalar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="372">A #GArrowScalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </instance-parameter>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="373">A #GArrowDataType of the casted scalar.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="374">A #GArrowCastOptions.</doc>
            <type name="CastOptions" c:type="GArrowCastOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="garrow_scalar_equal" version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="309">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="306">A #GArrowScalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </instance-parameter>
          <parameter name="other_scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="307">A #GArrowScalar to be compared.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal_options"
              c:identifier="garrow_scalar_equal_options"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="327">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="323">A #GArrowScalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </instance-parameter>
          <parameter name="other_scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="324">A #GArrowScalar to be compared.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="325">A #GArrowEqualOptions.</doc>
            <type name="EqualOptions" c:type="GArrowEqualOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data_type"
              c:identifier="garrow_scalar_get_data_type"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="275">The #GArrowDataType for the scalar.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="273">A #GArrowScalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_valid"
              c:identifier="garrow_scalar_is_valid"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="293">%TRUE if the scalar is valid, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="291">A #GArrowScalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_scalar_to_string"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="356">The string representation of the scalar.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="354">A #GArrowScalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="data-type"
                version="5.0.0"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/scalar.cpp"
             line="221">The data type of the scalar.</doc>
        <type name="DataType"/>
      </property>
      <property name="scalar"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="ScalarAggregateOptions"
           c:symbol-prefix="scalar_aggregate_options"
           c:type="GArrowScalarAggregateOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowScalarAggregateOptions"
           glib:get-type="garrow_scalar_aggregate_options_get_type"
           glib:type-struct="ScalarAggregateOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="421"/>
      <constructor name="new"
                   c:identifier="garrow_scalar_aggregate_options_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/compute.h" line="425"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2621">A newly created #GArrowScalarAggregateOptions.</doc>
          <type name="ScalarAggregateOptions"
                c:type="GArrowScalarAggregateOptions*"/>
        </return-value>
      </constructor>
      <property name="min-count"
                version="5.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="1">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2601">The minimum required number of values.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="skip-nulls"
                version="5.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="2587">Whether NULLs are skipped or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="ScalarAggregateOptionsClass"
            c:type="GArrowScalarAggregateOptionsClass"
            glib:is-gtype-struct-for="ScalarAggregateOptions">
      <source-position filename="arrow-glib/compute.h" line="421"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <record name="ScalarClass"
            c:type="GArrowScalarClass"
            glib:is-gtype-struct-for="Scalar">
      <source-position filename="arrow-glib/scalar.h" line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ScalarDatum"
           c:symbol-prefix="scalar_datum"
           c:type="GArrowScalarDatum"
           parent="Datum"
           glib:type-name="GArrowScalarDatum"
           glib:get-type="garrow_scalar_datum_get_type"
           glib:type-struct="ScalarDatumClass">
      <source-position filename="arrow-glib/datum.h" line="70"/>
      <constructor name="new"
                   c:identifier="garrow_scalar_datum_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/datum.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="412">A newly created #GArrowScalarDatum.</doc>
          <type name="ScalarDatum" c:type="GArrowScalarDatum*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="410">A #GArrowScalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Scalar"/>
      </property>
      <field name="parent_instance">
        <type name="Datum" c:type="GArrowDatum"/>
      </field>
    </class>
    <record name="ScalarDatumClass"
            c:type="GArrowScalarDatumClass"
            glib:is-gtype-struct-for="ScalarDatum">
      <source-position filename="arrow-glib/datum.h" line="70"/>
      <field name="parent_class">
        <type name="DatumClass" c:type="GArrowDatumClass"/>
      </field>
    </record>
    <class name="Schema"
           c:symbol-prefix="schema"
           c:type="GArrowSchema"
           parent="GObject.Object"
           glib:type-name="GArrowSchema"
           glib:get-type="garrow_schema_get_type"
           glib:type-struct="SchemaClass">
      <source-position filename="arrow-glib/schema.h" line="35"/>
      <constructor name="new" c:identifier="garrow_schema_new">
        <source-position filename="arrow-glib/schema.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="154">A newly created #GArrowSchema.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="152">The fields of the schema.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Field"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <function name="import"
                c:identifier="garrow_schema_import"
                version="6.0.0"
                throws="1">
        <source-position filename="arrow-glib/schema.h" line="39"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="130">An imported #GArrowSchema on success,
  %NULL on error.

  You don't need to release the passed `struct ArrowSchema *`,
  even if this function reports an error.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <parameter name="c_abi_schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="127">A `struct ArrowSchema *`.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_field"
              c:identifier="garrow_schema_add_field"
              version="0.10.0"
              throws="1">
        <source-position filename="arrow-glib/schema.h" line="67"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="341">The newly allocated
#GArrowSchema that has a new field or %NULL on error.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="336">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="337">The index of the new field.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="338">The field to be added.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="garrow_schema_equal" version="0.4.0">
        <source-position filename="arrow-glib/schema.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="201">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="198">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="other_schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="199">A #GArrowSchema to be compared.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </method>
      <method name="export"
              c:identifier="garrow_schema_export"
              version="6.0.0"
              throws="1">
        <source-position filename="arrow-glib/schema.h" line="46"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="174">An exported #GArrowSchema as
  `struct ArrowStruct *` on success, %NULL on error.

  It should be freed with the `ArrowSchema::release` callback then
  g_free() when no longer needed.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="171">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_field" c:identifier="garrow_schema_get_field">
        <source-position filename="arrow-glib/schema.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="219">The i-th field of the schema.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="216">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="217">The index of the target field.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field_by_name"
              c:identifier="garrow_schema_get_field_by_name">
        <source-position filename="arrow-glib/schema.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="234">The found field or %NULL.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="231">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="232">The name of the field to be found.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field_index"
              c:identifier="garrow_schema_get_field_index"
              version="0.15.0">
        <source-position filename="arrow-glib/schema.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="255">The index of the found field, -1 on not found.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="252">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="253">The name of the field to be found.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fields" c:identifier="garrow_schema_get_fields">
        <source-position filename="arrow-glib/schema.h" line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="284">
  The fields of the schema.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Field"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="282">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="garrow_schema_get_metadata"
              version="0.17.0">
        <source-position filename="arrow-glib/schema.h" line="84"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="434">The
  metadata in the schema.

  It should be freed with g_hash_table_unref() when no longer needed.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="432">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_metadata"
              c:identifier="garrow_schema_has_metadata"
              version="3.0.0">
        <source-position filename="arrow-glib/schema.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="419">%TRUE if the schema has metadata, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="417">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="n_fields" c:identifier="garrow_schema_n_fields">
        <source-position filename="arrow-glib/schema.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="271">The number of fields of the schema.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="269">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_field"
              c:identifier="garrow_schema_remove_field"
              version="0.10.0"
              throws="1">
        <source-position filename="arrow-glib/schema.h" line="71"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="368">The newly allocated
#GArrowSchema that doesn't have the field or %NULL on error.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="364">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="365">The index of the field to be removed.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_field"
              c:identifier="garrow_schema_replace_field"
              version="0.10.0"
              throws="1">
        <source-position filename="arrow-glib/schema.h" line="74"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="394">The newly allocated
#GArrowSchema that has @field as the @i-th field or %NULL on error.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="389">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="390">The index of the field to be replaced.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="391">The newly added #GArrowField.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="garrow_schema_to_string">
        <source-position filename="arrow-glib/schema.h" line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="305">The string representation of the schema.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="303">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string_metadata"
              c:identifier="garrow_schema_to_string_metadata"
              version="0.17.0">
        <source-position filename="arrow-glib/schema.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="320">The string representation of the schema.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="317">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="show_metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="318">Whether include metadata or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="with_metadata"
              c:identifier="garrow_schema_with_metadata"
              version="0.17.0">
        <source-position filename="arrow-glib/schema.h" line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/schema.cpp"
               line="465">The new schema with the given metadata.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="462">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </instance-parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/schema.cpp"
                 line="463">A new associated metadata.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="schema"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SchemaClass"
            c:type="GArrowSchemaClass"
            glib:is-gtype-struct-for="Schema">
      <source-position filename="arrow-glib/schema.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SeekableInputStream"
           c:symbol-prefix="seekable_input_stream"
           c:type="GArrowSeekableInputStream"
           parent="InputStream"
           glib:type-name="GArrowSeekableInputStream"
           glib:get-type="garrow_seekable_input_stream_get_type"
           glib:type-struct="SeekableInputStreamClass">
      <source-position filename="arrow-glib/input-stream.h" line="68"/>
      <implements name="File"/>
      <implements name="Readable"/>
      <method name="get_size"
              c:identifier="garrow_seekable_input_stream_get_size"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="378">The size of the file.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="375">A #GArrowSeekableInputStream.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_support_zero_copy"
              c:identifier="garrow_seekable_input_stream_get_support_zero_copy">
        <source-position filename="arrow-glib/input-stream.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="398">Whether zero copy read is supported or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="396">A #GArrowSeekableInputStream.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek"
              c:identifier="garrow_seekable_input_stream_peek"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="85"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="484">The data of the buffer, up to the
  indicated number. The data becomes invalid after any operation on
  the stream. If the stream is unbuffered, the data is empty.

  It should be freed with g_bytes_unref() when no longer needed.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="480">A #GArrowSeekableInputStream.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </instance-parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="481">The number of bytes to be peeked.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_at"
              c:identifier="garrow_seekable_input_stream_read_at"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="74"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="415">#GArrowBuffer that has read
  data on success, %NULL if there was an error.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="410">A #GArrowSeekableInputStream.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="411">The read start position.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="412">The number of bytes to be read.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_at_bytes"
              c:identifier="garrow_seekable_input_stream_read_at_bytes"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/input-stream.h" line="80"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/input-stream.cpp"
               line="442">#GBytes that has read data on
  success, %NULL if there was an error.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="437">A #GArrowSeekableInputStream.</doc>
            <type name="SeekableInputStream"
                  c:type="GArrowSeekableInputStream*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="438">The read start position.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/input-stream.cpp"
                 line="439">The number of bytes to be read.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="InputStream" c:type="GArrowInputStream"/>
      </field>
    </class>
    <record name="SeekableInputStreamClass"
            c:type="GArrowSeekableInputStreamClass"
            glib:is-gtype-struct-for="SeekableInputStream">
      <source-position filename="arrow-glib/input-stream.h" line="68"/>
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GArrowInputStreamClass"/>
      </field>
    </record>
    <class name="SetLookupOptions"
           c:symbol-prefix="set_lookup_options"
           c:type="GArrowSetLookupOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowSetLookupOptions"
           glib:get-type="garrow_set_lookup_options_get_type"
           glib:type-struct="SetLookupOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="622"/>
      <constructor name="new"
                   c:identifier="garrow_set_lookup_options_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="626"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3414">A newly created #GArrowSetLookupOptions.</doc>
          <type name="SetLookupOptions" c:type="GArrowSetLookupOptions*"/>
        </return-value>
        <parameters>
          <parameter name="value_set"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3411">A #GArrowArrayDatum or
  #GArrowChunkedArrayDatum to be looked up.</doc>
            <type name="Datum" c:type="GArrowDatum*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="skip-nulls"
                version="6.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3394">Whether NULLs are skipped or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="value-set"
                version="6.0.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3378">The set of values to look up input values into.</doc>
        <type name="Datum"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="SetLookupOptionsClass"
            c:type="GArrowSetLookupOptionsClass"
            glib:is-gtype-struct-for="SetLookupOptions">
      <source-position filename="arrow-glib/compute.h" line="622"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="SinkNodeOptions"
           c:symbol-prefix="sink_node_options"
           c:type="GArrowSinkNodeOptions"
           parent="ExecuteNodeOptions"
           glib:type-name="GArrowSinkNodeOptions"
           glib:get-type="garrow_sink_node_options_get_type"
           glib:type-struct="SinkNodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="240"/>
      <constructor name="new"
                   c:identifier="garrow_sink_node_options_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="244"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1519">A newly created #GArrowSinkNodeOptions.</doc>
          <type name="SinkNodeOptions" c:type="GArrowSinkNodeOptions*"/>
        </return-value>
      </constructor>
      <method name="get_reader"
              c:identifier="garrow_sink_node_options_get_reader"
              version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="247"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1539">A #GArrowRecordBatchReader to read generated record batches.</doc>
          <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1536">A #GArrowSinkNodeOptions.</doc>
            <type name="SinkNodeOptions" c:type="GArrowSinkNodeOptions*"/>
          </instance-parameter>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1537">A #GArrowSchema.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ExecuteNodeOptions" c:type="GArrowExecuteNodeOptions"/>
      </field>
    </class>
    <record name="SinkNodeOptionsClass"
            c:type="GArrowSinkNodeOptionsClass"
            glib:is-gtype-struct-for="SinkNodeOptions">
      <source-position filename="arrow-glib/compute.h" line="240"/>
      <field name="parent_class">
        <type name="ExecuteNodeOptionsClass"
              c:type="GArrowExecuteNodeOptionsClass"/>
      </field>
    </record>
    <class name="SlowFileSystem"
           c:symbol-prefix="slow_file_system"
           c:type="GArrowSlowFileSystem"
           parent="FileSystem"
           glib:type-name="GArrowSlowFileSystem"
           glib:get-type="garrow_slow_file_system_get_type"
           glib:type-struct="SlowFileSystemClass">
      <source-position filename="arrow-glib/file-system.h" line="225"/>
      <constructor name="new_average_latency"
                   c:identifier="garrow_slow_file_system_new_average_latency"
                   version="0.17.0">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1286">The latency is normally distributed with a standard deviation of
@average_latency * 0.1.

The random seed is given by the default random device.</doc>
        <source-position filename="arrow-glib/file-system.h" line="236"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1296">A newly created #GArrowSlowFileSystem.</doc>
          <type name="SlowFileSystem" c:type="GArrowSlowFileSystem*"/>
        </return-value>
        <parameters>
          <parameter name="base_file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1288">A #GArrowFileSystem as the base file system.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </parameter>
          <parameter name="average_latency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1289">The average value of the latency.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_average_latency_and_seed"
                   c:identifier="garrow_slow_file_system_new_average_latency_and_seed"
                   version="0.17.0">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1313">The latency is normally distributed with a standard deviation of
@average_latency * 0.1.</doc>
        <source-position filename="arrow-glib/file-system.h" line="241"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1322">A newly created #GArrowSlowFileSystem.</doc>
          <type name="SlowFileSystem" c:type="GArrowSlowFileSystem*"/>
        </return-value>
        <parameters>
          <parameter name="base_file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1315">A #GArrowFileSystem as the base file system.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </parameter>
          <parameter name="average_latency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1316">The average value of the latency.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="seed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1317">A random seed.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="base-file-system"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="FileSystem"/>
      </property>
      <field name="parent_instance">
        <type name="FileSystem" c:type="GArrowFileSystem"/>
      </field>
    </class>
    <record name="SlowFileSystemClass"
            c:type="GArrowSlowFileSystemClass"
            glib:is-gtype-struct-for="SlowFileSystem">
      <source-position filename="arrow-glib/file-system.h" line="225"/>
      <field name="parent_class">
        <type name="FileSystemClass" c:type="GArrowFileSystemClass"/>
      </field>
    </record>
    <class name="SortKey"
           c:symbol-prefix="sort_key"
           c:type="GArrowSortKey"
           parent="GObject.Object"
           glib:type-name="GArrowSortKey"
           glib:get-type="garrow_sort_key_get_type"
           glib:type-struct="SortKeyClass">
      <source-position filename="arrow-glib/compute.h" line="568"/>
      <constructor name="new"
                   c:identifier="garrow_sort_key_new"
                   version="3.0.0"
                   throws="1">
        <source-position filename="arrow-glib/compute.h" line="572"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3113">A newly created #GArrowSortKey.</doc>
          <type name="SortKey" c:type="GArrowSortKey*"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3110">A name or dot path for sort target.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="order" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3111">How to order by this sort key.</doc>
            <type name="SortOrder" c:type="GArrowSortOrder"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal"
              c:identifier="garrow_sort_key_equal"
              version="3.0.0">
        <source-position filename="arrow-glib/compute.h" line="578"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3141">%TRUE if both of them have the same name and order, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sort_key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3138">A #GArrowSortKey.</doc>
            <type name="SortKey" c:type="GArrowSortKey*"/>
          </instance-parameter>
          <parameter name="other_sort_key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3139">A #GArrowSortKey to be compared.</doc>
            <type name="SortKey" c:type="GArrowSortKey*"/>
          </parameter>
        </parameters>
      </method>
      <property name="order"
                version="3.0.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="GARROW_SORT_ORDER_ASCENDING">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3091">How to order values.</doc>
        <type name="SortOrder"/>
      </property>
      <property name="target"
                version="7.0.0"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3073">A name or dot path for the sort target.

    dot_path = '.' name
             | '[' digit+ ']'
             | dot_path+</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SortKeyClass"
            c:type="GArrowSortKeyClass"
            glib:is-gtype-struct-for="SortKey">
      <source-position filename="arrow-glib/compute.h" line="568"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SortOptions"
           c:symbol-prefix="sort_options"
           c:type="GArrowSortOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowSortOptions"
           glib:get-type="garrow_sort_options_get_type"
           glib:type-struct="SortOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="591"/>
      <constructor name="new"
                   c:identifier="garrow_sort_options_new"
                   version="3.0.0">
        <source-position filename="arrow-glib/compute.h" line="595"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3177">A newly created #GArrowSortOptions.</doc>
          <type name="SortOptions" c:type="GArrowSortOptions*"/>
        </return-value>
        <parameters>
          <parameter name="sort_keys"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3175">The sort keys to be used.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="SortKey"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_sort_key"
              c:identifier="garrow_sort_options_add_sort_key"
              version="3.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3248">Add a sort key to be used.</doc>
        <source-position filename="arrow-glib/compute.h" line="609"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3250">A #GArrowSortOptions.</doc>
            <type name="SortOptions" c:type="GArrowSortOptions*"/>
          </instance-parameter>
          <parameter name="sort_key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3251">The sort key to be added.</doc>
            <type name="SortKey" c:type="GArrowSortKey*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="garrow_sort_options_equal"
              version="3.0.0">
        <source-position filename="arrow-glib/compute.h" line="598"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3197">%TRUE if both of them have the same sort keys, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3194">A #GArrowSortOptions.</doc>
            <type name="SortOptions" c:type="GArrowSortOptions*"/>
          </instance-parameter>
          <parameter name="other_options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3195">A #GArrowSortOptions to be compared.</doc>
            <type name="SortOptions" c:type="GArrowSortOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sort_keys"
              c:identifier="garrow_sort_options_get_sort_keys"
              version="3.0.0">
        <source-position filename="arrow-glib/compute.h" line="602"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3219">
  The sort keys to be used.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="SortKey"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3217">A #GArrowSortOptions.</doc>
            <type name="SortOptions" c:type="GArrowSortOptions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_sort_keys"
              c:identifier="garrow_sort_options_set_sort_keys"
              version="3.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3231">Set sort keys to be used.</doc>
        <source-position filename="arrow-glib/compute.h" line="605"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3233">A #GArrowSortOptions.</doc>
            <type name="SortOptions" c:type="GArrowSortOptions*"/>
          </instance-parameter>
          <parameter name="sort_keys" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="3234">The sort keys to be used.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="SortKey"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="SortOptionsClass"
            c:type="GArrowSortOptionsClass"
            glib:is-gtype-struct-for="SortOptions">
      <source-position filename="arrow-glib/compute.h" line="591"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <enumeration name="SortOrder"
                 version="3.0.0"
                 glib:type-name="GArrowSortOrder"
                 glib:get-type="garrow_sort_order_get_type"
                 c:type="GArrowSortOrder">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="507">They are corresponding to `arrow::compute::SortOrder` values.</doc>
      <member name="ascending"
              value="0"
              c:identifier="GARROW_SORT_ORDER_ASCENDING"
              glib:nick="ascending"
              glib:name="GARROW_SORT_ORDER_ASCENDING">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="509">Sort in ascending order.</doc>
      </member>
      <member name="descending"
              value="1"
              c:identifier="GARROW_SORT_ORDER_DESCENDING"
              glib:nick="descending"
              glib:name="GARROW_SORT_ORDER_DESCENDING">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="510">Sort in descending order.</doc>
      </member>
    </enumeration>
    <class name="SourceNodeOptions"
           c:symbol-prefix="source_node_options"
           c:type="GArrowSourceNodeOptions"
           parent="ExecuteNodeOptions"
           glib:type-name="GArrowSourceNodeOptions"
           glib:get-type="garrow_source_node_options_get_type"
           glib:type-struct="SourceNodeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="145"/>
      <constructor name="new_record_batch"
                   c:identifier="garrow_source_node_options_new_record_batch"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="153"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1043">A newly created #GArrowSourceNodeOptions.</doc>
          <type name="SourceNodeOptions" c:type="GArrowSourceNodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="record_batch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1041">A #GArrowRecordBatch.</doc>
            <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_record_batch_reader"
                   c:identifier="garrow_source_node_options_new_record_batch_reader"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="149"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1007">A newly created #GArrowSourceNodeOptions.</doc>
          <type name="SourceNodeOptions" c:type="GArrowSourceNodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1005">A #GArrowRecordBatchReader.</doc>
            <type name="RecordBatchReader" c:type="GArrowRecordBatchReader*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_table"
                   c:identifier="garrow_source_node_options_new_table"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="156"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="1081">A newly created #GArrowSourceNodeOptions.</doc>
          <type name="SourceNodeOptions" c:type="GArrowSourceNodeOptions*"/>
        </return-value>
        <parameters>
          <parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="1079">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="reader"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="RecordBatchReader"/>
      </property>
      <property name="record-batch"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="RecordBatch"/>
      </property>
      <field name="parent_instance">
        <type name="ExecuteNodeOptions" c:type="GArrowExecuteNodeOptions"/>
      </field>
    </class>
    <record name="SourceNodeOptionsClass"
            c:type="GArrowSourceNodeOptionsClass"
            glib:is-gtype-struct-for="SourceNodeOptions">
      <source-position filename="arrow-glib/compute.h" line="145"/>
      <field name="parent_class">
        <type name="ExecuteNodeOptionsClass"
              c:type="GArrowExecuteNodeOptionsClass"/>
      </field>
    </record>
    <class name="SparseUnionArray"
           c:symbol-prefix="sparse_union_array"
           c:type="GArrowSparseUnionArray"
           parent="UnionArray"
           glib:type-name="GArrowSparseUnionArray"
           glib:get-type="garrow_sparse_union_array_get_type"
           glib:type-struct="SparseUnionArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="185"/>
      <constructor name="new"
                   c:identifier="garrow_sparse_union_array_new"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="188"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1278">A newly created #GArrowSparseUnionArray
  or %NULL on error.</doc>
          <type name="SparseUnionArray" c:type="GArrowSparseUnionArray*"/>
        </return-value>
        <parameters>
          <parameter name="type_ids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1273">The field type IDs for each value as #GArrowInt8Array.</doc>
            <type name="Int8Array" c:type="GArrowInt8Array*"/>
          </parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1274">The arrays for each field
  as #GList of #GArrowArray.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_data_type"
                   c:identifier="garrow_sparse_union_array_new_data_type"
                   version="0.14.0"
                   throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="192"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1303">A newly created #GArrowSparseUnionArray
  or %NULL on error.</doc>
          <type name="SparseUnionArray" c:type="GArrowSparseUnionArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1297">The data type for the sparse array.</doc>
            <type name="SparseUnionDataType"
                  c:type="GArrowSparseUnionDataType*"/>
          </parameter>
          <parameter name="type_ids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1298">The field type IDs for each value as #GArrowInt8Array.</doc>
            <type name="Int8Array" c:type="GArrowInt8Array*"/>
          </parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1299">The arrays for each field
  as #GList of #GArrowArray.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="UnionArray" c:type="GArrowUnionArray"/>
      </field>
    </class>
    <class name="SparseUnionArrayBuilder"
           c:symbol-prefix="sparse_union_array_builder"
           c:type="GArrowSparseUnionArrayBuilder"
           parent="UnionArrayBuilder"
           glib:type-name="GArrowSparseUnionArrayBuilder"
           glib:get-type="garrow_sparse_union_array_builder_get_type"
           glib:type-struct="SparseUnionArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1598"/>
      <constructor name="new"
                   c:identifier="garrow_sparse_union_array_builder_new"
                   version="12.0.0"
                   throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1602"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6692">A newly created #GArrowSparseUnionArrayBuilder
  on success, %NULL on error.</doc>
          <type name="SparseUnionArrayBuilder"
                c:type="GArrowSparseUnionArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6686">#GArrowSparseUnionDataType for the sparse
  union. If this is %NULL, you start an empty children sparse
  union. You can add children by
  multiple `garrow_union_array_builder_append_child()` calls.</doc>
            <type name="SparseUnionDataType"
                  c:type="GArrowSparseUnionDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="UnionArrayBuilder" c:type="GArrowUnionArrayBuilder"/>
      </field>
    </class>
    <record name="SparseUnionArrayBuilderClass"
            c:type="GArrowSparseUnionArrayBuilderClass"
            glib:is-gtype-struct-for="SparseUnionArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1598"/>
      <field name="parent_class">
        <type name="UnionArrayBuilderClass"
              c:type="GArrowUnionArrayBuilderClass"/>
      </field>
    </record>
    <record name="SparseUnionArrayClass"
            c:type="GArrowSparseUnionArrayClass"
            glib:is-gtype-struct-for="SparseUnionArray">
      <source-position filename="arrow-glib/composite-array.h" line="185"/>
      <field name="parent_class">
        <type name="UnionArrayClass" c:type="GArrowUnionArrayClass"/>
      </field>
    </record>
    <class name="SparseUnionDataType"
           c:symbol-prefix="sparse_union_data_type"
           c:type="GArrowSparseUnionDataType"
           parent="UnionDataType"
           glib:type-name="GArrowSparseUnionDataType"
           glib:get-type="garrow_sparse_union_data_type_get_type"
           glib:type-struct="SparseUnionDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="149"/>
      <constructor name="new" c:identifier="garrow_sparse_union_data_type_new">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="554">The newly created sparse union data type.</doc>
          <type name="SparseUnionDataType"
                c:type="GArrowSparseUnionDataType*"/>
        </return-value>
        <parameters>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="550">The fields of the union.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Field"/>
            </type>
          </parameter>
          <parameter name="type_codes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="551">The codes to specify each field.</doc>
            <array length="2" zero-terminated="0" c:type="gint8*">
              <type name="gint8" c:type="gint8"/>
            </array>
          </parameter>
          <parameter name="n_type_codes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="552">The number of type codes.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="UnionDataType" c:type="GArrowUnionDataType"/>
      </field>
    </class>
    <record name="SparseUnionDataTypeClass"
            c:type="GArrowSparseUnionDataTypeClass"
            glib:is-gtype-struct-for="SparseUnionDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="149"/>
      <field name="parent_class">
        <type name="UnionDataTypeClass" c:type="GArrowUnionDataTypeClass"/>
      </field>
    </record>
    <class name="SparseUnionScalar"
           c:symbol-prefix="sparse_union_scalar"
           c:type="GArrowSparseUnionScalar"
           parent="UnionScalar"
           glib:type-name="GArrowSparseUnionScalar"
           glib:get-type="garrow_sparse_union_scalar_get_type"
           glib:type-struct="SparseUnionScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="724"/>
      <constructor name="new"
                   c:identifier="garrow_sparse_union_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="728"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2448">A newly created #GArrowSparseUnionScalar.</doc>
          <type name="SparseUnionScalar" c:type="GArrowSparseUnionScalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2444">A #GArrowSparseUnionDataType for this scalar.</doc>
            <type name="SparseUnionDataType"
                  c:type="GArrowSparseUnionDataType*"/>
          </parameter>
          <parameter name="type_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2445">The type code of this scalar.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2446">The value of this scalar.</doc>
            <type name="Scalar" c:type="GArrowScalar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="UnionScalar" c:type="GArrowUnionScalar"/>
      </field>
    </class>
    <record name="SparseUnionScalarClass"
            c:type="GArrowSparseUnionScalarClass"
            glib:is-gtype-struct-for="SparseUnionScalar">
      <source-position filename="arrow-glib/scalar.h" line="724"/>
      <field name="parent_class">
        <type name="UnionScalarClass" c:type="GArrowUnionScalarClass"/>
      </field>
    </record>
    <class name="StringArray"
           c:symbol-prefix="string_array"
           c:type="GArrowStringArray"
           parent="BinaryArray"
           glib:type-name="GArrowStringArray"
           glib:get-type="garrow_string_array_get_type"
           glib:type-struct="StringArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="492"/>
      <constructor name="new"
                   c:identifier="garrow_string_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="494"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2400">A newly created #GArrowStringArray.</doc>
          <type name="StringArray" c:type="GArrowStringArray*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2390">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="value_offsets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2391">The value offsets of @data in Arrow format.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="value_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2392">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2393">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2397">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_string" c:identifier="garrow_string_array_get_string">
        <source-position filename="arrow-glib/basic-array.h" line="500"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2425">The @i-th UTF-8 encoded string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2422">A #GArrowStringArray.</doc>
            <type name="StringArray" c:type="GArrowStringArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2423">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="BinaryArray" c:type="GArrowBinaryArray"/>
      </field>
    </class>
    <class name="StringArrayBuilder"
           c:symbol-prefix="string_array_builder"
           c:type="GArrowStringArrayBuilder"
           parent="BinaryArrayBuilder"
           glib:type-name="GArrowStringArrayBuilder"
           glib:get-type="garrow_string_array_builder_get_type"
           glib:type-struct="StringArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="773"/>
      <constructor name="new" c:identifier="garrow_string_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="775"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3393">A newly created #GArrowStringArrayBuilder.</doc>
          <type name="StringArrayBuilder" c:type="GArrowStringArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_string_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_string_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="779"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3410">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3406">A #GArrowStringArrayBuilder.</doc>
            <type name="StringArrayBuilder"
                  c:type="GArrowStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3407">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_string"
              c:identifier="garrow_string_array_builder_append_string"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="791"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3450">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3446">A #GArrowStringArrayBuilder.</doc>
            <type name="StringArrayBuilder"
                  c:type="GArrowStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3447">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_string_len"
              c:identifier="garrow_string_array_builder_append_string_len"
              version="8.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="797"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3473">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3468">A #GArrowStringArrayBuilder.</doc>
            <type name="StringArrayBuilder"
                  c:type="GArrowStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3469">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3470">The length of @value.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_strings"
              c:identifier="garrow_string_array_builder_append_strings"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3530">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="812"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3545">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3532">A #GArrowStringArrayBuilder.</doc>
            <type name="StringArrayBuilder"
                  c:type="GArrowStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3533">The array of strings.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3534">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3535">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3539">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_string_array_builder_append_value"
              version="0.12.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_string_array_builder_append_string() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="786"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3429">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3425">A #GArrowStringArrayBuilder.</doc>
            <type name="StringArrayBuilder"
                  c:type="GArrowStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3426">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_string_array_builder_append_values"
              version="0.10.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="3492">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_string_array_builder_append_strings() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="804"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="3507">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3494">A #GArrowStringArrayBuilder.</doc>
            <type name="StringArrayBuilder"
                  c:type="GArrowStringArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3495">The array of strings.</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3496">The length of @values.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3497">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth @is_valids is %TRUE, the Nth @values is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="3501">The length of @is_valids.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="BinaryArrayBuilder" c:type="GArrowBinaryArrayBuilder"/>
      </field>
    </class>
    <record name="StringArrayBuilderClass"
            c:type="GArrowStringArrayBuilderClass"
            glib:is-gtype-struct-for="StringArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="773"/>
      <field name="parent_class">
        <type name="BinaryArrayBuilderClass"
              c:type="GArrowBinaryArrayBuilderClass"/>
      </field>
    </record>
    <record name="StringArrayClass"
            c:type="GArrowStringArrayClass"
            glib:is-gtype-struct-for="StringArray">
      <source-position filename="arrow-glib/basic-array.h" line="492"/>
      <field name="parent_class">
        <type name="BinaryArrayClass" c:type="GArrowBinaryArrayClass"/>
      </field>
    </record>
    <class name="StringDataType"
           c:symbol-prefix="string_data_type"
           c:type="GArrowStringDataType"
           parent="DataType"
           glib:type-name="GArrowStringDataType"
           glib:get-type="garrow_string_data_type_get_type"
           glib:type-struct="StringDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="357"/>
      <constructor name="new" c:identifier="garrow_string_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="359"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="982">The newly created UTF-8 encoded string data type.</doc>
          <type name="StringDataType" c:type="GArrowStringDataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="BinaryDataType" c:type="GArrowBinaryDataType"/>
      </field>
    </class>
    <record name="StringDataTypeClass"
            c:type="GArrowStringDataTypeClass"
            glib:is-gtype-struct-for="StringDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="357"/>
      <field name="parent_class">
        <type name="BinaryDataTypeClass" c:type="GArrowBinaryDataTypeClass"/>
      </field>
    </record>
    <class name="StringDictionaryArrayBuilder"
           c:symbol-prefix="string_dictionary_array_builder"
           c:type="GArrowStringDictionaryArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowStringDictionaryArrayBuilder"
           glib:get-type="garrow_string_dictionary_array_builder_get_type"
           glib:type-struct="StringDictionaryArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1279"/>
      <constructor name="new"
                   c:identifier="garrow_string_dictionary_array_builder_new"
                   version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1283"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5286">A newly created #GArrowStringDictionaryArrayBuilder.</doc>
          <type name="StringDictionaryArrayBuilder"
                c:type="GArrowStringDictionaryArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append_array"
              c:identifier="garrow_string_dictionary_array_builder_append_array"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1298"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5352">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5348">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5349">A #GArrowStringArray.</doc>
            <type name="StringArray" c:type="GArrowStringArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_indices"
              c:identifier="garrow_string_dictionary_array_builder_append_indices"
              version="2.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="5371">Append dictionary indices directly without modifying the internal memo.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1303"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5385">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5373">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5374">The array of indices.</doc>
            <array length="1" zero-terminated="0" c:type="const gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5375">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5376">The array of
  %TRUE or %FALSE that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5380">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_string_dictionary_array_builder_append_null"
              version="2.0.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1288"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5307">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5304">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_string"
              c:identifier="garrow_string_dictionary_array_builder_append_string"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1293"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5327">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5323">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5324">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="finish_delta"
              c:identifier="garrow_string_dictionary_array_builder_finish_delta"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1314"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5435">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5430">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="out_indices"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5431">The built #GArrowArray containing indices.</doc>
            <type name="Array" c:type="GArrowArray**"/>
          </parameter>
          <parameter name="out_delta"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5432">The built #GArrowArray containing dictionary.</doc>
            <type name="Array" c:type="GArrowArray**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dictionary_length"
              c:identifier="garrow_string_dictionary_array_builder_get_dictionary_length"
              version="2.0.0">
        <source-position filename="arrow-glib/array-builder.h" line="1311"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5416">A number of entries in the dicitonary.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5414">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_memo_values"
              c:identifier="garrow_string_dictionary_array_builder_insert_memo_values"
              version="2.0.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1320"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5465">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5461">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5462">A #GArrowStringArray.</doc>
            <type name="StringArray" c:type="GArrowStringArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_full"
              c:identifier="garrow_string_dictionary_array_builder_reset_full"
              version="2.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="5484">Reset and also clear accumulated dictionary values in memo table.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1325"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5486">A #GArrowStringDictionaryArrayBuilder.</doc>
            <type name="StringDictionaryArrayBuilder"
                  c:type="GArrowStringDictionaryArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="StringDictionaryArrayBuilderClass"
            c:type="GArrowStringDictionaryArrayBuilderClass"
            glib:is-gtype-struct-for="StringDictionaryArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1279"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <class name="StringScalar"
           c:symbol-prefix="string_scalar"
           c:type="GArrowStringScalar"
           parent="BaseBinaryScalar"
           glib:type-name="GArrowStringScalar"
           glib:get-type="garrow_string_scalar_get_type"
           glib:type-struct="StringScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="357"/>
      <constructor name="new"
                   c:identifier="garrow_string_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="361"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1185">A newly created #GArrowStringScalar.</doc>
          <type name="StringScalar" c:type="GArrowStringScalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1183">The value of this scalar.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="BaseBinaryScalar" c:type="GArrowBaseBinaryScalar"/>
      </field>
    </class>
    <record name="StringScalarClass"
            c:type="GArrowStringScalarClass"
            glib:is-gtype-struct-for="StringScalar">
      <source-position filename="arrow-glib/scalar.h" line="357"/>
      <field name="parent_class">
        <type name="BaseBinaryScalarClass"
              c:type="GArrowBaseBinaryScalarClass"/>
      </field>
    </record>
    <class name="StructArray"
           c:symbol-prefix="struct_array"
           c:type="GArrowStructArray"
           parent="Array"
           glib:type-name="GArrowStructArray"
           glib:get-type="garrow_struct_array_get_type"
           glib:type-struct="StructArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="111"/>
      <constructor name="new"
                   c:identifier="garrow_struct_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/composite-array.h" line="113"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="669">A newly created #GArrowStructArray.</doc>
          <type name="StructArray" c:type="GArrowStructArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="658">The data type of the struct.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="659">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="660">The arrays for each field
  as #GList of #GArrowArray.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Array"/>
            </type>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="662">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="666">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="flatten"
              c:identifier="garrow_struct_array_flatten"
              version="0.10.0"
              throws="1">
        <source-position filename="arrow-glib/composite-array.h" line="125"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="779">
  The fields in the struct.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Array"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="776">A #GArrowStructArray.</doc>
            <type name="StructArray" c:type="GArrowStructArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_field" c:identifier="garrow_struct_array_get_field">
        <source-position filename="arrow-glib/composite-array.h" line="119"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="733">The i-th field.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="730">A #GArrowStructArray.</doc>
            <type name="StructArray" c:type="GArrowStructArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="731">The index of the field in the struct.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fields" c:identifier="garrow_struct_array_get_fields">
        <source-position filename="arrow-glib/composite-array.h" line="122"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="758">
  The fields in the struct.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Array"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="756">A #GArrowStructArray.</doc>
            <type name="StructArray" c:type="GArrowStructArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <class name="StructArrayBuilder"
           c:symbol-prefix="struct_array_builder"
           c:type="GArrowStructArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowStructArrayBuilder"
           glib:get-type="garrow_struct_array_builder_get_type"
           glib:type-struct="StructArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1396"/>
      <constructor name="new"
                   c:identifier="garrow_struct_array_builder_new"
                   throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1398"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5881">A newly created #GArrowStructArrayBuilder.</doc>
          <type name="StructArrayBuilder" c:type="GArrowStructArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5878">#GArrowStructDataType for the struct.</doc>
            <type name="StructDataType" c:type="GArrowStructDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append"
              c:identifier="garrow_struct_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_struct_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1403"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5907">%TRUE on success, %FALSE if there was an error.

It appends a new struct element. To append a new struct element,
you need to call this function then append struct element field
values to all `field_builder`s. `field_value`s are the
#GArrowArrayBuilder specified to constructor. You can get
`field_builder` by garrow_struct_array_builder_get_field_builder()
or garrow_struct_array_builder_get_field_builders().

|[&lt;!-- language="C" --&gt;
// TODO
]|</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5904">A #GArrowStructArrayBuilder.</doc>
            <type name="StructArrayBuilder"
                  c:type="GArrowStructArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_struct_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1411"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5968">%TRUE on success, %FALSE if there was an error.

It appends a new NULL element.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5965">A #GArrowStructArrayBuilder.</doc>
            <type name="StructArrayBuilder"
                  c:type="GArrowStructArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_struct_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1407"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5935">%TRUE on success, %FALSE if there was an error.

It appends a new struct element. To append a new struct element,
you need to call this function then append struct element field
values to all `field_builder`s. `field_value`s are the
#GArrowArrayBuilder specified to constructor. You can get
`field_builder` by garrow_struct_array_builder_get_field_builder()
or garrow_struct_array_builder_get_field_builders().

|[&lt;!-- language="C" --&gt;
// TODO
]|</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5932">A #GArrowStructArrayBuilder.</doc>
            <type name="StructArrayBuilder"
                  c:type="GArrowStructArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_field_builder"
              c:identifier="garrow_struct_array_builder_get_field_builder"
              deprecated="1"
              deprecated-version="12.0.0">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_get_child() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1418"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="5987">The #GArrowArrayBuilder for the i-th field.</doc>
          <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5984">A #GArrowStructArrayBuilder.</doc>
            <type name="StructArrayBuilder"
                  c:type="GArrowStructArrayBuilder*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="5985">The index of the field in the struct.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field_builders"
              c:identifier="garrow_struct_array_builder_get_field_builders"
              deprecated="1"
              deprecated-version="12.0.0">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_get_children() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1422"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6003">
  The #GArrowArrayBuilder for all fields.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ArrayBuilder"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6001">A #GArrowStructArrayBuilder.</doc>
            <type name="StructArrayBuilder"
                  c:type="GArrowStructArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="StructArrayBuilderClass"
            c:type="GArrowStructArrayBuilderClass"
            glib:is-gtype-struct-for="StructArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1396"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="StructArrayClass"
            c:type="GArrowStructArrayClass"
            glib:is-gtype-struct-for="StructArray">
      <source-position filename="arrow-glib/composite-array.h" line="111"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="StructDataType"
           c:symbol-prefix="struct_data_type"
           c:type="GArrowStructDataType"
           parent="DataType"
           glib:type-name="GArrowStructDataType"
           glib:get-type="garrow_struct_data_type_get_type"
           glib:type-struct="StructDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="75"/>
      <constructor name="new" c:identifier="garrow_struct_data_type_new">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="199">The newly created struct data type.</doc>
          <type name="StructDataType" c:type="GArrowStructDataType*"/>
        </return-value>
        <parameters>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="197">The fields of the struct.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Field"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_field"
              c:identifier="garrow_struct_data_type_get_field"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="83"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="261">
  The field at the index in the struct data type or %NULL on not found.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="struct_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="258">A #GArrowStructDataType.</doc>
            <type name="StructDataType" c:type="GArrowStructDataType*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="259">The index of the target field.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field_by_name"
              c:identifier="garrow_struct_data_type_get_field_by_name"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="86"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="296">
  The field that has the name in the struct data type or %NULL on not found.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="struct_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="293">A #GArrowStructDataType.</doc>
            <type name="StructDataType" c:type="GArrowStructDataType*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="294">The name of the target field.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field_index"
              c:identifier="garrow_struct_data_type_get_field_index"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="323">The index of the target index in the struct data type
  or `-1` on not found.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="struct_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="320">A #GArrowStructDataType.</doc>
            <type name="StructDataType" c:type="GArrowStructDataType*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="321">The name of the target field.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fields"
              c:identifier="garrow_struct_data_type_get_fields"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="237">
  The fields of the struct data type.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Field"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="struct_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="235">A #GArrowStructDataType.</doc>
            <type name="StructDataType" c:type="GArrowStructDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_fields"
              c:identifier="garrow_struct_data_type_get_n_fields"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="222">The number of fields of the struct data type.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="struct_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="220">A #GArrowStructDataType.</doc>
            <type name="StructDataType" c:type="GArrowStructDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="StructDataTypeClass"
            c:type="GArrowStructDataTypeClass"
            glib:is-gtype-struct-for="StructDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="75"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <class name="StructScalar"
           c:symbol-prefix="struct_scalar"
           c:type="GArrowStructScalar"
           parent="Scalar"
           glib:type-name="GArrowStructScalar"
           glib:get-type="garrow_struct_scalar_get_type"
           glib:type-struct="StructScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="685"/>
      <constructor name="new"
                   c:identifier="garrow_struct_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="689"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2242">A newly created #GArrowDecimal256Scalar.</doc>
          <type name="StructScalar" c:type="GArrowStructScalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2239">A #GArrowStructDataType for this scalar.</doc>
            <type name="StructDataType" c:type="GArrowStructDataType*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2240">The value of this scalar.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Scalar"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_struct_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="693"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2277">
  The value of this scalar.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Scalar"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2275">A #GArrowStructScalar.</doc>
            <type name="StructScalar" c:type="GArrowStructScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="StructScalarClass"
            c:type="GArrowStructScalarClass"
            glib:is-gtype-struct-for="StructScalar">
      <source-position filename="arrow-glib/scalar.h" line="685"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="SubTreeFileSystem"
           c:symbol-prefix="sub_tree_file_system"
           c:type="GArrowSubTreeFileSystem"
           parent="FileSystem"
           glib:type-name="GArrowSubTreeFileSystem"
           glib:get-type="garrow_sub_tree_file_system_get_type"
           glib:type-struct="SubTreeFileSystemClass">
      <source-position filename="arrow-glib/file-system.h" line="207"/>
      <constructor name="new"
                   c:identifier="garrow_sub_tree_file_system_new"
                   version="0.17.0">
        <source-position filename="arrow-glib/file-system.h" line="211"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1182">A newly created #GArrowSubTreeFileSystem.</doc>
          <type name="SubTreeFileSystem" c:type="GArrowSubTreeFileSystem*"/>
        </return-value>
        <parameters>
          <parameter name="base_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1179">A base path of the sub tree file system.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="base_file_system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/file-system.cpp"
                 line="1180">A #GArrowFileSystem as the base file system.</doc>
            <type name="FileSystem" c:type="GArrowFileSystem*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="base-file-system"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="FileSystem"/>
      </property>
      <field name="parent_instance">
        <type name="FileSystem" c:type="GArrowFileSystem"/>
      </field>
    </class>
    <record name="SubTreeFileSystemClass"
            c:type="GArrowSubTreeFileSystemClass"
            glib:is-gtype-struct-for="SubTreeFileSystem">
      <source-position filename="arrow-glib/file-system.h" line="207"/>
      <field name="parent_class">
        <type name="FileSystemClass" c:type="GArrowFileSystemClass"/>
      </field>
    </record>
    <class name="Table"
           c:symbol-prefix="table"
           c:type="GArrowTable"
           parent="GObject.Object"
           glib:type-name="GArrowTable"
           glib:get-type="garrow_table_get_type"
           glib:type-struct="TableClass">
      <source-position filename="arrow-glib/table.h" line="56"/>
      <constructor name="new_arrays"
                   c:identifier="garrow_table_new_arrays"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/table.h" line="71"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="418">A newly created #GArrowTable or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="413">The schema of the table.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
          <parameter name="arrays" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="414">The arrays of the table.</doc>
            <array length="2" zero-terminated="0" c:type="GArrowArray**">
              <type name="Array" c:type="GArrowArray*"/>
            </array>
          </parameter>
          <parameter name="n_arrays" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="415">The number of arrays.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_chunked_arrays"
                   c:identifier="garrow_table_new_chunked_arrays"
                   version="0.15.0"
                   throws="1">
        <source-position filename="arrow-glib/table.h" line="65"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="385">A newly created #GArrowTable or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="379">The schema of the table.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
          <parameter name="chunked_arrays" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="380">The chunked arrays of
  the table.</doc>
            <array length="2"
                   zero-terminated="0"
                   c:type="GArrowChunkedArray**">
              <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
            </array>
          </parameter>
          <parameter name="n_chunked_arrays" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="382">The number of chunked arrays.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_record_batches"
                   c:identifier="garrow_table_new_record_batches"
                   version="0.12.0"
                   throws="1">
        <source-position filename="arrow-glib/table.h" line="77"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="451">A newly created #GArrowTable or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="445">The schema of the table.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
          <parameter name="record_batches" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="446">The record batches
  that have data for the table.</doc>
            <array length="2" zero-terminated="0" c:type="GArrowRecordBatch**">
              <type name="RecordBatch" c:type="GArrowRecordBatch*"/>
            </array>
          </parameter>
          <parameter name="n_record_batches" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="448">The number of record batches.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_values"
                   c:identifier="garrow_table_new_values"
                   version="0.12.0"
                   introspectable="0"
                   throws="1">
        <source-position filename="arrow-glib/table.h" line="60"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="292">A newly created #GArrowTable or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="286">The schema of the table.</doc>
            <type name="Schema" c:type="GArrowSchema*"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="287">The values of the table. All values must be instance of
  the same class. Available classes are #GArrowChunkedArray,
  #GArrowArray and #GArrowRecordBatch.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_column"
              c:identifier="garrow_table_add_column"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/table.h" line="100"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="587">The newly allocated
  #GArrowTable that has a new column or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="581">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="582">The index of the new column.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="583">The field for the column to be added.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
          <parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="584">The column data to be added.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="combine_chunks"
              c:identifier="garrow_table_combine_chunks"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/table.h" line="129"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="763">The #GArrowTable with
  chunks combined, or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="760">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="concatenate"
              c:identifier="garrow_table_concatenate"
              version="0.14.0"
              throws="1">
        <source-position filename="arrow-glib/table.h" line="118"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="698">The table concatenated vertically.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="693">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="other_tables" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="694">The tables to be concatenated.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Table"/>
            </type>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="695">The options to customize concatenation.</doc>
            <type name="TableConcatenateOptions"
                  c:type="GArrowTableConcatenateOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="garrow_table_equal" version="0.4.0">
        <source-position filename="arrow-glib/table.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="482">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="479">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="other_table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="480">A #GArrowTable to be compared.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal_metadata"
              c:identifier="garrow_table_equal_metadata"
              version="0.17.0">
        <source-position filename="arrow-glib/table.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="501">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="497">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="other_table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="498">A #GArrowTable to be compared.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </parameter>
          <parameter name="check_metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="499">Whether to compare metadata.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter"
              c:identifier="garrow_table_filter"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1060"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5662">The #GArrowTable filterd
  with a boolean selection filter. Nulls in the filter will
  result in nulls in the output.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5657">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5658">The values indicates which values should be filtered out.</doc>
            <type name="BooleanArray" c:type="GArrowBooleanArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5659">A #GArrowFilterOptions.</doc>
            <type name="FilterOptions" c:type="GArrowFilterOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter_chunked_array"
              c:identifier="garrow_table_filter_chunked_array"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1066"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5701">The #GArrowTable filterd
  with a chunked array filter. Nulls in the filter will
  result in nulls in the output.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5696">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5697">The values indicates which values should be filtered out.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5698">A #GArrowFilterOptions.</doc>
            <type name="FilterOptions" c:type="GArrowFilterOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_data"
              c:identifier="garrow_table_get_column_data"
              version="0.15.0">
        <source-position filename="arrow-glib/table.h" line="93"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="537">The i-th column's data in the table.</doc>
          <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="532">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="533">The index of the target column. If it's negative, index is
  counted backward from the end of the columns. `-1` means the last
  column.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_columns" c:identifier="garrow_table_get_n_columns">
        <source-position filename="arrow-glib/table.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="557">The number of columns in the table.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="555">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_rows" c:identifier="garrow_table_get_n_rows">
        <source-position filename="arrow-glib/table.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="570">The number of rows in the table.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="568">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_schema" c:identifier="garrow_table_get_schema">
        <source-position filename="arrow-glib/table.h" line="90"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="520">The schema of the table.</doc>
          <type name="Schema" c:type="GArrowSchema*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="518">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_column"
              c:identifier="garrow_table_remove_column"
              version="0.3.0"
              throws="1">
        <source-position filename="arrow-glib/table.h" line="105"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="618">The newly allocated
  #GArrowTable that doesn't have the column or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="614">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="615">The index of the column to be removed.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_column"
              c:identifier="garrow_table_replace_column"
              version="0.15.0"
              throws="1">
        <source-position filename="arrow-glib/table.h" line="109"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="645">The newly allocated
#GArrowTable that has @column as the @i-th column or %NULL on
error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="639">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="640">The index of the column to be replaced.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="641">The field for the new column.</doc>
            <type name="Field" c:type="GArrowField*"/>
          </parameter>
          <parameter name="chunked_array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="642">The newly added column data.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
        </parameters>
      </method>
      <method name="slice" c:identifier="garrow_table_slice" version="0.14.0">
        <source-position filename="arrow-glib/table.h" line="124"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="738">The sub #GArrowTable. It covers
  only from `offset` to `offset + length` range. The sub
  #GArrowTable shares values with the base
  #GArrowTable.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="733">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="734">The offset of sub #GArrowTable. If the offset is negative,
  the offset is counted from the last.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="736">The length of sub #GArrowTable.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort_indices"
              c:identifier="garrow_table_sort_indices"
              version="3.0.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="1053"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5630">The indices that would sort
  a table with the specified options on success, %NULL on error.</doc>
          <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5626">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5627">The options to be used.</doc>
            <type name="SortOptions" c:type="GArrowSortOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take"
              c:identifier="garrow_table_take"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="981"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5266">The #GArrowTable taken from
  an array of values at indices in input array or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5261">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5262">The indices of values to take.</doc>
            <type name="Array" c:type="GArrowArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5263">A #GArrowTakeOptions.</doc>
            <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_chunked_array"
              c:identifier="garrow_table_take_chunked_array"
              version="0.16.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="987"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5298">The #GArrowTable taken from
  an array of values at indices in chunked array or %NULL on error.</doc>
          <type name="Table" c:type="GArrowTable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5293">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5294">The indices of values to take.</doc>
            <type name="ChunkedArray" c:type="GArrowChunkedArray*"/>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5295">A #GArrowTakeOptions.</doc>
            <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="garrow_table_to_string"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/table.h" line="114"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="676">
  The formatted table content or %NULL on error.

  It should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="673">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="write_as_feather"
              c:identifier="garrow_table_write_as_feather"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/table.cpp"
             line="910">Writes the @table as Feather format data to the @sink.</doc>
        <source-position filename="arrow-glib/table.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="919">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="912">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </instance-parameter>
          <parameter name="sink" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="913">The output.</doc>
            <type name="OutputStream" c:type="GArrowOutputStream*"/>
          </parameter>
          <parameter name="properties"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/table.cpp"
                 line="914">The properties for this write.</doc>
            <type name="FeatherWriteProperties"
                  c:type="GArrowFeatherWriteProperties*"/>
          </parameter>
        </parameters>
      </method>
      <property name="table"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="TableBatchReader"
           c:symbol-prefix="table_batch_reader"
           c:type="GArrowTableBatchReader"
           parent="RecordBatchReader"
           glib:type-name="GArrowTableBatchReader"
           glib:get-type="garrow_table_batch_reader_get_type"
           glib:type-struct="TableBatchReaderClass">
      <source-position filename="arrow-glib/reader.h" line="95"/>
      <constructor name="new"
                   c:identifier="garrow_table_batch_reader_new"
                   version="0.8.0">
        <source-position filename="arrow-glib/reader.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/reader.cpp"
               line="401">A newly created #GArrowTableBatchReader.</doc>
          <type name="TableBatchReader" c:type="GArrowTableBatchReader*"/>
        </return-value>
        <parameters>
          <parameter name="table" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="399">The table to be read.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_max_chunk_size"
              c:identifier="garrow_table_batch_reader_set_max_chunk_size"
              version="12.0.0">
        <doc xml:space="preserve"
             filename="arrow-glib/reader.cpp"
             line="414">Set the desired maximum chunk size of record batches.

The actual chunk size of each record batch may be smaller,
depending on actual chunking characteristics of each table column.</doc>
        <source-position filename="arrow-glib/reader.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="reader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="416">A #GArrowTableBatchReader.</doc>
            <type name="TableBatchReader" c:type="GArrowTableBatchReader*"/>
          </instance-parameter>
          <parameter name="max_chunk_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/reader.cpp"
                 line="417">The maximum chunk size of record batches.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="RecordBatchReader" c:type="GArrowRecordBatchReader"/>
      </field>
    </class>
    <record name="TableBatchReaderClass"
            c:type="GArrowTableBatchReaderClass"
            glib:is-gtype-struct-for="TableBatchReader">
      <source-position filename="arrow-glib/reader.h" line="95"/>
      <field name="parent_class">
        <type name="RecordBatchReaderClass"
              c:type="GArrowRecordBatchReaderClass"/>
      </field>
    </record>
    <record name="TableClass"
            c:type="GArrowTableClass"
            glib:is-gtype-struct-for="Table">
      <source-position filename="arrow-glib/table.h" line="56"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="TableConcatenateOptions"
           c:symbol-prefix="table_concatenate_options"
           c:type="GArrowTableConcatenateOptions"
           parent="GObject.Object"
           glib:type-name="GArrowTableConcatenateOptions"
           glib:get-type="garrow_table_concatenate_options_get_type"
           glib:type-struct="TableConcatenateOptionsClass">
      <source-position filename="arrow-glib/table.h" line="40"/>
      <constructor name="new"
                   c:identifier="garrow_table_concatenate_options_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/table.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/table.cpp"
               line="185">A newly created #GArrowTableConcatenateOptions.</doc>
          <type name="TableConcatenateOptions"
                c:type="GArrowTableConcatenateOptions*"/>
        </return-value>
      </constructor>
      <property name="promote-nullability"
                version="6.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/table.cpp"
             line="164">If true, a #GArrowField of #GArrowNullDataType can be unified
with a #GArrowField of another type. The unified field will be of
the other type and become nullable. Nullability will be promoted
to the looser option (nullable if one is not nullable).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="unify-schemas"
                version="6.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/table.cpp"
             line="142">If true, the schemas of the tables will be first unified with
fields of the same name being merged, according to
#GArrowTableConcatenateOptions:promote-nullability, then each
table will be promoted to the unified schema before being
concatenated.

Otherwise, all tables should have the same schema. Each column in
the output table is the result of concatenating the corresponding
columns in all input tables.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="TableConcatenateOptionsClass"
            c:type="GArrowTableConcatenateOptionsClass"
            glib:is-gtype-struct-for="TableConcatenateOptions">
      <source-position filename="arrow-glib/table.h" line="40"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="TableDatum"
           c:symbol-prefix="table_datum"
           c:type="GArrowTableDatum"
           parent="Datum"
           glib:type-name="GArrowTableDatum"
           glib:get-type="garrow_table_datum_get_type"
           glib:type-struct="TableDatumClass">
      <source-position filename="arrow-glib/datum.h" line="128"/>
      <constructor name="new"
                   c:identifier="garrow_table_datum_new"
                   version="1.0.0">
        <source-position filename="arrow-glib/datum.h" line="131"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/datum.cpp"
               line="721">A newly created #GArrowTableDatum.</doc>
          <type name="TableDatum" c:type="GArrowTableDatum*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/datum.cpp"
                 line="719">A #GArrowTable.</doc>
            <type name="Table" c:type="GArrowTable*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Table"/>
      </property>
      <field name="parent_instance">
        <type name="Datum" c:type="GArrowDatum"/>
      </field>
    </class>
    <record name="TableDatumClass"
            c:type="GArrowTableDatumClass"
            glib:is-gtype-struct-for="TableDatum">
      <source-position filename="arrow-glib/datum.h" line="128"/>
      <field name="parent_class">
        <type name="DatumClass" c:type="GArrowDatumClass"/>
      </field>
    </record>
    <class name="TakeOptions"
           c:symbol-prefix="take_options"
           c:type="GArrowTakeOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowTakeOptions"
           glib:get-type="garrow_take_options_get_type"
           glib:type-struct="TakeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="500"/>
      <constructor name="new"
                   c:identifier="garrow_take_options_new"
                   version="0.14.0">
        <source-position filename="arrow-glib/compute.h" line="504"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="2849">A newly created #GArrowTakeOptions.</doc>
          <type name="TakeOptions" c:type="GArrowTakeOptions*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="TakeOptionsClass"
            c:type="GArrowTakeOptionsClass"
            glib:is-gtype-struct-for="TakeOptions">
      <source-position filename="arrow-glib/compute.h" line="500"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="TemporalDataType"
           c:symbol-prefix="temporal_data_type"
           c:type="GArrowTemporalDataType"
           parent="FixedWidthDataType"
           abstract="1"
           glib:type-name="GArrowTemporalDataType"
           glib:get-type="garrow_temporal_data_type_get_type"
           glib:type-struct="TemporalDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="386"/>
      <field name="parent_instance">
        <type name="FixedWidthDataType" c:type="GArrowFixedWidthDataType"/>
      </field>
    </class>
    <record name="TemporalDataTypeClass"
            c:type="GArrowTemporalDataTypeClass"
            glib:is-gtype-struct-for="TemporalDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="386"/>
      <field name="parent_class">
        <type name="FixedWidthDataTypeClass"
              c:type="GArrowFixedWidthDataTypeClass"/>
      </field>
    </record>
    <class name="Tensor"
           c:symbol-prefix="tensor"
           c:type="GArrowTensor"
           parent="GObject.Object"
           glib:type-name="GArrowTensor"
           glib:get-type="garrow_tensor_get_type"
           glib:type-struct="TensorClass">
      <source-position filename="arrow-glib/tensor.h" line="36"/>
      <constructor name="new" c:identifier="garrow_tensor_new" version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="167">The newly created #GArrowTensor.</doc>
          <type name="Tensor" c:type="GArrowTensor*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="155">A #GArrowDataType that indicates each element type
  in the tensor.</doc>
            <type name="DataType" c:type="GArrowDataType*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="157">A #GArrowBuffer that contains tensor data.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="shape" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="158">A list of dimension sizes.</doc>
            <array length="3" zero-terminated="0" c:type="gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="n_dimensions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="159">The number of dimensions.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="strides"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="160">A list of the number of
  bytes in each dimension.</doc>
            <array length="5" zero-terminated="0" c:type="gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="n_strides" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="162">The number of strides.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="dimension_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="163">A list of
  dimension names.</doc>
            <array length="7" zero-terminated="0" c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_dimension_names" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="165">A list of dimension names</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal" c:identifier="garrow_tensor_equal" version="0.4.0">
        <source-position filename="arrow-glib/tensor.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="210">%TRUE if both of them have the same data, %FALSE
  otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="207">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
          <parameter name="other_tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="208">A #GArrowTensor to be compared.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_buffer"
              c:identifier="garrow_tensor_get_buffer"
              glib:get-property="buffer"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="259">The data of the tensor.</doc>
          <type name="Buffer" c:type="GArrowBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="257">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dimension_name"
              c:identifier="garrow_tensor_get_dimension_name"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="351">The i-th dimension name of the tensor.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="348">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="349">The index of the target dimension.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_dimensions"
              c:identifier="garrow_tensor_get_n_dimensions"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="335">The number of dimensions of the tensor.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="333">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shape"
              c:identifier="garrow_tensor_get_shape"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="282">
  The shape of the tensor.

  It should be freed with g_free() when no longer needed.</doc>
          <array length="0" zero-terminated="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="279">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
          <parameter name="n_dimensions"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="280">The number of dimensions.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="garrow_tensor_get_size"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="367">The number of value cells in the tensor.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="365">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_strides"
              c:identifier="garrow_tensor_get_strides"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="309">
  The strides of the tensor.

  It should be freed with g_free() when no longer needed.</doc>
          <array length="0" zero-terminated="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="306">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
          <parameter name="n_strides"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="307">The number of strides.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_data_type"
              c:identifier="garrow_tensor_get_value_data_type"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="227">The data type of each value in the tensor.</doc>
          <type name="DataType" c:type="GArrowDataType*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="225">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="garrow_tensor_get_value_type"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="243">The type of each value in the tensor.</doc>
          <type name="Type" c:type="GArrowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="241">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_column_major"
              c:identifier="garrow_tensor_is_column_major"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="428">%TRUE if the tensor is column major a.k.a. Fortran order,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="426">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_contiguous"
              c:identifier="garrow_tensor_is_contiguous"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="397">%TRUE if the tensor is contiguous, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="395">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_mutable"
              c:identifier="garrow_tensor_is_mutable"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="382">%TRUE if the tensor is mutable, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="380">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_row_major"
              c:identifier="garrow_tensor_is_row_major"
              version="0.3.0">
        <source-position filename="arrow-glib/tensor.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/tensor.cpp"
               line="412">%TRUE if the tensor is row major a.k.a. C order,
  %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tensor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/tensor.cpp"
                 line="410">A #GArrowTensor.</doc>
            <type name="Tensor" c:type="GArrowTensor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="buffer"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_buffer">
        <type name="Buffer"/>
      </property>
      <property name="tensor"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="TensorClass"
            c:type="GArrowTensorClass"
            glib:is-gtype-struct-for="Tensor">
      <source-position filename="arrow-glib/tensor.h" line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Time32Array"
           c:symbol-prefix="time32_array"
           c:type="GArrowTime32Array"
           parent="NumericArray"
           glib:type-name="GArrowTime32Array"
           glib:get-type="garrow_time32_array_get_type"
           glib:type-struct="Time32ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="603"/>
      <constructor name="new"
                   c:identifier="garrow_time32_array_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="605"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2765">A newly created #GArrowTime32Array.</doc>
          <type name="Time32Array" c:type="GArrowTime32Array*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2755">The #GArrowTime32DataType.</doc>
            <type name="Time32DataType" c:type="GArrowTime32DataType*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2756">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2757">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2758">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2762">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_time32_array_get_value"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="611"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2790">The @i-th value.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2787">A #GArrowTime32Array.</doc>
            <type name="Time32Array" c:type="GArrowTime32Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2788">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_time32_array_get_values"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="613"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2807">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint32*">
            <type name="gint32" c:type="gint32"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2804">A #GArrowTime32Array.</doc>
            <type name="Time32Array" c:type="GArrowTime32Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2805">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Time32ArrayBuilder"
           c:symbol-prefix="time32_array_builder"
           c:type="GArrowTime32ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowTime32ArrayBuilder"
           glib:get-type="garrow_time32_array_builder_get_type"
           glib:type-struct="Time32ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1035"/>
      <constructor name="new"
                   c:identifier="garrow_time32_array_builder_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/array-builder.h" line="1037"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4369">A newly created #GArrowTime32ArrayBuilder.</doc>
          <type name="Time32ArrayBuilder" c:type="GArrowTime32ArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4367">A #GArrowTime32DataType.</doc>
            <type name="Time32DataType" c:type="GArrowTime32DataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append"
              c:identifier="garrow_time32_array_builder_append"
              version="0.7.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_time32_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1041"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4389">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4385">A #GArrowTime32ArrayBuilder.</doc>
            <type name="Time32ArrayBuilder"
                  c:type="GArrowTime32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4386">The number of days since UNIX epoch in signed 32bit integer.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_time32_array_builder_append_null"
              version="0.7.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1057"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4469">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4466">A #GArrowTime32ArrayBuilder.</doc>
            <type name="Time32ArrayBuilder"
                  c:type="GArrowTime32ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_time32_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4483">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1060"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4492">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4485">A #GArrowTime32ArrayBuilder.</doc>
            <type name="Time32ArrayBuilder"
                  c:type="GArrowTime32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4486">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_time32_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1046"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4410">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4406">A #GArrowTime32ArrayBuilder.</doc>
            <type name="Time32ArrayBuilder"
                  c:type="GArrowTime32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4407">The number of days since UNIX epoch in signed 32bit integer.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_time32_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4426">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1049"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4442">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4428">A #GArrowTime32ArrayBuilder.</doc>
            <type name="Time32ArrayBuilder"
                  c:type="GArrowTime32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4429">The array of
  the number of days since UNIX epoch in signed 32bit integer.</doc>
            <array length="1" zero-terminated="0" c:type="const gint32*">
              <type name="gint32" c:type="gint32"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4431">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4432">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4436">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Time32ArrayBuilderClass"
            c:type="GArrowTime32ArrayBuilderClass"
            glib:is-gtype-struct-for="Time32ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1035"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Time32ArrayClass"
            c:type="GArrowTime32ArrayClass"
            glib:is-gtype-struct-for="Time32Array">
      <source-position filename="arrow-glib/basic-array.h" line="603"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Time32DataType"
           c:symbol-prefix="time32_data_type"
           c:type="GArrowTime32DataType"
           parent="TimeDataType"
           glib:type-name="GArrowTime32DataType"
           glib:get-type="garrow_time32_data_type_get_type"
           glib:type-struct="Time32DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="456"/>
      <constructor name="new"
                   c:identifier="garrow_time32_data_type_new"
                   version="0.7.0"
                   throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="458"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1223">
  A newly created the number of seconds or milliseconds since
  midnight in 32-bit signed integer data type.</doc>
          <type name="Time32DataType" c:type="GArrowTime32DataType*"/>
        </return-value>
        <parameters>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1220">%GARROW_TIME_UNIT_SECOND or %GARROW_TIME_UNIT_MILLI.</doc>
            <type name="TimeUnit" c:type="GArrowTimeUnit"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="TimeDataType" c:type="GArrowTimeDataType"/>
      </field>
    </class>
    <record name="Time32DataTypeClass"
            c:type="GArrowTime32DataTypeClass"
            glib:is-gtype-struct-for="Time32DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="456"/>
      <field name="parent_class">
        <type name="TimeDataTypeClass" c:type="GArrowTimeDataTypeClass"/>
      </field>
    </record>
    <class name="Time32Scalar"
           c:symbol-prefix="time32_scalar"
           c:type="GArrowTime32Scalar"
           parent="Scalar"
           glib:type-name="GArrowTime32Scalar"
           glib:get-type="garrow_time32_scalar_get_type"
           glib:type-struct="Time32ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="461"/>
      <constructor name="new"
                   c:identifier="garrow_time32_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="465"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1417">A newly created #GArrowTime32Scalar.</doc>
          <type name="Time32Scalar" c:type="GArrowTime32Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1414">A #GArrowTime32DataType for this scalar.</doc>
            <type name="Time32DataType" c:type="GArrowTime32DataType*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1415">The value of this scalar.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_time32_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="469"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1440">The value of this scalar.</doc>
          <type name="gint32" c:type="gint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1438">A #GArrowTime32Scalar.</doc>
            <type name="Time32Scalar" c:type="GArrowTime32Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Time32ScalarClass"
            c:type="GArrowTime32ScalarClass"
            glib:is-gtype-struct-for="Time32Scalar">
      <source-position filename="arrow-glib/scalar.h" line="461"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="Time64Array"
           c:symbol-prefix="time64_array"
           c:type="GArrowTime64Array"
           parent="NumericArray"
           glib:type-name="GArrowTime64Array"
           glib:get-type="garrow_time64_array_get_type"
           glib:type-struct="Time64ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="626"/>
      <constructor name="new"
                   c:identifier="garrow_time64_array_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="628"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2846">A newly created #GArrowTime64Array.</doc>
          <type name="Time64Array" c:type="GArrowTime64Array*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2836">The #GArrowTime64DataType.</doc>
            <type name="Time64DataType" c:type="GArrowTime64DataType*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2837">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2838">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2839">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2843">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_time64_array_get_value"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="634"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2871">The @i-th value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2868">A #GArrowTime64Array.</doc>
            <type name="Time64Array" c:type="GArrowTime64Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2869">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_time64_array_get_values"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="636"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2888">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2885">A #GArrowTime64Array.</doc>
            <type name="Time64Array" c:type="GArrowTime64Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2886">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="Time64ArrayBuilder"
           c:symbol-prefix="time64_array_builder"
           c:type="GArrowTime64ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowTime64ArrayBuilder"
           glib:get-type="garrow_time64_array_builder_get_type"
           glib:type-struct="Time64ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1076"/>
      <constructor name="new"
                   c:identifier="garrow_time64_array_builder_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/array-builder.h" line="1078"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4528">A newly created #GArrowTime64ArrayBuilder.</doc>
          <type name="Time64ArrayBuilder" c:type="GArrowTime64ArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4526">A #GArrowTime64DataType.</doc>
            <type name="Time64DataType" c:type="GArrowTime64DataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append"
              c:identifier="garrow_time64_array_builder_append"
              version="0.7.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_time64_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1082"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4548">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4544">A #GArrowTime64ArrayBuilder.</doc>
            <type name="Time64ArrayBuilder"
                  c:type="GArrowTime64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4545">The number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_time64_array_builder_append_null"
              version="0.7.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1098"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4628">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4625">A #GArrowTime64ArrayBuilder.</doc>
            <type name="Time64ArrayBuilder"
                  c:type="GArrowTime64ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_time64_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4642">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4651">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4644">A #GArrowTime64ArrayBuilder.</doc>
            <type name="Time64ArrayBuilder"
                  c:type="GArrowTime64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4645">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_time64_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1087"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4569">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4565">A #GArrowTime64ArrayBuilder.</doc>
            <type name="Time64ArrayBuilder"
                  c:type="GArrowTime64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4566">The number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_time64_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4585">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1090"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4601">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4587">A #GArrowTime64ArrayBuilder.</doc>
            <type name="Time64ArrayBuilder"
                  c:type="GArrowTime64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4588">The array of
  the number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <array length="1" zero-terminated="0" c:type="const gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4590">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4591">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4595">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="Time64ArrayBuilderClass"
            c:type="GArrowTime64ArrayBuilderClass"
            glib:is-gtype-struct-for="Time64ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1076"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="Time64ArrayClass"
            c:type="GArrowTime64ArrayClass"
            glib:is-gtype-struct-for="Time64Array">
      <source-position filename="arrow-glib/basic-array.h" line="626"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="Time64DataType"
           c:symbol-prefix="time64_data_type"
           c:type="GArrowTime64DataType"
           parent="TimeDataType"
           glib:type-name="GArrowTime64DataType"
           glib:get-type="garrow_time64_data_type_get_type"
           glib:type-struct="Time64DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="471"/>
      <constructor name="new"
                   c:identifier="garrow_time64_data_type_new"
                   version="0.7.0"
                   throws="1">
        <source-position filename="arrow-glib/basic-data-type.h" line="473"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1291">
  A newly created the number of seconds or milliseconds since
  midnight in 64-bit signed integer data type.</doc>
          <type name="Time64DataType" c:type="GArrowTime64DataType*"/>
        </return-value>
        <parameters>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1288">%GARROW_TIME_UNIT_SECOND or %GARROW_TIME_UNIT_MILLI.</doc>
            <type name="TimeUnit" c:type="GArrowTimeUnit"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="TimeDataType" c:type="GArrowTimeDataType"/>
      </field>
    </class>
    <record name="Time64DataTypeClass"
            c:type="GArrowTime64DataTypeClass"
            glib:is-gtype-struct-for="Time64DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="471"/>
      <field name="parent_class">
        <type name="TimeDataTypeClass" c:type="GArrowTimeDataTypeClass"/>
      </field>
    </record>
    <class name="Time64Scalar"
           c:symbol-prefix="time64_scalar"
           c:type="GArrowTime64Scalar"
           parent="Scalar"
           glib:type-name="GArrowTime64Scalar"
           glib:get-type="garrow_time64_scalar_get_type"
           glib:type-struct="Time64ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="481"/>
      <constructor name="new"
                   c:identifier="garrow_time64_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="485"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1473">A newly created #GArrowTime64Scalar.</doc>
          <type name="Time64Scalar" c:type="GArrowTime64Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1470">A #GArrowTime64DataType for this scalar.</doc>
            <type name="Time64DataType" c:type="GArrowTime64DataType*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1471">The value of this scalar.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_time64_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="489"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1496">The value of this scalar.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1494">A #GArrowTime64Scalar.</doc>
            <type name="Time64Scalar" c:type="GArrowTime64Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="Time64ScalarClass"
            c:type="GArrowTime64ScalarClass"
            glib:is-gtype-struct-for="Time64Scalar">
      <source-position filename="arrow-glib/scalar.h" line="481"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="TimeDataType"
           c:symbol-prefix="time_data_type"
           c:type="GArrowTimeDataType"
           parent="TemporalDataType"
           abstract="1"
           glib:type-name="GArrowTimeDataType"
           glib:get-type="garrow_time_data_type_get_type"
           glib:type-struct="TimeDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="442"/>
      <method name="get_unit"
              c:identifier="garrow_time_data_type_get_unit"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="444"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1189">The unit of the time data type.</doc>
          <type name="TimeUnit" c:type="GArrowTimeUnit"/>
        </return-value>
        <parameters>
          <instance-parameter name="time_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1187">The #GArrowTimeDataType.</doc>
            <type name="TimeDataType" c:type="GArrowTimeDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="TemporalDataType" c:type="GArrowTemporalDataType"/>
      </field>
    </class>
    <record name="TimeDataTypeClass"
            c:type="GArrowTimeDataTypeClass"
            glib:is-gtype-struct-for="TimeDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="442"/>
      <field name="parent_class">
        <type name="TemporalDataTypeClass"
              c:type="GArrowTemporalDataTypeClass"/>
      </field>
    </record>
    <enumeration name="TimeUnit"
                 glib:type-name="GArrowTimeUnit"
                 glib:get-type="garrow_time_unit_get_type"
                 c:type="GArrowTimeUnit">
      <doc xml:space="preserve"
           filename="arrow-glib/type.h"
           line="117">They are corresponding to `arrow::TimeUnit::type` values.</doc>
      <member name="second"
              value="0"
              c:identifier="GARROW_TIME_UNIT_SECOND"
              glib:nick="second"
              glib:name="GARROW_TIME_UNIT_SECOND">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="119">Second.</doc>
      </member>
      <member name="milli"
              value="1"
              c:identifier="GARROW_TIME_UNIT_MILLI"
              glib:nick="milli"
              glib:name="GARROW_TIME_UNIT_MILLI">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="120">Millisecond.</doc>
      </member>
      <member name="micro"
              value="2"
              c:identifier="GARROW_TIME_UNIT_MICRO"
              glib:nick="micro"
              glib:name="GARROW_TIME_UNIT_MICRO">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="121">Microsecond.</doc>
      </member>
      <member name="nano"
              value="3"
              c:identifier="GARROW_TIME_UNIT_NANO"
              glib:nick="nano"
              glib:name="GARROW_TIME_UNIT_NANO">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="122">Nanosecond.</doc>
      </member>
    </enumeration>
    <class name="TimestampArray"
           c:symbol-prefix="timestamp_array"
           c:type="GArrowTimestampArray"
           parent="NumericArray"
           glib:type-name="GArrowTimestampArray"
           glib:get-type="garrow_timestamp_array_get_type"
           glib:type-struct="TimestampArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="580"/>
      <constructor name="new"
                   c:identifier="garrow_timestamp_array_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="582"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2682">A newly created #GArrowTimestampArray.</doc>
          <type name="TimestampArray" c:type="GArrowTimestampArray*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2672">The #GArrowTimestampDataType.</doc>
            <type name="TimestampDataType" c:type="GArrowTimestampDataType*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2673">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2674">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2675">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2679">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_timestamp_array_get_value"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="588"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2707">The @i-th value.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2704">A #GArrowTimestampArray.</doc>
            <type name="TimestampArray" c:type="GArrowTimestampArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2705">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="garrow_timestamp_array_get_values"
              version="0.7.0">
        <source-position filename="arrow-glib/basic-array.h" line="590"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="2724">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2721">A #GArrowTimestampArray.</doc>
            <type name="TimestampArray" c:type="GArrowTimestampArray*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="2722">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="TimestampArrayBuilder"
           c:symbol-prefix="timestamp_array_builder"
           c:type="GArrowTimestampArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowTimestampArrayBuilder"
           glib:get-type="garrow_timestamp_array_builder_get_type"
           glib:type-struct="TimestampArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="993"/>
      <constructor name="new"
                   c:identifier="garrow_timestamp_array_builder_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/array-builder.h" line="996"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4210">A newly created #GArrowTimestampArrayBuilder.</doc>
          <type name="TimestampArrayBuilder"
                c:type="GArrowTimestampArrayBuilder*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4208">A #GArrowTimestampDataType.</doc>
            <type name="TimestampDataType" c:type="GArrowTimestampDataType*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append"
              c:identifier="garrow_timestamp_array_builder_append"
              version="0.7.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_timestamp_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1000"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4230">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4226">A #GArrowTimestampArrayBuilder.</doc>
            <type name="TimestampArrayBuilder"
                  c:type="GArrowTimestampArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4227">The number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_timestamp_array_builder_append_null"
              version="0.7.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1016"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4310">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4307">A #GArrowTimestampArrayBuilder.</doc>
            <type name="TimestampArrayBuilder"
                  c:type="GArrowTimestampArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_timestamp_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4324">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="1019"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4333">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4326">A #GArrowTimestampArrayBuilder.</doc>
            <type name="TimestampArrayBuilder"
                  c:type="GArrowTimestampArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4327">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_timestamp_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="1005"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4251">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4247">A #GArrowTimestampArrayBuilder.</doc>
            <type name="TimestampArrayBuilder"
                  c:type="GArrowTimestampArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4248">The number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_timestamp_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="4267">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1008"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="4283">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4269">A #GArrowTimestampArrayBuilder.</doc>
            <type name="TimestampArrayBuilder"
                  c:type="GArrowTimestampArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4270">The array of
  the number of milliseconds since UNIX epoch in signed 64bit integer.</doc>
            <array length="1" zero-terminated="0" c:type="const gint64*">
              <type name="gint64" c:type="gint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4272">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4273">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="4277">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="TimestampArrayBuilderClass"
            c:type="GArrowTimestampArrayBuilderClass"
            glib:is-gtype-struct-for="TimestampArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="993"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="TimestampArrayClass"
            c:type="GArrowTimestampArrayClass"
            glib:is-gtype-struct-for="TimestampArray">
      <source-position filename="arrow-glib/basic-array.h" line="580"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="TimestampDataType"
           c:symbol-prefix="timestamp_data_type"
           c:type="GArrowTimestampDataType"
           parent="TemporalDataType"
           glib:type-name="GArrowTimestampDataType"
           glib:get-type="garrow_timestamp_data_type_get_type"
           glib:type-struct="TimestampDataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="426"/>
      <constructor name="new"
                   c:identifier="garrow_timestamp_data_type_new"
                   version="0.7.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="428"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1134">A newly created the number of
  seconds/milliseconds/microseconds/nanoseconds since UNIX epoch in
  64-bit signed integer data type.</doc>
          <type name="TimestampDataType" c:type="GArrowTimestampDataType*"/>
        </return-value>
        <parameters>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1132">The unit of the timestamp data.</doc>
            <type name="TimeUnit" c:type="GArrowTimeUnit"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_unit"
              c:identifier="garrow_timestamp_data_type_get_unit"
              version="0.8.0">
        <source-position filename="arrow-glib/basic-data-type.h" line="430"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="1156">The unit of the timestamp data type.</doc>
          <type name="TimeUnit" c:type="GArrowTimeUnit"/>
        </return-value>
        <parameters>
          <instance-parameter name="timestamp_data_type"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-data-type.cpp"
                 line="1154">The #GArrowTimestampDataType.</doc>
            <type name="TimestampDataType" c:type="GArrowTimestampDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="TemporalDataType" c:type="GArrowTemporalDataType"/>
      </field>
    </class>
    <record name="TimestampDataTypeClass"
            c:type="GArrowTimestampDataTypeClass"
            glib:is-gtype-struct-for="TimestampDataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="426"/>
      <field name="parent_class">
        <type name="TemporalDataTypeClass"
              c:type="GArrowTemporalDataTypeClass"/>
      </field>
    </record>
    <class name="TimestampScalar"
           c:symbol-prefix="timestamp_scalar"
           c:type="GArrowTimestampScalar"
           parent="Scalar"
           glib:type-name="GArrowTimestampScalar"
           glib:get-type="garrow_timestamp_scalar_get_type"
           glib:type-struct="TimestampScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="501"/>
      <constructor name="new"
                   c:identifier="garrow_timestamp_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="505"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1529">A newly created #GArrowTimestampScalar.</doc>
          <type name="TimestampScalar" c:type="GArrowTimestampScalar*"/>
        </return-value>
        <parameters>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1526">A #GArrowTimestampDataType for this scalar.</doc>
            <type name="TimestampDataType" c:type="GArrowTimestampDataType*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1527">The value of this scalar.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_timestamp_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="509"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="1552">The value of this scalar.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="1550">A #GArrowTimestampScalar.</doc>
            <type name="TimestampScalar" c:type="GArrowTimestampScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="TimestampScalarClass"
            c:type="GArrowTimestampScalarClass"
            glib:is-gtype-struct-for="TimestampScalar">
      <source-position filename="arrow-glib/scalar.h" line="501"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <enumeration name="Type"
                 glib:type-name="GArrowType"
                 glib:get-type="garrow_type_get_type"
                 c:type="GArrowType">
      <doc xml:space="preserve"
           filename="arrow-glib/type.h"
           line="26">They are corresponding to `arrow::Type::type` values.</doc>
      <member name="na"
              value="0"
              c:identifier="GARROW_TYPE_NA"
              glib:nick="na"
              glib:name="GARROW_TYPE_NA">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="28">A degenerate NULL type represented as 0 bytes/bits.</doc>
      </member>
      <member name="boolean"
              value="1"
              c:identifier="GARROW_TYPE_BOOLEAN"
              glib:nick="boolean"
              glib:name="GARROW_TYPE_BOOLEAN">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="29">A boolean value represented as 1-bit.</doc>
      </member>
      <member name="uint8"
              value="2"
              c:identifier="GARROW_TYPE_UINT8"
              glib:nick="uint8"
              glib:name="GARROW_TYPE_UINT8">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="30">Little-endian 8-bit unsigned integer.</doc>
      </member>
      <member name="int8"
              value="3"
              c:identifier="GARROW_TYPE_INT8"
              glib:nick="int8"
              glib:name="GARROW_TYPE_INT8">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="31">Little-endian 8-bit signed integer.</doc>
      </member>
      <member name="uint16"
              value="4"
              c:identifier="GARROW_TYPE_UINT16"
              glib:nick="uint16"
              glib:name="GARROW_TYPE_UINT16">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="32">Little-endian 16-bit unsigned integer.</doc>
      </member>
      <member name="int16"
              value="5"
              c:identifier="GARROW_TYPE_INT16"
              glib:nick="int16"
              glib:name="GARROW_TYPE_INT16">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="33">Little-endian 16-bit signed integer.</doc>
      </member>
      <member name="uint32"
              value="6"
              c:identifier="GARROW_TYPE_UINT32"
              glib:nick="uint32"
              glib:name="GARROW_TYPE_UINT32">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="34">Little-endian 32-bit unsigned integer.</doc>
      </member>
      <member name="int32"
              value="7"
              c:identifier="GARROW_TYPE_INT32"
              glib:nick="int32"
              glib:name="GARROW_TYPE_INT32">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="35">Little-endian 32-bit signed integer.</doc>
      </member>
      <member name="uint64"
              value="8"
              c:identifier="GARROW_TYPE_UINT64"
              glib:nick="uint64"
              glib:name="GARROW_TYPE_UINT64">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="36">Little-endian 64-bit unsigned integer.</doc>
      </member>
      <member name="int64"
              value="9"
              c:identifier="GARROW_TYPE_INT64"
              glib:nick="int64"
              glib:name="GARROW_TYPE_INT64">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="37">Little-endian 64-bit signed integer.</doc>
      </member>
      <member name="half_float"
              value="10"
              c:identifier="GARROW_TYPE_HALF_FLOAT"
              glib:nick="half-float"
              glib:name="GARROW_TYPE_HALF_FLOAT">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="38">2-byte floating point value.</doc>
      </member>
      <member name="float"
              value="11"
              c:identifier="GARROW_TYPE_FLOAT"
              glib:nick="float"
              glib:name="GARROW_TYPE_FLOAT">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="39">4-byte floating point value.</doc>
      </member>
      <member name="double"
              value="12"
              c:identifier="GARROW_TYPE_DOUBLE"
              glib:nick="double"
              glib:name="GARROW_TYPE_DOUBLE">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="40">8-byte floating point value.</doc>
      </member>
      <member name="string"
              value="13"
              c:identifier="GARROW_TYPE_STRING"
              glib:nick="string"
              glib:name="GARROW_TYPE_STRING">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="41">UTF-8 variable-length string.</doc>
      </member>
      <member name="binary"
              value="14"
              c:identifier="GARROW_TYPE_BINARY"
              glib:nick="binary"
              glib:name="GARROW_TYPE_BINARY">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="42">Variable-length bytes (no guarantee of UTF-8-ness).</doc>
      </member>
      <member name="fixed_size_binary"
              value="15"
              c:identifier="GARROW_TYPE_FIXED_SIZE_BINARY"
              glib:nick="fixed-size-binary"
              glib:name="GARROW_TYPE_FIXED_SIZE_BINARY">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="43">Fixed-size binary. Each value occupies
  the same number of bytes.</doc>
      </member>
      <member name="date32"
              value="16"
              c:identifier="GARROW_TYPE_DATE32"
              glib:nick="date32"
              glib:name="GARROW_TYPE_DATE32">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="45">int32 days since the UNIX epoch.</doc>
      </member>
      <member name="date64"
              value="17"
              c:identifier="GARROW_TYPE_DATE64"
              glib:nick="date64"
              glib:name="GARROW_TYPE_DATE64">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="46">int64 milliseconds since the UNIX epoch.</doc>
      </member>
      <member name="timestamp"
              value="18"
              c:identifier="GARROW_TYPE_TIMESTAMP"
              glib:nick="timestamp"
              glib:name="GARROW_TYPE_TIMESTAMP">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="47">Exact timestamp encoded with int64 since UNIX epoch.
  Default unit millisecond.</doc>
      </member>
      <member name="time32"
              value="19"
              c:identifier="GARROW_TYPE_TIME32"
              glib:nick="time32"
              glib:name="GARROW_TYPE_TIME32">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="49">Exact time encoded with int32, supporting seconds or milliseconds</doc>
      </member>
      <member name="time64"
              value="20"
              c:identifier="GARROW_TYPE_TIME64"
              glib:nick="time64"
              glib:name="GARROW_TYPE_TIME64">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="50">Exact time encoded with int64, supporting micro- or nanoseconds</doc>
      </member>
      <member name="month_interval"
              value="21"
              c:identifier="GARROW_TYPE_MONTH_INTERVAL"
              glib:nick="month-interval"
              glib:name="GARROW_TYPE_MONTH_INTERVAL">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="51">YEAR_MONTH interval in SQL style.</doc>
      </member>
      <member name="day_time_interval"
              value="22"
              c:identifier="GARROW_TYPE_DAY_TIME_INTERVAL"
              glib:nick="day-time-interval"
              glib:name="GARROW_TYPE_DAY_TIME_INTERVAL">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="52">DAY_TIME interval in SQL style.</doc>
      </member>
      <member name="decimal128"
              value="23"
              c:identifier="GARROW_TYPE_DECIMAL128"
              glib:nick="decimal128"
              glib:name="GARROW_TYPE_DECIMAL128">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="53">Precision- and scale-based decimal
  type with 128-bit. Storage type depends on the parameters.</doc>
      </member>
      <member name="decimal256"
              value="24"
              c:identifier="GARROW_TYPE_DECIMAL256"
              glib:nick="decimal256"
              glib:name="GARROW_TYPE_DECIMAL256">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="55">Precision- and scale-based decimal
  type with 256-bit. Storage type depends on the parameters.</doc>
      </member>
      <member name="list"
              value="25"
              c:identifier="GARROW_TYPE_LIST"
              glib:nick="list"
              glib:name="GARROW_TYPE_LIST">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="57">A list of some logical data type.</doc>
      </member>
      <member name="struct"
              value="26"
              c:identifier="GARROW_TYPE_STRUCT"
              glib:nick="struct"
              glib:name="GARROW_TYPE_STRUCT">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="58">Struct of logical types.</doc>
      </member>
      <member name="sparse_union"
              value="27"
              c:identifier="GARROW_TYPE_SPARSE_UNION"
              glib:nick="sparse-union"
              glib:name="GARROW_TYPE_SPARSE_UNION">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="59">Sparse unions of logical types.</doc>
      </member>
      <member name="dense_union"
              value="28"
              c:identifier="GARROW_TYPE_DENSE_UNION"
              glib:nick="dense-union"
              glib:name="GARROW_TYPE_DENSE_UNION">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="60">Dense unions of logical types.</doc>
      </member>
      <member name="dictionary"
              value="29"
              c:identifier="GARROW_TYPE_DICTIONARY"
              glib:nick="dictionary"
              glib:name="GARROW_TYPE_DICTIONARY">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="61">Dictionary aka Category type.</doc>
      </member>
      <member name="map"
              value="30"
              c:identifier="GARROW_TYPE_MAP"
              glib:nick="map"
              glib:name="GARROW_TYPE_MAP">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="62">A repeated struct logical type.</doc>
      </member>
      <member name="extension"
              value="31"
              c:identifier="GARROW_TYPE_EXTENSION"
              glib:nick="extension"
              glib:name="GARROW_TYPE_EXTENSION">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="63">Custom data type, implemented by user.</doc>
      </member>
      <member name="fixed_size_list"
              value="32"
              c:identifier="GARROW_TYPE_FIXED_SIZE_LIST"
              glib:nick="fixed-size-list"
              glib:name="GARROW_TYPE_FIXED_SIZE_LIST">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="64">Fixed size list of some logical type.</doc>
      </member>
      <member name="duration"
              value="33"
              c:identifier="GARROW_TYPE_DURATION"
              glib:nick="duration"
              glib:name="GARROW_TYPE_DURATION">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="65">Measure of elapsed time in either seconds,
  milliseconds, microseconds or nanoseconds.</doc>
      </member>
      <member name="large_string"
              value="34"
              c:identifier="GARROW_TYPE_LARGE_STRING"
              glib:nick="large-string"
              glib:name="GARROW_TYPE_LARGE_STRING">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="67">64bit offsets UTF-8 variable-length string.</doc>
      </member>
      <member name="large_binary"
              value="35"
              c:identifier="GARROW_TYPE_LARGE_BINARY"
              glib:nick="large-binary"
              glib:name="GARROW_TYPE_LARGE_BINARY">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="68">64bit offsets Variable-length bytes (no guarantee of UTF-8-ness).</doc>
      </member>
      <member name="large_list"
              value="36"
              c:identifier="GARROW_TYPE_LARGE_LIST"
              glib:nick="large-list"
              glib:name="GARROW_TYPE_LARGE_LIST">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="69">A list of some logical data type with 64-bit offsets.</doc>
      </member>
      <member name="month_day_nano_interval"
              value="37"
              c:identifier="GARROW_TYPE_MONTH_DAY_NANO_INTERVAL"
              glib:nick="month-day-nano-interval"
              glib:name="GARROW_TYPE_MONTH_DAY_NANO_INTERVAL">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="70">MONTH_DAY_NANO interval in SQL style.</doc>
      </member>
      <member name="run_end_encoded"
              value="38"
              c:identifier="GARROW_TYPE_RUN_END_ENCODED"
              glib:nick="run-end-encoded"
              glib:name="GARROW_TYPE_RUN_END_ENCODED">
        <doc xml:space="preserve"
             filename="arrow-glib/type.h"
             line="71">Run-end encoded data.</doc>
      </member>
    </enumeration>
    <class name="UInt16Array"
           c:symbol-prefix="uint16_array"
           c:type="GArrowUInt16Array"
           parent="NumericArray"
           glib:type-name="GArrowUInt16Array"
           glib:get-type="garrow_uint16_array_get_type"
           glib:type-struct="UInt16ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="247"/>
      <constructor name="new"
                   c:identifier="garrow_uint16_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="249"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1504">A newly created #GArrowUInt16Array.</doc>
          <type name="UInt16Array" c:type="GArrowUInt16Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1495">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1496">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1497">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1501">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_uint16_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="254"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1526">The @i-th value.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1523">A #GArrowUInt16Array.</doc>
            <type name="UInt16Array" c:type="GArrowUInt16Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1524">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_uint16_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="256"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1541">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const guint16*">
            <type name="guint16" c:type="guint16"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1538">A #GArrowUInt16Array.</doc>
            <type name="UInt16Array" c:type="GArrowUInt16Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1539">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_uint16_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="948"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5060">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5057">A #GArrowUInt16Array.</doc>
            <type name="UInt16Array" c:type="GArrowUInt16Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="UInt16ArrayBuilder"
           c:symbol-prefix="uint16_array_builder"
           c:type="GArrowUInt16ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowUInt16ArrayBuilder"
           glib:get-type="garrow_uint16_array_builder_get_type"
           glib:type-struct="UInt16ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="365"/>
      <constructor name="new" c:identifier="garrow_uint16_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="367"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1907">A newly created #GArrowUInt16ArrayBuilder.</doc>
          <type name="UInt16ArrayBuilder" c:type="GArrowUInt16ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_uint16_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_uint16_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="371"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1924">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1920">A #GArrowUInt16ArrayBuilder.</doc>
            <type name="UInt16ArrayBuilder"
                  c:type="GArrowUInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1921">An uint16 value.</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_uint16_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="387"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2001">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1998">A #GArrowUInt16ArrayBuilder.</doc>
            <type name="UInt16ArrayBuilder"
                  c:type="GArrowUInt16ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_uint16_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2013">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="390"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2022">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2015">A #GArrowUInt16ArrayBuilder.</doc>
            <type name="UInt16ArrayBuilder"
                  c:type="GArrowUInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2016">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_uint16_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="376"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1943">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1939">A #GArrowUInt16ArrayBuilder.</doc>
            <type name="UInt16ArrayBuilder"
                  c:type="GArrowUInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1940">An uint16 value.</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_uint16_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1959">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="379"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1974">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1961">A #GArrowUInt16ArrayBuilder.</doc>
            <type name="UInt16ArrayBuilder"
                  c:type="GArrowUInt16ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1962">The array of uint16.</doc>
            <array length="1" zero-terminated="0" c:type="const guint16*">
              <type name="guint16" c:type="guint16"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1963">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1964">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1968">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="UInt16ArrayBuilderClass"
            c:type="GArrowUInt16ArrayBuilderClass"
            glib:is-gtype-struct-for="UInt16ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="365"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="UInt16ArrayClass"
            c:type="GArrowUInt16ArrayClass"
            glib:is-gtype-struct-for="UInt16Array">
      <source-position filename="arrow-glib/basic-array.h" line="247"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="UInt16DataType"
           c:symbol-prefix="uint16_data_type"
           c:type="GArrowUInt16DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowUInt16DataType"
           glib:get-type="garrow_uint16_data_type_get_type"
           glib:type-struct="UInt16DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="183"/>
      <constructor name="new" c:identifier="garrow_uint16_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="185"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="591">The newly created 16-bit unsigned integer data type.</doc>
          <type name="UInt16DataType" c:type="GArrowUInt16DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="UInt16DataTypeClass"
            c:type="GArrowUInt16DataTypeClass"
            glib:is-gtype-struct-for="UInt16DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="183"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="UInt16Scalar"
           c:symbol-prefix="uint16_scalar"
           c:type="GArrowUInt16Scalar"
           parent="Scalar"
           glib:type-name="GArrowUInt16Scalar"
           glib:get-type="garrow_uint16_scalar_get_type"
           glib:type-struct="UInt16ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="211"/>
      <constructor name="new"
                   c:identifier="garrow_uint16_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="215"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="746">A newly created #GArrowUInt16Scalar.</doc>
          <type name="UInt16Scalar" c:type="GArrowUInt16Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="744">The value of this scalar.</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_uint16_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="218"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="763">The value of this scalar.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="761">A #GArrowUInt16Scalar.</doc>
            <type name="UInt16Scalar" c:type="GArrowUInt16Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="UInt16ScalarClass"
            c:type="GArrowUInt16ScalarClass"
            glib:is-gtype-struct-for="UInt16Scalar">
      <source-position filename="arrow-glib/scalar.h" line="211"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="UInt32Array"
           c:symbol-prefix="uint32_array"
           c:type="GArrowUInt32Array"
           parent="NumericArray"
           glib:type-name="GArrowUInt32Array"
           glib:get-type="garrow_uint32_array_get_type"
           glib:type-struct="UInt32ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="291"/>
      <constructor name="new"
                   c:identifier="garrow_uint32_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="293"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1650">A newly created #GArrowUInt32Array.</doc>
          <type name="UInt32Array" c:type="GArrowUInt32Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1641">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1642">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1643">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1647">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_uint32_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="298"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1672">The @i-th value.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1669">A #GArrowUInt32Array.</doc>
            <type name="UInt32Array" c:type="GArrowUInt32Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1670">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_uint32_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="300"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1687">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const guint32*">
            <type name="guint32" c:type="guint32"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1684">A #GArrowUInt32Array.</doc>
            <type name="UInt32Array" c:type="GArrowUInt32Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1685">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_uint32_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="954"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5100">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5097">A #GArrowUInt32Array.</doc>
            <type name="UInt32Array" c:type="GArrowUInt32Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="UInt32ArrayBuilder"
           c:symbol-prefix="uint32_array_builder"
           c:type="GArrowUInt32ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowUInt32ArrayBuilder"
           glib:get-type="garrow_uint32_array_builder_get_type"
           glib:type-struct="UInt32ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="446"/>
      <constructor name="new" c:identifier="garrow_uint32_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="448"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2207">A newly created #GArrowUInt32ArrayBuilder.</doc>
          <type name="UInt32ArrayBuilder" c:type="GArrowUInt32ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_uint32_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_uint32_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="452"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2224">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2220">A #GArrowUInt32ArrayBuilder.</doc>
            <type name="UInt32ArrayBuilder"
                  c:type="GArrowUInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2221">An uint32 value.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_uint32_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="468"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2301">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2298">A #GArrowUInt32ArrayBuilder.</doc>
            <type name="UInt32ArrayBuilder"
                  c:type="GArrowUInt32ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_uint32_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2313">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="471"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2322">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2315">A #GArrowUInt32ArrayBuilder.</doc>
            <type name="UInt32ArrayBuilder"
                  c:type="GArrowUInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2316">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_uint32_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="457"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2243">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2239">A #GArrowUInt32ArrayBuilder.</doc>
            <type name="UInt32ArrayBuilder"
                  c:type="GArrowUInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2240">An uint32 value.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_uint32_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2259">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="460"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2274">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2261">A #GArrowUInt32ArrayBuilder.</doc>
            <type name="UInt32ArrayBuilder"
                  c:type="GArrowUInt32ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2262">The array of uint32.</doc>
            <array length="1" zero-terminated="0" c:type="const guint32*">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2263">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2264">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2268">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="UInt32ArrayBuilderClass"
            c:type="GArrowUInt32ArrayBuilderClass"
            glib:is-gtype-struct-for="UInt32ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="446"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="UInt32ArrayClass"
            c:type="GArrowUInt32ArrayClass"
            glib:is-gtype-struct-for="UInt32Array">
      <source-position filename="arrow-glib/basic-array.h" line="291"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="UInt32DataType"
           c:symbol-prefix="uint32_data_type"
           c:type="GArrowUInt32DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowUInt32DataType"
           glib:get-type="garrow_uint32_data_type_get_type"
           glib:type-struct="UInt32DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="211"/>
      <constructor name="new" c:identifier="garrow_uint32_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="213"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="655">The newly created 32-bit unsigned integer data type.</doc>
          <type name="UInt32DataType" c:type="GArrowUInt32DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="UInt32DataTypeClass"
            c:type="GArrowUInt32DataTypeClass"
            glib:is-gtype-struct-for="UInt32DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="211"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="UInt32Scalar"
           c:symbol-prefix="uint32_scalar"
           c:type="GArrowUInt32Scalar"
           parent="Scalar"
           glib:type-name="GArrowUInt32Scalar"
           glib:get-type="garrow_uint32_scalar_get_type"
           glib:type-struct="UInt32ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="230"/>
      <constructor name="new"
                   c:identifier="garrow_uint32_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="234"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="795">A newly created #GArrowUInt32Scalar.</doc>
          <type name="UInt32Scalar" c:type="GArrowUInt32Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="793">The value of this scalar.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_uint32_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="812">The value of this scalar.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="810">A #GArrowUInt32Scalar.</doc>
            <type name="UInt32Scalar" c:type="GArrowUInt32Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="UInt32ScalarClass"
            c:type="GArrowUInt32ScalarClass"
            glib:is-gtype-struct-for="UInt32Scalar">
      <source-position filename="arrow-glib/scalar.h" line="230"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="UInt64Array"
           c:symbol-prefix="uint64_array"
           c:type="GArrowUInt64Array"
           parent="NumericArray"
           glib:type-name="GArrowUInt64Array"
           glib:get-type="garrow_uint64_array_get_type"
           glib:type-struct="UInt64ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="335"/>
      <constructor name="new"
                   c:identifier="garrow_uint64_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="337"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1798">A newly created #GArrowUInt64Array.</doc>
          <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1789">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1790">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1791">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1795">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_uint64_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="342"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1820">The @i-th value.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1817">A #GArrowUInt64Array.</doc>
            <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1818">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_uint64_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="344"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1835">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const guint64*">
            <type name="guint64" c:type="guint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1832">A #GArrowUInt64Array.</doc>
            <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1833">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_uint64_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="960"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5140">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5137">A #GArrowUInt64Array.</doc>
            <type name="UInt64Array" c:type="GArrowUInt64Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="UInt64ArrayBuilder"
           c:symbol-prefix="uint64_array_builder"
           c:type="GArrowUInt64ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowUInt64ArrayBuilder"
           glib:get-type="garrow_uint64_array_builder_get_type"
           glib:type-struct="UInt64ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="527"/>
      <constructor name="new" c:identifier="garrow_uint64_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="529"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2507">A newly created #GArrowUInt64ArrayBuilder.</doc>
          <type name="UInt64ArrayBuilder" c:type="GArrowUInt64ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_uint64_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_uint64_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="533"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2524">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2520">A #GArrowUInt64ArrayBuilder.</doc>
            <type name="UInt64ArrayBuilder"
                  c:type="GArrowUInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2521">An uint64 value.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_uint64_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="549"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2601">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2598">A #GArrowUInt64ArrayBuilder.</doc>
            <type name="UInt64ArrayBuilder"
                  c:type="GArrowUInt64ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_uint64_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2613">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="552"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2622">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2615">A #GArrowUInt64ArrayBuilder.</doc>
            <type name="UInt64ArrayBuilder"
                  c:type="GArrowUInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2616">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_uint64_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="538"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2543">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2539">A #GArrowUInt64ArrayBuilder.</doc>
            <type name="UInt64ArrayBuilder"
                  c:type="GArrowUInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2540">An uint64 value.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_uint64_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="2559">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="541"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="2574">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2561">A #GArrowUInt64ArrayBuilder.</doc>
            <type name="UInt64ArrayBuilder"
                  c:type="GArrowUInt64ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2562">The array of uint64.</doc>
            <array length="1" zero-terminated="0" c:type="const guint64*">
              <type name="guint64" c:type="guint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2563">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2564">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="2568">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="UInt64ArrayBuilderClass"
            c:type="GArrowUInt64ArrayBuilderClass"
            glib:is-gtype-struct-for="UInt64ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="527"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="UInt64ArrayClass"
            c:type="GArrowUInt64ArrayClass"
            glib:is-gtype-struct-for="UInt64Array">
      <source-position filename="arrow-glib/basic-array.h" line="335"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="UInt64DataType"
           c:symbol-prefix="uint64_data_type"
           c:type="GArrowUInt64DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowUInt64DataType"
           glib:get-type="garrow_uint64_data_type_get_type"
           glib:type-struct="UInt64DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="239"/>
      <constructor name="new" c:identifier="garrow_uint64_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="241"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="719">The newly created 64-bit unsigned integer data type.</doc>
          <type name="UInt64DataType" c:type="GArrowUInt64DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="UInt64DataTypeClass"
            c:type="GArrowUInt64DataTypeClass"
            glib:is-gtype-struct-for="UInt64DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="239"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="UInt64Scalar"
           c:symbol-prefix="uint64_scalar"
           c:type="GArrowUInt64Scalar"
           parent="Scalar"
           glib:type-name="GArrowUInt64Scalar"
           glib:get-type="garrow_uint64_scalar_get_type"
           glib:type-struct="UInt64ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="249"/>
      <constructor name="new"
                   c:identifier="garrow_uint64_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="253"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="844">A newly created #GArrowUInt64Scalar.</doc>
          <type name="UInt64Scalar" c:type="GArrowUInt64Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="842">The value of this scalar.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_uint64_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="256"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="861">The value of this scalar.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="859">A #GArrowUInt64Scalar.</doc>
            <type name="UInt64Scalar" c:type="GArrowUInt64Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="UInt64ScalarClass"
            c:type="GArrowUInt64ScalarClass"
            glib:is-gtype-struct-for="UInt64Scalar">
      <source-position filename="arrow-glib/scalar.h" line="249"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="UInt8Array"
           c:symbol-prefix="uint8_array"
           c:type="GArrowUInt8Array"
           parent="NumericArray"
           glib:type-name="GArrowUInt8Array"
           glib:get-type="garrow_uint8_array_get_type"
           glib:type-struct="UInt8ArrayClass">
      <source-position filename="arrow-glib/basic-array.h" line="203"/>
      <constructor name="new"
                   c:identifier="garrow_uint8_array_new"
                   version="0.4.0">
        <source-position filename="arrow-glib/basic-array.h" line="205"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1358">A newly created #GArrowUInt8Array.</doc>
          <type name="UInt8Array" c:type="GArrowUInt8Array*"/>
        </return-value>
        <parameters>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1349">The number of elements.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1350">The binary data in Arrow format of the array.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="null_bitmap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1351">The bitmap that shows null elements. The
  N-th element is null when the N-th bit is 0, not null otherwise.
  If the array has no null elements, the bitmap must be %NULL and
  @n_nulls is 0.</doc>
            <type name="Buffer" c:type="GArrowBuffer*"/>
          </parameter>
          <parameter name="n_nulls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1355">The number of null elements. If -1 is specified, the
  number of nulls are computed from @null_bitmap.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="garrow_uint8_array_get_value">
        <source-position filename="arrow-glib/basic-array.h" line="210"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1380">The @i-th value.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1377">A #GArrowUInt8Array.</doc>
            <type name="UInt8Array" c:type="GArrowUInt8Array*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1378">The index of the target value.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="garrow_uint8_array_get_values">
        <source-position filename="arrow-glib/basic-array.h" line="212"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-array.cpp"
               line="1395">The raw values.</doc>
          <array length="0" zero-terminated="0" c:type="const guint8*">
            <type name="guint8" c:type="guint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1392">A #GArrowUInt8Array.</doc>
            <type name="UInt8Array" c:type="GArrowUInt8Array*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/basic-array.cpp"
                 line="1393">The number of values.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sum"
              c:identifier="garrow_uint8_array_sum"
              version="0.13.0"
              throws="1">
        <source-position filename="arrow-glib/compute.h" line="942"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="5020">The value of the computed sum on success,
  If an error is occurred, the returned value is untrustful value.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/compute.cpp"
                 line="5017">A #GArrowUInt8Array.</doc>
            <type name="UInt8Array" c:type="GArrowUInt8Array*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NumericArray" c:type="GArrowNumericArray"/>
      </field>
    </class>
    <class name="UInt8ArrayBuilder"
           c:symbol-prefix="uint8_array_builder"
           c:type="GArrowUInt8ArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowUInt8ArrayBuilder"
           glib:get-type="garrow_uint8_array_builder_get_type"
           glib:type-struct="UInt8ArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="284"/>
      <constructor name="new" c:identifier="garrow_uint8_array_builder_new">
        <source-position filename="arrow-glib/array-builder.h" line="286"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1607">A newly created #GArrowUInt8ArrayBuilder.</doc>
          <type name="UInt8ArrayBuilder" c:type="GArrowUInt8ArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_uint8_array_builder_append"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_uint8_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="290"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1624">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1620">A #GArrowUInt8ArrayBuilder.</doc>
            <type name="UInt8ArrayBuilder" c:type="GArrowUInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1621">An uint8 value.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_uint8_array_builder_append_null"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="306"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1701">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1698">A #GArrowUInt8ArrayBuilder.</doc>
            <type name="UInt8ArrayBuilder" c:type="GArrowUInt8ArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_uint8_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1713">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="309"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1722">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1715">A #GArrowUInt8ArrayBuilder.</doc>
            <type name="UInt8ArrayBuilder" c:type="GArrowUInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1716">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_uint8_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="295"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1643">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1639">A #GArrowUInt8ArrayBuilder.</doc>
            <type name="UInt8ArrayBuilder" c:type="GArrowUInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1640">An uint8 value.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_uint8_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1659">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="298"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1674">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1661">A #GArrowUInt8ArrayBuilder.</doc>
            <type name="UInt8ArrayBuilder" c:type="GArrowUInt8ArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1662">The array of uint8.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1663">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1664">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1668">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="UInt8ArrayBuilderClass"
            c:type="GArrowUInt8ArrayBuilderClass"
            glib:is-gtype-struct-for="UInt8ArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="284"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="UInt8ArrayClass"
            c:type="GArrowUInt8ArrayClass"
            glib:is-gtype-struct-for="UInt8Array">
      <source-position filename="arrow-glib/basic-array.h" line="203"/>
      <field name="parent_class">
        <type name="NumericArrayClass" c:type="GArrowNumericArrayClass"/>
      </field>
    </record>
    <class name="UInt8DataType"
           c:symbol-prefix="uint8_data_type"
           c:type="GArrowUInt8DataType"
           parent="IntegerDataType"
           glib:type-name="GArrowUInt8DataType"
           glib:get-type="garrow_uint8_data_type_get_type"
           glib:type-struct="UInt8DataTypeClass">
      <source-position filename="arrow-glib/basic-data-type.h" line="155"/>
      <constructor name="new" c:identifier="garrow_uint8_data_type_new">
        <source-position filename="arrow-glib/basic-data-type.h" line="157"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/basic-data-type.cpp"
               line="527">The newly created 8-bit unsigned integer data type.</doc>
          <type name="UInt8DataType" c:type="GArrowUInt8DataType*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="IntegerDataType" c:type="GArrowIntegerDataType"/>
      </field>
    </class>
    <record name="UInt8DataTypeClass"
            c:type="GArrowUInt8DataTypeClass"
            glib:is-gtype-struct-for="UInt8DataType">
      <source-position filename="arrow-glib/basic-data-type.h" line="155"/>
      <field name="parent_class">
        <type name="IntegerDataTypeClass" c:type="GArrowIntegerDataTypeClass"/>
      </field>
    </record>
    <class name="UInt8Scalar"
           c:symbol-prefix="uint8_scalar"
           c:type="GArrowUInt8Scalar"
           parent="Scalar"
           glib:type-name="GArrowUInt8Scalar"
           glib:get-type="garrow_uint8_scalar_get_type"
           glib:type-struct="UInt8ScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="192"/>
      <constructor name="new"
                   c:identifier="garrow_uint8_scalar_new"
                   version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="196"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="697">A newly created #GArrowUInt8Scalar.</doc>
          <type name="UInt8Scalar" c:type="GArrowUInt8Scalar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="695">The value of this scalar.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value"
              c:identifier="garrow_uint8_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="714">The value of this scalar.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="712">A #GArrowUInt8Scalar.</doc>
            <type name="UInt8Scalar" c:type="GArrowUInt8Scalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="UInt8ScalarClass"
            c:type="GArrowUInt8ScalarClass"
            glib:is-gtype-struct-for="UInt8Scalar">
      <source-position filename="arrow-glib/scalar.h" line="192"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <class name="UIntArrayBuilder"
           c:symbol-prefix="uint_array_builder"
           c:type="GArrowUIntArrayBuilder"
           parent="ArrayBuilder"
           glib:type-name="GArrowUIntArrayBuilder"
           glib:get-type="garrow_uint_array_builder_get_type"
           glib:type-struct="UIntArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="204"/>
      <constructor name="new"
                   c:identifier="garrow_uint_array_builder_new"
                   version="0.8.0">
        <source-position filename="arrow-glib/array-builder.h" line="206"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1298">A newly created #GArrowUIntArrayBuilder.</doc>
          <type name="UIntArrayBuilder" c:type="GArrowUIntArrayBuilder*"/>
        </return-value>
      </constructor>
      <method name="append"
              c:identifier="garrow_uint_array_builder_append"
              version="0.8.0"
              deprecated="1"
              deprecated-version="0.12.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_uint_array_builder_append_value() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="210"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1320">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1316">A #GArrowUIntArrayBuilder.</doc>
            <type name="UIntArrayBuilder" c:type="GArrowUIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1317">A unsigned int value.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_null"
              c:identifier="garrow_uint_array_builder_append_null"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_null() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="226"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1399">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1396">A #GArrowUIntArrayBuilder.</doc>
            <type name="UIntArrayBuilder" c:type="GArrowUIntArrayBuilder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="append_nulls"
              c:identifier="garrow_uint_array_builder_append_nulls"
              version="0.8.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="3.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1413">Append multiple nulls at once. It's more efficient than multiple
`append_null` calls.</doc>
        <doc-deprecated xml:space="preserve">
  Use garrow_array_builder_append_nulls() instead.</doc-deprecated>
        <source-position filename="arrow-glib/array-builder.h" line="229"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1422">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1415">A #GArrowUIntArrayBuilder.</doc>
            <type name="UIntArrayBuilder" c:type="GArrowUIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1416">The number of null values to be appended.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_uint_array_builder_append_value"
              version="0.12.0"
              throws="1">
        <source-position filename="arrow-glib/array-builder.h" line="215"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1341">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1337">A #GArrowUIntArrayBuilder.</doc>
            <type name="UIntArrayBuilder" c:type="GArrowUIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1338">A unsigned int value.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_values"
              c:identifier="garrow_uint_array_builder_append_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="1357">Append multiple values at once. It's more efficient than multiple
`append` and `append_null` calls.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="218"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="1372">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1359">A #GArrowUIntArrayBuilder.</doc>
            <type name="UIntArrayBuilder" c:type="GArrowUIntArrayBuilder*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1360">The array of unsigned int.</doc>
            <array length="1" zero-terminated="0" c:type="const guint64*">
              <type name="guint64" c:type="guint64"/>
            </array>
          </parameter>
          <parameter name="values_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1361">The length of `values`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_valids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1362">The array of
  boolean that shows whether the Nth value is valid or not. If the
  Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise
  the Nth value is null value.</doc>
            <array length="3" zero-terminated="0" c:type="const gboolean*">
              <type name="gboolean" c:type="gboolean"/>
            </array>
          </parameter>
          <parameter name="is_valids_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="1366">The length of `is_valids`.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="UIntArrayBuilderClass"
            c:type="GArrowUIntArrayBuilderClass"
            glib:is-gtype-struct-for="UIntArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="204"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <function-macro name="UNAVAILABLE"
                    c:identifier="GARROW_UNAVAILABLE"
                    introspectable="0">
      <source-position filename="arrow-glib/version.h" line="106"/>
      <parameters>
        <parameter name="major">
        </parameter>
        <parameter name="minor">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="UTF8NormalizeForm"
                 version="8.0.0"
                 glib:type-name="GArrowUTF8NormalizeForm"
                 glib:get-type="garrow_utf8_normalize_form_get_type"
                 c:type="GArrowUTF8NormalizeForm">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.h"
           line="741">They correspond to the values of `arrow::compute::Utf8NormalizeOptions::Form`.</doc>
      <member name="nfc"
              value="0"
              c:identifier="GARROW_UTF8_NORMALIZE_FORM_NFC"
              glib:nick="nfc"
              glib:name="GARROW_UTF8_NORMALIZE_FORM_NFC">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="743">Normalization Form Canonical Composition.</doc>
      </member>
      <member name="nfkc"
              value="1"
              c:identifier="GARROW_UTF8_NORMALIZE_FORM_NFKC"
              glib:nick="nfkc"
              glib:name="GARROW_UTF8_NORMALIZE_FORM_NFKC">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="744">Normalization Form Compatibility
  Composition.</doc>
      </member>
      <member name="nfd"
              value="2"
              c:identifier="GARROW_UTF8_NORMALIZE_FORM_NFD"
              glib:nick="nfd"
              glib:name="GARROW_UTF8_NORMALIZE_FORM_NFD">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="746">Normalization Form Canonical Decomposition.</doc>
      </member>
      <member name="nfkd"
              value="3"
              c:identifier="GARROW_UTF8_NORMALIZE_FORM_NFKD"
              glib:nick="nfkd"
              glib:name="GARROW_UTF8_NORMALIZE_FORM_NFKD">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.h"
             line="747">Normalization Form Compatibility
  Decomposition.</doc>
      </member>
    </enumeration>
    <class name="UTF8NormalizeOptions"
           c:symbol-prefix="utf8_normalize_options"
           c:type="GArrowUTF8NormalizeOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowUTF8NormalizeOptions"
           glib:get-type="garrow_utf8_normalize_options_get_type"
           glib:type-struct="UTF8NormalizeOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="771"/>
      <constructor name="new"
                   c:identifier="garrow_utf8_normalize_options_new"
                   version="8.0.0">
        <source-position filename="arrow-glib/compute.h" line="775"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="4102">A newly created #GArrowUTF8NormalizeOptions.</doc>
          <type name="UTF8NormalizeOptions"
                c:type="GArrowUTF8NormalizeOptions*"/>
        </return-value>
      </constructor>
      <property name="form"
                version="8.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="GARROW_UTF8_NORMALIZE_FORM_NFC">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="4081">The Unicode normalization form to apply.</doc>
        <type name="UTF8NormalizeForm"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="UTF8NormalizeOptionsClass"
            c:type="GArrowUTF8NormalizeOptionsClass"
            glib:is-gtype-struct-for="UTF8NormalizeOptions">
      <source-position filename="arrow-glib/compute.h" line="771"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <class name="UnionArray"
           c:symbol-prefix="union_array"
           c:type="GArrowUnionArray"
           parent="Array"
           glib:type-name="GArrowUnionArray"
           glib:get-type="garrow_union_array_get_type"
           glib:type-struct="UnionArrayClass">
      <source-position filename="arrow-glib/composite-array.h" line="162"/>
      <method name="get_child_id"
              c:identifier="garrow_union_array_get_child_id"
              version="12.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1148">The physical child ID containing the i-th value.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1145">A #GArrowUnionArray.</doc>
            <type name="UnionArray" c:type="GArrowUnionArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1146">The index of the physical child ID containing value in the union.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_field" c:identifier="garrow_union_array_get_field">
        <source-position filename="arrow-glib/composite-array.h" line="173"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1167">The i-th field values as a
  #GArrowArray or %NULL on out of range.</doc>
          <type name="Array" c:type="GArrowArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1164">A #GArrowUnionArray.</doc>
            <type name="UnionArray" c:type="GArrowUnionArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1165">The index of the field in the union.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_type_code"
              c:identifier="garrow_union_array_get_type_code"
              version="12.0.0">
        <source-position filename="arrow-glib/composite-array.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-array.cpp"
               line="1129">The i-th logical type code of the value.</doc>
          <type name="gint8" c:type="gint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1126">A #GArrowUnionArray.</doc>
            <type name="UnionArray" c:type="GArrowUnionArray*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-array.cpp"
                 line="1127">The index of the logical type code of the value in the union.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="type-ids"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Int8Array"/>
      </property>
      <field name="parent_instance">
        <type name="Array" c:type="GArrowArray"/>
      </field>
    </class>
    <class name="UnionArrayBuilder"
           c:symbol-prefix="union_array_builder"
           c:type="GArrowUnionArrayBuilder"
           parent="ArrayBuilder"
           abstract="1"
           glib:type-name="GArrowUnionArrayBuilder"
           glib:get-type="garrow_union_array_builder_get_type"
           glib:type-struct="UnionArrayBuilderClass">
      <source-position filename="arrow-glib/array-builder.h" line="1555"/>
      <method name="append_child"
              c:identifier="garrow_union_array_builder_append_child"
              version="12.0.00">
        <source-position filename="arrow-glib/array-builder.h" line="1559"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6542">The type ID for the appended child.</doc>
          <type name="gint8" c:type="gint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6538">A #GArrowUnionArrayBuilder.</doc>
            <type name="UnionArrayBuilder" c:type="GArrowUnionArrayBuilder*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6539">A #GArrowArrayBuilder for new child.</doc>
            <type name="ArrayBuilder" c:type="GArrowArrayBuilder*"/>
          </parameter>
          <parameter name="filed_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6540">A field name for new child.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_value"
              c:identifier="garrow_union_array_builder_append_value"
              version="12.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/array-builder.cpp"
             line="6561">Append an element to the union array.

If @builder is #GArrowDenseUnionArrayBuilder, this must be followed by an
append to the appropriate child builder.

If @builder is #GArrowSparseUnionArrayBuilder, this must be
followed by appends to all child builders. The corresponding child
builder must be appended to independently after this method is
called, and all other child builders must have null or empty value
appended.</doc>
        <source-position filename="arrow-glib/array-builder.h" line="1565"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/array-builder.cpp"
               line="6578">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6563">A #GArrowUnionArrayBuilder.</doc>
            <type name="UnionArrayBuilder" c:type="GArrowUnionArrayBuilder*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/array-builder.cpp"
                 line="6564">A type ID value.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ArrayBuilder" c:type="GArrowArrayBuilder"/>
      </field>
    </class>
    <record name="UnionArrayBuilderClass"
            c:type="GArrowUnionArrayBuilderClass"
            glib:is-gtype-struct-for="UnionArrayBuilder">
      <source-position filename="arrow-glib/array-builder.h" line="1555"/>
      <field name="parent_class">
        <type name="ArrayBuilderClass" c:type="GArrowArrayBuilderClass"/>
      </field>
    </record>
    <record name="UnionArrayClass"
            c:type="GArrowUnionArrayClass"
            glib:is-gtype-struct-for="UnionArray">
      <source-position filename="arrow-glib/composite-array.h" line="162"/>
      <field name="parent_class">
        <type name="ArrayClass" c:type="GArrowArrayClass"/>
      </field>
    </record>
    <class name="UnionDataType"
           c:symbol-prefix="union_data_type"
           c:type="GArrowUnionDataType"
           parent="DataType"
           abstract="1"
           glib:type-name="GArrowUnionDataType"
           glib:get-type="garrow_union_data_type_get_type"
           glib:type-struct="UnionDataTypeClass">
      <source-position filename="arrow-glib/composite-data-type.h" line="125"/>
      <method name="get_field"
              c:identifier="garrow_union_data_type_get_field"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="132"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="473">
  The field at the index in the union data type or %NULL on not found.</doc>
          <type name="Field" c:type="GArrowField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="union_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="470">A #GArrowUnionDataType.</doc>
            <type name="UnionDataType" c:type="GArrowUnionDataType*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="471">The index of the target field.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fields"
              c:identifier="garrow_union_data_type_get_fields"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="449">
  The fields of the union data type.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Field"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="union_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="447">A #GArrowUnionDataType.</doc>
            <type name="UnionDataType" c:type="GArrowUnionDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_fields"
              c:identifier="garrow_union_data_type_get_n_fields"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="434">The number of fields of the union data type.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="union_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="432">A #GArrowUnionDataType.</doc>
            <type name="UnionDataType" c:type="GArrowUnionDataType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_type_codes"
              c:identifier="garrow_union_data_type_get_type_codes"
              version="0.12.0">
        <source-position filename="arrow-glib/composite-data-type.h"
                         line="135"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/composite-data-type.cpp"
               line="508">
  The codes for each field.

  It should be freed with g_free() when no longer needed.</doc>
          <array length="0" zero-terminated="0" c:type="gint8*">
            <type name="gint8" c:type="gint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="union_data_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="505">A #GArrowUnionDataType.</doc>
            <type name="UnionDataType" c:type="GArrowUnionDataType*"/>
          </instance-parameter>
          <parameter name="n_type_codes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="arrow-glib/composite-data-type.cpp"
                 line="506">The number of type codes.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DataType" c:type="GArrowDataType"/>
      </field>
    </class>
    <record name="UnionDataTypeClass"
            c:type="GArrowUnionDataTypeClass"
            glib:is-gtype-struct-for="UnionDataType">
      <source-position filename="arrow-glib/composite-data-type.h" line="125"/>
      <field name="parent_class">
        <type name="DataTypeClass" c:type="GArrowDataTypeClass"/>
      </field>
    </record>
    <class name="UnionScalar"
           c:symbol-prefix="union_scalar"
           c:type="GArrowUnionScalar"
           parent="Scalar"
           abstract="1"
           glib:type-name="GArrowUnionScalar"
           glib:get-type="garrow_union_scalar_get_type"
           glib:type-struct="UnionScalarClass">
      <source-position filename="arrow-glib/scalar.h" line="705"/>
      <method name="get_type_code"
              c:identifier="garrow_union_scalar_get_type_code"
              version="6.0.0">
        <source-position filename="arrow-glib/scalar.h" line="709"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2399">The type code of this scalar.</doc>
          <type name="gint8" c:type="gint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2397">A #GArrowUnionScalar.</doc>
            <type name="UnionScalar" c:type="GArrowUnionScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="garrow_union_scalar_get_value"
              version="5.0.0">
        <source-position filename="arrow-glib/scalar.h" line="712"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/scalar.cpp"
               line="2416">The value of this scalar.</doc>
          <type name="Scalar" c:type="GArrowScalar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scalar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/scalar.cpp"
                 line="2414">A #GArrowUnionScalar.</doc>
            <type name="UnionScalar" c:type="GArrowUnionScalar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                version="5.0.0"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/scalar.cpp"
             line="2357">The value of the scalar.</doc>
        <type name="Scalar"/>
      </property>
      <field name="parent_instance">
        <type name="Scalar" c:type="GArrowScalar"/>
      </field>
    </class>
    <record name="UnionScalarClass"
            c:type="GArrowUnionScalarClass"
            glib:is-gtype-struct-for="UnionScalar">
      <source-position filename="arrow-glib/scalar.h" line="705"/>
      <field name="parent_class">
        <type name="ScalarClass" c:type="GArrowScalarClass"/>
      </field>
    </record>
    <function-macro name="VERSION_CHECK"
                    c:identifier="GARROW_VERSION_CHECK"
                    version="0.10.0"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="arrow-glib/version.h"
           line="71">You can use this macro in C pre-processor.</doc>
      <source-position filename="arrow-glib/version.h" line="84"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="arrow-glib/version.h"
               line="73">A major version to check for.</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="arrow-glib/version.h"
               line="74">A minor version to check for.</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="arrow-glib/version.h"
               line="75">A micro version to check for.</doc>
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VERSION_MAJOR"
              value="15"
              c:type="GARROW_VERSION_MAJOR"
              version="0.10.0">
      <doc xml:space="preserve"
           filename="arrow-glib/version.h"
           line="34">The major version.</doc>
      <source-position filename="arrow-glib/version.h" line="41"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="VERSION_MICRO"
              value="2"
              c:type="GARROW_VERSION_MICRO"
              version="0.10.0">
      <doc xml:space="preserve"
           filename="arrow-glib/version.h"
           line="52">The micro version.</doc>
      <source-position filename="arrow-glib/version.h" line="59"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="VERSION_MINOR"
              value="0"
              c:type="GARROW_VERSION_MINOR"
              version="0.10.0">
      <doc xml:space="preserve"
           filename="arrow-glib/version.h"
           line="43">The minor version.</doc>
      <source-position filename="arrow-glib/version.h" line="50"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="VERSION_TAG"
              value=""
              c:type="GARROW_VERSION_TAG"
              version="0.10.0">
      <doc xml:space="preserve"
           filename="arrow-glib/version.h"
           line="61">The version tag. Normally, it's an empty string. It's "SNAPSHOT"
for snapshot version.</doc>
      <source-position filename="arrow-glib/version.h" line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="VarianceOptions"
           c:symbol-prefix="variance_options"
           c:type="GArrowVarianceOptions"
           parent="FunctionOptions"
           glib:type-name="GArrowVarianceOptions"
           glib:get-type="garrow_variance_options_get_type"
           glib:type-struct="VarianceOptionsClass">
      <source-position filename="arrow-glib/compute.h" line="638"/>
      <constructor name="new"
                   c:identifier="garrow_variance_options_new"
                   version="6.0.0">
        <source-position filename="arrow-glib/compute.h" line="642"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/compute.cpp"
               line="3571">A newly created #GArrowVarianceOptions.</doc>
          <type name="VarianceOptions" c:type="GArrowVarianceOptions*"/>
        </return-value>
      </constructor>
      <property name="ddof"
                version="6.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3513">The Delta Degrees of Freedom (ddof) to be used.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="min-count"
                version="6.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3547">If less than this many non-null values are observed, emit null.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="skip-nulls"
                version="6.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/compute.cpp"
             line="3531">Whether NULLs are skipped or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="FunctionOptions" c:type="GArrowFunctionOptions"/>
      </field>
    </class>
    <record name="VarianceOptionsClass"
            c:type="GArrowVarianceOptionsClass"
            glib:is-gtype-struct-for="VarianceOptions">
      <source-position filename="arrow-glib/compute.h" line="638"/>
      <field name="parent_class">
        <type name="FunctionOptionsClass" c:type="GArrowFunctionOptionsClass"/>
      </field>
    </record>
    <interface name="Writable"
               c:symbol-prefix="writable"
               c:type="GArrowWritable"
               glib:type-name="GArrowWritable"
               glib:get-type="garrow_writable_get_type"
               glib:type-struct="WritableInterface">
      <source-position filename="arrow-glib/writable.h" line="27"/>
      <method name="flush" c:identifier="garrow_writable_flush" throws="1">
        <doc xml:space="preserve"
             filename="arrow-glib/writable.cpp"
             line="66">It ensures writing all data on memory to storage.</doc>
        <source-position filename="arrow-glib/writable.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/writable.cpp"
               line="73">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="writable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable.cpp"
                 line="68">A #GArrowWritable.</doc>
            <type name="Writable" c:type="GArrowWritable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="garrow_writable_write" throws="1">
        <source-position filename="arrow-glib/writable.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/writable.cpp"
               line="52">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="writable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable.cpp"
                 line="47">A #GArrowWritable.</doc>
            <type name="Writable" c:type="GArrowWritable*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable.cpp"
                 line="48">The data to be written.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable.cpp"
                 line="49">The number of bytes to be written.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <interface name="WritableFile"
               c:symbol-prefix="writable_file"
               c:type="GArrowWritableFile"
               glib:type-name="GArrowWritableFile"
               glib:get-type="garrow_writable_file_get_type"
               glib:type-struct="WritableFileInterface">
      <source-position filename="arrow-glib/writable-file.h" line="27"/>
      <method name="write_at"
              c:identifier="garrow_writable_file_write_at"
              throws="1">
        <source-position filename="arrow-glib/writable-file.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="arrow-glib/writable-file.cpp"
               line="52">%TRUE on success, %FALSE if there was an error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="writable_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable-file.cpp"
                 line="46">A #GArrowWritableFile.</doc>
            <type name="WritableFile" c:type="GArrowWritableFile*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable-file.cpp"
                 line="47">The write start position.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable-file.cpp"
                 line="48">The data to be written.</doc>
            <array length="2" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="arrow-glib/writable-file.cpp"
                 line="49">The number of bytes to be written.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="WritableFileInterface"
            c:type="GArrowWritableFileInterface"
            disguised="1"
            opaque="1"
            glib:is-gtype-struct-for="WritableFile">
      <source-position filename="arrow-glib/writable-file.h" line="27"/>
    </record>
    <record name="WritableInterface"
            c:type="GArrowWritableInterface"
            disguised="1"
            opaque="1"
            glib:is-gtype-struct-for="Writable">
      <source-position filename="arrow-glib/writable.h" line="27"/>
    </record>
    <class name="WriteOptions"
           c:symbol-prefix="write_options"
           c:type="GArrowWriteOptions"
           parent="GObject.Object"
           glib:type-name="GArrowWriteOptions"
           glib:get-type="garrow_write_options_get_type"
           glib:type-struct="WriteOptionsClass">
      <source-position filename="arrow-glib/ipc-options.h" line="60"/>
      <constructor name="new"
                   c:identifier="garrow_write_options_new"
                   version="1.0.0">
        <source-position filename="arrow-glib/ipc-options.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="arrow-glib/ipc-options.cpp"
               line="497">A newly created #GArrowWriteOptions.</doc>
          <type name="WriteOptions" c:type="GArrowWriteOptions*"/>
        </return-value>
      </constructor>
      <property name="alignment"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="8">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="419">Write padding after memory buffers to this multiple of
bytes. Generally 8 or 64.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="allow-64bit"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="383">Whether to allow field lengths that don't fit in a signed 32-bit
int. Some implementations may not be able to parse such streams.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="codec"
                version="2.0.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="456">Codec to use for compressing and decompressing record batch body
buffers. This is not part of the Arrow IPC protocol and only for
internal use (e.g. Feather files).

May only be UNCOMPRESSED, LZ4_FRAME and ZSTD.</doc>
        <type name="Codec"/>
      </property>
      <property name="max-recursion-depth"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="64">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="401">The maximum permitted schema nesting depth.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="use-threads"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="477">Whether to use the global CPU thread pool.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="write-legacy-ipc-format"
                version="1.0.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="arrow-glib/ipc-options.cpp"
             line="439">Whether to write the pre-0.15.0 encapsulated IPC message format
consisting of a 4-byte prefix instead of 8 byte.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="WriteOptionsClass"
            c:type="GArrowWriteOptionsClass"
            glib:is-gtype-struct-for="WriteOptions">
      <source-position filename="arrow-glib/ipc-options.h" line="60"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <docsection name="array-builder">
      <doc xml:space="preserve"
           filename="arrow-glib/array-builder.cpp"
           line="354">#GArrowArrayBuilder is a base class for all array builder classes
such as #GArrowBooleanArrayBuilder.

You need to use array builder class to create a new array.

#GArrowNullArrayBuilder is the class to create a new
#GArrowNullArray.

#GArrowBooleanArrayBuilder is the class to create a new
#GArrowBooleanArray.

#GArrowIntArrayBuilder is the class to create a new integer
array. Integer size is automatically chosen. It's recommend that
you use this builder instead of specific integer size builder such
as #GArrowInt8ArrayBuilder.

#GArrowUIntArrayBuilder is the class to create a new unsigned
integer array. Unsigned integer size is automatically chosen. It's
recommend that you use this builder instead of specific unsigned
integer size builder such as #GArrowUInt8ArrayBuilder.

#GArrowInt8ArrayBuilder is the class to create a new
#GArrowInt8Array.

#GArrowUInt8ArrayBuilder is the class to create a new
#GArrowUInt8Array.

#GArrowInt16ArrayBuilder is the class to create a new
#GArrowInt16Array.

#GArrowUInt16ArrayBuilder is the class to create a new
#GArrowUInt16Array.

#GArrowInt32ArrayBuilder is the class to create a new
#GArrowInt32Array.

#GArrowUInt32ArrayBuilder is the class to create a new
#GArrowUInt32Array.

#GArrowInt64ArrayBuilder is the class to create a new
#GArrowInt64Array.

#GArrowUInt64ArrayBuilder is the class to create a new
#GArrowUInt64Array.

#GArrowHalfFloatArrayBuilder is the class to creating a new
#GArrowHalfFloatArray.

#GArrowFloatArrayBuilder is the class to creating a new
#GArrowFloatArray.

#GArrowDoubleArrayBuilder is the class to create a new
#GArrowDoubleArray.

#GArrowBinaryArrayBuilder is the class to create a new
#GArrowBinaryArray.

#GArrowLargeBinaryArrayBuilder is the class to create a new
#GArrowLargeBinaryArray.

#GArrowStringArrayBuilder is the class to create a new
#GArrowStringArray.

#GArrowLargeStringArrayBuilder is the class to create a new
#GArrowLargeStringArray.

#GArrowFixedSizeBinaryArrayBuilder is the class to create a new
#GArrowFixedSizeBinaryArray.

#GArrowDate32ArrayBuilder is the class to create a new
#GArrowDate32Array.

#GArrowDate64ArrayBuilder is the class to create a new
#GArrowDate64Array.

#GArrowTimestampArrayBuilder is the class to create a new
#GArrowTimestampArray.

#GArrowTime32ArrayBuilder is the class to create a new
#GArrowTime32Array.

#GArrowTime64ArrayBuilder is the class to create a new
#GArrowTime64Array.

#GArrowMonthIntervalArrayBuilder is the class to create a new
#GArrowMonthIntervalArray.

#GArrowDayTimeIntervalArrayBuilder is the class to create a new
#GArrowDayTimeIntervalArray.

#GArrowMonthDayNanoArrayBuilder is the class to create a new
#GArrowMonthDayNanoArray.

#GArrowStringDictionaryArrayBuilder is the class to create a new
#GArrowDictionaryArray with a dictionary array of #GArrowStringArray.

#GArrowListArrayBuilder is the class to create a new
#GArrowListArray.

#GArrowLargeListArrayBuilder is the class to create a new
#GArrowLargeListArray.

#GArrowStructArrayBuilder is the class to create a new
#GArrowStructArray.

#GArrowMapArrayBuilder is the class to create a new
#GArrowMapArray.

#GArrowDecimal128ArrayBuilder is the class to create a new
#GArrowDecimal128Array.

#GArrowDecimal256ArrayBuilder is the class to create a new
#GArrowDecimal256Array.

#GArrowUnionArrayBuilder is the base class for union builder class
such as #GArrowDenseUnionArrayBuilder.

#GArrowDenseUnionArrayBuilder is the class to create a new
#GArrowDenseUnionArray.

#GArrowSparseUnionArrayBuilder is the class to create a new
#GArrowSparseUnionArray.</doc>
    </docsection>
    <docsection name="basic-array">
      <doc xml:space="preserve"
           filename="arrow-glib/basic-array.cpp"
           line="34">#GArrowArray is a base class for all array classes such as
#GArrowBooleanArray.

All array classes are immutable. You need to use binary data or
array builder to create a new array except #GArrowNullArray. If you
have binary data that uses Arrow format data, you can create a new
array with the binary data as #GArrowBuffer object. If you don't
have binary data, you can use array builder class such as
#GArrowBooleanArrayBuilder that creates Arrow format data
internally and a new array from the data.

#GArrowNullArray is a class for null array. It can store zero or
more null values. You need to specify an array length to create a
new array.

#GArrowBooleanArray is a class for boolean array. It can store zero
or more boolean data. If you don't have Arrow format data, you need
to use #GArrowBooleanArrayBuilder to create a new array.

#GArrowInt8Array is a class for 8-bit integer array. It can store
zero or more 8-bit integer data. If you don't have Arrow format
data, you need to use #GArrowInt8ArrayBuilder to create a new
array.

#GArrowUInt8Array is a class for 8-bit unsigned integer array. It
can store zero or more 8-bit unsigned integer data. If you don't
have Arrow format data, you need to use #GArrowUInt8ArrayBuilder to
create a new array.

#GArrowInt16Array is a class for 16-bit integer array. It can store
zero or more 16-bit integer data. If you don't have Arrow format
data, you need to use #GArrowInt16ArrayBuilder to create a new
array.

#GArrowUInt16Array is a class for 16-bit unsigned integer array. It
can store zero or more 16-bit unsigned integer data. If you don't
have Arrow format data, you need to use #GArrowUInt16ArrayBuilder
to create a new array.

#GArrowInt32Array is a class for 32-bit integer array. It can store
zero or more 32-bit integer data. If you don't have Arrow format
data, you need to use #GArrowInt32ArrayBuilder to create a new
array.

#GArrowUInt32Array is a class for 32-bit unsigned integer array. It
can store zero or more 32-bit unsigned integer data. If you don't
have Arrow format data, you need to use #GArrowUInt32ArrayBuilder
to create a new array.

#GArrowInt64Array is a class for 64-bit integer array. It can store
zero or more 64-bit integer data. If you don't have Arrow format
data, you need to use #GArrowInt64ArrayBuilder to create a new
array.

#GArrowUInt64Array is a class for 64-bit unsigned integer array. It
can store zero or more 64-bit unsigned integer data. If you don't
have Arrow format data, you need to use #GArrowUInt64ArrayBuilder
to create a new array.

#GArrowFloatArray is a class for 32-bit floating point array. It
can store zero or more 32-bit floating data. If you don't have
Arrow format data, you need to use #GArrowFloatArrayBuilder to
create a new array.

#GArrowDoubleArray is a class for 64-bit floating point array. It
can store zero or more 64-bit floating data. If you don't have
Arrow format data, you need to use #GArrowDoubleArrayBuilder to
create a new array.

#GArrowBinaryArray is a class for binary array. It can store zero
or more binary data. If you don't have Arrow format data, you need
to use #GArrowBinaryArrayBuilder to create a new array.

#GArrowLargeBinaryArray is a class for 64-bit offsets binary array.
It can store zero or more binary data. If you don't have Arrow
format data, you need to use #GArrowLargeBinaryArrayBuilder to
create a new array.

#GArrowStringArray is a class for UTF-8 encoded string array. It
can store zero or more UTF-8 encoded string data. If you don't have
Arrow format data, you need to use #GArrowStringArrayBuilder to
create a new array.

#GArrowLargeStringArray is a class for 64-bit offsets UTF-8
encoded string array. It can store zero or more UTF-8 encoded
string data. If you don't have Arrow format data, you need to
use #GArrowLargeStringArrayBuilder to create a new array.

#GArrowFixedSizeBinaryArray is a class for fixed size binary array.
It can store zero or more fixed size binary data. If you don't have
Arrow format data, you need to use
#GArrowFixedSizeBinaryArrayBuilder to create a new array.

#GArrowDate32Array is a class for the number of days since UNIX
epoch in 32-bit signed integer array. It can store zero or more
date data. If you don't have Arrow format data, you need to use
#GArrowDate32ArrayBuilder to create a new array.

#GArrowDate64Array is a class for the number of milliseconds since
UNIX epoch in 64-bit signed integer array. It can store zero or
more date data. If you don't have Arrow format data, you need to
use #GArrowDate64ArrayBuilder to create a new array.

#GArrowTimestampArray is a class for the number of
seconds/milliseconds/microseconds/nanoseconds since UNIX epoch in
64-bit signed integer array. It can store zero or more timestamp
data. If you don't have Arrow format data, you need to use
#GArrowTimestampArrayBuilder to create a new array.

#GArrowTime32Array is a class for the number of seconds or
milliseconds since midnight in 32-bit signed integer array. It can
store zero or more time data. If you don't have Arrow format data,
you need to use #GArrowTime32ArrayBuilder to create a new array.

#GArrowTime64Array is a class for the number of microseconds or
nanoseconds since midnight in 64-bit signed integer array. It can
store zero or more time data. If you don't have Arrow format data,
you need to use #GArrowTime64ArrayBuilder to create a new array.

#GArrowMonthIntervalArray is a class for the month intarval array.
It can store zero or more date data. If you don't have Arrow format
data, you need to use #GArrowMonthIntervalArrayBuilder to create a
new array.

#GArrowDayTimeIntervalArray is a class for the day time intarval array.
It can store zero or more date data. If you don't have Arrow format
data, you need to use #GArrowDayTimeIntervalArrayBuilder to create a
new array.

#GArrowMonthDayNanoIntervalArray is a class for the month day nano
intarval array. It can store zero or more date data. If you don't
have Arrow format data, you need to use #GArrowMonthDayNanoIntervalArray
to create a new array.

#GArrowDecimal128Array is a class for 128-bit decimal array. It can
store zero or more 128-bit decimal data. If you don't have Arrow
format data, you need to use #GArrowDecimal128ArrayBuilder to
create a new array.

#GArrowDecimal256Array is a class for 256-bit decimal array. It can
store zero or more 256-bit decimal data. If you don't have Arrow
format data, you need to use #GArrowDecimal256ArrayBuilder to
create a new array.

#GArrowExtensionArray is a base class for array of user-defined
extension types.</doc>
    </docsection>
    <docsection name="basic-data-type">
      <doc xml:space="preserve"
           filename="arrow-glib/basic-data-type.cpp"
           line="32">#GArrowDataType is a base class for all data type classes such as
#GArrowBooleanDataType.

#GArrowNullDataType is a class for the null data type.

#GArrowBooleanDataType is a class for the boolean data type.

#GArrowInt8DataType is a class for the 8-bit integer data type.

#GArrowUInt8DataType is a class for the 8-bit unsigned integer data type.

#GArrowInt16DataType is a class for the 16-bit integer data type.

#GArrowUInt16DataType is a class for the 16-bit unsigned integer data type.

#GArrowInt32DataType is a class for the 32-bit integer data type.

#GArrowUInt32DataType is a class for the 32-bit unsigned integer data type.

#GArrowInt64DataType is a class for the 64-bit integer data type.

#GArrowUInt64DataType is a class for the 64-bit unsigned integer data type.

#GArrowHalfFloatDataType is a class for the 16-bit floating point
data type.

#GArrowFloatDataType is a class for the 32-bit floating point data
type.

#GArrowDoubleDataType is a class for the 64-bit floating point data
type.

#GArrowBinaryDataType is a class for the binary data type.

#GArrowLargeBinaryDataType is a class for the 64-bit offsets binary
data type.

#GArrowFixedSizeBinaryDataType is a class for the fixed-size binary
data type.

#GArrowStringDataType is a class for the UTF-8 encoded string data
type.

#GArrowLargeStringDataType is a class for the 64-bit offsets UTF-8
encoded string data type.

#GArrowTemporalDataType is an abstract class for temporal related data type
such as #GArrowDate32DataType.

#GArrowDate32DataType is a class for the number of days since UNIX
epoch in the 32-bit signed integer data type.

#GArrowDate64DataType is a class for the number of milliseconds
since UNIX epoch in the 64-bit signed integer data type.

#GArrowTimestampDataType is a class for the number of
seconds/milliseconds/microseconds/nanoseconds since UNIX epoch in
the 64-bit signed integer data type.

#GArrowTime32DataType is a class for the number of seconds or
milliseconds since midnight in the 32-bit signed integer data type.

#GArrowTime64DataType is a class for the number of microseconds or
nanoseconds since midnight in the 64-bit signed integer data type.

#GArrowIntervalDataType is an abstract class for interval related
data type such as #GArrowMonthIntervalDataType.

#GArrowMonthIntervalDataType is a class for the month intarval data
type.

#GArrowDayTimeIntervalDataType is a class for the day time intarval
data type.

#GArrowMonthDayNanoIntervalDataType is a class for the month day
nano intarval data type.

#GArrowDecimalDataType is a base class for the decimal data types.

#GArrowDecimal128DataType is a class for the 128-bit decimal data type.

#GArrowDecimal256DataType is a class for the 256-bit decimal data type.

#GArrowExtensionDataType is a base class for user-defined extension
data types.

#GArrowExtensionDataTypeRegistry is a class to manage extension
data types.</doc>
    </docsection>
    <docsection name="buffer">
      <doc xml:space="preserve"
           filename="arrow-glib/buffer.cpp"
           line="25">#GArrowBuffer is a class for keeping data. Other classes such as
#GArrowArray and #GArrowTensor can use data in buffer.

#GArrowBuffer is immutable.

#GArrowMutableBuffer is mutable.

#GArrowResizableBuffer is mutable and resizable.</doc>
    </docsection>
    <docsection name="chunked-array">
      <doc xml:space="preserve"
           filename="arrow-glib/chunked-array.cpp"
           line="30">#GArrowChunkedArray is a class for chunked array. Chunked array
makes a list of #GArrowArrays one logical large array.</doc>
    </docsection>
    <docsection name="codec">
      <doc xml:space="preserve"
           filename="arrow-glib/codec.cpp"
           line="25">#GArrowCompressionType provides compression types corresponding to
`arrow::Compression::type`.

#GArrowCodec is a class for compressing and decompressing data.</doc>
    </docsection>
    <docsection name="composite-array">
      <doc xml:space="preserve"
           filename="arrow-glib/composite-array.cpp"
           line="29">#GArrowListArray is a class for list array. It can store zero or
more list data. If you don't have Arrow format data, you need to
use #GArrowListArrayBuilder to create a new array.

#GArrowLargeListArray is a class for 64-bit offsets list array.
It can store zero or more list data. If you don't have Arrow format data,
you need to use #GArrowLargeListArrayBuilder to create a new array.

#GArrowStructArray is a class for struct array. It can store zero
or more structs. One struct has one or more fields. If you don't
have Arrow format data, you need to use #GArrowStructArrayBuilder
to create a new array.

#GArrowMapArray is a class for map array. It can store
data with keys and items.

#GArrowUnionArray is a base class for union array. It can store
zero or more unions. One union has one or more fields but one union
can store only one field value.

#GArrowDenseUnionArray is a class for dense union array.

#GArrowSparseUnionArray is a class for sparse union array.

#GArrowDictionaryArray is a class for dictionary array. It can
store data with dictionary and indices. It's more space effective
than normal array when the array has many same values. You can
convert a normal array to a dictionary array by
garrow_array_dictionary_encode().

#GArrowRunEndEncodedArray is a class for run-end encoded array. It
can store data with run-ends and values. It's more space effective
than normal array when the array has many continuous same
values. You can convert a normal array to a run-end encoded array
by garrow_array_run_end_encode(). You can convert a run-end encoded
array to a normal array by garrow_run_end_encoded_array_decode().</doc>
    </docsection>
    <docsection name="composite-data-type">
      <doc xml:space="preserve"
           filename="arrow-glib/composite-data-type.cpp"
           line="29">#GArrowListDataType is a class for list data type.

#GArrowLargeListDataType is a class for 64-bit offsets list data type.

#GArrowStructDataType is a class for struct data type.

#GArrowMapDataType is a class for map data type.

#GArrowUnionDataType is a base class for union data types.

#GArrowSparseUnionDataType is a class for sparse union data type.

#GArrowDenseUnionDataType is a class for dense union data type.

#GArrowDictionaryDataType is a class for dictionary data type.

#GArrowRunEndEncodedDataType is a class for run end encoded data type.</doc>
    </docsection>
    <docsection name="compute">
      <doc xml:space="preserve"
           filename="arrow-glib/compute.cpp"
           line="160">#GArrowExecuteContext is a class to customize how to execute a
function.

#GArrowFunctionOptions is a base class for all function options
classes such as #GArrowCastOptions.

#GArrowFunctionDoc is a class for function document.

#GArrowFunction is a class to process data.

#GArrowExecuteNodeOptions is a base class for all execute node
options classes such as #GArrowSourceNodeOptions.

#GArrowSourceNodeOptions is a class to customize a source node.

#GArrowFilterNodeOptions is a class to customize a filter node.

#GArrowProjectNodeOptions is a class to customize a project node.

#GArrowAggregation is a class to specify how to aggregate.

#GArrowAggregateNodeOptions is a class to customize an aggregate node.

#GArrowSinkNodeOptions is a class to customize a sink node.

#GArrowHashJoinNodeOptions is a class to customize a hash join node.

#GArrowExecuteNode is a class to execute an operation.

#GArrowExecutePlan is a class to execute operations.

#GArrowCastOptions is a class to customize the `cast` function and
garrow_array_cast().

#GArrowScalarAggregateOptions is a class to customize the scalar
aggregate functions such as `count` function and convenient
functions of them such as garrow_array_count().

#GArrowCountOptions is a class to customize the `count` function and
garrow_array_count() family.

#GArrowFilterOptions is a class to customize the `filter` function and
garrow_array_filter() family.

#GArrowTakeOptions is a class to customize the `take` function and
garrow_array_take() family.

#GArrowArraySortOptions is a class to customize the
`array_sort_indices` function.

#GArrowSortOptions is a class to customize the `sort_indices`
function.

#GArrowSetLookupOptions is a class to customize the `is_in` function
and `index_in` function.

#GArrowVarianceOptions is a class to customize the `stddev` function
and `variance` function.

#GArrowRoundOptions is a class to customize the `round` function.

#GArrowRoundToMultipleOptions is a class to customize the
`round_to_multiple` function.

#GArrowUTF8NormalizeOptions is a class to customize the
`utf8_normalize` function.

#GArrowQuantileOptions is a class to customize the `qunatile`
function.

#GArrowIndexOptions is a class to customize the `index` function.

#GArrowRankOptions is a class to customize the `rank` function.

#GArrowRunEndEncodeOptions is a class to customize the
`run_end_encode` function.

There are many functions to compute data on an array.</doc>
    </docsection>
    <docsection name="datum">
      <doc xml:space="preserve"
           filename="arrow-glib/datum.cpp"
           line="29">#GArrowDatum is an abstract class to hold a datum. Subclasses such
as #GArrowArrayDatum and #GArrowTableDatum can hold a specific
datum.

#GArrowArrayDatum is a class to hold an #GArrowArray.

#GArrowChunkedArrayDatum is a class to hold an #GArrowChunkedArray.

#GArrowRecordBatchDatum is a class to hold an #GArrowRecordBatch.

#GArrowTableDatum is a class to hold an #GArrowTable.</doc>
    </docsection>
    <docsection name="decimal">
      <doc xml:space="preserve"
           filename="arrow-glib/decimal.cpp"
           line="300">#GArrowDecimal128 is a 128-bit decimal class.

#GArrowDecimal256 is a 256-bit decimal class.</doc>
    </docsection>
    <docsection name="error">
      <doc xml:space="preserve"
           filename="arrow-glib/error.cpp"
           line="27">#GArrowError provides error codes corresponding to `arrow::Status`
values.</doc>
    </docsection>
    <function name="error_quark"
              c:identifier="garrow_error_quark"
              moved-to="Error.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <docsection name="expression">
      <doc xml:space="preserve"
           filename="arrow-glib/expression.cpp"
           line="27">#GArrowExpression is a base class for all expression classes such
as #GArrowLiteralExpression.

#GArrowLiteralExpression is a class for literal value.

#GArrowFieldExpression is a class for field reference.

#GArrowCallExpression is a class for function call.</doc>
    </docsection>
    <docsection name="field">
      <doc xml:space="preserve"
           filename="arrow-glib/field.cpp"
           line="29">#GArrowField is a class for field. Field is metadata of a
column. It has name, data type (#GArrowDataType) and nullable
information of the column.</doc>
    </docsection>
    <docsection name="file">
      <doc xml:space="preserve"
           filename="arrow-glib/file.cpp"
           line="28">#GArrowFile is an interface for file.</doc>
    </docsection>
    <docsection name="file-mode">
      <doc xml:space="preserve"
           filename="arrow-glib/file-mode.cpp"
           line="22">#GArrowFileMode provides file modes corresponding to
`arrow::io::FileMode::type` values.</doc>
    </docsection>
    <docsection name="file-system">
      <doc xml:space="preserve"
           filename="arrow-glib/file-system.cpp"
           line="30">#GArrowFileInfo is a class for information for a file system entry.

#GArrowFileSelector is a class for a selector for file system APIs.

#GArrowFileSystem is an interface for file system.

#GArrowSubTreeFileSystem is a delegator to another file system that is
a logical view of a subtree of a file system, such as a directory in
a local file system.

#GArrowSlowFileSystem is a delegator to another file system.
This inserts latencies at various points.

#GArrowMockFileSystem is a class for mock file system that holds
its contents in memory.

#GArrowHDFSFileSystem is a class for HDFS-backed file system.

#GArrowS3GlobalOptions is a class for options to initialize S3 APIs.

#GArrowS3FileSystem is a class for S3-backed file system.

#GArrowGCSFileSystem is a class for GCS-backed file system.</doc>
    </docsection>
    <docsection name="input-stream">
      <doc xml:space="preserve"
           filename="arrow-glib/input-stream.cpp"
           line="40">#GArrowInputStream is a base class for input stream.

#GArrowSeekableInputStream is a base class for input stream that
supports random access.

#GArrowBufferInputStream is a class to read data on buffer.

#GArrowFileInputStream is a class to read data in file.

#GArrowMemoryMappedInputStream is a class to read data in file by
mapping the file on memory. It supports zero copy.

#GArrowGIOInputStream is a class for `GInputStream` based input
stream.

#GArrowCompressedInputStream is a class to read data from
compressed input stream.</doc>
    </docsection>
    <docsection name="interval">
      <doc xml:space="preserve"
           filename="arrow-glib/interval.cpp"
           line="26">#GArrowDayMillisecond is the class for day and millisecond
interval.

#GArrowMonthDayNano is the class for month, day and nanosecond
interval.</doc>
    </docsection>
    <docsection name="ipc-options">
      <doc xml:space="preserve"
           filename="arrow-glib/ipc-options.cpp"
           line="26">#GArrowReadOptions provides options for reading data.

#GArrowWriteOptions provides options for writing data.</doc>
    </docsection>
    <docsection name="local-file-system">
      <doc xml:space="preserve"
           filename="arrow-glib/local-file-system.cpp"
           line="25">#GArrowLocalFileSystemOptions is a class for specifyiing options of
an instance of #GArrowLocalFileSystem.

#GArrowLocalFileSystem is a class for an implementation of a file system
that accesses files on the local machine.</doc>
    </docsection>
    <docsection name="memory-pool">
      <doc xml:space="preserve"
           filename="arrow-glib/memory-pool.cpp"
           line="24">#GArrowMemoryPool is a class for memory allocation.</doc>
    </docsection>
    <docsection name="metadata-version">
      <doc xml:space="preserve"
           filename="arrow-glib/metadata-version.cpp"
           line="22">#GArrowMetadataVersion provides metadata versions corresponding
to `arrow::ipc::MetadataVersion` values.</doc>
    </docsection>
    <docsection name="orc-file-reader">
      <doc xml:space="preserve"
           filename="arrow-glib/orc-file-reader.cpp"
           line="29">#GArrowORCFileReader is a class for reading stripes in ORC file
format from input.</doc>
    </docsection>
    <docsection name="output-stream">
      <doc xml:space="preserve"
           filename="arrow-glib/output-stream.cpp"
           line="38">#GArrowOutputStream is an interface for stream output. Stream
output is file based and writable

#GArrowFileOutputStream is a class for file output stream.

#GArrowBufferOutputStream is a class for buffer output stream.

#GArrowGIOOutputStream is a class for `GOutputStream` based output
stream.

#GArrowCompressedOutputStream is a class to write compressed data to
output stream.</doc>
    </docsection>
    <docsection name="readable">
      <doc xml:space="preserve"
           filename="arrow-glib/readable.cpp"
           line="28">#GArrowReadable is an interface for input. Input must be
readable.</doc>
    </docsection>
    <docsection name="reader">
      <doc xml:space="preserve"
           filename="arrow-glib/reader.cpp"
           line="37">#GArrowRecordBatchReader is a base class for reading record batches
in stream format from input.

#GArrowRecordBatchStreamReader is a class for reading record
batches in stream format from input synchronously.

#GArrowRecordBatchFileReader is a class for reading record
batches in file format from input.

#GArrowFeatherFileReader is a class for reading columns in Feather
file format from input.

#GArrowCSVReader is a class for reading table in CSV format from
input.

#GArrowJSONReader is a class for reading table in JSON format from
input.</doc>
    </docsection>
    <docsection name="record-batch">
      <doc xml:space="preserve"
           filename="arrow-glib/record-batch.cpp"
           line="36">#GArrowRecordBatch is a class for record batch. Record batch is
similar to #GArrowTable. Record batch also has also zero or more
columns and zero or more records.

Record batch is used for shared memory IPC.

#GArrowRecordBatchIterator is a class for iterating record
batches.</doc>
    </docsection>
    <function name="s3_finalize"
              c:identifier="garrow_s3_finalize"
              version="7.0.0"
              throws="1">
      <doc xml:space="preserve"
           filename="arrow-glib/file-system.cpp"
           line="1558">Finalize the S3 APIs.</doc>
      <source-position filename="arrow-glib/file-system.h" line="321"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1564">%TRUE on success, %FALSE on error.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="s3_initialize"
              c:identifier="garrow_s3_initialize"
              version="7.0.0"
              throws="1">
      <doc xml:space="preserve"
           filename="arrow-glib/file-system.cpp"
           line="1527">Normally, you don't need to call this function because the S3 APIs
are initialized with the default options automatically. If you want
to call this function, you must call this function before you use
any #GArrowS3FileSystem related APIs.</doc>
      <source-position filename="arrow-glib/file-system.h" line="317"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1537">%TRUE on success, %FALSE on error.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="options"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="arrow-glib/file-system.cpp"
               line="1529">Options to initialize the S3 APIs.</doc>
          <type name="S3GlobalOptions" c:type="GArrowS3GlobalOptions*"/>
        </parameter>
      </parameters>
    </function>
    <function name="s3_is_enabled"
              c:identifier="garrow_s3_is_enabled"
              version="7.0.0">
      <source-position filename="arrow-glib/file-system.h" line="314"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="arrow-glib/file-system.cpp"
             line="1512">%TRUE if Apache Arrow C++ is built with S3 support, %FALSE
  otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <docsection name="scalar">
      <doc xml:space="preserve"
           filename="arrow-glib/scalar.cpp"
           line="33">#GArrowScalar is a base class for all scalar classes such as
#GArrowBooleanScalar.

#GArrowNullScalar is a class for a null scalar.

#GArrowBooleanScalar is a class for a boolean scalar.

#GArrowInt8Scalar is a class for a 8-bit integer scalar.

#GArrowInt16Scalar is a class for a 16-bit integer scalar.

#GArrowInt32Scalar is a class for a 32-bit integer scalar.

#GArrowInt64Scalar is a class for a 64-bit integer scalar.

#GArrowUInt8Scalar is a class for a 8-bit unsigned integer scalar.

#GArrowUInt16Scalar is a class for a 16-bit unsigned integer scalar.

#GArrowUInt32Scalar is a class for a 32-bit unsigned integer scalar.

#GArrowUInt64Scalar is a class for a 64-bit unsigned integer scalar.

#GArrowHalfFloatScalar is a class for a 16-bit floating point scalar.

#GArrowFloatScalar is a class for a 32-bit floating point scalar.

#GArrowDoubleScalar is a class for a 64-bit floating point scalar.

#GArrowBaseBinaryScalar is a base class for all binary and string
scalar classes such as #GArrowBinaryScalar.

#GArrowBinaryScalar is a class for a binary scalar.

#GArrowStringScalar is a class for an UTF-8 encoded string scalar.

#GArrowLargeBinaryScalar is a class for a 64-bit offsets binary
scalar.

#GArrowLargeStringScalar is a class for a 64-bit offsets UTF-8
encoded string scalar.

#GArrowFixedSizeBinaryScalar is a class for a fixed-size binary
scalar.

#GArrowDate32Scalar is a class for the number of days since UNIX
epoch in a 32-bit signed integer scalar.

#GArrowDate64Scalar is a class for the number of milliseconds
since UNIX epoch in a 64-bit signed integer scalar.

#GArrowTime32Scalar is a class for the number of seconds or
milliseconds since midnight in a 32-bit signed integer scalar.

#GArrowTime64Scalar is a class for the number of microseconds or
nanoseconds since midnight in a 64-bit signed integer scalar.

#GArrowTimestampScalar is a class for the number of
seconds/milliseconds/microseconds/nanoseconds since UNIX epoch in
a 64-bit signed integer scalar.

#GArrowMonthIntervalScalar is a class for the month intarval scalar.

#GArrowDayTimeIntervalScalar is a class for the day time intarval scalar.

#GArrowMonthDayNanoIntervalScalar is a class for the month day nano
intarval scalar.

#GArrowDecimal128Scalar is a class for a 128-bit decimal scalar.

#GArrowDecimal256Scalar is a class for a 256-bit decimal scalar.

#GArrowBaseListScalar is a base class for all list scalar classes
such as #GArrowListScalar.

#GArrowListScalar is a class for a list scalar.

#GArrowLargeListScalar is a class for a large list scalar.

#GArrowMapScalar is a class for a map list scalar.

#GArrowStructScalar is a class for a struct list scalar.

#GArrowUnionScalar is a base class for all union scalar classes
such as #GArrowSparseUnionScalar.

#GArrowSparseUnionScalar is a class for a sparse union scalar.

#GArrowDenseUnionScalar is a class for a dense union scalar.

#GArrowExtensionScalar is a base class for user-defined extension
scalar.</doc>
    </docsection>
    <docsection name="schema">
      <doc xml:space="preserve"
           filename="arrow-glib/schema.cpp"
           line="30">#GArrowSchema is a class for schema. Schema is metadata of a
table. It has zero or more #GArrowFields.</doc>
    </docsection>
    <docsection name="table">
      <doc xml:space="preserve"
           filename="arrow-glib/table.cpp"
           line="35">#GArrowTableConcatenateOptions is a class for customizing
garrow_table_concatenate() behavior.

#GArrowTable is a class for table. Table has zero or more
#GArrowChunkedArrays and zero or more records.

#GArrowFeatherWriteProperties is a class to customize how to write
Feather data.</doc>
    </docsection>
    <docsection name="table-builder">
      <doc xml:space="preserve"
           filename="arrow-glib/table-builder.cpp"
           line="28">#GArrowRecordBatchBuilder is a class to create
new #GArrowRecordBatch.</doc>
    </docsection>
    <docsection name="tensor">
      <doc xml:space="preserve"
           filename="arrow-glib/tensor.cpp"
           line="27">#GArrowTensor is a tensor class.</doc>
    </docsection>
    <docsection name="type">
      <doc xml:space="preserve"
           filename="arrow-glib/type.cpp"
           line="22">#GArrowType provides types corresponding to `arrow::Type::type`
values.</doc>
    </docsection>
    <docsection name="version">
      <doc xml:space="preserve"
           filename="arrow-glib/version.h"
           line="24">Apache Arrow GLib provides macros that can be used by C pre-processor.
They are useful to check version related things at compile time.</doc>
    </docsection>
    <docsection name="writable">
      <doc xml:space="preserve"
           filename="arrow-glib/writable.cpp"
           line="27">#GArrowWritable is an interface for output. Output must be
writable.</doc>
    </docsection>
    <docsection name="writable-file">
      <doc xml:space="preserve"
           filename="arrow-glib/writable-file.cpp"
           line="27">#GArrowWritableFile is an interface for file output.</doc>
    </docsection>
    <docsection name="writer">
      <doc xml:space="preserve"
           filename="arrow-glib/writer.cpp"
           line="32">#GArrowRecordBatchWriter is a base class for writing record batches
in stream format into output.

#GArrowRecordBatchStreamWriter is a base class for writing record
batches in stream format into output synchronously.

#GArrowRecordBatchFileWriter is a class for writing record
batches in file format into output.</doc>
    </docsection>
  </namespace>
</repository>
