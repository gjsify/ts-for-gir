<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Camel" version="1.2"/>
  <include name="EDataServer" version="1.2"/>
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="libebook-contacts-1.2"/>
  <c:include name="libebook-contacts/libebook-contacts.h"/>
  <namespace name="EBookContacts"
             version="1.2"
             shared-library="libebook-contacts-1.2.so.4,libedataserver-1.2.so.27"
             c:identifier-prefixes="E"
             c:symbol-prefixes="e">
    <record name="AddressWestern"
            c:type="EAddressWestern"
            glib:type-name="EAddressWestern"
            glib:get-type="e_address_western_get_type"
            c:symbol-prefix="address_western">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-address-western.h"
           line="27">Western address structure.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-address-western.h"
                       line="49"/>
      <field name="po_box" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.h"
             line="29">PO Box.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="extended" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.h"
             line="30">TODO, we're not sure what this is.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="street" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.h"
             line="31">Street name</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="locality" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.h"
             line="32">City or town</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="region" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.h"
             line="33">State or province</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="postal_code" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.h"
             line="34">Postal Code</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="country" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.h"
             line="35">Country</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <method name="copy" c:identifier="e_address_western_copy" version="3.24">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.c"
             line="449">Creates a copy of @eaw.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-address-western.h"
                         line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-address-western.c"
               line="455">A new #EAddressWestern struct identical to @eaw.</doc>
          <type name="AddressWestern" c:type="EAddressWestern*"/>
        </return-value>
        <parameters>
          <instance-parameter name="eaw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-address-western.c"
                 line="451">an #EAddressWestern</doc>
            <type name="AddressWestern" c:type="EAddressWestern*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_address_western_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.c"
             line="427">Frees @eaw and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-address-western.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="eaw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-address-western.c"
                 line="429">an #EAddressWestern</doc>
            <type name="AddressWestern" c:type="EAddressWestern*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="parse" c:identifier="e_address_western_parse">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.c"
             line="306">Parses a string representing a mailing address into a
structure of type #EAddressWestern.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-address-western.h"
                         line="52"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-address-western.c"
               line="313">A new #EAddressWestern structure, or %NULL if
   the parsing failed or when the @in_address was %NULL.</doc>
          <type name="AddressWestern" c:type="EAddressWestern*"/>
        </return-value>
        <parameters>
          <parameter name="in_address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-address-western.c"
                 line="308">a string representing a mailing address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <constant name="BOOK_BACKEND_PROPERTY_CATEGORIES"
              value='"categories"'
              c:type="E_BOOK_BACKEND_PROPERTY_CATEGORIES"
              version="3.48">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="72">Provides comma-separated list of all known categories used by
the contacts stored in the book backend.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="80"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BOOK_BACKEND_PROPERTY_REQUIRED_FIELDS"
              value='"required-fields"'
              c:type="E_BOOK_BACKEND_PROPERTY_REQUIRED_FIELDS"
              version="3.2">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="33">Provides comma-separated list of required fields by the book backend.
All of these attributes should be set, otherwise the backend will reject
saving the contact.

The e_contact_field_id() can be used to transform the field name
into an #EContactField.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BOOK_BACKEND_PROPERTY_REVISION"
              value='"revision"'
              c:type="E_BOOK_BACKEND_PROPERTY_REVISION"
              version="3.4">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="61">The current overall revision string, this can be used as
a quick check to see if data has changed at all since the
last time the addressbook revision was observed.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="70"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BOOK_BACKEND_PROPERTY_SUPPORTED_FIELDS"
              value='"supported-fields"'
              c:type="E_BOOK_BACKEND_PROPERTY_SUPPORTED_FIELDS"
              version="3.2">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="47">Provides comma-separated list of supported fields by the book backend.
Attributes other than those listed here can be discarded. This can be
used to enable/show only supported elements in GUI.

The e_contact_field_id() can be used to transform the field name
into an #EContactField.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="BOOK_INDICES_UPDATER"
                    c:identifier="E_BOOK_INDICES_UPDATER"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="18"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOOK_INDICES_UPDATER_CLASS"
                    c:identifier="E_BOOK_INDICES_UPDATER_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="21"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOOK_INDICES_UPDATER_GET_CLASS"
                    c:identifier="E_BOOK_INDICES_UPDATER_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="BookChange"
            c:type="EBookChange"
            deprecated="1"
            deprecated-version="3.2">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="199">This is a part of the deprecated #EBook API.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="211"/>
      <field name="change_type" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="201">The #EBookChangeType</doc>
        <type name="BookChangeType" c:type="EBookChangeType"/>
      </field>
      <field name="contact" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="202">The #EContact which changed</doc>
        <type name="Contact" c:type="EContact*"/>
      </field>
    </record>
    <enumeration name="BookChangeType"
                 deprecated="1"
                 deprecated-version="3.2"
                 c:type="EBookChangeType">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="183">The type of change in an #EBookChange</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="197"/>
      <member name="added" value="0" c:identifier="E_BOOK_CHANGE_CARD_ADDED">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="185">A vCard was added</doc>
      </member>
      <member name="deleted"
              value="1"
              c:identifier="E_BOOK_CHANGE_CARD_DELETED">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="186">A vCard was deleted</doc>
      </member>
      <member name="modified"
              value="2"
              c:identifier="E_BOOK_CHANGE_CARD_MODIFIED">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="187">A vCard was modified</doc>
      </member>
    </enumeration>
    <enumeration name="BookClientError"
                 version="3.2"
                 c:type="EBookClientError"
                 glib:error-domain="e-book-client-error-quark">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="93">Error codes returned by #EBookClient APIs, if an #EClientError was not available.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="111"/>
      <member name="no_such_book"
              value="0"
              c:identifier="E_BOOK_CLIENT_ERROR_NO_SUCH_BOOK">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="95">Requested book did not exist</doc>
      </member>
      <member name="contact_not_found"
              value="1"
              c:identifier="E_BOOK_CLIENT_ERROR_CONTACT_NOT_FOUND">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="96">Contact referred to was not found</doc>
      </member>
      <member name="contact_id_already_exists"
              value="2"
              c:identifier="E_BOOK_CLIENT_ERROR_CONTACT_ID_ALREADY_EXISTS">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="97">Tried to add a contact which already exists</doc>
      </member>
      <member name="no_such_source"
              value="3"
              c:identifier="E_BOOK_CLIENT_ERROR_NO_SUCH_SOURCE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="98">Referred #ESource does not exist</doc>
      </member>
      <member name="no_space"
              value="4"
              c:identifier="E_BOOK_CLIENT_ERROR_NO_SPACE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="99">Out of disk space</doc>
      </member>
    </enumeration>
    <bitfield name="BookClientViewFlags"
              version="3.4"
              glib:type-name="EBookClientViewFlags"
              glib:get-type="e_book_client_view_flags_get_type"
              c:type="EBookClientViewFlags">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
           line="31">Flags that control the behaviour of an #EBookClientView.</doc>
      <member name="none"
              value="0"
              c:identifier="E_BOOK_CLIENT_VIEW_FLAGS_NONE"
              glib:nick="none"
              glib:name="E_BOOK_CLIENT_VIEW_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="33">Symbolic value for no flags</doc>
      </member>
      <member name="notify_initial"
              value="1"
              c:identifier="E_BOOK_CLIENT_VIEW_FLAGS_NOTIFY_INITIAL"
              glib:nick="notify-initial"
              glib:name="E_BOOK_CLIENT_VIEW_FLAGS_NOTIFY_INITIAL">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="35">If this flag is set then all contacts matching the view's query will
  be sent as notifications when starting the view, otherwise only future
  changes will be reported.  The default for an #EBookClientView is %TRUE.</doc>
      </member>
      <member name="manual_query"
              value="2"
              c:identifier="E_BOOK_CLIENT_VIEW_FLAGS_MANUAL_QUERY"
              glib:nick="manual-query"
              glib:name="E_BOOK_CLIENT_VIEW_FLAGS_MANUAL_QUERY">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="39">Rather than receiving contact changes one-by-one, be notified only
  by "content-changed" signal and query contacts by ranges. See
  e_book_client_view_set_sort_fields_sync() for more information.
  The default is %FALSE. Since: 3.50</doc>
      </member>
    </bitfield>
    <record name="BookClientViewSortFields"
            c:type="EBookClientViewSortFields"
            version="3.50"
            glib:type-name="EBookClientViewSortFields"
            glib:get-type="e_book_client_view_sort_fields_get_type"
            c:symbol-prefix="book_client_view_sort_fields">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="389">This is a structure describing sort settings in the view.
See e_book_client_view_set_sort_fields_sync() for more information.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="149"/>
      <field name="field" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="391">an #EContactField to sort by</doc>
        <type name="ContactField" c:type="EContactField"/>
      </field>
      <field name="sort_type" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="392">an #EBookCursorSortType</doc>
        <type name="BookCursorSortType" c:type="EBookCursorSortType"/>
      </field>
      <method name="copy"
              c:identifier="e_book_client_view_sort_fields_copy"
              version="3.50"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="400">Creates a copy of the @src. If the %src is %NULL, the %NULL is returned.
Both the @src and the returned array is terminated by an item, which has
the field member set to %E_CONTACT_FIELD_LAST.

Free the returned array with e_book_client_view_sort_fields_free(),
when no longer needed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                         line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="411">copy of the @src</doc>
          <type name="BookClientViewSortFields"
                c:type="EBookClientViewSortFields*"/>
        </return-value>
        <parameters>
          <instance-parameter name="src"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
                 line="402">an array to copy, or %NULL</doc>
            <type name="BookClientViewSortFields"
                  c:type="const EBookClientViewSortFields*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="e_book_client_view_sort_fields_free"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="441">Frees the @fields array with each member. The array should be terminated
by an item with field member set to %E_CONTACT_FIELD_LAST.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="fields"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
                 line="443">an array of #EBookClientViewSortFields to free</doc>
            <type name="BookClientViewSortFields"
                  c:type="EBookClientViewSortFields*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="BookCursorOrigin"
                 version="3.12"
                 glib:type-name="EBookCursorOrigin"
                 glib:get-type="e_book_cursor_origin_get_type"
                 c:type="EBookCursorOrigin">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
           line="88">Specifies the start position to in the list of traversed contacts
in calls to e_book_client_cursor_step().

When an #EBookClientCursor is created, the current position implied by %E_BOOK_CURSOR_ORIGIN_CURRENT
is the same as %E_BOOK_CURSOR_ORIGIN_BEGIN.</doc>
      <member name="current"
              value="0"
              c:identifier="E_BOOK_CURSOR_ORIGIN_CURRENT"
              glib:nick="current"
              glib:name="E_BOOK_CURSOR_ORIGIN_CURRENT">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="90">The current cursor position</doc>
      </member>
      <member name="begin"
              value="1"
              c:identifier="E_BOOK_CURSOR_ORIGIN_BEGIN"
              glib:nick="begin"
              glib:name="E_BOOK_CURSOR_ORIGIN_BEGIN">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="91">The beginning of the cursor results.</doc>
      </member>
      <member name="end"
              value="2"
              c:identifier="E_BOOK_CURSOR_ORIGIN_END"
              glib:nick="end"
              glib:name="E_BOOK_CURSOR_ORIGIN_END">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="92">The ending of the cursor results.</doc>
      </member>
    </enumeration>
    <enumeration name="BookCursorSortType"
                 version="3.12"
                 glib:type-name="EBookCursorSortType"
                 glib:get-type="e_book_cursor_sort_type_get_type"
                 c:type="EBookCursorSortType">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
           line="74">Specifies the sort order of an ordered query</doc>
      <member name="ascending"
              value="0"
              c:identifier="E_BOOK_CURSOR_SORT_ASCENDING"
              glib:nick="ascending"
              glib:name="E_BOOK_CURSOR_SORT_ASCENDING">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="76">Sort results in ascending order</doc>
      </member>
      <member name="descending"
              value="1"
              c:identifier="E_BOOK_CURSOR_SORT_DESCENDING"
              glib:nick="descending"
              glib:name="E_BOOK_CURSOR_SORT_DESCENDING">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="77">Sort results in descending order</doc>
      </member>
    </enumeration>
    <bitfield name="BookCursorStepFlags"
              version="3.12"
              glib:type-name="EBookCursorStepFlags"
              glib:get-type="e_book_cursor_step_flags_get_type"
              c:type="EBookCursorStepFlags">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
           line="108">Defines the behaviour of e_book_client_cursor_step().</doc>
      <member name="move"
              value="1"
              c:identifier="E_BOOK_CURSOR_STEP_MOVE"
              glib:nick="move"
              glib:name="E_BOOK_CURSOR_STEP_MOVE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="110">The cursor position should be modified while stepping</doc>
      </member>
      <member name="fetch"
              value="2"
              c:identifier="E_BOOK_CURSOR_STEP_FETCH"
              glib:nick="fetch"
              glib:name="E_BOOK_CURSOR_STEP_FETCH">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="111">Traversed contacts should be listed and returned while stepping.</doc>
      </member>
    </bitfield>
    <enumeration name="BookIndexType"
                 glib:type-name="EBookIndexType"
                 glib:get-type="e_book_index_type_get_type"
                 c:type="EBookIndexType">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
           line="55">The type of index defined by e_source_backend_summary_setup_set_indexed_fields()</doc>
      <member name="prefix"
              value="0"
              c:identifier="E_BOOK_INDEX_PREFIX"
              glib:nick="prefix"
              glib:name="E_BOOK_INDEX_PREFIX">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="57">An index suitable for searching contacts with a prefix pattern</doc>
      </member>
      <member name="suffix"
              value="1"
              c:identifier="E_BOOK_INDEX_SUFFIX"
              glib:nick="suffix"
              glib:name="E_BOOK_INDEX_SUFFIX">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="58">An index suitable for searching contacts with a suffix pattern</doc>
      </member>
      <member name="phone"
              value="2"
              c:identifier="E_BOOK_INDEX_PHONE"
              glib:nick="phone"
              glib:name="E_BOOK_INDEX_PHONE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="59">An index suitable for searching contacts for phone numbers.
&lt;note&gt;&lt;para&gt;Phone numbers must be convertible into FQTN according to E.164 to be
stored in this index. The number "+9999999" for instance won't be stored because
the country calling code "+999" currently is not assigned.&lt;/para&gt;&lt;/note&gt;</doc>
      </member>
      <member name="sort_key"
              value="3"
              c:identifier="E_BOOK_INDEX_SORT_KEY"
              glib:nick="sort-key"
              glib:name="E_BOOK_INDEX_SORT_KEY">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="63">Indicates that a given #EContactField should be usable as a sort key.</doc>
      </member>
    </enumeration>
    <record name="BookIndices"
            c:type="EBookIndices"
            version="3.50"
            glib:type-name="EBookIndices"
            glib:get-type="e_book_indices_get_type"
            c:symbol-prefix="book_indices">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="313">This is a structure describing indices of the contacts in the view.
See e_book_client_view_dup_indices() for more information.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="139"/>
      <field name="chr" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="315">a character for the index</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="index" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="316">0-based index of the first contact with this character</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <method name="copy"
              c:identifier="e_book_indices_copy"
              version="3.50"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="324">Creates a copy of the @src. If the %src is %NULL, the %NULL is returned.
Both the @src and the returned array is terminated by an item, which has
the chr member set to %NULL.

Free the returned array with e_book_indices_free(),
when no longer needed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                         line="141"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="335">copy of the @src</doc>
          <type name="BookIndices" c:type="EBookIndices*"/>
        </return-value>
        <parameters>
          <instance-parameter name="src"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
                 line="326">an array of #EBookIndices to copy, or %NULL</doc>
            <type name="BookIndices" c:type="const EBookIndices*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="e_book_indices_free"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="365">Frees the @indices array with each member. The array should be terminated
by an item with chr member set to %NULL.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="indices"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
                 line="367">an array of #EBookIndices to free</doc>
            <type name="BookIndices" c:type="EBookIndices*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="get_ascending_sort"
                c:identifier="e_book_indices_get_ascending_sort"
                version="3.50">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
             line="241">Returns whether the @self considers contacts stored in the ascending order.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="247">%TRUE, when considers contacts sorted in ascending order,
   %FALSE when in the descending order.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="243">an #EBookIndicesUpdater</doc>
            <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_ascending_sort"
                c:identifier="e_book_indices_set_ascending_sort"
                version="3.50">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
             line="205">Sets whether the contacts are sorted in an ascending order; if not,
then they are sorted in the descending order. That influences what
indexes the indices have set.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="207">an #EBookIndicesUpdater</doc>
            <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
          </parameter>
          <parameter name="ascending_sort" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="208">the value to set</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="BookIndicesUpdater"
           c:symbol-prefix="book_indices_updater"
           c:type="EBookIndicesUpdater"
           version="3.50"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="EBookIndicesUpdater"
           glib:get-type="e_book_indices_updater_get_type"
           glib:type-struct="BookIndicesUpdaterClass">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
           line="41">An abstract object to handle EBookIndices changes.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="57"/>
      <method name="add"
              c:identifier="e_book_indices_updater_add"
              version="3.50">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
             line="260">Notifies the @self that a new contact with UID @uid had been added
to the set and it occupies the @indices_index index in the indices.
In case the @uid had been added previously its index is modified
instead.

This function can be used only after initial call to e_book_indices_updater_take_indices().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="273">whether the indices changed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="262">an #EBookIndicesUpdater</doc>
            <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
          </instance-parameter>
          <parameter name="uid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="263">a UID of a contact</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="indices_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="264">index to the indices array the contact belongs to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_indices"
              c:identifier="e_book_indices_updater_get_indices"
              version="3.50">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
             line="186">Sets the initial indices to be updated by the @self. If %NULL,
then unsets them.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                         line="63"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="193">current indices, or %NULL, when none had been set yet</doc>
          <type name="BookIndices" c:type="const EBookIndices*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="188">an #EBookIndicesUpdater</doc>
            <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove"
              c:identifier="e_book_indices_updater_remove"
              version="3.50">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
             line="382">Notifies the @self that an existing contact with UID @uid had been removed
from the set. Calling the function with @uid unknown to the @self does nothing
and returns %FALSE.

This function can be used only after initial call to e_book_indices_updater_take_indices().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="393">whether the indices changed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="384">an #EBookIndicesUpdater</doc>
            <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
          </instance-parameter>
          <parameter name="uid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="385">a UID of a removed contact</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_indices"
              c:identifier="e_book_indices_updater_take_indices"
              version="3.50">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
             line="116">Sets the initial indices to be updated by the @self. If %NULL,
then unsets them. The function always discards data previously
gathered about the involved contacts, regardless whether
the indices changed or not.

The function assumes ownership of the @indices.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="128">whether the indices changed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="118">an #EBookIndicesUpdater</doc>
            <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
          </instance-parameter>
          <parameter name="indices"
                     transfer-ownership="full"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
                 line="119">an #EBookIndices, or %NULL</doc>
            <type name="BookIndices" c:type="EBookIndices*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="BookIndicesUpdaterPrivate"
              c:type="EBookIndicesUpdaterPrivate*"/>
      </field>
    </class>
    <record name="BookIndicesUpdaterClass"
            c:type="EBookIndicesUpdaterClass"
            glib:is-gtype-struct-for="BookIndicesUpdater">
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="57"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="BookIndicesUpdaterPrivate"
            c:type="EBookIndicesUpdaterPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="39"/>
    </record>
    <bitfield name="BookOperationFlags"
              version="3.34"
              glib:type-name="EBookOperationFlags"
              glib:get-type="e_book_operation_flags_get_type"
              c:type="EBookOperationFlags">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
           line="122">Book operation flags, to specify behavior in certain situations. The conflict
resolution mode flags cannot be combined together, where the @E_BOOK_OPERATION_FLAG_CONFLICT_KEEP_LOCAL
is the default behavior (and it is used when no other conflict resolution flag is set).
The flags can be ignored when the operation or the backend don't support it.</doc>
      <member name="none"
              value="0"
              c:identifier="E_BOOK_OPERATION_FLAG_NONE"
              glib:nick="none"
              glib:name="E_BOOK_OPERATION_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="124">no operation flags defined</doc>
      </member>
      <member name="conflict_fail"
              value="1"
              c:identifier="E_BOOK_OPERATION_FLAG_CONFLICT_FAIL"
              glib:nick="conflict-fail"
              glib:name="E_BOOK_OPERATION_FLAG_CONFLICT_FAIL">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="125">conflict resolution mode, to fail and do not
   do any changes, when a conflict is detected</doc>
      </member>
      <member name="conflict_use_newer"
              value="2"
              c:identifier="E_BOOK_OPERATION_FLAG_CONFLICT_USE_NEWER"
              glib:nick="conflict-use-newer"
              glib:name="E_BOOK_OPERATION_FLAG_CONFLICT_USE_NEWER">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="127">conflict resolution mode, to use newer
   of the local and the server side data, when a conflict is detected</doc>
      </member>
      <member name="conflict_keep_server"
              value="4"
              c:identifier="E_BOOK_OPERATION_FLAG_CONFLICT_KEEP_SERVER"
              glib:nick="conflict-keep-server"
              glib:name="E_BOOK_OPERATION_FLAG_CONFLICT_KEEP_SERVER">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="129">conflict resolution mode, to use
   the server data (and local changed), when a conflict is detected</doc>
      </member>
      <member name="conflict_keep_local"
              value="0"
              c:identifier="E_BOOK_OPERATION_FLAG_CONFLICT_KEEP_LOCAL"
              glib:nick="conflict-keep-local"
              glib:name="E_BOOK_OPERATION_FLAG_CONFLICT_KEEP_LOCAL">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="131">conflict resolution mode, to use
   local data (and always overwrite server data), when a conflict is detected</doc>
      </member>
      <member name="conflict_write_copy"
              value="8"
              c:identifier="E_BOOK_OPERATION_FLAG_CONFLICT_WRITE_COPY"
              glib:nick="conflict-write-copy"
              glib:name="E_BOOK_OPERATION_FLAG_CONFLICT_WRITE_COPY">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-enums.h"
             line="133">conflict resolution mode, to create
   a copy of the data, when a conflict is detected</doc>
      </member>
    </bitfield>
    <record name="BookQuery"
            c:type="EBookQuery"
            opaque="1"
            glib:type-name="EBookQuery"
            glib:get-type="e_book_query_get_type"
            c:symbol-prefix="book_query">
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="38"/>
      <method name="andv" c:identifier="e_book_query_andv" introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="170">Creates a new #EBookQuery which is the logical AND of the queries specified.
The new #EBookQuery takes ownership of the specified queries.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="99"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="178">A new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <instance-parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="172">first #EBookQuery</doc>
            <type name="BookQuery" c:type="EBookQuery*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="173">%NULL terminated list of #EBookQuery pointers</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="e_book_query_copy">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="956">Creates a copy of @q.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="118"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="962">A new #EBookQuery identical to @q.</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <instance-parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="958">an #EBookQuery</doc>
            <type name="BookQuery" c:type="EBookQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="not" c:identifier="e_book_query_not">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="216">Creates a new #EBookQuery which is the opposite of #q.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="223">the new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <instance-parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="218">an #EBookQuery</doc>
            <type name="BookQuery" c:type="EBookQuery*"/>
          </instance-parameter>
          <parameter name="unref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="219">if %TRUE, the new query takes ownership of the existing queries</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="orv" c:identifier="e_book_query_orv" introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="193">Creates a new #EBookQuery which is the logical OR of the queries specified.
The new #EBookQuery takes ownership of the specified queries.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="201">A new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <instance-parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="195">first #EBookQuery</doc>
            <type name="BookQuery" c:type="EBookQuery*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="196">%NULL terminated list of #EBookQuery pointers</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="e_book_query_ref">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="442">Increment the reference count on @q.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="95"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="447">@q</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <instance-parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="444">an #EBookQuery</doc>
            <type name="BookQuery" c:type="EBookQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="e_book_query_to_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="854">Return the string representation of @q.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="860">The string form of the query. This string should be freed when
finished with.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="856">an #EBookQuery</doc>
            <type name="BookQuery" c:type="EBookQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="e_book_query_unref">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="394">Decrement the reference count on @q. When the reference count reaches 0, @q
will be freed and any child queries will have e_book_query_unref() called.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="q" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="396">an #EBookQuery</doc>
            <type name="BookQuery" c:type="EBookQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="and" c:identifier="e_book_query_and">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="112">Create a new #EBookQuery which is the logical AND of the queries in #qs.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="98"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="120">A new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="nqs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="114">the number of queries to AND</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="qs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="115">pointer to an array of #EBookQuery items</doc>
            <type name="BookQuery" c:type="EBookQuery**"/>
          </parameter>
          <parameter name="unref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="116">if %TRUE, the new query takes ownership of the existing queries</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="any_field_contains"
                c:identifier="e_book_query_any_field_contains">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="375">Creates a new #EBookQuery which tests if any field contains @value.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="115"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="381">the new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="377">a value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="field_exists" c:identifier="e_book_query_field_exists">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="336">Creates a new #EBookQuery which tests if the field @field exists.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="341">the new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="338">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </function>
      <function name="field_test" c:identifier="e_book_query_field_test">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="274">Creates a new #EBookQuery which tests @field for @value using the test @test.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="282">the new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="276">an #EContactField to test</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
          <parameter name="test" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="277">the test to apply</doc>
            <type name="BookQueryTest" c:type="EBookQueryTest"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="278">the value to test for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_string" c:identifier="e_book_query_from_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="748">Parse @query_string and return a new #EBookQuery representing it.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="754">the new #EBookQuery.</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="query_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="750">the query</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="or" c:identifier="e_book_query_or">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="130">Creates a new #EBookQuery which is the logical OR of the queries in #qs.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="100"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="138">A new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="nqs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="132">the number of queries to OR</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="qs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="133">pointer to an array of #EBookQuery items</doc>
            <type name="BookQuery" c:type="EBookQuery**"/>
          </parameter>
          <parameter name="unref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="134">if %TRUE, the new query takes ownership of the existing queries</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="vcard_field_exists"
                c:identifier="e_book_query_vcard_field_exists">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="355">Creates a new #EBookQuery which tests if the field @field exists. @field
should be a vCard field name, such as #EVC_FN or #EVC_X_MSN.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="361">the new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="357">a field name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="vcard_field_test"
                c:identifier="e_book_query_vcard_field_test"
                version="2.22">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="309">Creates a new #EBookQuery which tests @field for @value using the test @test.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                         line="110"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="317">the new #EBookQuery</doc>
          <type name="BookQuery" c:type="EBookQuery*"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="311">a EVCard field name to test</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="test" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="312">the test to apply</doc>
            <type name="BookQueryTest" c:type="EBookQueryTest"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-book-query.c"
                 line="313">the value to test for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="BookQueryTest" c:type="EBookQueryTest">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.h"
           line="40">The kind of test a query created by e_book_query_field_test() shall perform.

See also: e_phone_number_compare_strings().</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="90"/>
      <member name="is" value="0" c:identifier="E_BOOK_QUERY_IS">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="42">look for exact match of the supplied test value</doc>
      </member>
      <member name="contains" value="1" c:identifier="E_BOOK_QUERY_CONTAINS">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="43">check if a field contains the test value</doc>
      </member>
      <member name="begins_with"
              value="2"
              c:identifier="E_BOOK_QUERY_BEGINS_WITH">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="44">check if a field starts with the test value</doc>
      </member>
      <member name="ends_with" value="3" c:identifier="E_BOOK_QUERY_ENDS_WITH">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="45">check if a field ends with the test value</doc>
      </member>
      <member name="equals_phone_number"
              value="4"
              c:identifier="E_BOOK_QUERY_EQUALS_PHONE_NUMBER">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="46">check if a field matches with a value tested
using e_phone_number_compare_strings(), the match must be of strenth %E_PHONE_NUMBER_MATCH_EXACT
for this query to return any matches.</doc>
      </member>
      <member name="equals_national_phone_number"
              value="5"
              c:identifier="E_BOOK_QUERY_EQUALS_NATIONAL_PHONE_NUMBER">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="49">check if a field matches with a value tested
using e_phone_number_compare_strings(), the match must be at least of strength %E_PHONE_NUMBER_MATCH_NATIONAL
for this query to return any matches.</doc>
      </member>
      <member name="equals_short_phone_number"
              value="6"
              c:identifier="E_BOOK_QUERY_EQUALS_SHORT_PHONE_NUMBER">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="52">check if a field matches with a value tested
using e_phone_number_compare_strings(), the match must be at least of strength %E_PHONE_NUMBER_MATCH_SHORT
for this query to return any matches.</doc>
      </member>
      <member name="regex_normal"
              value="7"
              c:identifier="E_BOOK_QUERY_REGEX_NORMAL">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="55">A regular expression query against contact data normalized with e_util_utf8_normalize(),
the normalized data is lower case with any accents removed.</doc>
      </member>
      <member name="regex_raw" value="8" c:identifier="E_BOOK_QUERY_REGEX_RAW">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="57">A regular expression query against raw contact data, this is usually slower than
a %E_BOOK_QUERY_REGEX_NORMAL as it implies that #EVCard(s) must be parsed in order to get the raw data
for comparison.</doc>
      </member>
      <member name="last" value="9" c:identifier="E_BOOK_QUERY_LAST">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.h"
             line="60">End marker for the #EBookQueryTest enumeration, not a valid query test.</doc>
      </member>
    </enumeration>
    <enumeration name="BookViewStatus"
                 deprecated="1"
                 deprecated-version="3.2"
                 c:type="EBookViewStatus">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
           line="161">Status messages used in notifications in the deprecated #EBookView class</doc>
      <doc-deprecated xml:space="preserve">Use #EBookClientView instead.</doc-deprecated>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="181"/>
      <member name="status_ok" value="0" c:identifier="E_BOOK_VIEW_STATUS_OK">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="163">Ok</doc>
      </member>
      <member name="status_time_limit_exceeded"
              value="1"
              c:identifier="E_BOOK_VIEW_STATUS_TIME_LIMIT_EXCEEDED">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="164">Time limit exceeded</doc>
      </member>
      <member name="status_size_limit_exceeded"
              value="2"
              c:identifier="E_BOOK_VIEW_STATUS_SIZE_LIMIT_EXCEEDED">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="165">Size limit exceeded</doc>
      </member>
      <member name="error_invalid_query"
              value="3"
              c:identifier="E_BOOK_VIEW_ERROR_INVALID_QUERY">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="166">Invalid search expression</doc>
      </member>
      <member name="error_query_refused"
              value="4"
              c:identifier="E_BOOK_VIEW_ERROR_QUERY_REFUSED">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="167">Search expression refused</doc>
      </member>
      <member name="error_other_error"
              value="5"
              c:identifier="E_BOOK_VIEW_ERROR_OTHER_ERROR">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
             line="168">Another error occurred</doc>
      </member>
    </enumeration>
    <function-macro name="CONTACT" c:identifier="E_CONTACT" introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONTACT_CLASS"
                    c:identifier="E_CONTACT_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="39"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONTACT_GET_CLASS"
                    c:identifier="E_CONTACT_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="48"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Contact"
           c:symbol-prefix="contact"
           c:type="EContact"
           parent="VCard"
           glib:type-name="EContact"
           glib:get-type="e_contact_get_type"
           glib:type-struct="ContactClass">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="352"/>
      <constructor name="new" c:identifier="e_contact_new">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1562">Creates a new, blank #EContact.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="355"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1567">A new #EContact.</doc>
          <type name="Contact" c:type="EContact*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_vcard"
                   c:identifier="e_contact_new_from_vcard">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1575">Creates a new #EContact based on a vcard.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="356"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1581">A new #EContact.</doc>
          <type name="Contact" c:type="EContact*"/>
        </return-value>
        <parameters>
          <parameter name="vcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1577">a string representing a vcard</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_vcard_with_uid"
                   c:identifier="e_contact_new_from_vcard_with_uid"
                   version="3.4">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1595">Creates a new #EContact based on a vcard and a predefined UID.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="357"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1602">A new #EContact.</doc>
          <type name="Contact" c:type="EContact*"/>
        </return-value>
        <parameters>
          <parameter name="vcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1597">a string representing a vcard</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="uid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1598">a contact UID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="field_id" c:identifier="e_contact_field_id">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1748">Gets the #EContactField corresponding to the @field_name.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="437"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1754">An #EContactField corresponding to @field_name, or 0 if it doesn't exist.</doc>
          <type name="ContactField" c:type="EContactField"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1750">a string representing a contact field</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="field_id_from_vcard"
                c:identifier="e_contact_field_id_from_vcard"
                version="2.26">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1769">Gets the #EContactField corresponding to the @vcard_field.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="438"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1775">An #EContactField corresponding to @vcard_field, or 0 if it doesn't exist.</doc>
          <type name="ContactField" c:type="EContactField"/>
        </return-value>
        <parameters>
          <parameter name="vcard_field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1771">a string representing a vCard field</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="field_is_string"
                c:identifier="e_contact_field_is_string"
                version="3.16">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1729">Returns whether the @field_id is of a string type,
thus it can be used with e_contact_get_const().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="436"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1736">Whether the @field_id is of a string type.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1731">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </function>
      <function name="field_name" c:identifier="e_contact_field_name">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1675">Gets the string representation of @field_id.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="433"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1681">The string representation of @field_id</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1677">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </function>
      <function name="field_type"
                c:identifier="e_contact_field_type"
                version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1642">Gets the #GType used for this contact field, this indicates
what kind of value can be passed to e_contact_set().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="432"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1649">The #GType used for @field_id, or %G_TYPE_INVALID if it doesn't exist.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1644">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </function>
      <function name="pretty_name" c:identifier="e_contact_pretty_name">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1691">Gets a human-readable, translated string representation
of @field_id.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="434"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1698">The human-readable representation of @field_id</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1693">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </function>
      <function name="vcard_attribute"
                c:identifier="e_contact_vcard_attribute">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1713">Gets the vcard attribute corresponding to @field_id, as a string.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="435"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1719">The vcard attribute corresponding to @field_id</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1715">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </function>
      <method name="duplicate" c:identifier="e_contact_duplicate">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1619">Creates a copy of @contact.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="360"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1625">A new #EContact identical to @contact.</doc>
          <type name="Contact" c:type="EContact*"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1621">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="e_contact_get">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1797">Gets the value of @contact's field specified by @field_id.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="361"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="1804">Depends on the field's type, owned by the caller. This may be %NULL if the field isn't set.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1799">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1800">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attributes" c:identifier="e_contact_get_attributes">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2058">Gets a list of the vcard attributes for @contact's @field_id.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="371"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2065">A #GList of pointers
to #EVCardAttribute, owned by the caller.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="VCardAttribute"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2060">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2061">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attributes_set"
              c:identifier="e_contact_get_attributes_set"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2077">Gets a list of the vcard attributes for @contact's @field_ids.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="373"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2085">A #GList of pointers
to #EVCardAttribute, owned by the caller.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="VCardAttribute"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2079">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
          <parameter name="field_ids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2080">an array of #EContactField</doc>
            <array length="1"
                   zero-terminated="0"
                   c:type="const EContactField*">
              <type name="ContactField" c:type="EContactField"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2081">number of elements in field_ids</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_const" c:identifier="e_contact_get_const">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="1996">Gets the value of @contact's field specified by @field_id, caching
the result so it can be freed later. Use e_contact_field_is_string()
to check whether the field can be used here.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="363"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2005">Depends on the field's type, owned by the
#EContact.</doc>
          <type name="gpointer" c:type="gconstpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1998">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="1999">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
        </parameters>
      </method>
      <method name="inline_local_photos"
              c:identifier="e_contact_inline_local_photos"
              version="3.4"
              throws="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2768">Tries to modify any #EContactPhoto fields which are
stored on the local file system as type %E_CONTACT_PHOTO_TYPE_URI
to be inlined and stored as %E_CONTACT_PHOTO_TYPE_INLINED instead.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="412"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2777">%TRUE if there were no errors, upon error %FALSE is returned
   and @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2770">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="e_contact_set">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2029">Sets the value of @contact's field specified by @field_id to @value.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="365"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2031">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2032">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2033">a value whose type depends on the @field_id</doc>
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes" c:identifier="e_contact_set_attributes">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2129">Sets the vcard attributes for @contact's @field_id.
Attributes are added to the contact in the same order as they are in @attributes.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="377"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2131">an #EContact</doc>
            <type name="Contact" c:type="EContact*"/>
          </instance-parameter>
          <parameter name="field_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2132">an #EContactField</doc>
            <type name="ContactField" c:type="EContactField"/>
          </parameter>
          <parameter name="attributes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2133">a #GList of pointers to #EVCardAttribute</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="VCardAttribute"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="Rev"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="address" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="address-home" writable="1" transfer-ownership="none">
        <type name="ContactAddress"/>
      </property>
      <property name="address-label-home"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="address-label-other"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="address-label-work"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="address-other" writable="1" transfer-ownership="none">
        <type name="ContactAddress"/>
      </property>
      <property name="address-work" writable="1" transfer-ownership="none">
        <type name="ContactAddress"/>
      </property>
      <property name="anniversary" writable="1" transfer-ownership="none">
        <type name="ContactDate"/>
      </property>
      <property name="assistant"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="assistant-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="birth-date" writable="1" transfer-ownership="none">
        <type name="ContactDate"/>
      </property>
      <property name="blog-url"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="book-uid"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="business-fax"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="business-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="business-phone-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="callback-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="caluri"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="car-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="categories"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="category-list" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="company-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="email" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="email-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="email-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="email-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="email-4"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="family-name"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="fburl"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="file-as"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="full-name"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="geo" writable="1" transfer-ownership="none">
        <type name="ContactGeo"/>
      </property>
      <property name="given-name"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="home-fax"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="home-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="home-phone-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="homepage-url"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icscalendar"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-aim" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-aim-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-aim-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-aim-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-aim-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-aim-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-aim-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-gadugadu" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-gadugadu-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-gadugadu-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-gadugadu-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-gadugadu-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-gadugadu-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-gadugadu-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-google-talk" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-google-talk-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-google-talk-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-google-talk-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-google-talk-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-google-talk-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-google-talk-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-groupwise" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-groupwise-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-groupwise-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-groupwise-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-groupwise-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-groupwise-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-groupwise-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-icq" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-icq-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-icq-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-icq-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-icq-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-icq-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-icq-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-jabber" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-jabber-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-jabber-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-jabber-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-jabber-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-jabber-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-jabber-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-matrix" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-matrix-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-matrix-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-matrix-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-matrix-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-matrix-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-matrix-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-msn" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-msn-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-msn-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-msn-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-msn-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-msn-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-msn-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-skype" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-skype-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-skype-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-skype-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-skype-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-skype-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-skype-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-twitter" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-yahoo" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="im-yahoo-home-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-yahoo-home-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-yahoo-home-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-yahoo-work-1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-yahoo-work-2"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="im-yahoo-work-3"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="isdn-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="list"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="list-show-addresses"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="logo" writable="1" transfer-ownership="none">
        <type name="ContactPhoto"/>
      </property>
      <property name="mailer"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="manager"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mobile-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="ContactName"/>
      </property>
      <property name="name-or-org"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="nickname"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="note"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="office"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="org"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="org-unit"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="other-fax"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="other-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="pager"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="pgpCert" writable="1" transfer-ownership="none">
        <type name="ContactCert"/>
      </property>
      <property name="phone" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="photo" writable="1" transfer-ownership="none">
        <type name="ContactPhoto"/>
      </property>
      <property name="primary-phone"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="radio"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="role"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="sip" writable="1" transfer-ownership="none">
        <type name="ContactAttrList"/>
      </property>
      <property name="spouse"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="telex"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="tty"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="video-url"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="wants-html"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="x509Cert" writable="1" transfer-ownership="none">
        <type name="ContactCert"/>
      </property>
      <field name="parent">
        <type name="VCard" c:type="EVCard"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ContactPrivate" c:type="EContactPrivate*"/>
      </field>
    </class>
    <record name="ContactAddress"
            c:type="EContactAddress"
            glib:type-name="EContactAddress"
            glib:get-type="e_contact_address_get_type"
            c:symbol-prefix="contact_address">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="324"/>
      <field name="address_format" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="po" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="ext" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="street" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="locality" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="region" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="code" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="country" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <constructor name="new"
                   c:identifier="e_contact_address_new"
                   version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2852">Creates a new #EContactAddress struct.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="425"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2857">A new #EContactAddress struct.</doc>
          <type name="ContactAddress" c:type="EContactAddress*"/>
        </return-value>
      </constructor>
      <method name="free" c:identifier="e_contact_address_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2867">Frees the @address struct and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="426"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2869">an #EContactAddress</doc>
            <type name="ContactAddress" c:type="EContactAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <glib:boxed glib:name="ContactAttrList"
                c:symbol-prefix="contact_attr_list"
                glib:type-name="EContactAttrList"
                glib:get-type="e_contact_attr_list_get_type">
      <function name="copy"
                c:identifier="e_contact_attr_list_copy"
                version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2972">Copies a list of allocated strings, specifically
for the #EContactAttrList boxed type used for multi valued
contact fields.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="429"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2980">A copy of @list</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2974">A #GList of strings</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="free"
                c:identifier="e_contact_attr_list_free"
                version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2990">Frees a list of allocated strings, specifically
for the #EContactAttrList boxed type used for multi valued
contact fields.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="430"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2992">A #GList of strings</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </function>
    </glib:boxed>
    <record name="ContactCert"
            c:type="EContactCert"
            glib:type-name="EContactCert"
            glib:get-type="e_contact_cert_get_type"
            c:symbol-prefix="contact_cert">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="335"/>
      <field name="length" writable="1">
        <type name="gsize" c:type="gsize"/>
      </field>
      <field name="data" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <constructor name="new" c:identifier="e_contact_cert_new" version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2918">Creates an #EContactCert struct with all values set to 0.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="419"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2923">A new #EContactCert struct.</doc>
          <type name="ContactCert" c:type="EContactCert*"/>
        </return-value>
      </constructor>
      <method name="free" c:identifier="e_contact_cert_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2935">Frees the @cert struct and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="421"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2937">an #EContactCert</doc>
            <type name="ContactCert" c:type="EContactCert*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="ContactClass"
            c:type="EContactClass"
            glib:is-gtype-struct-for="Contact">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="352"/>
      <field name="parent_class">
        <type name="VCardClass" c:type="EVCardClass"/>
      </field>
      <field name="_ebook_reserved0" introspectable="0">
        <callback name="_ebook_reserved0">
          <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                           line="347"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved1" introspectable="0">
        <callback name="_ebook_reserved1">
          <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                           line="348"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved2" introspectable="0">
        <callback name="_ebook_reserved2">
          <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                           line="349"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved3" introspectable="0">
        <callback name="_ebook_reserved3">
          <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                           line="350"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved4" introspectable="0">
        <callback name="_ebook_reserved4">
          <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                           line="351"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ContactDate"
            c:type="EContactDate"
            glib:type-name="EContactDate"
            glib:get-type="e_contact_date_get_type"
            c:symbol-prefix="contact_date">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="330"/>
      <field name="year" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="month" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="day" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <constructor name="new" c:identifier="e_contact_date_new">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2412">Creates a new #EContactDate struct.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="383"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2417">A new #EContactDate struct.</doc>
          <type name="ContactDate" c:type="EContactDate*"/>
        </return-value>
      </constructor>
      <method name="equal" c:identifier="e_contact_date_equal">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2358">Checks if @dt1 and @dt2 are the same date.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="386"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2365">%TRUE if @dt1 and @dt2 are equal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="dt1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2360">an #EContactDate</doc>
            <type name="ContactDate" c:type="EContactDate*"/>
          </instance-parameter>
          <parameter name="dt2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2361">an #EContactDate</doc>
            <type name="ContactDate" c:type="EContactDate*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_contact_date_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2398">Frees the @date struct and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="388"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2400">an #EContactDate</doc>
            <type name="ContactDate" c:type="EContactDate*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="e_contact_date_to_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2336">Generates a date string in the format YYYY-MM-DD based
on the values of @dt.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="385"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2343">A date string, owned by the caller.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2338">an #EContactDate</doc>
            <type name="ContactDate" c:type="EContactDate*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="from_string" c:identifier="e_contact_date_from_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2299">Creates a new #EContactDate based on @str.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="384"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2305">A new #EContactDate struct.</doc>
          <type name="ContactDate" c:type="EContactDate*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2301">a date string in the format YYYY-MM-DD or YYYYMMDD</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="ContactField" c:type="EContactField">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="274"/>
      <member name="uid" value="1" c:identifier="E_CONTACT_UID">
      </member>
      <member name="file_as" value="2" c:identifier="E_CONTACT_FILE_AS">
      </member>
      <member name="book_uid" value="3" c:identifier="E_CONTACT_BOOK_UID">
      </member>
      <member name="full_name" value="4" c:identifier="E_CONTACT_FULL_NAME">
      </member>
      <member name="given_name" value="5" c:identifier="E_CONTACT_GIVEN_NAME">
      </member>
      <member name="family_name"
              value="6"
              c:identifier="E_CONTACT_FAMILY_NAME">
      </member>
      <member name="nickname" value="7" c:identifier="E_CONTACT_NICKNAME">
      </member>
      <member name="email_1" value="8" c:identifier="E_CONTACT_EMAIL_1">
      </member>
      <member name="email_2" value="9" c:identifier="E_CONTACT_EMAIL_2">
      </member>
      <member name="email_3" value="10" c:identifier="E_CONTACT_EMAIL_3">
      </member>
      <member name="email_4" value="11" c:identifier="E_CONTACT_EMAIL_4">
      </member>
      <member name="mailer" value="12" c:identifier="E_CONTACT_MAILER">
      </member>
      <member name="address_label_home"
              value="13"
              c:identifier="E_CONTACT_ADDRESS_LABEL_HOME">
      </member>
      <member name="address_label_work"
              value="14"
              c:identifier="E_CONTACT_ADDRESS_LABEL_WORK">
      </member>
      <member name="address_label_other"
              value="15"
              c:identifier="E_CONTACT_ADDRESS_LABEL_OTHER">
      </member>
      <member name="phone_assistant"
              value="16"
              c:identifier="E_CONTACT_PHONE_ASSISTANT">
      </member>
      <member name="phone_business"
              value="17"
              c:identifier="E_CONTACT_PHONE_BUSINESS">
      </member>
      <member name="phone_business_2"
              value="18"
              c:identifier="E_CONTACT_PHONE_BUSINESS_2">
      </member>
      <member name="phone_business_fax"
              value="19"
              c:identifier="E_CONTACT_PHONE_BUSINESS_FAX">
      </member>
      <member name="phone_callback"
              value="20"
              c:identifier="E_CONTACT_PHONE_CALLBACK">
      </member>
      <member name="phone_car" value="21" c:identifier="E_CONTACT_PHONE_CAR">
      </member>
      <member name="phone_company"
              value="22"
              c:identifier="E_CONTACT_PHONE_COMPANY">
      </member>
      <member name="phone_home" value="23" c:identifier="E_CONTACT_PHONE_HOME">
      </member>
      <member name="phone_home_2"
              value="24"
              c:identifier="E_CONTACT_PHONE_HOME_2">
      </member>
      <member name="phone_home_fax"
              value="25"
              c:identifier="E_CONTACT_PHONE_HOME_FAX">
      </member>
      <member name="phone_isdn" value="26" c:identifier="E_CONTACT_PHONE_ISDN">
      </member>
      <member name="phone_mobile"
              value="27"
              c:identifier="E_CONTACT_PHONE_MOBILE">
      </member>
      <member name="phone_other"
              value="28"
              c:identifier="E_CONTACT_PHONE_OTHER">
      </member>
      <member name="phone_other_fax"
              value="29"
              c:identifier="E_CONTACT_PHONE_OTHER_FAX">
      </member>
      <member name="phone_pager"
              value="30"
              c:identifier="E_CONTACT_PHONE_PAGER">
      </member>
      <member name="phone_primary"
              value="31"
              c:identifier="E_CONTACT_PHONE_PRIMARY">
      </member>
      <member name="phone_radio"
              value="32"
              c:identifier="E_CONTACT_PHONE_RADIO">
      </member>
      <member name="phone_telex"
              value="33"
              c:identifier="E_CONTACT_PHONE_TELEX">
      </member>
      <member name="phone_ttytdd"
              value="34"
              c:identifier="E_CONTACT_PHONE_TTYTDD">
      </member>
      <member name="org" value="35" c:identifier="E_CONTACT_ORG">
      </member>
      <member name="org_unit" value="36" c:identifier="E_CONTACT_ORG_UNIT">
      </member>
      <member name="office" value="37" c:identifier="E_CONTACT_OFFICE">
      </member>
      <member name="title" value="38" c:identifier="E_CONTACT_TITLE">
      </member>
      <member name="role" value="39" c:identifier="E_CONTACT_ROLE">
      </member>
      <member name="manager" value="40" c:identifier="E_CONTACT_MANAGER">
      </member>
      <member name="assistant" value="41" c:identifier="E_CONTACT_ASSISTANT">
      </member>
      <member name="homepage_url"
              value="42"
              c:identifier="E_CONTACT_HOMEPAGE_URL">
      </member>
      <member name="blog_url" value="43" c:identifier="E_CONTACT_BLOG_URL">
      </member>
      <member name="categories" value="44" c:identifier="E_CONTACT_CATEGORIES">
      </member>
      <member name="calendar_uri"
              value="45"
              c:identifier="E_CONTACT_CALENDAR_URI">
      </member>
      <member name="freebusy_url"
              value="46"
              c:identifier="E_CONTACT_FREEBUSY_URL">
      </member>
      <member name="ics_calendar"
              value="47"
              c:identifier="E_CONTACT_ICS_CALENDAR">
      </member>
      <member name="video_url" value="48" c:identifier="E_CONTACT_VIDEO_URL">
      </member>
      <member name="spouse" value="49" c:identifier="E_CONTACT_SPOUSE">
      </member>
      <member name="note" value="50" c:identifier="E_CONTACT_NOTE">
      </member>
      <member name="im_aim_home_1"
              value="51"
              c:identifier="E_CONTACT_IM_AIM_HOME_1">
      </member>
      <member name="im_aim_home_2"
              value="52"
              c:identifier="E_CONTACT_IM_AIM_HOME_2">
      </member>
      <member name="im_aim_home_3"
              value="53"
              c:identifier="E_CONTACT_IM_AIM_HOME_3">
      </member>
      <member name="im_aim_work_1"
              value="54"
              c:identifier="E_CONTACT_IM_AIM_WORK_1">
      </member>
      <member name="im_aim_work_2"
              value="55"
              c:identifier="E_CONTACT_IM_AIM_WORK_2">
      </member>
      <member name="im_aim_work_3"
              value="56"
              c:identifier="E_CONTACT_IM_AIM_WORK_3">
      </member>
      <member name="im_groupwise_home_1"
              value="57"
              c:identifier="E_CONTACT_IM_GROUPWISE_HOME_1">
      </member>
      <member name="im_groupwise_home_2"
              value="58"
              c:identifier="E_CONTACT_IM_GROUPWISE_HOME_2">
      </member>
      <member name="im_groupwise_home_3"
              value="59"
              c:identifier="E_CONTACT_IM_GROUPWISE_HOME_3">
      </member>
      <member name="im_groupwise_work_1"
              value="60"
              c:identifier="E_CONTACT_IM_GROUPWISE_WORK_1">
      </member>
      <member name="im_groupwise_work_2"
              value="61"
              c:identifier="E_CONTACT_IM_GROUPWISE_WORK_2">
      </member>
      <member name="im_groupwise_work_3"
              value="62"
              c:identifier="E_CONTACT_IM_GROUPWISE_WORK_3">
      </member>
      <member name="im_jabber_home_1"
              value="63"
              c:identifier="E_CONTACT_IM_JABBER_HOME_1">
      </member>
      <member name="im_jabber_home_2"
              value="64"
              c:identifier="E_CONTACT_IM_JABBER_HOME_2">
      </member>
      <member name="im_jabber_home_3"
              value="65"
              c:identifier="E_CONTACT_IM_JABBER_HOME_3">
      </member>
      <member name="im_jabber_work_1"
              value="66"
              c:identifier="E_CONTACT_IM_JABBER_WORK_1">
      </member>
      <member name="im_jabber_work_2"
              value="67"
              c:identifier="E_CONTACT_IM_JABBER_WORK_2">
      </member>
      <member name="im_jabber_work_3"
              value="68"
              c:identifier="E_CONTACT_IM_JABBER_WORK_3">
      </member>
      <member name="im_yahoo_home_1"
              value="69"
              c:identifier="E_CONTACT_IM_YAHOO_HOME_1">
      </member>
      <member name="im_yahoo_home_2"
              value="70"
              c:identifier="E_CONTACT_IM_YAHOO_HOME_2">
      </member>
      <member name="im_yahoo_home_3"
              value="71"
              c:identifier="E_CONTACT_IM_YAHOO_HOME_3">
      </member>
      <member name="im_yahoo_work_1"
              value="72"
              c:identifier="E_CONTACT_IM_YAHOO_WORK_1">
      </member>
      <member name="im_yahoo_work_2"
              value="73"
              c:identifier="E_CONTACT_IM_YAHOO_WORK_2">
      </member>
      <member name="im_yahoo_work_3"
              value="74"
              c:identifier="E_CONTACT_IM_YAHOO_WORK_3">
      </member>
      <member name="im_msn_home_1"
              value="75"
              c:identifier="E_CONTACT_IM_MSN_HOME_1">
      </member>
      <member name="im_msn_home_2"
              value="76"
              c:identifier="E_CONTACT_IM_MSN_HOME_2">
      </member>
      <member name="im_msn_home_3"
              value="77"
              c:identifier="E_CONTACT_IM_MSN_HOME_3">
      </member>
      <member name="im_msn_work_1"
              value="78"
              c:identifier="E_CONTACT_IM_MSN_WORK_1">
      </member>
      <member name="im_msn_work_2"
              value="79"
              c:identifier="E_CONTACT_IM_MSN_WORK_2">
      </member>
      <member name="im_msn_work_3"
              value="80"
              c:identifier="E_CONTACT_IM_MSN_WORK_3">
      </member>
      <member name="im_icq_home_1"
              value="81"
              c:identifier="E_CONTACT_IM_ICQ_HOME_1">
      </member>
      <member name="im_icq_home_2"
              value="82"
              c:identifier="E_CONTACT_IM_ICQ_HOME_2">
      </member>
      <member name="im_icq_home_3"
              value="83"
              c:identifier="E_CONTACT_IM_ICQ_HOME_3">
      </member>
      <member name="im_icq_work_1"
              value="84"
              c:identifier="E_CONTACT_IM_ICQ_WORK_1">
      </member>
      <member name="im_icq_work_2"
              value="85"
              c:identifier="E_CONTACT_IM_ICQ_WORK_2">
      </member>
      <member name="im_icq_work_3"
              value="86"
              c:identifier="E_CONTACT_IM_ICQ_WORK_3">
      </member>
      <member name="rev" value="87" c:identifier="E_CONTACT_REV">
      </member>
      <member name="name_or_org"
              value="88"
              c:identifier="E_CONTACT_NAME_OR_ORG">
      </member>
      <member name="address" value="89" c:identifier="E_CONTACT_ADDRESS">
      </member>
      <member name="address_home"
              value="90"
              c:identifier="E_CONTACT_ADDRESS_HOME">
      </member>
      <member name="address_work"
              value="91"
              c:identifier="E_CONTACT_ADDRESS_WORK">
      </member>
      <member name="address_other"
              value="92"
              c:identifier="E_CONTACT_ADDRESS_OTHER">
      </member>
      <member name="category_list"
              value="93"
              c:identifier="E_CONTACT_CATEGORY_LIST">
      </member>
      <member name="photo" value="94" c:identifier="E_CONTACT_PHOTO">
      </member>
      <member name="logo" value="95" c:identifier="E_CONTACT_LOGO">
      </member>
      <member name="name" value="96" c:identifier="E_CONTACT_NAME">
      </member>
      <member name="email" value="97" c:identifier="E_CONTACT_EMAIL">
      </member>
      <member name="im_aim" value="98" c:identifier="E_CONTACT_IM_AIM">
      </member>
      <member name="im_groupwise"
              value="99"
              c:identifier="E_CONTACT_IM_GROUPWISE">
      </member>
      <member name="im_jabber" value="100" c:identifier="E_CONTACT_IM_JABBER">
      </member>
      <member name="im_yahoo" value="101" c:identifier="E_CONTACT_IM_YAHOO">
      </member>
      <member name="im_msn" value="102" c:identifier="E_CONTACT_IM_MSN">
      </member>
      <member name="im_icq" value="103" c:identifier="E_CONTACT_IM_ICQ">
      </member>
      <member name="wants_html"
              value="104"
              c:identifier="E_CONTACT_WANTS_HTML">
      </member>
      <member name="is_list" value="105" c:identifier="E_CONTACT_IS_LIST">
      </member>
      <member name="list_show_addresses"
              value="106"
              c:identifier="E_CONTACT_LIST_SHOW_ADDRESSES">
      </member>
      <member name="birth_date"
              value="107"
              c:identifier="E_CONTACT_BIRTH_DATE">
      </member>
      <member name="anniversary"
              value="108"
              c:identifier="E_CONTACT_ANNIVERSARY">
      </member>
      <member name="x509_cert" value="109" c:identifier="E_CONTACT_X509_CERT">
      </member>
      <member name="pgp_cert" value="110" c:identifier="E_CONTACT_PGP_CERT">
      </member>
      <member name="im_gadugadu_home_1"
              value="111"
              c:identifier="E_CONTACT_IM_GADUGADU_HOME_1">
      </member>
      <member name="im_gadugadu_home_2"
              value="112"
              c:identifier="E_CONTACT_IM_GADUGADU_HOME_2">
      </member>
      <member name="im_gadugadu_home_3"
              value="113"
              c:identifier="E_CONTACT_IM_GADUGADU_HOME_3">
      </member>
      <member name="im_gadugadu_work_1"
              value="114"
              c:identifier="E_CONTACT_IM_GADUGADU_WORK_1">
      </member>
      <member name="im_gadugadu_work_2"
              value="115"
              c:identifier="E_CONTACT_IM_GADUGADU_WORK_2">
      </member>
      <member name="im_gadugadu_work_3"
              value="116"
              c:identifier="E_CONTACT_IM_GADUGADU_WORK_3">
      </member>
      <member name="im_gadugadu"
              value="117"
              c:identifier="E_CONTACT_IM_GADUGADU">
      </member>
      <member name="geo" value="118" c:identifier="E_CONTACT_GEO">
      </member>
      <member name="tel" value="119" c:identifier="E_CONTACT_TEL">
      </member>
      <member name="im_skype_home_1"
              value="120"
              c:identifier="E_CONTACT_IM_SKYPE_HOME_1">
      </member>
      <member name="im_skype_home_2"
              value="121"
              c:identifier="E_CONTACT_IM_SKYPE_HOME_2">
      </member>
      <member name="im_skype_home_3"
              value="122"
              c:identifier="E_CONTACT_IM_SKYPE_HOME_3">
      </member>
      <member name="im_skype_work_1"
              value="123"
              c:identifier="E_CONTACT_IM_SKYPE_WORK_1">
      </member>
      <member name="im_skype_work_2"
              value="124"
              c:identifier="E_CONTACT_IM_SKYPE_WORK_2">
      </member>
      <member name="im_skype_work_3"
              value="125"
              c:identifier="E_CONTACT_IM_SKYPE_WORK_3">
      </member>
      <member name="im_skype" value="126" c:identifier="E_CONTACT_IM_SKYPE">
      </member>
      <member name="sip" value="127" c:identifier="E_CONTACT_SIP">
      </member>
      <member name="im_google_talk_home_1"
              value="128"
              c:identifier="E_CONTACT_IM_GOOGLE_TALK_HOME_1">
      </member>
      <member name="im_google_talk_home_2"
              value="129"
              c:identifier="E_CONTACT_IM_GOOGLE_TALK_HOME_2">
      </member>
      <member name="im_google_talk_home_3"
              value="130"
              c:identifier="E_CONTACT_IM_GOOGLE_TALK_HOME_3">
      </member>
      <member name="im_google_talk_work_1"
              value="131"
              c:identifier="E_CONTACT_IM_GOOGLE_TALK_WORK_1">
      </member>
      <member name="im_google_talk_work_2"
              value="132"
              c:identifier="E_CONTACT_IM_GOOGLE_TALK_WORK_2">
      </member>
      <member name="im_google_talk_work_3"
              value="133"
              c:identifier="E_CONTACT_IM_GOOGLE_TALK_WORK_3">
      </member>
      <member name="im_google_talk"
              value="134"
              c:identifier="E_CONTACT_IM_GOOGLE_TALK">
      </member>
      <member name="im_twitter"
              value="135"
              c:identifier="E_CONTACT_IM_TWITTER">
      </member>
      <member name="im_matrix_home_1"
              value="136"
              c:identifier="E_CONTACT_IM_MATRIX_HOME_1">
      </member>
      <member name="im_matrix_home_2"
              value="137"
              c:identifier="E_CONTACT_IM_MATRIX_HOME_2">
      </member>
      <member name="im_matrix_home_3"
              value="138"
              c:identifier="E_CONTACT_IM_MATRIX_HOME_3">
      </member>
      <member name="im_matrix_work_1"
              value="139"
              c:identifier="E_CONTACT_IM_MATRIX_WORK_1">
      </member>
      <member name="im_matrix_work_2"
              value="140"
              c:identifier="E_CONTACT_IM_MATRIX_WORK_2">
      </member>
      <member name="im_matrix_work_3"
              value="141"
              c:identifier="E_CONTACT_IM_MATRIX_WORK_3">
      </member>
      <member name="im_matrix" value="142" c:identifier="E_CONTACT_IM_MATRIX">
      </member>
      <member name="field_last"
              value="143"
              c:identifier="E_CONTACT_FIELD_LAST">
      </member>
      <member name="field_first"
              value="1"
              c:identifier="E_CONTACT_FIELD_FIRST">
      </member>
      <member name="last_simple_string"
              value="88"
              c:identifier="E_CONTACT_LAST_SIMPLE_STRING">
      </member>
      <member name="first_phone_id"
              value="16"
              c:identifier="E_CONTACT_FIRST_PHONE_ID">
      </member>
      <member name="last_phone_id"
              value="34"
              c:identifier="E_CONTACT_LAST_PHONE_ID">
      </member>
      <member name="first_email_id"
              value="8"
              c:identifier="E_CONTACT_FIRST_EMAIL_ID">
      </member>
      <member name="last_email_id"
              value="11"
              c:identifier="E_CONTACT_LAST_EMAIL_ID">
      </member>
      <member name="first_address_id"
              value="90"
              c:identifier="E_CONTACT_FIRST_ADDRESS_ID">
      </member>
      <member name="last_address_id"
              value="92"
              c:identifier="E_CONTACT_LAST_ADDRESS_ID">
      </member>
      <member name="first_label_id"
              value="13"
              c:identifier="E_CONTACT_FIRST_LABEL_ID">
      </member>
      <member name="last_label_id"
              value="15"
              c:identifier="E_CONTACT_LAST_LABEL_ID">
      </member>
    </enumeration>
    <record name="ContactGeo"
            c:type="EContactGeo"
            version="1.12"
            glib:type-name="EContactGeo"
            glib:get-type="e_contact_geo_get_type"
            c:symbol-prefix="contact_geo">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="294"/>
      <field name="latitude" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.h"
             line="286">latitude</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="longitude" writable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.h"
             line="287">longitude</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <constructor name="new" c:identifier="e_contact_geo_new" version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2799">Creates an #EContactGeo struct with all coordinates set to 0.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="415"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2804">A new #EContactGeo struct.</doc>
          <type name="ContactGeo" c:type="EContactGeo*"/>
        </return-value>
      </constructor>
      <method name="free" c:identifier="e_contact_geo_free" version="1.12">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2818">Frees the @geo struct and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="417"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="geo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2820">an #EContactGeo</doc>
            <type name="ContactGeo" c:type="EContactGeo*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="ContactName"
            c:type="EContactName"
            glib:type-name="EContactName"
            glib:get-type="e_contact_name_get_type"
            c:symbol-prefix="contact_name">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="282"/>
      <field name="family" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="given" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="additional" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="prefixes" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="suffixes" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <constructor name="new" c:identifier="e_contact_name_new">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2159">Creates a new #EContactName struct.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="391"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2164">A new #EContactName struct.</doc>
          <type name="ContactName" c:type="EContactName*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="e_contact_name_copy">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2231">Creates a copy of @n.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="394"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2237">A new #EContactName identical to @n.</doc>
          <type name="ContactName" c:type="EContactName*"/>
        </return-value>
        <parameters>
          <instance-parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2233">an #EContactName</doc>
            <type name="ContactName" c:type="EContactName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_contact_name_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2257">Frees @name and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="395"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2259">an #EContactName</doc>
            <type name="ContactName" c:type="EContactName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="e_contact_name_to_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2172">Generates a string representation of @name.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="392"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2178">The string representation of @name.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2174">an #EContactName</doc>
            <type name="ContactName" c:type="const EContactName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="from_string" c:identifier="e_contact_name_from_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2201">Creates a new #EContactName based on the parsed @name_str.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="393"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2207">A new #EContactName struct.</doc>
          <type name="ContactName" c:type="EContactName*"/>
        </return-value>
        <parameters>
          <parameter name="name_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2203">a string representing a contact's full name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="ContactPhoto"
            c:type="EContactPhoto"
            glib:type-name="EContactPhoto"
            glib:get-type="e_contact_photo_get_type"
            c:symbol-prefix="contact_photo">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="311"/>
      <field name="type" writable="1">
        <type name="ContactPhotoType" c:type="EContactPhotoType"/>
      </field>
      <union name="data" c:type="data">
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="310"/>
        <record name="inlined" c:type="inlined">
          <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                           line="308"/>
          <field name="mime_type" writable="1">
            <type name="utf8" c:type="gchar*"/>
          </field>
          <field name="length" writable="1">
            <type name="gsize" c:type="gsize"/>
          </field>
          <field name="data" writable="1">
            <type name="guint8" c:type="guchar*"/>
          </field>
        </record>
        <field name="uri" writable="1">
          <type name="utf8" c:type="gchar*"/>
        </field>
      </union>
      <constructor name="new" c:identifier="e_contact_photo_new" version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2425">Creates a new #EContactPhoto struct.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="398"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2430">A new #EContactPhoto struct.</doc>
          <type name="ContactPhoto" c:type="EContactPhoto*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="e_contact_photo_copy" version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2468">Creates a copy of @photo.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="400"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2474">A new #EContactPhoto struct identical to @photo.</doc>
          <type name="ContactPhoto" c:type="EContactPhoto*"/>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2470">an #EContactPhoto</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_contact_photo_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2440">Frees the @photo struct and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="399"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2442">an #EContactPhoto struct</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inlined"
              c:identifier="e_contact_photo_get_inlined"
              version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2511">Gets the @photo's data.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="401"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2518">the inlined image in the
#EContactPhoto, or %NULL if it has not been set.</doc>
          <array length="0" zero-terminated="0" c:type="const guchar*">
            <type name="guint8" c:type="guchar"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2513">an #EContactPhoto</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
          <parameter name="len"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2514">the length of the inlined data</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mime_type"
              c:identifier="e_contact_photo_get_mime_type"
              version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2557">Gets the @photo's mime type.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="406"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2563">the MIME type of the image, or %NULL if it has not been set.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2559">an #EContactPhoto</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="e_contact_photo_get_uri"
              version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2596">Gets the @photo's URI.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="409"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2602">the URI of the image, or %NULL if it has not been set</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2598">an #EContactPhoto</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_inlined"
              c:identifier="e_contact_photo_set_inlined"
              version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2534">Sets the @photo's inlined data.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="403"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2536">an #EContactPhoto</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2537">the inlined image data</doc>
            <array length="1" zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2538">the length of @data</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mime_type"
              c:identifier="e_contact_photo_set_mime_type"
              version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2576">Sets the @photo's mime type.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="407"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2578">an #EContactPhoto</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
          <parameter name="mime_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2579">the mime type</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="e_contact_photo_set_uri"
              version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2615">Sets the @photo's URI.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                         line="410"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="photo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2617">an #EContactPhoto</doc>
            <type name="ContactPhoto" c:type="EContactPhoto*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-contact.c"
                 line="2618">the @photo's URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="ContactPhotoType" c:type="EContactPhotoType">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="299"/>
      <member name="inlined"
              value="0"
              c:identifier="E_CONTACT_PHOTO_TYPE_INLINED">
      </member>
      <member name="uri" value="1" c:identifier="E_CONTACT_PHOTO_TYPE_URI">
      </member>
    </enumeration>
    <record name="ContactPrivate"
            c:type="EContactPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="64"/>
    </record>
    <constant name="EVC_ADR" value="ADR" c:type="EVC_ADR">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="32"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_BDAY" value="BDAY" c:type="EVC_BDAY">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="33"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_CALURI" value="CALURI" c:type="EVC_CALURI">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_CATEGORIES" value="CATEGORIES" c:type="EVC_CATEGORIES">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_CL_UID"
              value="X-EVOLUTION-CONTACT-LIST-UID"
              c:type="EVC_CL_UID"
              version="3.2">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="167"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_CONTACT_LIST"
              value="X-EVOLUTION-CONTACT-LIST-INFO"
              c:type="EVC_CONTACT_LIST"
              version="3.2">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="153"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_EMAIL" value="EMAIL" c:type="EVC_EMAIL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_ENCODING" value="ENCODING" c:type="EVC_ENCODING">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_FBURL" value="FBURL" c:type="EVC_FBURL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_FN" value="FN" c:type="EVC_FN">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_GEO" value="GEO" c:type="EVC_GEO" version="1.12">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_ICSCALENDAR"
              value="ICSCALENDAR"
              c:type="EVC_ICSCALENDAR">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_KEY" value="KEY" c:type="EVC_KEY">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_LABEL" value="LABEL" c:type="EVC_LABEL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="51"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_LOGO" value="LOGO" c:type="EVC_LOGO">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_MAILER" value="MAILER" c:type="EVC_MAILER">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="53"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_N" value="N" c:type="EVC_N">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_NICKNAME" value="NICKNAME" c:type="EVC_NICKNAME">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_NOTE" value="NOTE" c:type="EVC_NOTE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_ORG" value="ORG" c:type="EVC_ORG">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_PARENT_CL"
              value="X-EVOLUTION-PARENT-UID"
              c:type="EVC_PARENT_CL"
              version="3.2">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="160"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_PHOTO" value="PHOTO" c:type="EVC_PHOTO">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="58"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_PRODID" value="PRODID" c:type="EVC_PRODID">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_QUOTEDPRINTABLE"
              value="QUOTED-PRINTABLE"
              c:type="EVC_QUOTEDPRINTABLE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_REV" value="REV" c:type="EVC_REV">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="61"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_ROLE" value="ROLE" c:type="EVC_ROLE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_TEL" value="TEL" c:type="EVC_TEL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="63"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_TITLE" value="TITLE" c:type="EVC_TITLE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_TYPE" value="TYPE" c:type="EVC_TYPE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_UID" value="UID" c:type="EVC_UID">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="66"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_URL" value="URL" c:type="EVC_URL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_VALUE" value="VALUE" c:type="EVC_VALUE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="68"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_VERSION" value="VERSION" c:type="EVC_VERSION">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_AIM" value="X-AIM" c:type="EVC_X_AIM">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="71"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_ANNIVERSARY"
              value="X-EVOLUTION-ANNIVERSARY"
              c:type="EVC_X_ANNIVERSARY">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="72"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_ASSISTANT"
              value="X-EVOLUTION-ASSISTANT"
              c:type="EVC_X_ASSISTANT">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="73"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_BIRTHDAY"
              value="X-EVOLUTION-BIRTHDAY"
              c:type="EVC_X_BIRTHDAY">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="74"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_BLOG_URL"
              value="X-EVOLUTION-BLOG-URL"
              c:type="EVC_X_BLOG_URL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="75"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_BOOK_UID"
              value="X-EVOLUTION-BOOK-UID"
              c:type="EVC_X_BOOK_UID"
              version="3.6">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="144"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_CALLBACK"
              value="X-EVOLUTION-CALLBACK"
              c:type="EVC_X_CALLBACK">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_COMPANY"
              value="X-EVOLUTION-COMPANY"
              c:type="EVC_X_COMPANY">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="77"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_DEST_CONTACT_UID"
              value="X-EVOLUTION-DEST-CONTACT-UID"
              c:type="EVC_X_DEST_CONTACT_UID">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="78"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_DEST_EMAIL"
              value="X-EVOLUTION-DEST-EMAIL"
              c:type="EVC_X_DEST_EMAIL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="172"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_DEST_EMAIL_NUM"
              value="X-EVOLUTION-DEST-EMAIL-NUM"
              c:type="EVC_X_DEST_EMAIL_NUM">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="79"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_DEST_HTML_MAIL"
              value="X-EVOLUTION-DEST-HTML-MAIL"
              c:type="EVC_X_DEST_HTML_MAIL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="80"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_DEST_NAME"
              value="X-EVOLUTION-DEST-NAME"
              c:type="EVC_X_DEST_NAME">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="173"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_DEST_SOURCE_UID"
              value="X-EVOLUTION-DEST-SOURCE-UID"
              c:type="EVC_X_DEST_SOURCE_UID">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="81"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_E164" value="X-EVOLUTION-E164" c:type="EVC_X_E164">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_FILE_AS"
              value="X-EVOLUTION-FILE-AS"
              c:type="EVC_X_FILE_AS">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="83"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_GADUGADU" value="X-GADUGADU" c:type="EVC_X_GADUGADU">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="84"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_GOOGLE_TALK"
              value="X-GOOGLE-TALK"
              c:type="EVC_X_GOOGLE_TALK"
              version="3.2">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="114"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_GROUPWISE"
              value="X-GROUPWISE"
              c:type="EVC_X_GROUPWISE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="85"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_ICQ" value="X-ICQ" c:type="EVC_X_ICQ">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="86"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_JABBER" value="X-JABBER" c:type="EVC_X_JABBER">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="87"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_LIST" value="X-EVOLUTION-LIST" c:type="EVC_X_LIST">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="89"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_LIST_NAME"
              value="X-EVOLUTION-LIST-NAME"
              c:type="EVC_X_LIST_NAME"
              version="3.2">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="96"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_LIST_SHOW_ADDRESSES"
              value="X-EVOLUTION-LIST-SHOW-ADDRESSES"
              c:type="EVC_X_LIST_SHOW_ADDRESSES">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="88"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_MANAGER"
              value="X-EVOLUTION-MANAGER"
              c:type="EVC_X_MANAGER">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="98"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_MATRIX" value="X-MATRIX" c:type="EVC_X_MATRIX">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="169"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_MSN" value="X-MSN" c:type="EVC_X_MSN">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="99"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_RADIO"
              value="X-EVOLUTION-RADIO"
              c:type="EVC_X_RADIO">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_SIP" value="X-SIP" c:type="EVC_X_SIP" version="2.26">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="130"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_SKYPE"
              value="X-SKYPE"
              c:type="EVC_X_SKYPE"
              version="2.26">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="107"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_SPOUSE"
              value="X-EVOLUTION-SPOUSE"
              c:type="EVC_X_SPOUSE">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="132"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_TELEX"
              value="X-EVOLUTION-TELEX"
              c:type="EVC_X_TELEX">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="133"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_TTYTDD"
              value="X-EVOLUTION-TTYTDD"
              c:type="EVC_X_TTYTDD">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="134"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_TWITTER"
              value="X-TWITTER"
              c:type="EVC_X_TWITTER"
              version="3.6">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-vcard.h"
           line="116">Twitter name(s).</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="123"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_VIDEO_URL"
              value="X-EVOLUTION-VIDEO-URL"
              c:type="EVC_X_VIDEO_URL">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="135"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_WANTS_HTML"
              value="X-MOZILLA-HTML"
              c:type="EVC_X_WANTS_HTML">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="136"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EVC_X_YAHOO" value="X-YAHOO" c:type="EVC_X_YAHOO">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="137"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="IS_BOOK_INDICES_UPDATER"
                    c:identifier="E_IS_BOOK_INDICES_UPDATER"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="24"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BOOK_INDICES_UPDATER_CLASS"
                    c:identifier="E_IS_BOOK_INDICES_UPDATER_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="27"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CONTACT"
                    c:identifier="E_IS_CONTACT"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CONTACT_CLASS"
                    c:identifier="E_IS_CONTACT_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="45"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SOURCE_BACKEND_SUMMARY_SETUP"
                    c:identifier="E_IS_SOURCE_BACKEND_SUMMARY_SETUP"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SOURCE_BACKEND_SUMMARY_SETUP_CLASS"
                    c:identifier="E_IS_SOURCE_BACKEND_SUMMARY_SETUP_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="44"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VCARD"
                    c:identifier="E_IS_VCARD"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="184"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VCARD_CLASS"
                    c:identifier="E_IS_VCARD_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="185"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <record name="NameWestern"
            c:type="ENameWestern"
            glib:type-name="ENameWestern"
            glib:get-type="e_name_western_get_type"
            c:symbol-prefix="name_western">
      <source-position filename="src/addressbook/libebook-contacts/e-name-western.h"
                       line="39"/>
      <field name="prefix" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="first" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="middle" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="nick" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="last" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="suffix" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="full" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <method name="copy" c:identifier="e_name_western_copy" version="3.24">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-name-western.c"
             line="1049">Creates a copy of @w.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-name-western.h"
                         line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-name-western.c"
               line="1055">A new #ENameWestern struct identical to @w.</doc>
          <type name="NameWestern" c:type="ENameWestern*"/>
        </return-value>
        <parameters>
          <instance-parameter name="w" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-name-western.c"
                 line="1051">an #ENameWestern</doc>
            <type name="NameWestern" c:type="ENameWestern*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_name_western_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-name-western.c"
             line="1026">Frees the @w struct and its contents.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-name-western.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="w" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-name-western.c"
                 line="1028">an #ENameWestern struct</doc>
            <type name="NameWestern" c:type="ENameWestern*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="parse" c:identifier="e_name_western_parse">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-name-western.c"
             line="961">Parses @full_name and returns an #ENameWestern struct filled with
the component parts of the name.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-name-western.h"
                         line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-name-western.c"
               line="968">A new #ENameWestern struct.</doc>
          <type name="NameWestern" c:type="ENameWestern*"/>
        </return-value>
        <parameters>
          <parameter name="full_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-name-western.c"
                 line="963">A string containing a western name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="PhoneNumber"
            c:type="EPhoneNumber"
            opaque="1"
            version="3.8"
            glib:type-name="EPhoneNumber"
            glib:get-type="e_phone_number_get_type"
            c:symbol-prefix="phone_number">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.h"
           line="195">This opaque type describes a parsed phone number. It can be copied using
e_phone_number_copy(). To release it call e_phone_number_free().</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="203"/>
      <method name="compare"
              c:identifier="e_phone_number_compare"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="289">Compares two phone numbers.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="296">The quality of matching for the two phone numbers.</doc>
          <type name="PhoneNumberMatch" c:type="EPhoneNumberMatch"/>
        </return-value>
        <parameters>
          <instance-parameter name="first_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="291">the first EPhoneNumber to compare</doc>
            <type name="PhoneNumber" c:type="const EPhoneNumber*"/>
          </instance-parameter>
          <parameter name="second_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="292">the second EPhoneNumber to compare</doc>
            <type name="PhoneNumber" c:type="const EPhoneNumber*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="e_phone_number_copy" version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="372">Makes a copy of @phone_number.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="236"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="378">A newly allocated EPhoneNumber instance.
Call e_phone_number_free() to release this instance.</doc>
          <type name="PhoneNumber" c:type="EPhoneNumber*"/>
        </return-value>
        <parameters>
          <instance-parameter name="phone_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="374">the EPhoneNumber to copy</doc>
            <type name="PhoneNumber" c:type="const EPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_phone_number_free" version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="400">Released the memory occupied by @phone_number.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="237"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="phone_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="402">the EPhoneNumber to free</doc>
            <type name="PhoneNumber" c:type="EPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_country_code"
              c:identifier="e_phone_number_get_country_code"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="227">Queries the @phone_number's country calling code and optionally stores the country
calling code's origin in @source. For instance when parsing "+1-617-5423789" this
function would return one and assing E_PHONE_NUMBER_COUNTRY_FROM_FQTN to @source.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="220"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="236">A valid country calling code, or zero if no code is known.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="phone_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="229">the phone number to query</doc>
            <type name="PhoneNumber" c:type="const EPhoneNumber*"/>
          </instance-parameter>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="230">an optional location for storing the phone number's origin, or %NULL</doc>
            <type name="PhoneNumberCountrySource"
                  c:type="EPhoneNumberCountrySource*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_national_number"
              c:identifier="e_phone_number_get_national_number"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="259">Queries the national portion of @phone_number without any call-out
prefixes. For instance when parsing "+1-617-5423789" this function would
return the string "6175423789".</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="222"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="267">The national portion of @phone_number.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="phone_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="261">the phone number to query</doc>
            <type name="PhoneNumber" c:type="const EPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="e_phone_number_to_string"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="197">Describes the @phone_number according to the rules applying to @format.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="218"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="204">A formatted string for @phone_number.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="phone_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="199">the phone number to format</doc>
            <type name="PhoneNumber" c:type="const EPhoneNumber*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="200">the phone number format to apply</doc>
            <type name="PhoneNumberFormat" c:type="EPhoneNumberFormat"/>
          </parameter>
        </parameters>
      </method>
      <function name="compare_strings"
                c:identifier="e_phone_number_compare_strings"
                version="3.8"
                throws="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="319">Compares two phone numbers.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="227"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="327">The quality of matching for the two phone numbers.</doc>
          <type name="PhoneNumberMatch" c:type="EPhoneNumberMatch"/>
        </return-value>
        <parameters>
          <parameter name="first_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="321">the first EPhoneNumber to compare</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="second_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="322">the second EPhoneNumber to compare</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="compare_strings_with_region"
                c:identifier="e_phone_number_compare_strings_with_region"
                version="3.8"
                throws="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="340">Compares two phone numbers within the context of @region_code.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="230"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="349">The quality of matching for the two phone numbers.</doc>
          <type name="PhoneNumberMatch" c:type="EPhoneNumberMatch"/>
        </return-value>
        <parameters>
          <parameter name="first_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="342">the first EPhoneNumber to compare</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="second_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="343">the second EPhoneNumber to compare</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="region_code"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="344">a two-letter country code, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="error_quark" c:identifier="e_phone_number_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="from_string"
                c:identifier="e_phone_number_from_string"
                version="3.8"
                throws="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="157">Parses the string passed in @phone_number. Note that no validation is
performed whether the recognized phone number is valid for a particular
region.

The two-letter country code passed in @region_code only is used if the
@phone_number is not written in international format. The application's
default region as returned by e_phone_number_get_default_region() is used
if @region_code is %NULL.

If the number is guaranteed to start with a '+' followed by the country
calling code, then "ZZ" can be passed for @region_code.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="215"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="175">a new #EPhoneNumber instance on success,
or %NULL on error. Call e_phone_number_free() to release this instance.</doc>
          <type name="PhoneNumber" c:type="EPhoneNumber*"/>
        </return-value>
        <parameters>
          <parameter name="phone_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="159">the phone number to parse</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="region_code"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="160">a two-letter country code, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_country_code_for_region"
                c:identifier="e_phone_number_get_country_code_for_region"
                version="3.8"
                throws="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="91">Retrieves the preferred country calling code for @region_code,
e.g. 358 for "fi" or 1 for "en_US@UTF-8".

If %NULL is passed for @region_code the default region as returned by
e_phone_number_get_default_region() is used.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="209"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="103">a valid country calling code, or zero if an unknown region
code was passed.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="region_code"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-phone-number.c"
                 line="93">a two-letter country code, a locale name, or
%NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_default_region"
                c:identifier="e_phone_number_get_default_region"
                version="3.8"
                throws="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="124">Retrieves the current two-letter country code that's used by default for
parsing phone numbers in e_phone_number_from_string(). It can be useful
to store this number before parsing a bigger number of phone numbers.

The result of this functions depends on the current setup of the
%LC_ADDRESS category: If that category provides a reasonable value
for %_NL_ADDRESS_COUNTRY_AB2 this value is returned. Otherwise the
locale name configured for %LC_ADDRESS is parsed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="212"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="137">a newly allocated string containing the
current locale's two-letter code for phone number parsing.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </function>
      <function name="is_supported"
                c:identifier="e_phone_number_is_supported"
                version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="65">Checks if phone number support is available. It is recommended to call this
function before using any of the phone-utils functions to ensure that the
required functionality is available, and to pick alternative mechanisms if
needed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                         line="208"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="73">%TRUE if phone number support is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </function>
    </record>
    <enumeration name="PhoneNumberCountrySource"
                 version="3.8"
                 c:type="EPhoneNumberCountrySource">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.h"
           line="173">The origin of a parsed EPhoneNumber's country calling code.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="193"/>
      <member name="fqtn"
              value="1"
              c:identifier="E_PHONE_NUMBER_COUNTRY_FROM_FQTN">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="175">the EPhoneNumber was build from a fully qualified telephone number
  that contained a valid country calling code</doc>
      </member>
      <member name="idd"
              value="5"
              c:identifier="E_PHONE_NUMBER_COUNTRY_FROM_IDD">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="178">the parsed phone number started with the current locale's international
  call prefix, followed by a valid country calling code</doc>
      </member>
      <member name="default"
              value="20"
              c:identifier="E_PHONE_NUMBER_COUNTRY_FROM_DEFAULT">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="181">the parsed phone didn't start with a (recognizable) country calling code,
  the code was chosen by checking the current locale settings</doc>
      </member>
    </enumeration>
    <enumeration name="PhoneNumberError"
                 version="3.8"
                 c:type="EPhoneNumberError"
                 glib:error-domain="e-phone-number-error-quark">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.h"
           line="145">Numeric description of a phone number related error.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="171"/>
      <member name="not_implemented"
              value="0"
              c:identifier="E_PHONE_NUMBER_ERROR_NOT_IMPLEMENTED">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="147">the library was built without phone
number support</doc>
      </member>
      <member name="unknown"
              value="1"
              c:identifier="E_PHONE_NUMBER_ERROR_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="149">the phone number parser reported a yet
unknown error code.</doc>
      </member>
      <member name="not_a_number"
              value="2"
              c:identifier="E_PHONE_NUMBER_ERROR_NOT_A_NUMBER">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="153">the supplied text is not a phone number.</doc>
      </member>
      <member name="invalid_country_code"
              value="3"
              c:identifier="E_PHONE_NUMBER_ERROR_INVALID_COUNTRY_CODE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="151">the supplied phone number has an
invalid country calling code.</doc>
      </member>
      <member name="too_short_after_idd"
              value="4"
              c:identifier="E_PHONE_NUMBER_ERROR_TOO_SHORT_AFTER_IDD">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="154">the remaining text after the
country calling code is to short for a phone number.</doc>
      </member>
      <member name="too_short"
              value="5"
              c:identifier="E_PHONE_NUMBER_ERROR_TOO_SHORT">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="156">the text is too short for a phone number.</doc>
      </member>
      <member name="too_long"
              value="6"
              c:identifier="E_PHONE_NUMBER_ERROR_TOO_LONG">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="157">the text is too long for a phone number.</doc>
      </member>
    </enumeration>
    <enumeration name="PhoneNumberFormat"
                 version="3.8"
                 c:type="EPhoneNumberFormat">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.h"
           line="43">The supported formatting rules for phone numbers.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="62"/>
      <member name="e164" value="0" c:identifier="E_PHONE_NUMBER_FORMAT_E164">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="45">format according E.164: "+493055667788".</doc>
      </member>
      <member name="international"
              value="1"
              c:identifier="E_PHONE_NUMBER_FORMAT_INTERNATIONAL">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="46">a formatted phone number always
starting with the country calling code: "+49 30 55667788".</doc>
      </member>
      <member name="national"
              value="2"
              c:identifier="E_PHONE_NUMBER_FORMAT_NATIONAL">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="48">a formatted phone number in national
scope, that is without country calling code: "(030) 55667788".</doc>
      </member>
      <member name="rfc3966"
              value="3"
              c:identifier="E_PHONE_NUMBER_FORMAT_RFC3966">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="50">a tel: URL according to RFC 3966:
"tel:+49-30-55667788".</doc>
      </member>
    </enumeration>
    <enumeration name="PhoneNumberMatch"
                 version="3.8"
                 c:type="EPhoneNumberMatch">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.h"
           line="64">The strength of a phone number match.

&lt;example&gt;
&lt;title&gt;Some examples of phone number matches&lt;/title&gt;
&lt;para&gt;
Let's consider the phone number "+1-221-5423789", then comparing with
"+1.221.542.3789" we have get E_PHONE_NUMBER_MATCH_EXACT because country
code, region code and local number are matching. Comparing with "2215423789"
will result in E_PHONE_NUMBER_MATCH_NATIONAL because the country calling code
is missing, but the national portion is matching. Finally comparing with
"5423789" gives E_PHONE_NUMBER_MATCH_SHORT. For more detail have a look at
the following table:

&lt;informaltable border="1" align="center"&gt;
 &lt;colgroup&gt;
  &lt;col width="20%" /&gt;
  &lt;col width="20%" /&gt;
  &lt;col width="20%" /&gt;
  &lt;col width="20%" /&gt;
  &lt;col width="20%" /&gt;
 &lt;/colgroup&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;th&gt;&lt;/th&gt;
   &lt;th align="center"&gt;+1-617-5423789&lt;/th&gt;
   &lt;th align="center"&gt;+1-221-5423789&lt;/th&gt;
   &lt;th align="center"&gt;221-5423789&lt;/th&gt;
   &lt;th align="center"&gt;5423789&lt;/th&gt;
  &lt;/tr&gt;&lt;tr&gt;
   &lt;th align="right"&gt;+1-617-5423789&lt;/th&gt;
   &lt;td align="center"&gt;exact&lt;/td&gt;
   &lt;td align="center"&gt;none&lt;/td&gt;
   &lt;td align="center"&gt;none&lt;/td&gt;
   &lt;td align="center"&gt;short&lt;/td&gt;
  &lt;/tr&gt;&lt;tr&gt;
   &lt;th align="right"&gt;+1-221-5423789&lt;/th&gt;
   &lt;td align="center"&gt;none&lt;/td&gt;
   &lt;td align="center"&gt;exact&lt;/td&gt;
   &lt;td align="center"&gt;national&lt;/td&gt;
   &lt;td align="center"&gt;short&lt;/td&gt;
  &lt;/tr&gt;&lt;tr&gt;
   &lt;th align="right"&gt;221-5423789&lt;/th&gt;
   &lt;td align="center"&gt;none&lt;/td&gt;
   &lt;td align="center"&gt;national&lt;/td&gt;
   &lt;td align="center"&gt;national&lt;/td&gt;
   &lt;td align="center"&gt;short&lt;/td&gt;
  &lt;/tr&gt;&lt;tr&gt;
   &lt;th align="right"&gt;5423789&lt;/th&gt;
   &lt;td align="center"&gt;short&lt;/td&gt;
   &lt;td align="center"&gt;short&lt;/td&gt;
   &lt;td align="center"&gt;short&lt;/td&gt;
   &lt;td align="center"&gt;short&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/informaltable&gt;
&lt;/para&gt;
&lt;/example&gt;</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="143"/>
      <member name="none" value="0" c:identifier="E_PHONE_NUMBER_MATCH_NONE">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="66">The phone numbers did not match.</doc>
      </member>
      <member name="exact" value="1" c:identifier="E_PHONE_NUMBER_MATCH_EXACT">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="67">The phone numbers matched exactly. Two phone number strings are an exact match
if the country code, national phone number, presence of a leading zero for Italian numbers and any
extension present are the same.</doc>
      </member>
      <member name="national"
              value="1024"
              c:identifier="E_PHONE_NUMBER_MATCH_NATIONAL">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="70">The national phone number matched. Two phone number strings match at
this strength if either or both has no region specified, and the national phone number
and extensions are the same.</doc>
      </member>
      <member name="short"
              value="2048"
              c:identifier="E_PHONE_NUMBER_MATCH_SHORT">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.h"
             line="73">The weakest sort of match. Two phone numbers match at
this strength if either or both has no region specified, or the region specified is the same, and one national
phone number could be a shorter version of the other number. This includes the case where one has an extension specified,
and the other does not.</doc>
      </member>
    </enumeration>
    <function-macro name="SOURCE_BACKEND_SUMMARY_SETUP"
                    c:identifier="E_SOURCE_BACKEND_SUMMARY_SETUP"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SOURCE_BACKEND_SUMMARY_SETUP_CLASS"
                    c:identifier="E_SOURCE_BACKEND_SUMMARY_SETUP_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="38"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SOURCE_BACKEND_SUMMARY_SETUP_GET_CLASS"
                    c:identifier="E_SOURCE_BACKEND_SUMMARY_SETUP_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="47"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="SOURCE_EXTENSION_BACKEND_SUMMARY_SETUP"
              value="Backend Summary Setup"
              c:type="E_SOURCE_EXTENSION_BACKEND_SUMMARY_SETUP"
              version="3.8">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
           line="52">Pass this extension name to e_source_get_extension() to access
#ESourceBackendSummarySetup.  This is also used as a group name in key files.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="SourceBackendSummarySetup"
           c:symbol-prefix="source_backend_summary_setup"
           c:type="ESourceBackendSummarySetup"
           version="3.8"
           parent="EDataServer.SourceExtension"
           glib:type-name="ESourceBackendSummarySetup"
           glib:get-type="e_source_backend_summary_setup_get_type"
           glib:type-struct="SourceBackendSummarySetupClass">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
           line="68">Contains only private data that should be read and manipulated using the
functions below.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="84"/>
      <method name="get_indexed_fields"
              c:identifier="e_source_backend_summary_setup_get_indexed_fields"
              glib:get-property="indexed-fields"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
             line="431">Fetches the #EContactFields configured to be indexed, with thier respective #EBookIndexTypes.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                         line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
               line="440">The array of indexed #EContactFields.</doc>
          <type name="ContactField" c:type="EContactField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="extension" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="433">An #ESourceBackendSummarySetup</doc>
            <type name="SourceBackendSummarySetup"
                  c:type="ESourceBackendSummarySetup*"/>
          </instance-parameter>
          <parameter name="types"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="434">A return location for the set of #EBookIndexTypes corresponding
                               to each returned field,  should be freed with g_free() when no longer needed.</doc>
            <type name="BookIndexType" c:type="EBookIndexType**"/>
          </parameter>
          <parameter name="n_fields"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="436">The number of elements in the returned arrays.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_summary_fields"
              c:identifier="e_source_backend_summary_setup_get_summary_fields"
              glib:get-property="summary-fields"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
             line="343">Fetches the #EContactFields which are configured to be a part of the summary.

&lt;note&gt;&lt;para&gt;If there are no configured summary fields, the default configuration is assumed&lt;/para&gt;&lt;/note&gt;</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                         line="88"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
               line="352">An array of #EContactFields @n_fields long, should be freed with g_free() when done.</doc>
          <type name="ContactField" c:type="EContactField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="extension" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="345">An #ESourceBackendSummarySetup</doc>
            <type name="SourceBackendSummarySetup"
                  c:type="ESourceBackendSummarySetup*"/>
          </instance-parameter>
          <parameter name="n_fields"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="346">A return location for the number of #EContactFields in the returned array.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_indexed_fields"
              c:identifier="e_source_backend_summary_setup_set_indexed_fields"
              glib:set-property="indexed-fields"
              version="3.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
             line="589">Like e_source_backend_summary_setup_set_indexed_fieldsv(), but takes a literal list of
of indexes.

To give the 'fullname' field an index for prefix and suffix searches:

|[
  #include &lt;libebook/libebook.h&gt;

  ESourceBackendSummarySetup *extension;

  extension = e_source_get_extension (source, E_SOURCE_EXTENSION_BACKEND_SUMMARY_SETUP);

  e_source_backend_summary_setup_set_indexed_fields (extension,
                                                     E_CONTACT_FULL_NAME, E_BOOK_INDEX_PREFIX,
                                                     E_CONTACT_FULL_NAME, E_BOOK_INDEX_SUFFIX,
                                                     0);
]|</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="extension" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="591">An #ESourceBackendSummarySetup</doc>
            <type name="SourceBackendSummarySetup"
                  c:type="ESourceBackendSummarySetup*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="592">A list of #EContactFields, #EBookIndexType pairs terminated by 0.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_indexed_fieldsv"
              c:identifier="e_source_backend_summary_setup_set_indexed_fieldsv"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
             line="521">Defines indexes for quick reference for the given given #EContactFields in the addressbook.

The same #EContactField may be specified multiple times to create multiple indexes
with different characteristics. If an #E_BOOK_INDEX_PREFIX index is created it will
be used for #E_BOOK_QUERY_BEGINS_WITH queries. An #E_BOOK_INDEX_SUFFIX index
will be constructed efficiently for suffix matching and will be used for
#E_BOOK_QUERY_ENDS_WITH queries. Similar an #E_BOOK_INDEX_PHONE index will optimize
#E_BOOK_QUERY_EQUALS_PHONE_NUMBER searches.

&lt;note&gt;&lt;para&gt;The specified indexed fields must also be a part of the summary, any indexed fields
specified that are not already a part of the summary will be ignored.&lt;/para&gt;&lt;/note&gt;</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="extension" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="523">An #ESourceBackendSummarySetup</doc>
            <type name="SourceBackendSummarySetup"
                  c:type="ESourceBackendSummarySetup*"/>
          </instance-parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="524">The array of #EContactFields to set indexes for</doc>
            <type name="ContactField" c:type="EContactField*"/>
          </parameter>
          <parameter name="types" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="525">The array of #EBookIndexTypes defining what types of indexes to create</doc>
            <type name="BookIndexType" c:type="EBookIndexType*"/>
          </parameter>
          <parameter name="n_fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="526">The number elements in the passed @fields, @rule_types and @rules arrays.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary_fields"
              c:identifier="e_source_backend_summary_setup_set_summary_fields"
              glib:set-property="summary-fields"
              version="3.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
             line="396">Like e_source_backend_summary_setup_set_summary_fieldsv(), but takes a literal
list of #EContactFields for convenience.

To configure the address book summary fields with main phone nubmer fields:

|[
  #include &lt;libebook/libebook.h&gt;

  ESourceBackendSummarySetup *extension;

  extension = e_source_get_extension (source, E_SOURCE_EXTENSION_BACKEND_SUMMARY_SETUP);

  e_source_backend_summary_setup_set_summary_fields (extension, E_CONTACT_FULL_NAME, E_CONTACT_EMAIL, 0);
]|</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="extension" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="398">An #ESourceBackendSummarySetup</doc>
            <type name="SourceBackendSummarySetup"
                  c:type="ESourceBackendSummarySetup*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="399">A 0 terminated list of #EContactFields to set as summary fields</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary_fieldsv"
              c:identifier="e_source_backend_summary_setup_set_summary_fieldsv"
              version="3.8">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
             line="366">Sets the summary fields configured for the given addressbook.

The fields %E_CONTACT_UID and %E_CONTACT_REV are not optional,
they will be stored in the summary regardless of the configured summary.

An empty summary configuration is assumed to be the default summary
configuration.

&lt;note&gt;&lt;para&gt;Only #EContactFields with the type #G_TYPE_STRING or #G_TYPE_BOOLEAN
are currently supported as summary fields.&lt;/para&gt;&lt;/note&gt;</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="extension" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="368">An #ESourceBackendSummarySetup</doc>
            <type name="SourceBackendSummarySetup"
                  c:type="ESourceBackendSummarySetup*"/>
          </instance-parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="369">The array of #EContactFields to set as summary fields</doc>
            <type name="ContactField" c:type="EContactField*"/>
          </parameter>
          <parameter name="n_fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
                 line="370">The number of #EContactFields in @fields</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="indexed-fields"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_indexed_fields"
                getter="get_indexed_fields"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary-fields"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_summary_fields"
                getter="get_summary_fields"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="EDataServer.SourceBackend" c:type="ESourceBackend"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="SourceBackendSummarySetupPrivate"
              c:type="ESourceBackendSummarySetupPrivate*"/>
      </field>
    </class>
    <record name="SourceBackendSummarySetupClass"
            c:type="ESourceBackendSummarySetupClass"
            glib:is-gtype-struct-for="SourceBackendSummarySetup">
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="84"/>
      <field name="parent_class">
        <type name="EDataServer.SourceBackendClass"
              c:type="ESourceBackendClass"/>
      </field>
    </record>
    <record name="SourceBackendSummarySetupPrivate"
            c:type="ESourceBackendSummarySetupPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.h"
                       line="66"/>
    </record>
    <function-macro name="VCARD" c:identifier="E_VCARD" introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="182"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VCARD_21_VALID_PARAMETERS"
              value="TYPE,VALUE,ENCODING,CHARSET,LANGUAGE,DOM,INTL,POSTAL,PARCEL,HOME,WORK,PREF,VOICE,FAX,MSG,CELL,PAGER,BBS,MODEM,CAR,ISDN,VIDEO,AOL,APPLELINK,ATTMAIL,CIS,EWORLD,INTERNET,IBMMAIL,MCIMAIL,POWERSHARE,PRODIGY,TLX,X400,GIF,CGM,WMF,BMP,MET,PMB,DIB,PICT,TIFF,PDF,PS,JPEG,QTIME,MPEG,MPEG2,AVI,WAVE,AIFF,PCM,X509,PGP"
              c:type="E_VCARD_21_VALID_PARAMETERS"
              version="3.4">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-vcard.h"
           line="203">FIXME: Document me!</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="208"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="VCARD_21_VALID_PROPERTIES"
              value="ADR,ORG,N,AGENT,LOGO,PHOTO,LABEL,FN,TITLE,SOUND,VERSION,TEL,EMAIL,TZ,GEO,NOTE,URL,BDAY,ROLE,REV,UID,KEY,MAILER"
              c:type="E_VCARD_21_VALID_PROPERTIES"
              version="3.4">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-vcard.h"
           line="192">FIXME: Document me!</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="199"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VCARD_CLASS"
                    c:identifier="E_VCARD_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="183"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VCARD_GET_CLASS"
                    c:identifier="E_VCARD_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="186"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="VCard"
           c:symbol-prefix="vcard"
           c:type="EVCard"
           parent="GObject.Object"
           glib:type-name="EVCard"
           glib:get-type="e_vcard_get_type"
           glib:type-struct="VCardClass">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="238"/>
      <constructor name="new" c:identifier="e_vcard_new">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1107">Creates a new, blank #EVCard.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="245"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="1112">A new, blank #EVCard.</doc>
          <type name="VCard" c:type="EVCard*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_string"
                   c:identifier="e_vcard_new_from_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1120">Creates a new #EVCard from the passed-in string
representation.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="246"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="1127">A new #EVCard.</doc>
          <type name="VCard" c:type="EVCard*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1122">a string representation of the vcard to create</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="escape_string" c:identifier="e_vcard_escape_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="932">Escapes a string according to RFC2426, section 5.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="318"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="938">A newly allocated, escaped string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="934">the string to escape</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="unescape_string" c:identifier="e_vcard_unescape_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="980">Unescapes a string according to RFC2426, section 5.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="319"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="986">A newly allocated, unescaped string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="982">the string to unescape</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_attribute" c:identifier="e_vcard_add_attribute">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1867">Prepends @attr to @evc. This takes ownership of @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="265"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1869">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1870">an #EVCardAttribute to add</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_attribute_with_value"
              c:identifier="e_vcard_add_attribute_with_value">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1891">Prepends @attr to @evcard, setting it to @value. This takes ownership of
@attr.

This is a convenience wrapper around e_vcard_attribute_add_value() and
e_vcard_add_attribute().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="266"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1893">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1894">an #EVCardAttribute to add</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1895">a value to assign to the attribute</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_attribute_with_values"
              c:identifier="e_vcard_add_attribute_with_values"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1916">Prepends @attr to @evcard, assigning the list of values to it. This takes
ownership of @attr.

This is a convenience wrapper around e_vcard_attribute_add_value() and
e_vcard_add_attribute().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="267"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1918">an @EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1919">an #EVCardAttribute to add</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1920">a %NULL-terminated list of values to assign to the attribute</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="append_attribute"
              c:identifier="e_vcard_append_attribute"
              version="2.32">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1777">Appends @attr to @evc to the end of a list of attributes. This takes
ownership of @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="262"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1779">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1780">an #EVCardAttribute to append</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_attribute_with_value"
              c:identifier="e_vcard_append_attribute_with_value"
              version="2.32">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1804">Appends @attr to @evcard, setting it to @value. This takes ownership of
@attr.

This is a convenience wrapper around e_vcard_attribute_add_value() and
e_vcard_append_attribute().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="263"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1806">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1807">an #EVCardAttribute to append</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1808">a value to assign to the attribute</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_attribute_with_values"
              c:identifier="e_vcard_append_attribute_with_values"
              version="2.32"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1831">Appends @attr to @evcard, assigning the list of values to it. This takes
ownership of @attr.

This is a convenience wrapper around e_vcard_attribute_add_value() and
e_vcard_append_attribute().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="264"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1833">an @EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1834">an #EVCardAttribute to append</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1835">a %NULL-terminated list of values to assign to the attribute</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="construct" c:identifier="e_vcard_construct">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1026">Constructs the existing #EVCard, @evc, setting its vCard data to @str.

This modifies @evc.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1028">an existing #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1029">a vCard string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct_full"
              c:identifier="e_vcard_construct_full"
              version="3.12">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1064">Similar to e_vcard_construct_with_uid(), but can also
be used with an @str that is not %NULL terminated.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="244"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1066">an existing #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1067">a vCard string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1068">length of @str, or -1 if @str is %NULL terminated</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="uid"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1069">a unique ID string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct_with_uid"
              c:identifier="e_vcard_construct_with_uid"
              version="3.4">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1042">Constructs the existing #EVCard, @evc, setting its vCard data to @str, and
adding a new UID attribute with the value given in @uid (if @uid is
non-%NULL).

This modifies @evc.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="243"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1044">an existing #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1045">a vCard string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="uid"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1046">a unique ID string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dump_structure" c:identifier="e_vcard_dump_structure">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1582">Prints a dump of @evc's structure to stdout. Used for
debugging.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="253"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1584">the #EVCard to dump</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_attribute" c:identifier="e_vcard_get_attribute">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2515">Get the attribute @name from @evc.  The #EVCardAttribute is owned by
@evcard and should not be freed. If the attribute does not exist, %NULL is
returned.

&lt;note&gt;&lt;para&gt;This will only return the &lt;emphasis&gt;first&lt;/emphasis&gt; attribute
with the given @name. To get other attributes of that name (for example,
other &lt;code&gt;TEL&lt;/code&gt; attributes if a contact has multiple telephone
numbers), use e_vcard_get_attributes() and iterate over the list searching
for matching attributes.&lt;/para&gt;
&lt;para&gt;This method iterates over all attributes in the #EVCard, so should not
be called often. If extracting a large number of attributes from a vCard, it
is more efficient to iterate once over the list returned by
e_vcard_get_attributes().&lt;/para&gt;&lt;/note&gt;</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="296"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2534">An #EVCardAttribute if found, or %NULL.</doc>
          <type name="VCardAttribute" c:type="EVCardAttribute*"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2517">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2518">the name of the attribute to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_if_parsed"
              c:identifier="e_vcard_get_attribute_if_parsed"
              version="3.4">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2565">Similar to e_vcard_get_attribute() but this method will not attempt to
parse the vCard if it is not already parsed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="297"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2573">An #EVCardAttribute if found, or %NULL.</doc>
          <type name="VCardAttribute" c:type="EVCardAttribute*"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2567">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2568">the name of the attribute to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attributes" c:identifier="e_vcard_get_attributes">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2497">Gets the list of all attributes from @evcard. The list and its
contents are owned by @evcard, and must not be freed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="298"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2504">A list of attributes
of type #EVCardAttribute.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="VCardAttribute"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="evcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2499">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_parsed" c:identifier="e_vcard_is_parsed" version="3.2">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2899">Check if the @evc has been parsed already, as #EVCard implements lazy parsing
of its vCard data. Used for debugging.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="248"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2906">%TRUE if @evc has been parsed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2901">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_attribute" c:identifier="e_vcard_remove_attribute">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1756">Removes @attr from @evc and frees it. This takes ownership of @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="261"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1758">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1759">an #EVCardAttribute to remove</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_attributes"
              c:identifier="e_vcard_remove_attributes">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1714">Removes all the attributes with group name and attribute name equal to the
passed in values. If @attr_group is %NULL or an empty string,
it removes all the attributes with passed in name irrespective of
their group names.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="260"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1716">vcard object</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="attr_group"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1717">group name of attributes to be removed</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="attr_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1718">name of the arributes to be removed</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="e_vcard_to_string">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1547">Exports @evc to a string representation, specified
by the @format argument.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="250"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="1555">A newly allocated string representing the vcard.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="evc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1549">the #EVCard to export</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1550">the format to export to</doc>
            <type name="VCardFormat" c:type="EVCardFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="util_dup_x_attribute"
              c:identifier="e_vcard_util_dup_x_attribute"
              version="3.26">
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="324"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="3009">Value of attribute @x_name, or %NULL,
   when there is no such attribute. Free the returned pointer with g_free(),
   when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="vcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="3006">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="x_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="3007">the attribute name, which starts with "X-"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="util_set_x_attribute"
              c:identifier="e_vcard_util_set_x_attribute"
              version="3.26">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2965">Sets an "X-" attribute @x_name to value @value in @vcard, or
removes it from @vcard, when @value is %NULL.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="321"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vcard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2967">an #EVCard</doc>
            <type name="VCard" c:type="EVCard*"/>
          </instance-parameter>
          <parameter name="x_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2968">the attribute name, which starts with "X-"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2969">the value to set, or %NULL to unset</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="VCardPrivate" c:type="EVCardPrivate*"/>
      </field>
    </class>
    <record name="VCardAttribute"
            c:type="EVCardAttribute"
            opaque="1"
            glib:type-name="EVCardAttribute"
            glib:get-type="e_vcard_attribute_get_type"
            c:symbol-prefix="vcard_attribute">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="220"/>
      <constructor name="new" c:identifier="e_vcard_attribute_new">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1628">Creates a new #EVCardAttribute with the specified group and
attribute names. The @attr_group may be %NULL or the empty string if no
group is needed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="257"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="1637">A new #EVCardAttribute.</doc>
          <type name="VCardAttribute" c:type="EVCardAttribute*"/>
        </return-value>
        <parameters>
          <parameter name="attr_group"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1630">a group name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="attr_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1631">an attribute name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_param" c:identifier="e_vcard_attribute_add_param">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2237">Prepends @param to @attr's list of parameters. This takes ownership of
@param (and all its values).

Duplicate parameters have their values merged, so that all parameter names
in @attr are unique. Values are also merged so that uniqueness is preserved.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="282"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2239">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="param" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2240">an #EVCardAttributeParam to add</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_param_with_value"
              c:identifier="e_vcard_attribute_add_param_with_value">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2378">Appends @value to @param, then prepends @param to @attr. This takes ownership
of @param, but not of @value.

This is a convenience method for e_vcard_attribute_param_add_value() and
e_vcard_attribute_add_param().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="283"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2380">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="param" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2381">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2382">a string value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_param_with_values"
              c:identifier="e_vcard_attribute_add_param_with_values"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2403">Appends the list of values to @param, then prepends @param to @attr. This
takes ownership of @param, but not of the list of values.

This is a convenience method for e_vcard_attribute_param_add_value() and
e_vcard_attribute_add_param().</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="285"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2405">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="param" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2406">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2407">a %NULL-terminated list of strings</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="add_value" c:identifier="e_vcard_attribute_add_value">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1950">Appends @value to @attr's list of values.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="268"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1952">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1953">a string value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_value_decoded"
              c:identifier="e_vcard_attribute_add_value_decoded">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1966">Encodes @value according to the encoding used for @attr, and appends it to
@attr's list of values.

This should only be used if the #EVCardAttribute has a non-raw encoding (i.e.
if it’s encoded in base-64 or quoted-printable encoding).</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1968">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1969">an encoded value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1970">the length of the encoded value, in bytes</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_values"
              c:identifier="e_vcard_attribute_add_values"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2020">Appends a list of values to @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="270"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2022">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2023">a %NULL-terminated list of strings</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="e_vcard_attribute_copy">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1687">Makes a copy of @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="259"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="1693">A new #EVCardAttribute identical to @attr.</doc>
          <type name="VCardAttribute" c:type="EVCardAttribute*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1689">attribute to copy</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_vcard_attribute_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="1646">Frees an attribute, its values and its parameters.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="258"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="1648">attribute to free</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_group" c:identifier="e_vcard_attribute_get_group">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2596">Gets the group name of @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="299"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2602">The attribute's group name, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2598">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="e_vcard_attribute_get_name">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2612">Gets the name of @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="300"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2618">The attribute's name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2614">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_param" c:identifier="e_vcard_attribute_get_param">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2866">Gets the list of values for the paramater @name from @attr. The list and its
contents are owned by @attr, and must not be freed. If no parameter with the
given @name exists, %NULL is returned.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="310"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2875">A list of string
elements representing the parameter's values, or %NULL.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2868">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2869">a parameter name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_params" c:identifier="e_vcard_attribute_get_params">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2848">Gets the list of parameters (of type #EVCardAttributeParam) from @attr. The
list and its contents are owned by @attr, and must not be freed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="309"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2855">A list of
elements of type #EVCardAttributeParam.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="VCardAttributeParam"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2850">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="e_vcard_attribute_get_value">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2731">Gets the value of a single-valued #EVCardAttribute, @attr.

For example, for a &lt;code&gt;FN&lt;/code&gt; (full name) attribute, this will
return the contact’s full name as a single string.

This will print a warning if called on an #EVCardAttribute which is not
single-valued (i.e. for which e_vcard_attribute_is_single_valued() returns
%FALSE). Use e_vcard_attribute_get_values() in such cases instead.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="306"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2744">A newly allocated string representing
the value, or %NULL if the attribute has no value.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2733">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_decoded"
              c:identifier="e_vcard_attribute_get_value_decoded">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2762">Gets the value of a single-valued #EVCardAttribute, @attr, decoding
it if necessary according to the encoding given in the vCard’s
&lt;code&gt;ENCODING&lt;/code&gt; attribute.

This will print a warning if called on an #EVCardAttribute which is not
single-valued (i.e. for which e_vcard_attribute_is_single_valued() returns
%FALSE). Use e_vcard_attribute_get_values_decoded() in such cases instead.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="307"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2774">A newly allocated #GString
representing the value, or %NULL if the attribute has no value.</doc>
          <type name="GLib.String" c:type="GString*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2764">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="e_vcard_attribute_get_values">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2628">Gets the ordered list of values from @attr. The list and its
contents are owned by @attr, and must not be freed.

For example, for an &lt;code&gt;ADR&lt;/code&gt; (postal address) attribute, this will
return the components of the postal address.

This may be called on a single-valued attribute (i.e. one for which
e_vcard_attribute_is_single_valued() returns %TRUE) and will return a
one-element list in that case. Alternatively, use
e_vcard_attribute_get_value() in such cases.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="301"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2643">A list of string values. They
will all be non-%NULL, but may be empty strings. The list itself may be
empty.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2630">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values_decoded"
              c:identifier="e_vcard_attribute_get_values_decoded">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2655">Gets the ordered list of values from @attr, decoding them if
necessary according to the encoding given in the vCard’s
&lt;code&gt;ENCODING&lt;/code&gt; attribute. The list and its contents are owned by
@attr, and must not be freed.

This may be called on a single-valued attribute (i.e. one for which
e_vcard_attribute_is_single_valued() returns %TRUE) and will return a
one-element list in that case. Alternatively, use
e_vcard_attribute_get_value_decoded() in such cases.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="302"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2669">A list of values of type #GString.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GLib.String"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2657">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_type" c:identifier="e_vcard_attribute_has_type">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2796">Checks if @attr has an #EVCardAttributeParam with name %EVC_TYPE and @typestr
as one of its values.

For example, for the vCard attribute:
|[
TEL;TYPE=WORK,VOICE:(111) 555-1212
]|
the following holds true:
|[
g_assert_true (e_vcard_attribute_has_type (attr, "WORK") == TRUE);
g_assert_true (e_vcard_attribute_has_type (attr, "voice") == TRUE);
g_assert_true (e_vcard_attribute_has_type (attr, "HOME") == FALSE);
]|

Comparisons against @typestr are case-insensitive.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="315"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2817">%TRUE if such a parameter exists, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2798">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="typestr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2799">a string representing the type</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_single_valued"
              c:identifier="e_vcard_attribute_is_single_valued">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2711">Checks if @attr has a single value.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="305"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2717">%TRUE if the attribute has exactly one value, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2713">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_param"
              c:identifier="e_vcard_attribute_remove_param"
              version="1.12">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2095">Removes and frees parameter @param_name from the attribute @attr. Parameter
names are guaranteed to be unique, so @attr is guaranteed to have no
parameters named @param_name after this function returns.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="274"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2097">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="param_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2098">a parameter name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_param_value"
              c:identifier="e_vcard_attribute_remove_param_value">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2452">Removes the value @s from the parameter @param_name on the attribute @attr.
If @s was the only value for parameter @param_name, that parameter is removed
entirely from @attr and freed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="275"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2454">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="param_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2455">a parameter name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2456">a value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_params"
              c:identifier="e_vcard_attribute_remove_params">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2132">Removes and frees all parameters from @attr.

This also resets the #EVCardAttribute's encoding back to raw.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="273"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2134">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_value"
              c:identifier="e_vcard_attribute_remove_value">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2071">Removes value @s from the value list in @attr. The value @s is not freed.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="271"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2073">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
          <parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2074">a value to remove</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_values"
              c:identifier="e_vcard_attribute_remove_values">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2051">Removes and frees all values from @attr.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="272"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2053">an #EVCardAttribute</doc>
            <type name="VCardAttribute" c:type="EVCardAttribute*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="VCardAttributeParam"
            c:type="EVCardAttributeParam"
            opaque="1"
            glib:type-name="EVCardAttributeParam"
            glib:get-type="e_vcard_attribute_param_get_type"
            c:symbol-prefix="vcard_attribute_param">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="221"/>
      <constructor name="new" c:identifier="e_vcard_attribute_param_new">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2154">Creates a new parameter named @name.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="279"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2160">A new #EVCardAttributeParam.</doc>
          <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2156">the name of the new parameter</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_value"
              c:identifier="e_vcard_attribute_param_add_value">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2337">Appends @value to @param's list of values.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="288"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2339">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2340">a string value to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_values"
              c:identifier="e_vcard_attribute_param_add_values"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2353">Appends a list of values to @param.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="290"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2355">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2356">a %NULL-terminated list of strings</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="e_vcard_attribute_param_copy">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2212">Makes a copy of @param and all its values.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="281"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2218">a new #EVCardAttributeParam identical to @param.</doc>
          <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
        </return-value>
        <parameters>
          <instance-parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2214">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="e_vcard_attribute_param_free">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2174">Frees @param and its values.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="280"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="param" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2176">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="e_vcard_attribute_param_get_name">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2918">Gets the name of @param.

For example, for the only parameter of the vCard attribute:
|[
TEL;TYPE=WORK,VOICE:(111) 555-1212
]|
this would return &lt;code&gt;TYPE&lt;/code&gt; (which is string-equivalent to
%EVC_TYPE).</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="311"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2931">The name of the parameter.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2920">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="e_vcard_attribute_param_get_values">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2941">Gets the list of values from @param. The list and its
contents are owned by @param, and must not be freed.

For example, for the &lt;code&gt;TYPE&lt;/code&gt; parameter of the vCard attribute:
|[
TEL;TYPE=WORK,VOICE:(111) 555-1212
]|
this would return the list &lt;code&gt;WORK&lt;/code&gt;, &lt;code&gt;VOICE&lt;/code&gt;.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="312"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-vcard.c"
               line="2954">A list of string elements
representing the parameter's values.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2943">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_values"
              c:identifier="e_vcard_attribute_param_remove_values">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-vcard.c"
             line="2436">Removes and frees all values from @param.</doc>
        <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                         line="292"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/addressbook/libebook-contacts/e-vcard.c"
                 line="2438">an #EVCardAttributeParam</doc>
            <type name="VCardAttributeParam" c:type="EVCardAttributeParam*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="VCardClass"
            c:type="EVCardClass"
            glib:is-gtype-struct-for="VCard">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="238"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_ebook_reserved0" introspectable="0">
        <callback name="_ebook_reserved0">
          <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                           line="233"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved1" introspectable="0">
        <callback name="_ebook_reserved1">
          <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                           line="234"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved2" introspectable="0">
        <callback name="_ebook_reserved2">
          <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                           line="235"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved3" introspectable="0">
        <callback name="_ebook_reserved3">
          <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                           line="236"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_ebook_reserved4" introspectable="0">
        <callback name="_ebook_reserved4">
          <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                           line="237"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="VCardFormat" c:type="EVCardFormat">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="179"/>
      <member name="21" value="0" c:identifier="EVC_FORMAT_VCARD_21">
      </member>
      <member name="30" value="1" c:identifier="EVC_FORMAT_VCARD_30">
      </member>
    </enumeration>
    <record name="VCardPrivate"
            c:type="EVCardPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/addressbook/libebook-contacts/e-vcard.h"
                       line="219"/>
    </record>
    <function name="address_western_parse"
              c:identifier="e_address_western_parse"
              moved-to="AddressWestern.parse">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-address-western.c"
           line="306">Parses a string representing a mailing address into a
structure of type #EAddressWestern.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-address-western.h"
                       line="52"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-address-western.c"
             line="313">A new #EAddressWestern structure, or %NULL if
   the parsing failed or when the @in_address was %NULL.</doc>
        <type name="AddressWestern" c:type="EAddressWestern*"/>
      </return-value>
      <parameters>
        <parameter name="in_address"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-address-western.c"
               line="308">a string representing a mailing address</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_client_error_create"
              c:identifier="e_book_client_error_create"
              version="3.2">
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="115"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="59">a new #GError containing an E_BOOK_CLIENT_ERROR of the given
@code. If the @custom_msg is NULL, then the error message is
the one returned from e_book_client_error_to_string() for the @code,
otherwise the given message is used.

Returned pointer should be freed with g_error_free().</doc>
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="code" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="56">an #EBookClientError code to create</doc>
          <type name="BookClientError" c:type="EBookClientError"/>
        </parameter>
        <parameter name="custom_msg"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="57">custom message to use for the error; can be %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_client_error_create_fmt"
              c:identifier="e_book_client_error_create_fmt"
              version="3.34"
              introspectable="0">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="75">Similar as e_book_client_error_create(), only here, instead of custom_msg,
is used a printf() format to create a custom message for the error.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="117"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="84">a newly allocated #GError, which should be
  freed with g_error_free(), when no longer needed.
  The #GError has set the custom message, or the default message for
  @code, when @format is %NULL.</doc>
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="code" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="77">an #EBookClientError</doc>
          <type name="BookClientError" c:type="EBookClientError"/>
        </parameter>
        <parameter name="format"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="78">message format, or %NULL to use the default message for the @code</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="79">arguments for the format</doc>
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="book_client_error_quark"
              c:identifier="e_book_client_error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="book_client_error_to_string"
              c:identifier="e_book_client_error_to_string"
              version="3.2">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="25">Get localized human readable description of the given error code.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="114"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="31">Localized human readable description of the given error code</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="code" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="27">an #EBookClientError code</doc>
          <type name="BookClientError" c:type="EBookClientError"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_indices_get_ascending_sort"
              c:identifier="e_book_indices_get_ascending_sort"
              moved-to="BookIndices.get_ascending_sort"
              version="3.50">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
           line="241">Returns whether the @self considers contacts stored in the ascending order.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="66"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
             line="247">%TRUE, when considers contacts sorted in ascending order,
   %FALSE when in the descending order.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="243">an #EBookIndicesUpdater</doc>
          <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_indices_set_ascending_sort"
              c:identifier="e_book_indices_set_ascending_sort"
              moved-to="BookIndices.set_ascending_sort"
              version="3.50">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
           line="205">Sets whether the contacts are sorted in an ascending order; if not,
then they are sorted in the descending order. That influences what
indexes the indices have set.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-indices-updater.h"
                       line="64"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="207">an #EBookIndicesUpdater</doc>
          <type name="BookIndicesUpdater" c:type="EBookIndicesUpdater*"/>
        </parameter>
        <parameter name="ascending_sort" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
               line="208">the value to set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_and"
              c:identifier="e_book_query_and"
              moved-to="BookQuery.and">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="112">Create a new #EBookQuery which is the logical AND of the queries in #qs.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="98"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="120">A new #EBookQuery</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="nqs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="114">the number of queries to AND</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="qs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="115">pointer to an array of #EBookQuery items</doc>
          <type name="BookQuery" c:type="EBookQuery**"/>
        </parameter>
        <parameter name="unref" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="116">if %TRUE, the new query takes ownership of the existing queries</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_any_field_contains"
              c:identifier="e_book_query_any_field_contains"
              moved-to="BookQuery.any_field_contains">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="375">Creates a new #EBookQuery which tests if any field contains @value.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="115"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="381">the new #EBookQuery</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="377">a value</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_field_exists"
              c:identifier="e_book_query_field_exists"
              moved-to="BookQuery.field_exists">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="336">Creates a new #EBookQuery which tests if the field @field exists.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="105"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="341">the new #EBookQuery</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="field" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="338">an #EContactField</doc>
          <type name="ContactField" c:type="EContactField"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_field_test"
              c:identifier="e_book_query_field_test"
              moved-to="BookQuery.field_test">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="274">Creates a new #EBookQuery which tests @field for @value using the test @test.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="107"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="282">the new #EBookQuery</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="field" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="276">an #EContactField to test</doc>
          <type name="ContactField" c:type="EContactField"/>
        </parameter>
        <parameter name="test" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="277">the test to apply</doc>
          <type name="BookQueryTest" c:type="EBookQueryTest"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="278">the value to test for</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_from_string"
              c:identifier="e_book_query_from_string"
              moved-to="BookQuery.from_string">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="748">Parse @query_string and return a new #EBookQuery representing it.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="92"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="754">the new #EBookQuery.</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="query_string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="750">the query</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_or"
              c:identifier="e_book_query_or"
              moved-to="BookQuery.or">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="130">Creates a new #EBookQuery which is the logical OR of the queries in #qs.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="100"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="138">A new #EBookQuery</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="nqs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="132">the number of queries to OR</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="qs" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="133">pointer to an array of #EBookQuery items</doc>
          <type name="BookQuery" c:type="EBookQuery**"/>
        </parameter>
        <parameter name="unref" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="134">if %TRUE, the new query takes ownership of the existing queries</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_vcard_field_exists"
              c:identifier="e_book_query_vcard_field_exists"
              moved-to="BookQuery.vcard_field_exists">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="355">Creates a new #EBookQuery which tests if the field @field exists. @field
should be a vCard field name, such as #EVC_FN or #EVC_X_MSN.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="106"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="361">the new #EBookQuery</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="field" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="357">a field name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_query_vcard_field_test"
              c:identifier="e_book_query_vcard_field_test"
              moved-to="BookQuery.vcard_field_test"
              version="2.22">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="309">Creates a new #EBookQuery which tests @field for @value using the test @test.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-query.h"
                       line="110"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-query.c"
             line="317">the new #EBookQuery</doc>
        <type name="BookQuery" c:type="EBookQuery*"/>
      </return-value>
      <parameters>
        <parameter name="field" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="311">a EVCard field name to test</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="test" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="312">the test to apply</doc>
          <type name="BookQueryTest" c:type="EBookQueryTest"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-query.c"
               line="313">the value to test for</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_util_conflict_resolution_to_operation_flags"
              c:identifier="e_book_util_conflict_resolution_to_operation_flags"
              version="3.34">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="140">Encodes the #EConflictResolution into the bit-or of #EBookOperationFlags.
The returned value can be bit-or-ed with other #EBookOperationFlags values.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="124"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="147">a bit-or of #EBookOperationFlags, corresponding to the @conflict_resolution</doc>
        <type name="guint32" c:type="guint32"/>
      </return-value>
      <parameters>
        <parameter name="conflict_resolution" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="142">an #EConflictResolution</doc>
          <type name="EDataServer.ConflictResolution"
                c:type="EConflictResolution"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_util_diff_categories"
              c:identifier="e_book_util_diff_categories"
              version="3.48">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="260">Compares list of categories on the @old_contact with the list of categories
on the @new_contact and fills @out_added categories and @out_removed categories
accordingly, as if the @old_contact is replaced with the @new_contact. When either
of the contacts is %NULL, it's considered as having no categories set.
Rather than returning empty #GHashTable, the return argument is set to %NULL
when there are no added/removed categories.

The key of the hash table is the category string, the value is an integer (1).
There is used the hash table only for speed.

The returned #GHashTable-s should be freed with g_hash_table_unref(),
when no longer needed.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="130"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="old_contact"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="262">an old #EContact, or %NULL</doc>
          <type name="Contact" c:type="EContact*"/>
        </parameter>
        <parameter name="new_contact"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="263">a new #EContact, or %NULL</doc>
          <type name="Contact" c:type="EContact*"/>
        </parameter>
        <parameter name="out_added"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="264">a #GHashTable with added categories</doc>
          <type name="GLib.HashTable" c:type="GHashTable**">
            <type name="utf8"/>
            <type name="gint"/>
          </type>
        </parameter>
        <parameter name="out_removed"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="265">a #GHashTable with removed categories</doc>
          <type name="GLib.HashTable" c:type="GHashTable**">
            <type name="utf8"/>
            <type name="gint"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="book_util_foreach_address"
              c:identifier="e_book_util_foreach_address"
              version="3.44">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="170">Parses the @email_address and calls @func for each found address.
The first parameter of the @func is the name, the second parameter
of the @func is the email, the third parameters of the @func is
the @user_data. The @func returns %TRUE, to continue processing.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="127"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="email_address" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="172">one or more email addresses as string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="call"
                   closure="2">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="173">a function to call for each email
@user_data (closure func): user data passed to @func</doc>
          <type name="GLib.HRFunc" c:type="GHRFunc"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="book_util_operation_flags_to_conflict_resolution"
              c:identifier="e_book_util_operation_flags_to_conflict_resolution"
              version="3.34">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
           line="114">Decodes the #EConflictResolution from the bit-or of #EBookOperationFlags.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-book-contacts-utils.h"
                       line="122"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
             line="120">an #EConflictResolution as stored in the @flags</doc>
        <type name="EDataServer.ConflictResolution"
              c:type="EConflictResolution"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-book-contacts-utils.c"
               line="116">bit-or of #EBookOperationFlags</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="contact_attr_list_copy"
              c:identifier="e_contact_attr_list_copy"
              moved-to="ContactAttrList.copy"
              version="3.8">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-contact.c"
           line="2972">Copies a list of allocated strings, specifically
for the #EContactAttrList boxed type used for multi valued
contact fields.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="429"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2980">A copy of @list</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="utf8"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2974">A #GList of strings</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="contact_attr_list_free"
              c:identifier="e_contact_attr_list_free"
              moved-to="ContactAttrList.free"
              version="3.8">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-contact.c"
           line="2990">Frees a list of allocated strings, specifically
for the #EContactAttrList boxed type used for multi valued
contact fields.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="430"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2992">A #GList of strings</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="contact_date_from_string"
              c:identifier="e_contact_date_from_string"
              moved-to="ContactDate.from_string">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-contact.c"
           line="2299">Creates a new #EContactDate based on @str.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="384"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2305">A new #EContactDate struct.</doc>
        <type name="ContactDate" c:type="EContactDate*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2301">a date string in the format YYYY-MM-DD or YYYYMMDD</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="contact_name_from_string"
              c:identifier="e_contact_name_from_string"
              moved-to="ContactName.from_string">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-contact.c"
           line="2201">Creates a new #EContactName based on the parsed @name_str.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-contact.h"
                       line="393"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-contact.c"
             line="2207">A new #EContactName struct.</doc>
        <type name="ContactName" c:type="EContactName*"/>
      </return-value>
      <parameters>
        <parameter name="name_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-contact.c"
               line="2203">a string representing a contact's full name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="e-book-indices-updater">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-indices-updater.c"
           line="17">This is an abstract class to handle #EBooKindices updates. It's suitable
as a base class for objects handling manual query views (see %E_BOOK_CLIENT_VIEW_FLAGS_MANUAL_QUERY).

The users of this class should call e_book_indices_updater_take_indices() first,
thus the #EBookIndices knows the indices. The indices are subsequently updated
by e_book_indices_updater_add(), e_book_indices_updater_modify() and
e_book_indices_updater_remove() functions, where each returns whether
the indices changed.

Current indices can be obtained by e_book_indices_updater_get_indices().

Note the class is not thread safe. It's a responsibility of the caller
to ensure thread safety.</doc>
    </docsection>
    <docsection name="e-book-query">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-book-query.c"
           line="24">This utility can be used to conveniently create search expressions
which can later be used to query and filter results in the #EBookClient,
#EBookClientView and #EBookClientCursor interfaces.</doc>
    </docsection>
    <docsection name="e-contact">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-contact.c"
           line="23">This subclass of #EVCard is a convenient interface for interacting with
vCards. The #EBookClient, #EBookClientView and #EBookClientCursor return
vCards in the form of an #EContact for your convenience.</doc>
    </docsection>
    <docsection name="e-phone-number">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.h"
           line="27">This modules provides utility functions for parsing and formatting
phone numbers. Under the hood it uses Google's libphonenumber.</doc>
    </docsection>
    <docsection name="e-source-backend-summary-setup">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-source-backend-summary-setup.c"
           line="22">The #ESourceBackendSummarySetup extension configures which #EContactFields
should be in the summary and which of those fields should be optimized for
quicker search results.

Access the extension as follows:

|[
  #include &lt;libebook-contacts/libebook-contacts.h&gt;

  ESourceBackendSummarySetup *extension;

  extension = e_source_get_extension (source, E_SOURCE_EXTENSION_BACKEND_SUMMARY_SETUP);
]|

&lt;note&gt;&lt;para&gt;The summary configuration is expected to be setup in only one way for
a given #ESource at creation time. Any configurations made after creation of the
book in question will be ignored.&lt;/para&gt;&lt;/note&gt;</doc>
    </docsection>
    <docsection name="e-vcard">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-vcard.c"
           line="23">#EVCard is a low-level representation of a vCard, as specified in RFCs
2425 and 2426 (for vCard version 3.0); this class only supports versions 2.1
and 3.0 of the vCard standard.

A vCard is an unordered set of attributes (otherwise known as properties),
each with one or more values. The number of values an attribute has is
determined by its type, and is given in the specification. Each attribute may
also have zero or more named parameters, which provide metadata about its
value.

For example, the following line from a vCard:
|[
ADR;TYPE=WORK:;;100 Waters Edge;Baytown;LA;30314;United States of America
]|
is an &lt;code&gt;ADR&lt;/code&gt; attribute with 6 values giving the different
components of the postal address. It has one parameter, &lt;code&gt;TYPE&lt;/code&gt;,
which specifies that it’s a work address rather than a home address.

Using the #EVCard API, this data is accessible as follows:
&lt;example&gt;
&lt;title&gt;Accessing a Multi-Valued Attribute&lt;/title&gt;
&lt;programlisting&gt;
EVCard *vcard;
EVCardAttribute *attr;
GList *param_values, *values;

vcard = e_vcard_new_from_string (
   "BEGIN:VCARD\n"
   "VERSION:3.0\n"
   "ADR;TYPE=WORK:;;100 Waters Edge;Baytown;LA;30314;United States of America\n"
   "END:VCARD\n");
attr = e_vcard_get_attribute (vcard, "ADR");

g_assert_cmpstr (e_vcard_attribute_get_name (attr), ==, "ADR");
g_assert_true (e_vcard_attribute_is_single_valued (attr) == FALSE);

param_values = e_vcard_attribute_get_param (attr, "TYPE");
g_assert_cmpuint (g_list_length (param_values), ==, 1);
g_assert_cmpstr (param_values-&gt;data, ==, "WORK");

values = e_vcard_attribute_get_values (attr);
g_assert_cmpuint (g_list_length (values), ==, 6);
g_assert_cmpstr (values-&gt;data, ==, "");
g_assert_cmpstr (values-&gt;next-&gt;data, ==, "100 Waters Edge");
g_assert_cmpstr (values-&gt;next-&gt;next-&gt;data, ==, "Baytown");
/&lt;!-- --&gt;* etc. *&lt;!-- --&gt;/

g_object_unref (vcard);
&lt;/programlisting&gt;
&lt;/example&gt;

If a second &lt;code&gt;ADR&lt;/code&gt; attribute was present in the vCard, the above
example would only ever return the first attribute. To access the values of
other attributes of the same type, the entire attribute list must be iterated
over using e_vcard_get_attributes(), then matching on
e_vcard_attribute_get_name().

vCard attribute values may be encoded in the vCard source, using base-64 or
quoted-printable encoding. Such encoded values are automatically decoded when
parsing the vCard, so the values returned by e_vcard_attribute_get_value()
do not need further decoding. The ‘decoded’ functions,
e_vcard_attribute_get_value_decoded() and
e_vcard_attribute_get_values_decoded() are only relevant when adding
attributes which use pre-encoded values and have their &lt;code&gt;ENCODING&lt;/code&gt;
parameter set.

String comparisons in #EVCard are almost universally case-insensitive.
Attribute names, parameter names and parameter values are all compared
case-insensitively. Only attribute values are case sensitive.

#EVCard implements lazy parsing of its vCard data, so the first time its
attributes are accessed may take slightly longer than normal to allow for the
vCard to be parsed. This can be tested by calling e_vcard_is_parsed().</doc>
    </docsection>
    <function name="name_western_parse"
              c:identifier="e_name_western_parse"
              moved-to="NameWestern.parse">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-name-western.c"
           line="961">Parses @full_name and returns an #ENameWestern struct filled with
the component parts of the name.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-name-western.h"
                       line="42"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-name-western.c"
             line="968">A new #ENameWestern struct.</doc>
        <type name="NameWestern" c:type="ENameWestern*"/>
      </return-value>
      <parameters>
        <parameter name="full_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-name-western.c"
               line="963">A string containing a western name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="phone_number_compare_strings"
              c:identifier="e_phone_number_compare_strings"
              moved-to="PhoneNumber.compare_strings"
              version="3.8"
              throws="1">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.c"
           line="319">Compares two phone numbers.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="227"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="327">The quality of matching for the two phone numbers.</doc>
        <type name="PhoneNumberMatch" c:type="EPhoneNumberMatch"/>
      </return-value>
      <parameters>
        <parameter name="first_number" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="321">the first EPhoneNumber to compare</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="second_number" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="322">the second EPhoneNumber to compare</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="phone_number_compare_strings_with_region"
              c:identifier="e_phone_number_compare_strings_with_region"
              moved-to="PhoneNumber.compare_strings_with_region"
              version="3.8"
              throws="1">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.c"
           line="340">Compares two phone numbers within the context of @region_code.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="230"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="349">The quality of matching for the two phone numbers.</doc>
        <type name="PhoneNumberMatch" c:type="EPhoneNumberMatch"/>
      </return-value>
      <parameters>
        <parameter name="first_number" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="342">the first EPhoneNumber to compare</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="second_number" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="343">the second EPhoneNumber to compare</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="region_code"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="344">a two-letter country code, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="phone_number_error_quark"
              c:identifier="e_phone_number_error_quark"
              moved-to="PhoneNumber.error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="phone_number_from_string"
              c:identifier="e_phone_number_from_string"
              moved-to="PhoneNumber.from_string"
              version="3.8"
              throws="1">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.c"
           line="157">Parses the string passed in @phone_number. Note that no validation is
performed whether the recognized phone number is valid for a particular
region.

The two-letter country code passed in @region_code only is used if the
@phone_number is not written in international format. The application's
default region as returned by e_phone_number_get_default_region() is used
if @region_code is %NULL.

If the number is guaranteed to start with a '+' followed by the country
calling code, then "ZZ" can be passed for @region_code.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="215"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="175">a new #EPhoneNumber instance on success,
or %NULL on error. Call e_phone_number_free() to release this instance.</doc>
        <type name="PhoneNumber" c:type="EPhoneNumber*"/>
      </return-value>
      <parameters>
        <parameter name="phone_number" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="159">the phone number to parse</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="region_code"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="160">a two-letter country code, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="phone_number_get_country_code_for_region"
              c:identifier="e_phone_number_get_country_code_for_region"
              moved-to="PhoneNumber.get_country_code_for_region"
              version="3.8"
              throws="1">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.c"
           line="91">Retrieves the preferred country calling code for @region_code,
e.g. 358 for "fi" or 1 for "en_US@UTF-8".

If %NULL is passed for @region_code the default region as returned by
e_phone_number_get_default_region() is used.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="209"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="103">a valid country calling code, or zero if an unknown region
code was passed.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="region_code"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/addressbook/libebook-contacts/e-phone-number.c"
               line="93">a two-letter country code, a locale name, or
%NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="phone_number_get_default_region"
              c:identifier="e_phone_number_get_default_region"
              moved-to="PhoneNumber.get_default_region"
              version="3.8"
              throws="1">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.c"
           line="124">Retrieves the current two-letter country code that's used by default for
parsing phone numbers in e_phone_number_from_string(). It can be useful
to store this number before parsing a bigger number of phone numbers.

The result of this functions depends on the current setup of the
%LC_ADDRESS category: If that category provides a reasonable value
for %_NL_ADDRESS_COUNTRY_AB2 this value is returned. Otherwise the
locale name configured for %LC_ADDRESS is parsed.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="212"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="137">a newly allocated string containing the
current locale's two-letter code for phone number parsing.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="phone_number_is_supported"
              c:identifier="e_phone_number_is_supported"
              moved-to="PhoneNumber.is_supported"
              version="3.8">
      <doc xml:space="preserve"
           filename="src/addressbook/libebook-contacts/e-phone-number.c"
           line="65">Checks if phone number support is available. It is recommended to call this
function before using any of the phone-utils functions to ensure that the
required functionality is available, and to pick alternative mechanisms if
needed.</doc>
      <source-position filename="src/addressbook/libebook-contacts/e-phone-number.h"
                       line="208"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/addressbook/libebook-contacts/e-phone-number.c"
             line="73">%TRUE if phone number support is available.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
  </namespace>
</repository>
