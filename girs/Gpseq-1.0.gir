<?xml version="1.0"?>
<!-- Gpseq-1.0.gir generated by valac 0.48.2.127-d906, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GLib" version="2.0"/>
<include name="GObject" version="2.0"/>
<include name="Gee" version="0.8"/>
<package name="gpseq-1.0"/>
<c:include name="glib.h"/>
<c:include name="gpseq.h"/>
<namespace name="Gpseq" version="1.0" c:prefix="Gpseq">
	<function name="collectors_to_generic_array" c:identifier="gpseq_collectors_to_generic_array">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<array name="GLib.PtrArray" c:type="GPtrArray*">
					<type name="gpointer" c:type="gpointer"/>
				</array>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_to_collection" c:identifier="gpseq_collectors_to_collection">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="factory" transfer-ownership="none">
				<type name="Gpseq.Supplier" c:type="GpseqSupplier*">
					<type name="Gee.Collection" c:type="GeeCollection*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_to_list" c:identifier="gpseq_collectors_to_list">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.List" c:type="GeeList*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_to_set" c:identifier="gpseq_collectors_to_set">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="hash" transfer-ownership="none" allow-none="1" closure="4" scope="notified" destroy="5">
				<type name="Gee.HashDataFunc" c:type="GeeHashDataFunc"/>
			</parameter>
			<parameter name="hash_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="hash_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="equal" transfer-ownership="none" allow-none="1" closure="7" scope="notified" destroy="8">
				<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
			</parameter>
			<parameter name="equal_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="equal_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_to_map" c:identifier="gpseq_collectors_to_map">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="k_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="k_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="k_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="v_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="v_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="v_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="key_mapper" transfer-ownership="none" closure="10" scope="notified" destroy="11">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="key_mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="key_mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="val_mapper" transfer-ownership="none" closure="13" scope="notified" destroy="14">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="val_mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="val_mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="merger" transfer-ownership="none" allow-none="1" closure="16" scope="notified" destroy="17">
				<type name="Gpseq.CombineFunc" c:type="GpseqCombineFunc"/>
			</parameter>
			<parameter name="merger_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="merger_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="key_hash" transfer-ownership="none" allow-none="1" closure="19" scope="notified" destroy="20">
				<type name="Gee.HashDataFunc" c:type="GeeHashDataFunc"/>
			</parameter>
			<parameter name="key_hash_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="key_hash_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="key_equal" transfer-ownership="none" allow-none="1" closure="22" scope="notified" destroy="23">
				<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
			</parameter>
			<parameter name="key_equal_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="key_equal_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="value_equal" transfer-ownership="none" allow-none="1" closure="25" scope="notified" destroy="26">
				<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
			</parameter>
			<parameter name="value_equal_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="value_equal_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_int" c:identifier="gpseq_collectors_sum_int">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gint" c:type="gint"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_uint" c:identifier="gpseq_collectors_sum_uint">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="guint" c:type="guint"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_long" c:identifier="gpseq_collectors_sum_long">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="glong" c:type="glong"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_ulong" c:identifier="gpseq_collectors_sum_ulong">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gulong" c:type="gulong"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_float" c:identifier="gpseq_collectors_sum_float">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gfloat" c:type="gfloat*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_double" c:identifier="gpseq_collectors_sum_double">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gdouble" c:type="gdouble*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_int32" c:identifier="gpseq_collectors_sum_int32">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gint32" c:type="gint32"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_uint32" c:identifier="gpseq_collectors_sum_uint32">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="guint32" c:type="guint32"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_int64" c:identifier="gpseq_collectors_sum_int64">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gint64" c:type="gint64*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_sum_uint64" c:identifier="gpseq_collectors_sum_uint64">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="guint64" c:type="guint64*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_average_float" c:identifier="gpseq_collectors_average_float">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gfloat" c:type="gfloat*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_average_double" c:identifier="gpseq_collectors_average_double">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gdouble" c:type="gdouble*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_group_by" c:identifier="gpseq_collectors_group_by">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="Gee.List" c:type="GeeList*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="k_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="k_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="k_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="classifier" transfer-ownership="none" closure="7" scope="notified" destroy="8">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="classifier_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="classifier_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_group_by_with" c:identifier="gpseq_collectors_group_by_with">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="k_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="k_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="k_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="v_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="v_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="v_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="classifier" transfer-ownership="none" closure="10" scope="notified" destroy="11">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="classifier_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="classifier_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="downstream" transfer-ownership="none">
				<type name="Gpseq.Collector" c:type="GpseqCollector*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="GObject.Object" c:type="GObject*"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_partition" c:identifier="gpseq_collectors_partition">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="gboolean" c:type="gboolean"/>
					<type name="Gee.List" c:type="GeeList*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="pred" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
			</parameter>
			<parameter name="pred_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="pred_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_partition_with" c:identifier="gpseq_collectors_partition_with">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="gboolean" c:type="gboolean"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="v_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="v_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="v_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="pred" transfer-ownership="none" closure="7" scope="notified" destroy="8">
				<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
			</parameter>
			<parameter name="pred_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="pred_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="downstream" transfer-ownership="none">
				<type name="Gpseq.Collector" c:type="GpseqCollector*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="GObject.Object" c:type="GObject*"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_max" c:identifier="gpseq_collectors_max">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="compare" transfer-ownership="none" allow-none="1" closure="4" scope="notified" destroy="5">
				<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
			</parameter>
			<parameter name="compare_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="compare_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_min" c:identifier="gpseq_collectors_min">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="compare" transfer-ownership="none" allow-none="1" closure="4" scope="notified" destroy="5">
				<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
			</parameter>
			<parameter name="compare_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="compare_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_count" c:identifier="gpseq_collectors_count">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gint64" c:type="gint64*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_fold" c:identifier="gpseq_collectors_fold">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="accumulator" transfer-ownership="none" closure="7" scope="notified" destroy="8">
				<type name="Gpseq.FoldFunc" c:type="GpseqFoldFunc"/>
			</parameter>
			<parameter name="accumulator_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="accumulator_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="combiner" transfer-ownership="none" closure="10" scope="notified" destroy="11">
				<type name="Gpseq.CombineFunc" c:type="GpseqCombineFunc"/>
			</parameter>
			<parameter name="combiner_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="combiner_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="identity" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_reduce" c:identifier="gpseq_collectors_reduce">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="accumulator" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.CombineFunc" c:type="GpseqCombineFunc"/>
			</parameter>
			<parameter name="accumulator_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="accumulator_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_join" c:identifier="gpseq_collectors_join">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="utf8" c:type="gchar*"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="delimiter" transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_filter" c:identifier="gpseq_collectors_filter">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="pred" transfer-ownership="none" closure="7" scope="notified" destroy="8">
				<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
			</parameter>
			<parameter name="pred_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="pred_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="downstream" transfer-ownership="none">
				<type name="Gpseq.Collector" c:type="GpseqCollector*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="GObject.Object" c:type="GObject*"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_tee" c:identifier="gpseq_collectors_tee">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="downstreams" transfer-ownership="full">
				<array length="7" c:type="GpseqCollector**">
					<type name="Gpseq.Collector" c:type="GpseqCollector*">
						<type name="GObject.Object" c:type="GObject*"/>
						<type name="GObject.Object" c:type="GObject*"/>
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</array>
			</parameter>
			<parameter name="downstreams_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="merger" transfer-ownership="none" closure="9" scope="notified" destroy="10">
				<type name="Gpseq.TeeMergeFunc" c:type="GpseqTeeMergeFunc"/>
			</parameter>
			<parameter name="merger_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="merger_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_map" c:identifier="gpseq_collectors_map">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="r_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="r_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="r_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="mapper" transfer-ownership="none" closure="10" scope="notified" destroy="11">
				<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
			</parameter>
			<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="downstream" transfer-ownership="none">
				<type name="Gpseq.Collector" c:type="GpseqCollector*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="GObject.Object" c:type="GObject*"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</parameter>
		</parameters>
	</function>
	<function name="collectors_wrap" c:identifier="gpseq_collectors_wrap">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Collector" c:type="GpseqCollector*">
				<type name="Gpseq.Wrapper" c:type="GpseqWrapper*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
				<type name="GObject.Object" c:type="GObject*"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="collector" transfer-ownership="none">
				<type name="Gpseq.Collector" c:type="GpseqCollector*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="GObject.Object" c:type="GObject*"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</parameter>
		</parameters>
	</function>
	<function name="compares_reverse" c:identifier="gpseq_compares_reverse">
		<return-value transfer-ownership="none" closure="3" scope="notified" destroy="4">
			<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="cmp" transfer-ownership="none" allow-none="1" closure="4" scope="notified" destroy="5">
				<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
			</parameter>
			<parameter name="cmp_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="cmp_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="result_target" direction="out" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void**"/>
			</parameter>
			<parameter name="result_target_destroy_notify" direction="out" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify*"/>
			</parameter>
		</parameters>
	</function>
	<function name="compares_join" c:identifier="gpseq_compares_join">
		<return-value transfer-ownership="none" closure="6" scope="notified" destroy="7">
			<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="cmp" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
			</parameter>
			<parameter name="cmp_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="cmp_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="cmp2" transfer-ownership="none" closure="7" scope="notified" destroy="8">
				<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
			</parameter>
			<parameter name="cmp2_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="cmp2_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="result_target" direction="out" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void**"/>
			</parameter>
			<parameter name="result_target_destroy_notify" direction="out" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int_add" c:identifier="gpseq_overflow_int_add">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int_sub" c:identifier="gpseq_overflow_int_sub">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int_mul" c:identifier="gpseq_overflow_int_mul">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_long_add" c:identifier="gpseq_overflow_long_add">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="glong" c:type="glong"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="glong" c:type="glong"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="glong" c:type="glong*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_long_sub" c:identifier="gpseq_overflow_long_sub">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="glong" c:type="glong"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="glong" c:type="glong"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="glong" c:type="glong*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_long_mul" c:identifier="gpseq_overflow_long_mul">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="glong" c:type="glong"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="glong" c:type="glong"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="glong" c:type="glong*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int32_add" c:identifier="gpseq_overflow_int32_add">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint32" c:type="gint32*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int32_sub" c:identifier="gpseq_overflow_int32_sub">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint32" c:type="gint32*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int32_mul" c:identifier="gpseq_overflow_int32_mul">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint32" c:type="gint32"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint32" c:type="gint32*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int64_add" c:identifier="gpseq_overflow_int64_add">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int64_sub" c:identifier="gpseq_overflow_int64_sub">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
		</parameters>
	</function>
	<function name="overflow_int64_mul" c:identifier="gpseq_overflow_int64_mul">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="a" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
			<parameter name="b" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
		</parameters>
	</function>
	<bitfield name="CollectorFeatures" c:type="GpseqCollectorFeatures" glib:type-name="GpseqCollectorFeatures" glib:get-type="gpseq_collector_features_get_type">
		<member name="concurrent" c:identifier="GPSEQ_COLLECTOR_FEATURES_CONCURRENT" value="1"/>
		<member name="unordered" c:identifier="GPSEQ_COLLECTOR_FEATURES_UNORDERED" value="2"/>
	</bitfield>
	<enumeration name="ChannelError" c:type="GpseqChannelError" glib:error-domain="gpseq-channel-error-quark">
		<member name="closed" c:identifier="GPSEQ_CHANNEL_ERROR_CLOSED" value="0"/>
		<member name="timeout" c:identifier="GPSEQ_CHANNEL_ERROR_TIMEOUT" value="1"/>
		<member name="try_failed" c:identifier="GPSEQ_CHANNEL_ERROR_TRY_FAILED" value="2"/>
	</enumeration>
	<enumeration name="MapError" c:type="GpseqMapError" glib:error-domain="gpseq-map-error-quark">
		<member name="duplicate_key" c:identifier="GPSEQ_MAP_ERROR_DUPLICATE_KEY" value="0"/>
	</enumeration>
	<enumeration name="OptionalError" c:type="GpseqOptionalError" glib:error-domain="gpseq-optional-error-quark">
		<member name="not_present" c:identifier="GPSEQ_OPTIONAL_ERROR_NOT_PRESENT" value="0"/>
	</enumeration>
	<class name="ArraySpliterator" c:type="GpseqArraySpliterator" glib:type-name="GpseqArraySpliterator" glib:get-type="gpseq_array_spliterator_get_type" glib:type-struct="ArraySpliteratorClass" parent="GObject.Object">
		<implements name="Gpseq.Spliterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_array_spliterator_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.ArraySpliterator" c:type="GpseqArraySpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="array" transfer-ownership="full">
					<array length="4" c:type="gpointer*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</parameter>
				<parameter name="array_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="stop" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ArraySpliteratorPrivate" c:type="GpseqArraySpliteratorPrivate*"/>
		</field>
	</class>
	<record name="ArraySpliteratorClass" c:type="GpseqArraySpliteratorClass" glib:is-gtype-struct-for="ArraySpliterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ArraySpliteratorPrivate" c:type="GpseqArraySpliteratorPrivate" disguised="1"/>
	<class name="ForkJoinTask" c:type="GpseqForkJoinTask" glib:type-name="GpseqForkJoinTask" glib:get-type="gpseq_fork_join_task_get_type" glib:type-struct="ForkJoinTaskClass" parent="GObject.Object" abstract="1">
		<implements name="Gpseq.Task"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<property name="parent">
			<type name="Gpseq.ForkJoinTask" c:type="GpseqForkJoinTask*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_parent" c:identifier="gpseq_fork_join_task_get_parent">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="Gpseq.ForkJoinTask" c:type="GpseqForkJoinTask*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<property name="root">
			<type name="Gpseq.ForkJoinTask" c:type="GpseqForkJoinTask*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_root" c:identifier="gpseq_fork_join_task_get_root">
			<return-value transfer-ownership="none">
				<type name="Gpseq.ForkJoinTask" c:type="GpseqForkJoinTask*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<property name="is-root">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_root" c:identifier="gpseq_fork_join_task_get_is_root">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="threshold">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_threshold" c:identifier="gpseq_fork_join_task_get_threshold">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
		</method>
		<property name="max-depth">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_max_depth" c:identifier="gpseq_fork_join_task_get_max_depth">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<property name="depth" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_depth" c:identifier="gpseq_fork_join_task_get_depth">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_depth" c:identifier="gpseq_fork_join_task_set_depth">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="executor">
			<type name="Gpseq.Executor" c:type="GpseqExecutor*"/>
		</property>
		<method name="get_executor" c:identifier="gpseq_fork_join_task_get_executor">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Executor" c:type="GpseqExecutor*"/>
			</return-value>
		</method>
		<property name="promise">
			<type name="Gpseq.Promise" c:type="GpseqPromise*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_promise" c:identifier="gpseq_fork_join_task_get_promise">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Promise" c:type="GpseqPromise*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="join" c:identifier="gpseq_fork_join_task_join" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<method name="fork" c:identifier="gpseq_fork_join_task_fork">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<property name="shared-result">
			<type name="Gpseq.ForkJoinTaskSharedResult" c:type="GpseqForkJoinTaskSharedResult*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_shared_result" c:identifier="gpseq_fork_join_task_get_shared_result">
			<return-value transfer-ownership="none">
				<type name="Gpseq.ForkJoinTaskSharedResult" c:type="GpseqForkJoinTaskSharedResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="cancel" c:identifier="gpseq_fork_join_task_cancel">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<property name="is-cancelled">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_cancelled" c:identifier="gpseq_fork_join_task_get_is_cancelled">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="compute" c:identifier="gpseq_fork_join_task_compute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="compute" invoker="compute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<field name="priv" readable="0" private="1">
			<type name="ForkJoinTaskPrivate" c:type="GpseqForkJoinTaskPrivate*"/>
		</field>
	</class>
	<record name="ForkJoinTaskClass" c:type="GpseqForkJoinTaskClass" glib:is-gtype-struct-for="ForkJoinTask">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="compute">
			<callback name="compute" c:type="compute">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.ForkJoinTask" c:type="GpseqForkJoinTask*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="ForkJoinTaskPrivate" c:type="GpseqForkJoinTaskPrivate" disguised="1"/>
	<class name="ForkJoinTaskSharedResult" c:type="GpseqForkJoinTaskSharedResult" glib:type-name="GpseqForkJoinTaskSharedResult" glib:get-type="gpseq_fork_join_task_shared_result_get_type" glib:type-struct="ForkJoinTaskSharedResultClass" glib:fundamental="1" glib:ref-func="gpseq_fork_join_task_shared_result_ref" glib:unref-func="gpseq_fork_join_task_shared_result_unref" glib:set-value-func="gpseq_fork_join_task_value_set_shared_result" glib:get-value-func="gpseq_fork_join_task_value_get_shared_result">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<method name="get_ready" c:identifier="gpseq_fork_join_task_shared_result_get_ready">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="get_value" c:identifier="gpseq_fork_join_task_shared_result_get_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gpseq_fork_join_task_shared_result_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_error" c:identifier="gpseq_fork_join_task_shared_result_get_error">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GLib.Error" c:type="GError*"/>
			</return-value>
		</method>
		<method name="set_error" c:identifier="gpseq_fork_join_task_shared_result_set_error">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="full" allow-none="1">
					<type name="GLib.Error" c:type="GError*"/>
				</parameter>
			</parameters>
		</method>
		<method name="bake_promise" c:identifier="gpseq_fork_join_task_shared_result_bake_promise">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="promise" transfer-ownership="none">
					<type name="Gpseq.Promise" c:type="GpseqPromise*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gpseq_fork_join_task_shared_result_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.ForkJoinTaskSharedResult" c:type="GpseqForkJoinTaskSharedResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ForkJoinTaskSharedResultPrivate" c:type="GpseqForkJoinTaskSharedResultPrivate*"/>
		</field>
	</class>
	<record name="ForkJoinTaskSharedResultClass" c:type="GpseqForkJoinTaskSharedResultClass" glib:is-gtype-struct-for="ForkJoinTaskSharedResult">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="ForkJoinTaskSharedResultPrivate" c:type="GpseqForkJoinTaskSharedResultPrivate" disguised="1"/>
	<class name="FuncTask" c:type="GpseqFuncTask" glib:type-name="GpseqFuncTask" glib:get-type="gpseq_func_task_get_type" glib:type-struct="FuncTaskClass" parent="GObject.Object">
		<implements name="Gpseq.Task"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_func_task_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.FuncTask" c:type="GpseqFuncTask*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.TaskFunc" c:type="GpseqTaskFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="FuncTaskPrivate" c:type="GpseqFuncTaskPrivate*"/>
		</field>
	</class>
	<record name="FuncTaskClass" c:type="GpseqFuncTaskClass" glib:is-gtype-struct-for="FuncTask">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FuncTaskPrivate" c:type="GpseqFuncTaskPrivate" disguised="1"/>
	<class name="Future" c:type="GpseqFuture" glib:type-name="GpseqFuture" glib:get-type="gpseq_future_get_type" glib:type-struct="FutureClass" parent="GObject.Object" abstract="1">
		<implements name="Gee.Hashable"/>
		<implements name="Gpseq.Result"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<function name="of" c:identifier="gpseq_future_of">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</function>
		<function name="err" c:identifier="gpseq_future_err" version="0.2.0-beta">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="exception" transfer-ownership="full">
					<type name="GLib.Error" c:type="GError*"/>
				</parameter>
			</parameters>
		</function>
		<function name="done" c:identifier="gpseq_future_done" version="0.3.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="result" transfer-ownership="none">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</function>
		<property name="ready">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_ready" c:identifier="gpseq_future_get_ready">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_ready" invoker="get_ready">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="wait" c:identifier="gpseq_future_wait" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="wait" invoker="wait" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="wait_until" c:identifier="gpseq_future_wait_until" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="value" direction="out" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="wait_until" invoker="wait_until" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="value" direction="out" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="transform" c:identifier="gpseq_future_transform">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultTransformFunc" c:type="GpseqResultTransformFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="transform" invoker="transform">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultTransformFunc" c:type="GpseqResultTransformFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<field name="priv" readable="0" private="1">
			<type name="FuturePrivate" c:type="GpseqFuturePrivate*"/>
		</field>
	</class>
	<record name="FutureClass" c:type="GpseqFutureClass" glib:is-gtype-struct-for="Future">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="wait">
			<callback name="wait" c:type="wait" throws="1">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Future" c:type="GpseqFuture*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="wait_until">
			<callback name="wait_until" c:type="wait_until" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Future" c:type="GpseqFuture*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="end_time" transfer-ownership="none">
						<type name="gint64" c:type="gint64"/>
					</parameter>
					<parameter name="value" direction="out" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="transform">
			<callback name="transform" c:type="transform">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Future" c:type="GpseqFuture*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="a_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="a_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="a_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="5" scope="notified" destroy="6">
						<type name="Gpseq.ResultTransformFunc" c:type="GpseqResultTransformFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="FuturePrivate" c:type="GpseqFuturePrivate" disguised="1"/>
	<class name="GenericArraySpliterator" c:type="GpseqGenericArraySpliterator" glib:type-name="GpseqGenericArraySpliterator" glib:get-type="gpseq_generic_array_spliterator_get_type" glib:type-struct="GenericArraySpliteratorClass" parent="GObject.Object">
		<implements name="Gpseq.Spliterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_generic_array_spliterator_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.GenericArraySpliterator" c:type="GpseqGenericArraySpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="array" transfer-ownership="none">
					<array name="GLib.PtrArray" c:type="GPtrArray*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</parameter>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="stop" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="GenericArraySpliteratorPrivate" c:type="GpseqGenericArraySpliteratorPrivate*"/>
		</field>
	</class>
	<record name="GenericArraySpliteratorClass" c:type="GpseqGenericArraySpliteratorClass" glib:is-gtype-struct-for="GenericArraySpliterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GenericArraySpliteratorPrivate" c:type="GpseqGenericArraySpliteratorPrivate" disguised="1"/>
	<class name="IteratorSpliterator" c:type="GpseqIteratorSpliterator" glib:type-name="GpseqIteratorSpliterator" glib:get-type="gpseq_iterator_spliterator_get_type" glib:type-struct="IteratorSpliteratorClass" parent="GObject.Object">
		<implements name="Gpseq.Spliterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_iterator_spliterator_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.IteratorSpliterator" c:type="GpseqIteratorSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="iterator" transfer-ownership="none">
					<type name="Gee.Iterator" c:type="GeeIterator*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="estimated_size" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="size_known" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_collection" c:identifier="gpseq_iterator_spliterator_new_from_collection">
			<return-value transfer-ownership="full">
				<type name="Gpseq.IteratorSpliterator" c:type="GpseqIteratorSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="collection" transfer-ownership="none">
					<type name="Gee.Collection" c:type="GeeCollection*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="IteratorSpliteratorPrivate" c:type="GpseqIteratorSpliteratorPrivate*"/>
		</field>
	</class>
	<record name="IteratorSpliteratorClass" c:type="GpseqIteratorSpliteratorClass" glib:is-gtype-struct-for="IteratorSpliterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="IteratorSpliteratorPrivate" c:type="GpseqIteratorSpliteratorPrivate" disguised="1"/>
	<class name="ListSpliterator" c:type="GpseqListSpliterator" glib:type-name="GpseqListSpliterator" glib:get-type="gpseq_list_spliterator_get_type" glib:type-struct="ListSpliteratorClass" parent="GObject.Object">
		<implements name="Gpseq.Spliterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_list_spliterator_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.ListSpliterator" c:type="GpseqListSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="list" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="stop" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ListSpliteratorPrivate" c:type="GpseqListSpliteratorPrivate*"/>
		</field>
	</class>
	<record name="ListSpliteratorClass" c:type="GpseqListSpliteratorClass" glib:is-gtype-struct-for="ListSpliterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ListSpliteratorPrivate" c:type="GpseqListSpliteratorPrivate" disguised="1"/>
	<class name="Optional" c:type="GpseqOptional" glib:type-name="GpseqOptional" glib:get-type="gpseq_optional_get_type" glib:type-struct="OptionalClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="empty" c:identifier="gpseq_optional_new_empty">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="of" c:identifier="gpseq_optional_new_of">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="value-type">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_value_type" c:identifier="gpseq_optional_get_value_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<property name="value">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<method name="get_value" c:identifier="gpseq_optional_get_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<property name="is-present">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_present" c:identifier="gpseq_optional_get_is_present">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="to_string" c:identifier="gpseq_optional_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="if_present" c:identifier="gpseq_optional_if_present">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="consumer" transfer-ownership="none" closure="1" scope="call">
					<type name="GLib.Func" c:type="GFunc"/>
				</parameter>
				<parameter name="consumer_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="or_else" c:identifier="gpseq_optional_or_else">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="other" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="or_else_get" c:identifier="gpseq_optional_or_else_get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="supplier" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.SupplyFunc" c:type="GpseqSupplyFunc"/>
				</parameter>
				<parameter name="supplier_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="or_else_throw" c:identifier="gpseq_optional_or_else_throw" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="error_supplier" transfer-ownership="none" allow-none="1" closure="1" scope="call">
					<type name="Gpseq.SupplyFunc" c:type="GpseqSupplyFunc"/>
				</parameter>
				<parameter name="error_supplier_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="or_else_fail" c:identifier="gpseq_optional_or_else_fail">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<method name="filter" c:identifier="gpseq_optional_filter">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="call">
					<type name="Gee.Predicate" c:type="GeePredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="map" c:identifier="gpseq_optional_map">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="mapper" transfer-ownership="none" closure="4" scope="call">
					<type name="Gee.MapFunc" c:type="GeeMapFunc"/>
				</parameter>
				<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gpseq_optional_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="OptionalPrivate" c:type="GpseqOptionalPrivate*"/>
		</field>
	</class>
	<record name="OptionalClass" c:type="GpseqOptionalClass" glib:is-gtype-struct-for="Optional">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="OptionalPrivate" c:type="GpseqOptionalPrivate" disguised="1"/>
	<class name="Promise" c:type="GpseqPromise" glib:type-name="GpseqPromise" glib:get-type="gpseq_promise_get_type" glib:type-struct="PromiseClass" glib:fundamental="1" glib:ref-func="gpseq_promise_ref" glib:unref-func="gpseq_promise_unref" glib:set-value-func="gpseq_value_set_promise" glib:get-value-func="gpseq_value_get_promise">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<constructor name="new" c:identifier="gpseq_promise_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Promise" c:type="GpseqPromise*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_future" c:identifier="gpseq_promise_get_future">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gpseq_promise_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_exception" c:identifier="gpseq_promise_set_exception">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="exception" transfer-ownership="full">
					<type name="GLib.Error" c:type="GError*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="PromisePrivate" c:type="GpseqPromisePrivate*"/>
		</field>
	</class>
	<record name="PromiseClass" c:type="GpseqPromiseClass" glib:is-gtype-struct-for="Promise">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="PromisePrivate" c:type="GpseqPromisePrivate" disguised="1"/>
	<class name="Seq" c:type="GpseqSeq" glib:type-name="GpseqSeq" glib:get-type="gpseq_seq_get_type" glib:type-struct="SeqClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<function name="of_array" c:identifier="gpseq_seq_of_array">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="array" transfer-ownership="none">
					<array length="4" c:type="gpointer*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</parameter>
				<parameter name="array_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="of_owned_array" c:identifier="gpseq_seq_of_owned_array">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="array" transfer-ownership="full">
					<array length="4" c:type="gpointer*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</parameter>
				<parameter name="array_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="of_generic_array" c:identifier="gpseq_seq_of_generic_array">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="array" transfer-ownership="none">
					<array name="GLib.PtrArray" c:type="GPtrArray*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="of_iterator" c:identifier="gpseq_seq_of_iterator">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="iterator" transfer-ownership="none">
					<type name="Gee.Iterator" c:type="GeeIterator*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="estimated_size" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="size_known" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="of_collection" c:identifier="gpseq_seq_of_collection">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="collection" transfer-ownership="none">
					<type name="Gee.Collection" c:type="GeeCollection*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="of_list" c:identifier="gpseq_seq_of_list">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="list" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="of_supplier" c:identifier="gpseq_seq_of_supplier">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="supplier" transfer-ownership="none">
					<type name="Gpseq.Supplier" c:type="GpseqSupplier*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="of_supply_func" c:identifier="gpseq_seq_of_supply_func">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.SupplyFunc" c:type="GpseqSupplyFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="iterate" c:identifier="gpseq_seq_iterate">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="seed" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="pred" transfer-ownership="none" closure="5" scope="notified" destroy="6">
					<type name="Gee.Predicate" c:type="GeePredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="pred_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="next" transfer-ownership="none" closure="8" scope="notified" destroy="9">
					<type name="Gee.MapFunc" c:type="GeeMapFunc"/>
				</parameter>
				<parameter name="next_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="next_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="empty" c:identifier="gpseq_seq_empty">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gpseq_seq_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="spliterator" transfer-ownership="none">
					<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="env" transfer-ownership="none" allow-none="1">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="element-type">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_element_type" c:identifier="gpseq_seq_get_element_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<property name="task-env">
			<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
		</property>
		<method name="get_task_env" c:identifier="gpseq_seq_get_task_env">
			<return-value transfer-ownership="none">
				<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
			</return-value>
		</method>
		<property name="is-closed">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_closed" c:identifier="gpseq_seq_get_is_closed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="close" c:identifier="gpseq_seq_close">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<property name="is-parallel">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_parallel" c:identifier="gpseq_seq_get_is_parallel">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="sequential" c:identifier="gpseq_seq_sequential">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="parallel" c:identifier="gpseq_seq_parallel">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="iterator" c:identifier="gpseq_seq_iterator">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterator" c:type="GeeIterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="spliterator" c:identifier="gpseq_seq_spliterator">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="count" c:identifier="gpseq_seq_count">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gint64" c:type="gint64*"/>
				</type>
			</return-value>
		</method>
		<method name="distinct" c:identifier="gpseq_seq_distinct">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="hash" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
					<type name="Gee.HashDataFunc" c:type="GeeHashDataFunc"/>
				</parameter>
				<parameter name="hash_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="hash_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="equal" transfer-ownership="none" allow-none="1" closure="4" scope="notified" destroy="5">
					<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
				</parameter>
				<parameter name="equal_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="equal_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="all_match" c:identifier="gpseq_seq_all_match">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gboolean" c:type="gboolean*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="any_match" c:identifier="gpseq_seq_any_match">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gboolean" c:type="gboolean*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="none_match" c:identifier="gpseq_seq_none_match">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gboolean" c:type="gboolean*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_any" c:identifier="gpseq_seq_find_any">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gpseq.Optional" c:type="GpseqOptional*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_first" c:identifier="gpseq_seq_find_first">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gpseq.Optional" c:type="GpseqOptional*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="skip" c:identifier="gpseq_seq_skip">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="limit" c:identifier="gpseq_seq_limit">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="chop" c:identifier="gpseq_seq_chop">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="length" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="skip_ordered" c:identifier="gpseq_seq_skip_ordered">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="limit_ordered" c:identifier="gpseq_seq_limit_ordered">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="chop_ordered" c:identifier="gpseq_seq_chop_ordered">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="length" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="filter" c:identifier="gpseq_seq_filter">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="pred_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="fold" c:identifier="gpseq_seq_fold">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="accumulator" transfer-ownership="none" closure="4" scope="call">
					<type name="Gpseq.FoldFunc" c:type="GpseqFoldFunc"/>
				</parameter>
				<parameter name="accumulator_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="combiner" transfer-ownership="none" closure="6" scope="call">
					<type name="Gpseq.CombineFunc" c:type="GpseqCombineFunc"/>
				</parameter>
				<parameter name="combiner_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="identity" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="reduce" c:identifier="gpseq_seq_reduce">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gpseq.Optional" c:type="GpseqOptional*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="accumulator" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.CombineFunc" c:type="GpseqCombineFunc"/>
				</parameter>
				<parameter name="accumulator_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="map" c:identifier="gpseq_seq_map">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
				</parameter>
				<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="flat_map" c:identifier="gpseq_seq_flat_map">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="mapper" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.FlatMapFunc" c:type="GpseqFlatMapFunc"/>
				</parameter>
				<parameter name="mapper_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="mapper_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="max" c:identifier="gpseq_seq_max">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gpseq.Optional" c:type="GpseqOptional*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="compare" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
					<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
				</parameter>
				<parameter name="compare_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="compare_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="min" c:identifier="gpseq_seq_min">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gpseq.Optional" c:type="GpseqOptional*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="compare" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
					<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
				</parameter>
				<parameter name="compare_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="compare_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="order_by" c:identifier="gpseq_seq_order_by">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="compare" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
					<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
				</parameter>
				<parameter name="compare_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="compare_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="reverse_order_by" c:identifier="gpseq_seq_reverse_order_by" version="0.4.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Seq" c:type="GpseqSeq*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="compare" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
					<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
				</parameter>
				<parameter name="compare_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="compare_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="foreach" c:identifier="gpseq_seq_foreach">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.Func" c:type="GpseqFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="f_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="collect" c:identifier="gpseq_seq_collect">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="collector" transfer-ownership="none">
					<type name="Gpseq.Collector" c:type="GpseqCollector*">
						<type name="gpointer" c:type="gpointer"/>
						<type name="gpointer" c:type="gpointer"/>
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="collect_ordered" c:identifier="gpseq_seq_collect_ordered">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="collector" transfer-ownership="none">
					<type name="Gpseq.Collector" c:type="GpseqCollector*">
						<type name="gpointer" c:type="gpointer"/>
						<type name="gpointer" c:type="gpointer"/>
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="group_by" c:identifier="gpseq_seq_group_by">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="gpointer" c:type="gpointer"/>
						<type name="Gee.List" c:type="GeeList*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="k_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="k_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="k_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="classifier" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
				</parameter>
				<parameter name="classifier_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="classifier_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="partition" c:identifier="gpseq_seq_partition">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="gboolean" c:type="gboolean"/>
						<type name="Gee.List" c:type="GeeList*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="pred" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.Predicate" c:type="GpseqPredicate"/>
				</parameter>
				<parameter name="pred_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="pred_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_generic_array" c:identifier="gpseq_seq_to_generic_array" version="0.4.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<array name="GLib.PtrArray" c:type="GPtrArray*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</type>
			</return-value>
		</method>
		<method name="to_list" c:identifier="gpseq_seq_to_list" version="0.4.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gee.List" c:type="GeeList*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
		</method>
		<method name="to_set" c:identifier="gpseq_seq_to_set" version="0.4.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gee.Set" c:type="GeeSet*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="hash" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
					<type name="Gee.HashDataFunc" c:type="GeeHashDataFunc"/>
				</parameter>
				<parameter name="hash_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="hash_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="equal" transfer-ownership="none" allow-none="1" closure="4" scope="notified" destroy="5">
					<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
				</parameter>
				<parameter name="equal_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="equal_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_map" c:identifier="gpseq_seq_to_map" version="0.4.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="gpointer" c:type="gpointer"/>
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<parameter name="k_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="k_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="k_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="v_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="v_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="v_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="key_mapper" transfer-ownership="none" closure="7" scope="notified" destroy="8">
					<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
				</parameter>
				<parameter name="key_mapper_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="key_mapper_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="val_mapper" transfer-ownership="none" closure="10" scope="notified" destroy="11">
					<type name="Gpseq.MapFunc" c:type="GpseqMapFunc"/>
				</parameter>
				<parameter name="val_mapper_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="val_mapper_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="merger" transfer-ownership="none" allow-none="1" closure="13" scope="notified" destroy="14">
					<type name="Gpseq.CombineFunc" c:type="GpseqCombineFunc"/>
				</parameter>
				<parameter name="merger_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="merger_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="key_hash" transfer-ownership="none" allow-none="1" closure="16" scope="notified" destroy="17">
					<type name="Gee.HashDataFunc" c:type="GeeHashDataFunc"/>
				</parameter>
				<parameter name="key_hash_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="key_hash_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="key_equal" transfer-ownership="none" allow-none="1" closure="19" scope="notified" destroy="20">
					<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
				</parameter>
				<parameter name="key_equal_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="key_equal_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value_equal" transfer-ownership="none" allow-none="1" closure="22" scope="notified" destroy="23">
					<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
				</parameter>
				<parameter name="value_equal_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="value_equal_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="SeqPrivate" c:type="GpseqSeqPrivate*"/>
		</field>
	</class>
	<record name="SeqClass" c:type="GpseqSeqClass" glib:is-gtype-struct-for="Seq">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SeqPrivate" c:type="GpseqSeqPrivate" disguised="1"/>
	<class name="SpliteratorTask" c:type="GpseqSpliteratorTask" glib:type-name="GpseqSpliteratorTask" glib:get-type="gpseq_spliterator_task_get_type" glib:type-struct="SpliteratorTaskClass" parent="Gpseq.ForkJoinTask" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gpseq.ForkJoinTask" c:type="GpseqForkJoinTask"/>
		</field>
		<property name="r-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="r-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="r-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<property name="spliterator">
			<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_spliterator" c:identifier="gpseq_spliterator_task_get_spliterator">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<property name="left-child">
			<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_left_child" c:identifier="gpseq_spliterator_task_get_left_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<property name="right-child">
			<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_right_child" c:identifier="gpseq_spliterator_task_get_right_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<property name="is-leaf">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_leaf" c:identifier="gpseq_spliterator_task_get_is_leaf">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="is-leftmost">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_leftmost" c:identifier="gpseq_spliterator_task_get_is_leftmost">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="cancel_later_nodes" c:identifier="gpseq_spliterator_task_cancel_later_nodes">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<property name="empty-result">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<method name="get_empty_result" c:identifier="gpseq_spliterator_task_get_empty_result">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_empty_result" invoker="get_empty_result">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="leaf_compute" c:identifier="gpseq_spliterator_task_leaf_compute" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="leaf_compute" invoker="leaf_compute" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="merge_results" c:identifier="gpseq_spliterator_task_merge_results" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="left" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="right" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="merge_results" invoker="merge_results" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="left" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="right" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="make_child" c:identifier="gpseq_spliterator_task_make_child">
			<return-value transfer-ownership="full">
				<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="spliterator" transfer-ownership="none">
					<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="make_child" invoker="make_child">
			<return-value transfer-ownership="full">
				<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="spliterator" transfer-ownership="none">
					<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</virtual-method>
		<field name="priv" readable="0" private="1">
			<type name="SpliteratorTaskPrivate" c:type="GpseqSpliteratorTaskPrivate*"/>
		</field>
	</class>
	<record name="SpliteratorTaskClass" c:type="GpseqSpliteratorTaskClass" glib:is-gtype-struct-for="SpliteratorTask">
		<field name="parent_class" readable="0" private="1">
			<type name="Gpseq.ForkJoinTaskClass" c:type="GpseqForkJoinTaskClass"/>
		</field>
		<field name="leaf_compute">
			<callback name="leaf_compute" c:type="leaf_compute" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="merge_results">
			<callback name="merge_results" c:type="merge_results" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="left" transfer-ownership="full" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
					<parameter name="right" transfer-ownership="full" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="make_child">
			<callback name="make_child" c:type="make_child">
				<return-value transfer-ownership="full">
					<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
						<type name="gpointer" c:type="gpointer"/>
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.SpliteratorTask" c:type="GpseqSpliteratorTask*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="spliterator" transfer-ownership="none">
						<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SpliteratorTaskPrivate" c:type="GpseqSpliteratorTaskPrivate" disguised="1"/>
	<class name="SubArray" c:type="GpseqSubArray" glib:type-name="GpseqSubArray" glib:get-type="gpseq_sub_array_get_type" glib:type-struct="SubArrayClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_sub_array_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.SubArray" c:type="GpseqSubArray*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<array length="4" c:type="gpointer*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_sub_array" c:identifier="gpseq_sub_array_new_from_sub_array">
			<return-value transfer-ownership="full">
				<type name="Gpseq.SubArray" c:type="GpseqSubArray*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="array" transfer-ownership="none">
					<type name="Gpseq.SubArray" c:type="GpseqSubArray*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="stop" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_data" c:identifier="gpseq_sub_array_get_data">
			<return-value transfer-ownership="none">
				<array length="0" c:type="gpointer*">
					<type name="gpointer" c:type="gpointer"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<property name="size">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_size" c:identifier="gpseq_sub_array_get_size">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="get" c:identifier="gpseq_sub_array_get">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="set" c:identifier="gpseq_sub_array_set">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="item" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="sort" c:identifier="gpseq_sub_array_sort">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="compare_func" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
					<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
				</parameter>
				<parameter name="compare_func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="compare_func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="copy" c:identifier="gpseq_sub_array_copy">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="src" transfer-ownership="none">
					<type name="Gpseq.SubArray" c:type="GpseqSubArray*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="src_start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="copy_array" c:identifier="gpseq_sub_array_copy_array">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="src" transfer-ownership="none">
					<array length="2" c:type="gpointer*">
						<type name="gpointer" c:type="gpointer"/>
					</array>
				</parameter>
				<parameter name="src_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="src_start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="sub_array" c:identifier="gpseq_sub_array_sub_array">
			<return-value transfer-ownership="full">
				<type name="Gpseq.SubArray" c:type="GpseqSubArray*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="stop" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="SubArrayPrivate" c:type="GpseqSubArrayPrivate*"/>
		</field>
	</class>
	<record name="SubArrayClass" c:type="GpseqSubArrayClass" glib:is-gtype-struct-for="SubArray">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SubArrayPrivate" c:type="GpseqSubArrayPrivate" disguised="1"/>
	<class name="SubArraySpliterator" c:type="GpseqSubArraySpliterator" glib:type-name="GpseqSubArraySpliterator" glib:get-type="gpseq_sub_array_spliterator_get_type" glib:type-struct="SubArraySpliteratorClass" parent="GObject.Object">
		<implements name="Gpseq.Spliterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_sub_array_spliterator_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.SubArraySpliterator" c:type="GpseqSubArraySpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="array" transfer-ownership="none">
					<type name="Gpseq.SubArray" c:type="GpseqSubArray*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="start" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="stop" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="SubArraySpliteratorPrivate" c:type="GpseqSubArraySpliteratorPrivate*"/>
		</field>
	</class>
	<record name="SubArraySpliteratorClass" c:type="GpseqSubArraySpliteratorClass" glib:is-gtype-struct-for="SubArraySpliterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SubArraySpliteratorPrivate" c:type="GpseqSubArraySpliteratorPrivate" disguised="1"/>
	<class name="SupplierSpliterator" c:type="GpseqSupplierSpliterator" glib:type-name="GpseqSupplierSpliterator" glib:get-type="gpseq_supplier_spliterator_get_type" glib:type-struct="SupplierSpliteratorClass" parent="GObject.Object">
		<implements name="Gpseq.Spliterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_supplier_spliterator_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.SupplierSpliterator" c:type="GpseqSupplierSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="supplier" transfer-ownership="none">
					<type name="Gpseq.Supplier" c:type="GpseqSupplier*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="SupplierSpliteratorPrivate" c:type="GpseqSupplierSpliteratorPrivate*"/>
		</field>
	</class>
	<record name="SupplierSpliteratorClass" c:type="GpseqSupplierSpliteratorClass" glib:is-gtype-struct-for="SupplierSpliterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SupplierSpliteratorPrivate" c:type="GpseqSupplierSpliteratorPrivate" disguised="1"/>
	<class name="TaskEnv" c:type="GpseqTaskEnv" glib:type-name="GpseqTaskEnv" glib:get-type="gpseq_task_env_get_type" glib:type-struct="TaskEnvClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<function name="get_default_task_env" c:identifier="gpseq_task_env_get_default_task_env">
			<return-value transfer-ownership="full">
				<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
			</return-value>
		</function>
		<function name="set_default_task_env" c:identifier="gpseq_task_env_set_default_task_env">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="task_env" transfer-ownership="none">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_common_task_env" c:identifier="gpseq_task_env_get_common_task_env" version="0.2.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
			</return-value>
		</function>
		<function name="push" c:identifier="gpseq_task_env_push" version="0.2.0-alpha">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="task_env" transfer-ownership="none">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pop" c:identifier="gpseq_task_env_pop" version="0.2.0-alpha">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</function>
		<function name="apply" c:identifier="gpseq_task_env_apply" version="0.2.0-alpha">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="task_env" transfer-ownership="none">
					<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="Gpseq.VoidFunc" c:type="GpseqVoidFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<property name="executor">
			<type name="Gpseq.Executor" c:type="GpseqExecutor*"/>
		</property>
		<method name="get_executor" c:identifier="gpseq_task_env_get_executor">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Executor" c:type="GpseqExecutor*"/>
			</return-value>
		</method>
		<virtual-method name="get_executor" invoker="get_executor">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Executor" c:type="GpseqExecutor*"/>
			</return-value>
		</virtual-method>
		<method name="resolve_threshold" c:identifier="gpseq_task_env_resolve_threshold">
			<return-value transfer-ownership="full">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<parameter name="elements" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="threads" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="resolve_threshold" invoker="resolve_threshold">
			<return-value transfer-ownership="full">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<parameter name="elements" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="threads" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="resolve_max_depth" c:identifier="gpseq_task_env_resolve_max_depth">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="elements" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="threads" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="resolve_max_depth" invoker="resolve_max_depth">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="elements" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="threads" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<field name="priv" readable="0" private="1">
			<type name="TaskEnvPrivate" c:type="GpseqTaskEnvPrivate*"/>
		</field>
	</class>
	<record name="TaskEnvClass" c:type="GpseqTaskEnvClass" glib:is-gtype-struct-for="TaskEnv">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="resolve_threshold">
			<callback name="resolve_threshold" c:type="resolve_threshold">
				<return-value transfer-ownership="full">
					<type name="gint64" c:type="gint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
					</parameter>
					<parameter name="elements" transfer-ownership="none">
						<type name="gint64" c:type="gint64"/>
					</parameter>
					<parameter name="threads" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="resolve_max_depth">
			<callback name="resolve_max_depth" c:type="resolve_max_depth">
				<return-value transfer-ownership="full">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.TaskEnv" c:type="GpseqTaskEnv*"/>
					</parameter>
					<parameter name="elements" transfer-ownership="none">
						<type name="gint64" c:type="gint64"/>
					</parameter>
					<parameter name="threads" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TaskEnvPrivate" c:type="GpseqTaskEnvPrivate" disguised="1"/>
	<class name="WaitGroup" c:type="GpseqWaitGroup" glib:type-name="GpseqWaitGroup" glib:get-type="gpseq_wait_group_get_type" glib:type-struct="WaitGroupClass" parent="GObject.Object" version="0.3.0-alpha">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gpseq_wait_group_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.WaitGroup" c:type="GpseqWaitGroup*"/>
			</return-value>
		</constructor>
		<method name="add" c:identifier="gpseq_wait_group_add">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="delta" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="done" c:identifier="gpseq_wait_group_done">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="task" c:identifier="gpseq_wait_group_task" version="0.4.0-alpha">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.TaskFunc" c:type="GpseqTaskFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="run" c:identifier="gpseq_wait_group_run" version="0.4.0-alpha">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.VoidTaskFunc" c:type="GpseqVoidTaskFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="wait" c:identifier="gpseq_wait_group_wait">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="wait_until" c:identifier="gpseq_wait_group_wait_until">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="WaitGroupPrivate" c:type="GpseqWaitGroupPrivate*"/>
		</field>
	</class>
	<record name="WaitGroupClass" c:type="GpseqWaitGroupClass" glib:is-gtype-struct-for="WaitGroup">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="WaitGroupPrivate" c:type="GpseqWaitGroupPrivate" disguised="1"/>
	<class name="WorkerPool" c:type="GpseqWorkerPool" glib:type-name="GpseqWorkerPool" glib:get-type="gpseq_worker_pool_get_type" glib:type-struct="WorkerPoolClass" parent="GObject.Object">
		<implements name="Gpseq.Executor"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<function name="get_default_factory" c:identifier="gpseq_worker_pool_get_default_factory">
			<return-value transfer-ownership="full">
				<type name="Gpseq.ThreadFactory" c:type="GpseqThreadFactory*"/>
			</return-value>
		</function>
		<constructor name="with_defaults" c:identifier="gpseq_worker_pool_new_with_defaults" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
			</return-value>
		</constructor>
		<constructor name="new" c:identifier="gpseq_worker_pool_new" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
			</return-value>
			<parameters>
				<parameter name="parallels" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="factory" transfer-ownership="none">
					<type name="Gpseq.ThreadFactory" c:type="GpseqThreadFactory*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="max-threads" writable="1" version="0.2.0-alpha">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_max_threads" c:identifier="gpseq_worker_pool_get_max_threads">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_max_threads" c:identifier="gpseq_worker_pool_set_max_threads">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="num-threads" version="0.2.0-alpha">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_num_threads" c:identifier="gpseq_worker_pool_get_num_threads">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<property name="factory">
			<type name="Gpseq.ThreadFactory" c:type="GpseqThreadFactory*"/>
		</property>
		<method name="get_factory" c:identifier="gpseq_worker_pool_get_factory">
			<return-value transfer-ownership="none">
				<type name="Gpseq.ThreadFactory" c:type="GpseqThreadFactory*"/>
			</return-value>
		</method>
		<property name="is-terminating">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_terminating" c:identifier="gpseq_worker_pool_get_is_terminating">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="is-terminated">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_terminated" c:identifier="gpseq_worker_pool_get_is_terminated">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="is-terminating-started">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_terminating_started" c:identifier="gpseq_worker_pool_get_is_terminating_started">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="terminate" c:identifier="gpseq_worker_pool_terminate">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="terminate_now" c:identifier="gpseq_worker_pool_terminate_now">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="wait_termination" c:identifier="gpseq_worker_pool_wait_termination">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="wait_termination_until" c:identifier="gpseq_worker_pool_wait_termination_until">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="WorkerPoolPrivate" c:type="GpseqWorkerPoolPrivate*"/>
		</field>
	</class>
	<record name="WorkerPoolClass" c:type="GpseqWorkerPoolClass" glib:is-gtype-struct-for="WorkerPool">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="WorkerPoolPrivate" c:type="GpseqWorkerPoolPrivate" disguised="1"/>
	<class name="WorkerThread" c:type="GpseqWorkerThread" glib:type-name="GpseqWorkerThread" glib:get-type="gpseq_worker_thread_get_type" glib:type-struct="WorkerThreadClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<function name="get_by" c:identifier="gpseq_worker_thread_get_by">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Gpseq.WorkerThread" c:type="GpseqWorkerThread*"/>
			</return-value>
			<parameters>
				<parameter name="thread" transfer-ownership="none">
					<type name="GLib.Thread" c:type="GThread*"/>
				</parameter>
			</parameters>
		</function>
		<function name="self" c:identifier="gpseq_worker_thread_self">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Gpseq.WorkerThread" c:type="GpseqWorkerThread*"/>
			</return-value>
		</function>
		<constructor name="new" c:identifier="gpseq_worker_thread_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.WorkerThread" c:type="GpseqWorkerThread*"/>
			</return-value>
			<parameters>
				<parameter name="pool" transfer-ownership="none">
					<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="thread">
			<type name="GLib.Thread" c:type="GThread*">
				<type name="gpointer" c:type="void*"/>
			</type>
		</property>
		<method name="get_thread" c:identifier="gpseq_worker_thread_get_thread">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GLib.Thread" c:type="GThread*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
		</method>
		<property name="pool">
			<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
		</property>
		<method name="get_pool" c:identifier="gpseq_worker_thread_get_pool">
			<return-value transfer-ownership="none">
				<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
			</return-value>
		</method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gpseq_worker_thread_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="is-started">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_started" c:identifier="gpseq_worker_thread_get_is_started">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="is-terminated">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_terminated" c:identifier="gpseq_worker_thread_get_is_terminated">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="is-alive">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_alive" c:identifier="gpseq_worker_thread_get_is_alive">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="start" c:identifier="gpseq_worker_thread_start" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="join" c:identifier="gpseq_worker_thread_join">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="blocking" c:identifier="gpseq_worker_thread_blocking" throws="1" version="0.2.0-alpha">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="call">
					<type name="Gpseq.TaskFunc" c:type="GpseqTaskFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="WorkerThreadPrivate" c:type="GpseqWorkerThreadPrivate*"/>
		</field>
	</class>
	<record name="WorkerThreadClass" c:type="GpseqWorkerThreadClass" glib:is-gtype-struct-for="WorkerThread">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="WorkerThreadPrivate" c:type="GpseqWorkerThreadPrivate" disguised="1"/>
	<class name="Wrapper" c:type="GpseqWrapper" glib:type-name="GpseqWrapper" glib:get-type="gpseq_wrapper_get_type" glib:type-struct="WrapperClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="gpseq_wrapper_new">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Wrapper" c:type="GpseqWrapper*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="value">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<method name="get_value" c:identifier="gpseq_wrapper_get_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<property name="value-type">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_value_type" c:identifier="gpseq_wrapper_get_value_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="WrapperPrivate" c:type="GpseqWrapperPrivate*"/>
		</field>
	</class>
	<record name="WrapperClass" c:type="GpseqWrapperClass" glib:is-gtype-struct-for="Wrapper">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="WrapperPrivate" c:type="GpseqWrapperPrivate" disguised="1"/>
	<interface name="Channel" c:type="GpseqChannel" glib:type-name="GpseqChannel" glib:get-type="gpseq_channel_get_type" glib:type-struct="ChannelIface" version="0.3.0-alpha">
		<prerequisite name="Gpseq.Sender"/>
		<prerequisite name="Gpseq.Receiver"/>
		<function name="bounded" c:identifier="gpseq_channel_bounded">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Channel" c:type="GpseqChannel*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="proposed_capacity" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="unbounded" c:identifier="gpseq_channel_unbounded">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Channel" c:type="GpseqChannel*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</function>
	</interface>
	<record name="ChannelIface" c:type="GpseqChannelIface" glib:is-gtype-struct-for="Channel">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="ChannelBase" c:type="GpseqChannelBase" glib:type-name="GpseqChannelBase" glib:get-type="gpseq_channel_base_get_type" glib:type-struct="ChannelBaseIface" version="0.3.0-alpha">
		<prerequisite name="GObject.Object"/>
		<property name="capacity">
			<type name="Gpseq.Optional" c:type="GpseqOptional*">
				<type name="gint64" c:type="gint64*"/>
			</type>
		</property>
		<method name="get_capacity" c:identifier="gpseq_channel_base_get_capacity">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gint64" c:type="gint64*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_capacity" invoker="get_capacity">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Optional" c:type="GpseqOptional*">
					<type name="gint64" c:type="gint64*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="length">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_length" c:identifier="gpseq_channel_base_get_length">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
		</virtual-method>
		<method name="get_is_full" c:identifier="gpseq_channel_base_get_is_full">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_is_full" invoker="get_is_full">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="get_is_empty" c:identifier="gpseq_channel_base_get_is_empty">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_is_empty" invoker="get_is_empty">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="close" c:identifier="gpseq_channel_base_close">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="close" invoker="close">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="ChannelBaseIface" c:type="GpseqChannelBaseIface" glib:is-gtype-struct-for="ChannelBase">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="close">
			<callback name="close" c:type="close">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.ChannelBase" c:type="GpseqChannelBase*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_capacity">
			<callback name="get_capacity" c:type="get_capacity">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Optional" c:type="GpseqOptional*">
						<type name="gint64" c:type="gint64*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.ChannelBase" c:type="GpseqChannelBase*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.ChannelBase" c:type="GpseqChannelBase*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_full">
			<callback name="get_is_full" c:type="get_is_full">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.ChannelBase" c:type="GpseqChannelBase*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_empty">
			<callback name="get_is_empty" c:type="get_is_empty">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.ChannelBase" c:type="GpseqChannelBase*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Collector" c:type="GpseqCollector" glib:type-name="GpseqCollector" glib:get-type="gpseq_collector_get_type" glib:type-struct="CollectorIface">
		<prerequisite name="GObject.Object"/>
		<property name="features">
			<type name="Gpseq.CollectorFeatures" c:type="GpseqCollectorFeatures"/>
		</property>
		<method name="get_features" c:identifier="gpseq_collector_get_features">
			<return-value transfer-ownership="none">
				<type name="Gpseq.CollectorFeatures" c:type="GpseqCollectorFeatures"/>
			</return-value>
		</method>
		<virtual-method name="get_features" invoker="get_features">
			<return-value transfer-ownership="none">
				<type name="Gpseq.CollectorFeatures" c:type="GpseqCollectorFeatures"/>
			</return-value>
		</virtual-method>
		<method name="create_accumulator" c:identifier="gpseq_collector_create_accumulator" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="create_accumulator" invoker="create_accumulator" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="accumulate" c:identifier="gpseq_collector_accumulate" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="g" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="a" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="accumulate" invoker="accumulate" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="g" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="a" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="combine" c:identifier="gpseq_collector_combine" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="b" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="combine" invoker="combine" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="b" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="finish" c:identifier="gpseq_collector_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="finish" invoker="finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="CollectorIface" c:type="GpseqCollectorIface" glib:is-gtype-struct-for="Collector">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create_accumulator">
			<callback name="create_accumulator" c:type="create_accumulator" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Collector" c:type="GpseqCollector*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="accumulate">
			<callback name="accumulate" c:type="accumulate" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Collector" c:type="GpseqCollector*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="g" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
					<parameter name="a" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="combine">
			<callback name="combine" c:type="combine" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Collector" c:type="GpseqCollector*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="a" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
					<parameter name="b" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="finish">
			<callback name="finish" c:type="finish" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Collector" c:type="GpseqCollector*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="a" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_features">
			<callback name="get_features" c:type="get_features">
				<return-value transfer-ownership="none">
					<type name="Gpseq.CollectorFeatures" c:type="GpseqCollectorFeatures"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Collector" c:type="GpseqCollector*">
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Executor" c:type="GpseqExecutor" glib:type-name="GpseqExecutor" glib:get-type="gpseq_executor_get_type" glib:type-struct="ExecutorIface">
		<prerequisite name="GObject.Object"/>
		<method name="submit" c:identifier="gpseq_executor_submit">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="task" transfer-ownership="none">
					<type name="Gpseq.Task" c:type="GpseqTask*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="submit" invoker="submit">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="task" transfer-ownership="none">
					<type name="Gpseq.Task" c:type="GpseqTask*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="parallels">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_parallels" c:identifier="gpseq_executor_get_parallels">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_parallels" invoker="get_parallels">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="ExecutorIface" c:type="GpseqExecutorIface" glib:is-gtype-struct-for="Executor">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="submit">
			<callback name="submit" c:type="submit">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Executor" c:type="GpseqExecutor*"/>
					</parameter>
					<parameter name="task" transfer-ownership="none">
						<type name="Gpseq.Task" c:type="GpseqTask*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_parallels">
			<callback name="get_parallels" c:type="get_parallels">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Executor" c:type="GpseqExecutor*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Receiver" c:type="GpseqReceiver" glib:type-name="GpseqReceiver" glib:get-type="gpseq_receiver_get_type" glib:type-struct="ReceiverIface" version="0.3.0-alpha">
		<prerequisite name="Gpseq.ChannelBase"/>
		<prerequisite name="Gee.Traversable"/>
		<method name="recv" c:identifier="gpseq_receiver_recv">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="recv" invoker="recv">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="recv_until" c:identifier="gpseq_receiver_recv_until">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="recv_until" invoker="recv_until">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="try_recv" c:identifier="gpseq_receiver_try_recv">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="try_recv" invoker="try_recv">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</virtual-method>
	</interface>
	<record name="ReceiverIface" c:type="GpseqReceiverIface" glib:is-gtype-struct-for="Receiver">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="recv">
			<callback name="recv" c:type="recv">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Receiver" c:type="GpseqReceiver*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="recv_until">
			<callback name="recv_until" c:type="recv_until">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Receiver" c:type="GpseqReceiver*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="end_time" transfer-ownership="none">
						<type name="gint64" c:type="gint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_recv">
			<callback name="try_recv" c:type="try_recv">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Receiver" c:type="GpseqReceiver*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Result" c:type="GpseqResult" glib:type-name="GpseqResult" glib:get-type="gpseq_result_get_type" glib:type-struct="ResultIface" version="0.3.0-alpha">
		<prerequisite name="Gee.Hashable"/>
		<function name="of" c:identifier="gpseq_result_of">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</function>
		<function name="err" c:identifier="gpseq_result_err">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="exception" transfer-ownership="full">
					<type name="GLib.Error" c:type="GError*"/>
				</parameter>
			</parameters>
		</function>
		<method name="get_value_type" c:identifier="gpseq_result_get_value_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<method name="get_value" c:identifier="gpseq_result_get_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<method name="get_exception" c:identifier="gpseq_result_get_exception">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GLib.Error" c:type="GError*"/>
			</return-value>
		</method>
		<method name="get_is_err" c:identifier="gpseq_result_get_is_err">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="ok" c:identifier="gpseq_result_ok" version="0.3.0-beta">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="ok_with" c:identifier="gpseq_result_ok_with" version="0.3.0-beta">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="expected" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="equal" transfer-ownership="none" allow-none="1" closure="2" scope="notified" destroy="3">
					<type name="Gee.EqualDataFunc" c:type="GeeEqualDataFunc"/>
				</parameter>
				<parameter name="equal_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="equal_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="future" c:identifier="gpseq_result_future">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="future" invoker="future">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="get" c:identifier="gpseq_result_get" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get" invoker="get" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="transform" c:identifier="gpseq_result_transform">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultTransformFunc" c:type="GpseqResultTransformFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="transform" invoker="transform">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultTransformFunc" c:type="GpseqResultTransformFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="flat_map" c:identifier="gpseq_result_flat_map">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultFlatMapFunc" c:type="GpseqResultFlatMapFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="flat_map" invoker="flat_map">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultFlatMapFunc" c:type="GpseqResultFlatMapFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="map" c:identifier="gpseq_result_map">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultMapFunc" c:type="GpseqResultMapFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="map" invoker="map">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.ResultMapFunc" c:type="GpseqResultMapFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="map_err" c:identifier="gpseq_result_map_err">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.ResultMapErrorFunc" c:type="GpseqResultMapErrorFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="map_err" invoker="map_err">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.ResultMapErrorFunc" c:type="GpseqResultMapErrorFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="zip" c:identifier="gpseq_result_zip">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="b_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="b_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="b_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="zip_func" transfer-ownership="none" closure="7" scope="notified" destroy="8">
					<type name="Gpseq.ResultZipFunc" c:type="GpseqResultZipFunc"/>
				</parameter>
				<parameter name="zip_func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="zip_func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="second" transfer-ownership="none">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="zip" invoker="zip">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="b_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="b_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="b_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="zip_func" transfer-ownership="none" closure="7" scope="notified" destroy="8">
					<type name="Gpseq.ResultZipFunc" c:type="GpseqResultZipFunc"/>
				</parameter>
				<parameter name="zip_func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="zip_func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="second" transfer-ownership="none">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="then" c:identifier="gpseq_result_then">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="GLib.Func" c:type="GFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="then" invoker="then">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="GLib.Func" c:type="GFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="and_then" c:identifier="gpseq_result_and_then">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.Func" c:type="GpseqFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="and_then" invoker="and_then">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gpseq.Func" c:type="GpseqFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<callback name="TransformFunc" c:type="GpseqResultTransformFunc">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="result" transfer-ownership="none">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="7">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="FlatMapFunc" c:type="GpseqResultFlatMapFunc">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="7">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="MapFunc" c:type="GpseqResultMapFunc" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="7">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="MapErrorFunc" c:type="GpseqResultMapErrorFunc">
			<return-value transfer-ownership="full">
				<type name="GLib.Error" c:type="GError*"/>
			</return-value>
			<parameters>
				<parameter name="err" transfer-ownership="full">
					<type name="GLib.Error" c:type="GError*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="LightMapFunc" c:type="GpseqResultLightMapFunc" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="7">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="ZipFunc" c:type="GpseqResultZipFunc" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="b_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="b_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="b_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="c_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="c_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="c_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="a" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="b" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="11">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</interface>
	<record name="ResultIface" c:type="GpseqResultIface" glib:is-gtype-struct-for="Result">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="future">
			<callback name="future" c:type="future">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Future" c:type="GpseqFuture*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get">
			<callback name="get" c:type="get" throws="1">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="transform">
			<callback name="transform" c:type="transform">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="a_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="a_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="a_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="5" scope="notified" destroy="6">
						<type name="Gpseq.ResultTransformFunc" c:type="GpseqResultTransformFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="flat_map">
			<callback name="flat_map" c:type="flat_map">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="a_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="a_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="a_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="5" scope="notified" destroy="6">
						<type name="Gpseq.ResultFlatMapFunc" c:type="GpseqResultFlatMapFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="map">
			<callback name="map" c:type="map">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="a_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="a_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="a_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="5" scope="notified" destroy="6">
						<type name="Gpseq.ResultMapFunc" c:type="GpseqResultMapFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="map_err">
			<callback name="map_err" c:type="map_err">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="2" scope="notified" destroy="3">
						<type name="Gpseq.ResultMapErrorFunc" c:type="GpseqResultMapErrorFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="zip">
			<callback name="zip" c:type="zip">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="a_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="a_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="a_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="b_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="b_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="b_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="zip_func" transfer-ownership="none" closure="8" scope="notified" destroy="9">
						<type name="Gpseq.ResultZipFunc" c:type="GpseqResultZipFunc"/>
					</parameter>
					<parameter name="zip_func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="zip_func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="second" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="then">
			<callback name="then" c:type="then">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="2" scope="notified" destroy="3">
						<type name="GLib.Func" c:type="GFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="and_then">
			<callback name="and_then" c:type="and_then">
				<return-value transfer-ownership="full">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Result" c:type="GpseqResult*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="2" scope="notified" destroy="3">
						<type name="Gpseq.Func" c:type="GpseqFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Sender" c:type="GpseqSender" glib:type-name="GpseqSender" glib:get-type="gpseq_sender_get_type" glib:type-struct="SenderIface" version="0.3.0-alpha">
		<prerequisite name="Gpseq.ChannelBase"/>
		<method name="send" c:identifier="gpseq_sender_send">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="send" invoker="send">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="send_until" c:identifier="gpseq_sender_send_until">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="send_until" invoker="send_until">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="end_time" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="try_send" c:identifier="gpseq_sender_try_send">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="try_send" invoker="try_send">
			<return-value transfer-ownership="container">
				<type name="Gpseq.Result" c:type="GpseqResult*">
					<type name="gpointer" c:type="void*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="SenderIface" c:type="GpseqSenderIface" glib:is-gtype-struct-for="Sender">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="send">
			<callback name="send" c:type="send">
				<return-value transfer-ownership="container">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="void*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Sender" c:type="GpseqSender*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="data" transfer-ownership="full" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="send_until">
			<callback name="send_until" c:type="send_until">
				<return-value transfer-ownership="container">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="void*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Sender" c:type="GpseqSender*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="data" transfer-ownership="full" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
					<parameter name="end_time" transfer-ownership="none">
						<type name="gint64" c:type="gint64"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_send">
			<callback name="try_send" c:type="try_send">
				<return-value transfer-ownership="container">
					<type name="Gpseq.Result" c:type="GpseqResult*">
						<type name="gpointer" c:type="void*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Sender" c:type="GpseqSender*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="data" transfer-ownership="full" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Spliterator" c:type="GpseqSpliterator" glib:type-name="GpseqSpliterator" glib:get-type="gpseq_spliterator_get_type" glib:type-struct="SpliteratorIface">
		<prerequisite name="GObject.Object"/>
		<function name="empty" c:identifier="gpseq_spliterator_empty">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</function>
		<method name="get_element_type" c:identifier="gpseq_spliterator_get_element_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<method name="try_split" c:identifier="gpseq_spliterator_try_split">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="try_split" invoker="try_split">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="try_advance" c:identifier="gpseq_spliterator_try_advance" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="consumer" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Func" c:type="GpseqFunc"/>
				</parameter>
				<parameter name="consumer_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="try_advance" invoker="try_advance" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="consumer" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Func" c:type="GpseqFunc"/>
				</parameter>
				<parameter name="consumer_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="estimated-size">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_estimated_size" c:identifier="gpseq_spliterator_get_estimated_size">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
		</method>
		<virtual-method name="get_estimated_size" invoker="get_estimated_size">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
		</virtual-method>
		<property name="is-size-known">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_size_known" c:identifier="gpseq_spliterator_get_is_size_known">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_is_size_known" invoker="get_is_size_known">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="each" c:identifier="gpseq_spliterator_each" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Func" c:type="GpseqFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="each" invoker="each" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.Func" c:type="GpseqFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="each_chunk" c:identifier="gpseq_spliterator_each_chunk" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.EachChunkFunc" c:type="GpseqEachChunkFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="each_chunk" invoker="each_chunk" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none" closure="1" scope="call">
					<type name="Gpseq.EachChunkFunc" c:type="GpseqEachChunkFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="SpliteratorIface" c:type="GpseqSpliteratorIface" glib:is-gtype-struct-for="Spliterator">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="try_split">
			<callback name="try_split" c:type="try_split">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_advance">
			<callback name="try_advance" c:type="try_advance" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="consumer" transfer-ownership="none" closure="2" scope="call">
						<type name="Gpseq.Func" c:type="GpseqFunc"/>
					</parameter>
					<parameter name="consumer_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="each">
			<callback name="each" c:type="each" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="f" transfer-ownership="none" closure="2" scope="call">
						<type name="Gpseq.Func" c:type="GpseqFunc"/>
					</parameter>
					<parameter name="f_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="each_chunk">
			<callback name="each_chunk" c:type="each_chunk" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
					<parameter name="f" transfer-ownership="none" closure="2" scope="call">
						<type name="Gpseq.EachChunkFunc" c:type="GpseqEachChunkFunc"/>
					</parameter>
					<parameter name="f_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_estimated_size">
			<callback name="get_estimated_size" c:type="get_estimated_size">
				<return-value transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_size_known">
			<callback name="get_is_size_known" c:type="get_is_size_known">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Spliterator" c:type="GpseqSpliterator*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Supplier" c:type="GpseqSupplier" glib:type-name="GpseqSupplier" glib:get-type="gpseq_supplier_get_type" glib:type-struct="SupplierIface">
		<prerequisite name="GObject.Object"/>
		<function name="from_func" c:identifier="gpseq_supplier_from_func">
			<return-value transfer-ownership="full">
				<type name="Gpseq.Supplier" c:type="GpseqSupplier*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Gpseq.SupplyFunc" c:type="GpseqSupplyFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</function>
		<method name="supply" c:identifier="gpseq_supplier_supply">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="supply" invoker="supply">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="SupplierIface" c:type="GpseqSupplierIface" glib:is-gtype-struct-for="Supplier">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="supply">
			<callback name="supply" c:type="supply">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Supplier" c:type="GpseqSupplier*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Task" c:type="GpseqTask" glib:type-name="GpseqTask" glib:get-type="gpseq_task_get_type" glib:type-struct="TaskIface">
		<prerequisite name="GObject.Object"/>
		<property name="future">
			<type name="Gpseq.Future" c:type="GpseqFuture*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_future" c:identifier="gpseq_task_get_future">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_future" invoker="get_future">
			<return-value transfer-ownership="none">
				<type name="Gpseq.Future" c:type="GpseqFuture*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="compute" c:identifier="gpseq_task_compute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="compute" invoker="compute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="invoke" c:identifier="gpseq_task_invoke" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
	</interface>
	<record name="TaskIface" c:type="GpseqTaskIface" glib:is-gtype-struct-for="Task">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="compute">
			<callback name="compute" c:type="compute">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Task" c:type="GpseqTask*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_future">
			<callback name="get_future" c:type="get_future">
				<return-value transfer-ownership="none">
					<type name="Gpseq.Future" c:type="GpseqFuture*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.Task" c:type="GpseqTask*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="ThreadFactory" c:type="GpseqThreadFactory" glib:type-name="GpseqThreadFactory" glib:get-type="gpseq_thread_factory_get_type" glib:type-struct="ThreadFactoryIface">
		<prerequisite name="GObject.Object"/>
		<method name="create_thread" c:identifier="gpseq_thread_factory_create_thread">
			<return-value transfer-ownership="full">
				<type name="Gpseq.WorkerThread" c:type="GpseqWorkerThread*"/>
			</return-value>
			<parameters>
				<parameter name="pool" transfer-ownership="none">
					<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_thread" invoker="create_thread">
			<return-value transfer-ownership="full">
				<type name="Gpseq.WorkerThread" c:type="GpseqWorkerThread*"/>
			</return-value>
			<parameters>
				<parameter name="pool" transfer-ownership="none">
					<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ThreadFactoryIface" c:type="GpseqThreadFactoryIface" glib:is-gtype-struct-for="ThreadFactory">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create_thread">
			<callback name="create_thread" c:type="create_thread">
				<return-value transfer-ownership="full">
					<type name="Gpseq.WorkerThread" c:type="GpseqWorkerThread*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gpseq.ThreadFactory" c:type="GpseqThreadFactory*"/>
					</parameter>
					<parameter name="pool" transfer-ownership="none">
						<type name="Gpseq.WorkerPool" c:type="GpseqWorkerPool*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="CacheLinePad" c:type="GpseqCacheLinePad" version="0.3.0-alpha">
	</record>
	<callback name="CombineFunc" c:type="GpseqCombineFunc" throws="1">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="a" transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="b" transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="5">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="EachChunkFunc" c:type="GpseqEachChunkFunc" throws="1">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="chunk" transfer-ownership="none">
				<array length="4" c:type="gpointer*">
					<type name="gpointer" c:type="gpointer"/>
				</array>
			</parameter>
			<parameter name="chunk_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="5">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="FlatMapFunc" c:type="GpseqFlatMapFunc" throws="1">
		<return-value transfer-ownership="full">
			<type name="Gee.Iterator" c:type="GeeIterator*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g" transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="7">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="FoldFunc" c:type="GpseqFoldFunc" throws="1">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g" transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="a" transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="8">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="Func" c:type="GpseqFunc" throws="1">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="4">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="MapFunc" c:type="GpseqMapFunc" throws="1">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g" transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="7">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="Predicate" c:type="GpseqPredicate" throws="1">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="g" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="4">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="SupplyFunc" c:type="GpseqSupplyFunc">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="3">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="TaskFunc" c:type="GpseqTaskFunc" throws="1">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="3">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="TeeMergeFunc" c:type="GpseqTeeMergeFunc" throws="1">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="a_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="a_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="a_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="results" transfer-ownership="none">
				<array length="4" c:type="GObject**">
					<type name="GObject.Object" c:type="GObject*"/>
				</array>
			</parameter>
			<parameter name="results_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="5">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="VoidFunc" c:type="GpseqVoidFunc" version="0.2.0-alpha">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
	</callback>
	<callback name="VoidTaskFunc" c:type="GpseqVoidTaskFunc" throws="1" version="0.2.0-alpha">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
	</callback>
	<function name="parallel_sort" c:identifier="gpseq_parallel_sort">
		<return-value transfer-ownership="container">
			<type name="Gpseq.Future" c:type="GpseqFuture*">
				<type name="gpointer" c:type="void*"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="array" transfer-ownership="none">
				<array length="4" c:type="gpointer*">
					<type name="gpointer" c:type="gpointer"/>
				</array>
			</parameter>
			<parameter name="array_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="compare" transfer-ownership="none" allow-none="1" closure="6" scope="notified" destroy="7">
				<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
			</parameter>
			<parameter name="compare_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="compare_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="task" c:identifier="gpseq_task">
		<return-value transfer-ownership="full">
			<type name="Gpseq.Future" c:type="GpseqFuture*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.TaskFunc" c:type="GpseqTaskFunc"/>
			</parameter>
			<parameter name="func_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="run" c:identifier="gpseq_run" version="0.3.0-beta">
		<return-value transfer-ownership="container">
			<type name="Gpseq.Future" c:type="GpseqFuture*">
				<type name="gpointer" c:type="void*"/>
			</type>
		</return-value>
		<parameters>
			<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
				<type name="Gpseq.VoidTaskFunc" c:type="GpseqVoidTaskFunc"/>
			</parameter>
			<parameter name="func_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
		</parameters>
	</function>
	<function name="blocking" c:identifier="gpseq_blocking" throws="1" version="0.2.0-alpha">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="func" transfer-ownership="none" closure="1" scope="call">
				<type name="Gpseq.VoidTaskFunc" c:type="GpseqVoidTaskFunc"/>
			</parameter>
			<parameter name="func_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="blocking_get" c:identifier="gpseq_blocking_get" throws="1" version="0.2.0-alpha">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="func" transfer-ownership="none" closure="4" scope="call">
				<type name="Gpseq.TaskFunc" c:type="GpseqTaskFunc"/>
			</parameter>
			<parameter name="func_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="join" c:identifier="gpseq_join" throws="1" version="0.3.0-alpha">
		<return-value transfer-ownership="full">
			<array length="6" c:type="gpointer*">
				<type name="gpointer" c:type="gpointer"/>
			</array>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="left" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Gpseq.TaskFunc" c:type="GpseqTaskFunc"/>
			</parameter>
			<parameter name="left_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="left_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="right" transfer-ownership="none" closure="7" scope="notified" destroy="8">
				<type name="Gpseq.TaskFunc" c:type="GpseqTaskFunc"/>
			</parameter>
			<parameter name="right_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="right_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="result_length1" direction="out" transfer-ownership="none">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_get" c:identifier="gpseq_atomic_int64_get">
		<return-value transfer-ownership="full">
			<type name="gint64" c:type="gint64"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_set" c:identifier="gpseq_atomic_int64_set">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
			<parameter name="newval" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_inc" c:identifier="gpseq_atomic_int64_inc">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_dec_and_test" c:identifier="gpseq_atomic_int64_dec_and_test">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_compare_and_exchange" c:identifier="gpseq_atomic_int64_compare_and_exchange">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
			<parameter name="oldval" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
			<parameter name="newval" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_add" c:identifier="gpseq_atomic_int64_add">
		<return-value transfer-ownership="full">
			<type name="gint64" c:type="gint64"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="gint64" c:type="gint64*"/>
			</parameter>
			<parameter name="val" transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_and" c:identifier="gpseq_atomic_int64_and">
		<return-value transfer-ownership="full">
			<type name="guint64" c:type="guint64"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="guint64" c:type="guint64*"/>
			</parameter>
			<parameter name="val" transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_or" c:identifier="gpseq_atomic_int64_or">
		<return-value transfer-ownership="full">
			<type name="guint64" c:type="guint64"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="guint64" c:type="guint64*"/>
			</parameter>
			<parameter name="val" transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</parameter>
		</parameters>
	</function>
	<function name="atomic_int64_xor" c:identifier="gpseq_atomic_int64_xor">
		<return-value transfer-ownership="full">
			<type name="guint64" c:type="guint64"/>
		</return-value>
		<parameters>
			<parameter name="atomic" direction="inout" transfer-ownership="full">
				<type name="guint64" c:type="guint64*"/>
			</parameter>
			<parameter name="val" transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</parameter>
		</parameters>
	</function>
</namespace>
</repository>
