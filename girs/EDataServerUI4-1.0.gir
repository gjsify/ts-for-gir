<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Camel" version="1.2"/>
  <include name="ECal" version="2.0"/>
  <include name="EDataServer" version="1.2"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="4.0"/>
  <include name="Soup" version="3.0"/>
  <package name="libedataserverui4-1.0"/>
  <c:include name="libedataserverui4/libedataserverui4.h"/>
  <namespace name="EDataServerUI4"
             version="1.0"
             shared-library="libcamel-1.2.so.64,libecal-2.0.so.2,libedataserver-1.2.so.27,libedataserverui4-1.0.so.0"
             c:identifier-prefixes="E"
             c:symbol-prefixes="e">
    <function-macro name="CELL_RENDERER_COLOR"
                    c:identifier="E_CELL_RENDERER_COLOR"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CELL_RENDERER_COLOR_CLASS"
                    c:identifier="E_CELL_RENDERER_COLOR_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="37"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CELL_RENDERER_COLOR_GET_CLASS"
                    c:identifier="E_CELL_RENDERER_COLOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CERTIFICATE_WIDGET"
                    c:identifier="E_CERTIFICATE_WIDGET"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="22"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CERTIFICATE_WIDGET_CLASS"
                    c:identifier="E_CERTIFICATE_WIDGET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="25"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CERTIFICATE_WIDGET_GET_CLASS"
                    c:identifier="E_CERTIFICATE_WIDGET_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER"
                    c:identifier="E_CREDENTIALS_PROMPTER"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="48"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_GET_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="57"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="40"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_GET_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="49"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_OAUTH2"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_OAUTH2"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_OAUTH2_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_OAUTH2_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="45"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_OAUTH2_GET_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_OAUTH2_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="54"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_PASSWORD"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_PASSWORD"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_PASSWORD_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_PASSWORD_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="44"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CREDENTIALS_PROMPTER_IMPL_PASSWORD_GET_CLASS"
                    c:identifier="E_CREDENTIALS_PROMPTER_IMPL_PASSWORD_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="53"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="CellRendererColor"
           c:symbol-prefix="cell_renderer_color"
           c:type="ECellRendererColor"
           version="2.22"
           parent="Gtk.CellRenderer"
           glib:type-name="ECellRendererColor"
           glib:get-type="e_cell_renderer_color_get_type"
           glib:type-struct="CellRendererColorClass">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="74"/>
      <constructor name="new"
                   c:identifier="e_cell_renderer_color_new"
                   version="2.22">
        <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
      </constructor>
      <property name="rgba" writable="1" transfer-ownership="none">
        <type name="Gdk.RGBA"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRenderer" c:type="GtkCellRenderer"/>
      </field>
      <field name="priv">
        <type name="CellRendererColorPrivate"
              c:type="ECellRendererColorPrivate*"/>
      </field>
    </class>
    <record name="CellRendererColorClass"
            c:type="ECellRendererColorClass"
            glib:is-gtype-struct-for="CellRendererColor">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="74"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererClass" c:type="GtkCellRendererClass"/>
      </field>
      <field name="_gtk_reserved1" introspectable="0">
        <callback name="_gtk_reserved1">
          <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_reserved2" introspectable="0">
        <callback name="_gtk_reserved2">
          <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_reserved3" introspectable="0">
        <callback name="_gtk_reserved3">
          <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_reserved4" introspectable="0">
        <callback name="_gtk_reserved4">
          <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CellRendererColorPrivate"
            c:type="ECellRendererColorPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="54"/>
    </record>
    <class name="CertificateWidget"
           c:symbol-prefix="certificate_widget"
           c:type="ECertificateWidget"
           version="3.46"
           parent="Gtk.Box"
           glib:type-name="ECertificateWidget"
           glib:get-type="e_certificate_widget_get_type"
           glib:type-struct="CertificateWidgetClass">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="64"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="e_certificate_widget_new"
                   version="3.46">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
             line="537">Creates a new #ECertificateWidget</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
               line="542">a new #ECertificateWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="set_der"
              c:identifier="e_certificate_widget_set_der"
              version="3.46">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
             line="552">Updates the content of the @self with the certificate information
described by the @der_data of the length @der_data_len in the DER
format.

The content of the @self is cleared when the @der_data is %NULL.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
                 line="554">an #ECertificateWidget</doc>
            <type name="CertificateWidget" c:type="ECertificateWidget*"/>
          </instance-parameter>
          <parameter name="der_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
                 line="555">certificate data in DER format, or %NULL</doc>
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="der_data_len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
                 line="556">length of the @der_data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pem"
              c:identifier="e_certificate_widget_set_pem"
              version="3.46">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
             line="703">Updates the content of the @self with the certificate information
described by the @pem_data in the PEM format.

The content of the @self is cleared when the @pem_data is %NULL.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
                 line="705">an #ECertificateWidget</doc>
            <type name="CertificateWidget" c:type="ECertificateWidget*"/>
          </instance-parameter>
          <parameter name="pem_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
                 line="706">certificate data in PEM format, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="CertificateWidgetPrivate"
              c:type="ECertificateWidgetPrivate*"/>
      </field>
    </class>
    <record name="CertificateWidgetClass"
            c:type="ECertificateWidgetClass"
            glib:is-gtype-struct-for="CertificateWidget">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="64"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="CertificateWidgetPrivate"
            c:type="ECertificateWidgetPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="42"/>
    </record>
    <class name="CredentialsPrompter"
           c:symbol-prefix="credentials_prompter"
           c:type="ECredentialsPrompter"
           version="3.16"
           parent="GObject.Object"
           glib:type-name="ECredentialsPrompter"
           glib:get-type="e_credentials_prompter_get_type"
           glib:type-struct="CredentialsPrompterClass">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
           line="113">Contains only private data that should be read and manipulated using the
functions below.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="133"/>
      <implements name="EDataServer.Extensible"/>
      <constructor name="new"
                   c:identifier="e_credentials_prompter_new"
                   version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1207">Creates a new #ECredentialsPrompter, which listens for credential requests
from @registry.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="137"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1214">a new #ECredentialsPrompter</doc>
          <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
        </return-value>
        <parameters>
          <parameter name="registry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1209">an #ESourceRegistry to have the prompter listen to</doc>
            <type name="EDataServer.SourceRegistry" c:type="ESourceRegistry*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_dialog_parent"
                      invoker="get_dialog_parent"
                      version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1395">Returns a #GtkWindow, which should be used as a dialog parent. This is determined
by an ECredentialsPrompter::get-dialog-parent signal emission. If there is no callback
registered or the current callbacks don't have any suitable window, then there's
chosen the last active window from the default GApplication, if any available.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="130"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1404">a #GtkWindow, to be used as a dialog parent,
   or %NULL.</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1397">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="complete_prompt_call"
              c:identifier="e_credentials_prompter_complete_prompt_call"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1763">Completes an ongoing credentials prompt on idle, by finishing the @async_result.
This function is meant to be used by an #ECredentialsPrompterImpl implementation.
To actually finish the credentials prompt previously started with
e_credentials_prompter_prompt(), the e_credentials_prompter_prompt_finish() should
be called from the provided callback.

Using %NULL @credentials will result in a G_IO_ERROR_CANCELLED error, if
no other @error is provided.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="186"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1765">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1766">a #GSimpleAsyncResult</doc>
            <type name="Gio.SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1767">an #ESource, on which the prompt was started</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="credentials"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1768">credentials, as provided by a user, on %NULL, when the prompt was cancelled</doc>
            <type name="EDataServer.NamedParameters"
                  c:type="const ENamedParameters*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1769">a resulting #GError, or %NULL</doc>
            <type name="GLib.Error" c:type="const GError*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auto_prompt"
              c:identifier="e_credentials_prompter_get_auto_prompt"
              glib:get-property="auto-prompt"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1263">Returns, whether can respond to credential prompts automatically.
Default value is %TRUE.

This property does not influence direct calls of e_credentials_prompter_prompt().</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1272">Whether can respond to credential prompts automatically.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1265">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_auto_prompt_disabled_for"
              c:identifier="e_credentials_prompter_get_auto_prompt_disabled_for"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1346">Returns whether the auto-prompt is disabled for the given @source.
All sources can be auto-prompted by default. This is a complementary
value for the ECredentialsPrompter::auto-prompt property.

This value does not influence direct calls of e_credentials_prompter_prompt().</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="153"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1357">Whether the auto-prompt is disabled for the given @source</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1348">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1349">an #ESource</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dialog_parent"
              c:identifier="e_credentials_prompter_get_dialog_parent"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1395">Returns a #GtkWindow, which should be used as a dialog parent. This is determined
by an ECredentialsPrompter::get-dialog-parent signal emission. If there is no callback
registered or the current callbacks don't have any suitable window, then there's
chosen the last active window from the default GApplication, if any available.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="156"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1404">a #GtkWindow, to be used as a dialog parent,
   or %NULL.</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1397">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dialog_parent_full"
              c:identifier="e_credentials_prompter_get_dialog_parent_full"
              version="3.42">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1424">Returns a #GtkWindow, which should be used as a dialog parent for the @auth_source.

This is determined by an ECredentialsPrompter::get-dialog-parent-full signal emission
and an ECredentialsPrompter::get-dialog-parent when the first doesn't return anything.
If there is no callback registered or the current callbacks don't have any suitable
window, then there's chosen the last active window from the default GApplication,
if any available.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="158"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1437">a #GtkWindow, to be used as a dialog parent,
   or %NULL.</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1426">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="auth_source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1427">an #ESource</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_provider"
              c:identifier="e_credentials_prompter_get_provider"
              glib:get-property="provider"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1244">Returns an #ESourceCredentialsProvider, which the @prompter uses.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1250">an #ESourceCredentialsProvider, which the @prompter uses.</doc>
          <type name="EDataServer.SourceCredentialsProvider"
                c:type="ESourceCredentialsProvider*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1246">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_registry"
              c:identifier="e_credentials_prompter_get_registry"
              glib:get-property="registry"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1226">Returns an #ESourceRegistry, to which the @prompter listens.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1232">an #ESourceRegistry, to which the @prompter listens.</doc>
          <type name="EDataServer.SourceRegistry" c:type="ESourceRegistry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1228">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="loop_prompt_sync"
              c:identifier="e_credentials_prompter_loop_prompt_sync"
              version="3.16"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1885">Runs a credentials prompt loop for @source, as long as the @func doesn't
indicate that the provided credentials can be used to successfully
authenticate against @source&lt;!-- --&gt;'s server, or that the @func
returns %FALSE. The loop is also teminated when a used cancels
the credentials prompt or the @cancellable is cancelled, though
not sooner than the credentials prompt dialog is closed.

Note: The function doesn't return until the loop is terminated, either
   successfully or unsuccessfully. The function can be called from any
   thread, though a dedicated thread is preferred.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1906">%TRUE, when the credentials were provided successfully and they
  can be used to authenticate the @source; %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1887">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1888">an #ESource to be prompted credentials for</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1889">a bit-or of #ECredentialsPrompterPromptFlags initial flags</doc>
            <type name="CredentialsPrompterPromptFlags"
                  c:type="ECredentialsPrompterPromptFlags"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1890">an #ECredentialsPrompterLoopPromptFunc user function to call to check provided credentials</doc>
            <type name="CredentialsPrompterLoopPromptFunc"
                  c:type="ECredentialsPrompterLoopPromptFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1891">user data to pass to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1892">an optional #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_awaiting_credentials"
              c:identifier="e_credentials_prompter_process_awaiting_credentials"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1602">Process all enabled sources with connection state #E_SOURCE_CONNECTION_STATUS_AWAITING_CREDENTIALS,
like if they just asked for its credentials for the first time.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1604">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="process_source"
              c:identifier="e_credentials_prompter_process_source"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1634">Continues a credential prompt for @source. Returns, whether anything will be done.
The %FALSE either means that the @source&lt;!-- --&gt;'s connection status is not
the %E_SOURCE_CONNECTION_STATUS_AWAITING_CREDENTIALS or it is disabled.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1643">Whether continues with the credentials prompt.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1636">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1637">an #ESource</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
        </parameters>
      </method>
      <method name="prompt"
              c:identifier="e_credentials_prompter_prompt"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1664">Asks the @prompter to prompt for credentials, which are returned
to the caller through @callback, when available.The @flags are ignored,
when the @callback is %NULL; the credentials are passed to the @source
with e_source_invoke_authenticate() directly, in this case.
Call e_credentials_prompter_prompt_finish() in @callback to get to
the provided credentials.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1666">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1667">an #ESource, which prompt the credentials for</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="error_text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1668">Additional error text to show to a user, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1669">a bit-or of #ECredentialsPrompterPromptFlags</doc>
            <type name="CredentialsPrompterPromptFlags"
                  c:type="ECredentialsPrompterPromptFlags"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1670">a callback to call when the credentials are ready, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1671">user data passed into @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="prompt_finish"
              c:identifier="e_credentials_prompter_prompt_finish"
              version="3.16"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1707">Finishes a credentials prompt previously started with e_credentials_prompter_prompt().
The @out_source will have set a referenced #ESource, for which the prompt
was started. Unref it, when  no longer needed. Similarly the @out_credentials
will have set a newly allocated #ENamedParameters structure with provided credentials,
which should be freed with e_named_credentials_free() when no longer needed.
Both output arguments will be set to %NULL on error and %FALSE will be returned.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1722">%TRUE on success, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1709">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1710">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="out_source"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1711">optionally set to an #ESource, on which the prompt was started; can be %NULL</doc>
            <type name="EDataServer.Source" c:type="ESource**"/>
          </parameter>
          <parameter name="out_credentials"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1712">set to an #ENamedParameters with provied credentials</doc>
            <type name="EDataServer.NamedParameters"
                  c:type="ENamedParameters**"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_impl"
              c:identifier="e_credentials_prompter_register_impl"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1463">Registers a prompter implementation for a given authentication method. If there is
registered a prompter for the same @authentication_method, then the function does
nothing, otherwise it adds its own reference on the @prompter_impl, and uses it
for that authentication method. One @prompter_impl can be registered for multiple
authentication methods.

A special value %NULL can be used for the @authentication_method, which means
a default credentials prompter, that is to be used when there is no prompter
registered for the exact authentication method.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1479">%TRUE on success, %FALSE on failure or when there was another prompter
implementation registered for the given authentication method.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1465">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="authentication_method"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1466">an authentication method to registr @prompter_impl for; or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="prompter_impl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1467">an #ECredentialsPrompterImpl</doc>
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auto_prompt"
              c:identifier="e_credentials_prompter_set_auto_prompt"
              glib:set-property="auto-prompt"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1284">Sets whether can respond to credential prompts automatically. That means that
whenever any ESource will ask for credentials, it'll try to provide them.

Use e_credentials_prompter_set_auto_prompt_disabled_for() to influence
auto-prompt per an #ESource.

This property does not influence direct calls of e_credentials_prompter_prompt().</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1286">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="auto_prompt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1287">new value of the auto-prompt property</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auto_prompt_disabled_for"
              c:identifier="e_credentials_prompter_set_auto_prompt_disabled_for"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1313">Sets whether the auto-prompt should be disabled for the given @source.
All sources can be auto-prompted by default. This is a complementary
value for the ECredentialsPrompter::auto-prompt property.

This value does not influence direct calls of e_credentials_prompter_prompt().</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1315">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1316">an #ESource</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="is_disabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1317">whether the auto-prompt should be disabled for this @source</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="unregister_impl"
              c:identifier="e_credentials_prompter_unregister_impl"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1517">Unregisters previously registered @prompter_impl for the given @autnetication_method with
e_credentials_prompter_register_impl(). Function does nothing, if no such authentication
method is registered or if it has set a different prompter implementation.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1519">an #ECredentialsPrompter</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </instance-parameter>
          <parameter name="authentication_method"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1520">an authentication method to registr @prompter_impl for; or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="prompter_impl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1521">an #ECredentialsPrompterImpl</doc>
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </parameter>
        </parameters>
      </method>
      <property name="auto-prompt"
                version="3.16"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_auto_prompt"
                getter="get_auto_prompt"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1082">Whether the #ECredentialsPrompter can response to credential
requests automatically.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="provider"
                version="3.16"
                transfer-ownership="none"
                getter="get_provider">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1122">The #ESourceCredentialsProvider object, which the prompter uses.</doc>
        <type name="EDataServer.SourceCredentialsProvider"/>
      </property>
      <property name="registry"
                version="3.16"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_registry">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1103">The #ESourceRegistry object, to whose credential requests the prompter listens.</doc>
        <type name="EDataServer.SourceRegistry"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CredentialsPrompterPrivate"
              c:type="ECredentialsPrompterPrivate*"/>
      </field>
      <glib:signal name="get-dialog-parent" when="last" version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1140">Emitted when a new dialog will be shown, to get the right parent
window for it. If the result of the call is %NULL, then it tries
to get the window from the default GtkApplication.</doc>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1148">a #GtkWindow, to be used as a
dialog parent, or %NULL.</doc>
          <type name="Gtk.Window"/>
        </return-value>
      </glib:signal>
      <glib:signal name="get-dialog-parent-full" when="last" version="3.42">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
             line="1161">Emitted when a new dialog will be shown, to get the right parent
window for it. If the result of the call is %NULL, then it tries
to get the window from the default GtkApplication.</doc>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
               line="1170">a #GtkWindow, to be used as a
dialog parent, or %NULL.</doc>
          <type name="Gtk.Window"/>
        </return-value>
        <parameters>
          <parameter name="auth_source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1164">an #ESource, for which to show the credentials prompt</doc>
            <type name="EDataServer.Source"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CredentialsPrompterClass"
            c:type="ECredentialsPrompterClass"
            glib:is-gtype-struct-for="CredentialsPrompter">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="133"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_dialog_parent">
        <callback name="get_dialog_parent">
          <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                           line="130"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                 line="1404">a #GtkWindow, to be used as a dialog parent,
   or %NULL.</doc>
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </return-value>
          <parameters>
            <parameter name="prompter" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.c"
                   line="1397">an #ECredentialsPrompter</doc>
              <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="CredentialsPrompterImpl"
           c:symbol-prefix="credentials_prompter_impl"
           c:type="ECredentialsPrompterImpl"
           version="3.16"
           parent="EDataServer.Extension"
           abstract="1"
           glib:type-name="ECredentialsPrompterImpl"
           glib:get-type="e_credentials_prompter_impl_get_type"
           glib:type-struct="CredentialsPrompterImplClass">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
           line="62">Credentials prompter implementation base structure. The descendants
implement ECredentialsPrompterImpl::prompt(), which is used to
prompt for credentials. The descendants are automatically registered
into an #ECredentialsPrompter.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="98"/>
      <virtual-method name="cancel_prompt"
                      invoker="cancel_prompt"
                      version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
             line="208">Asks the @prompt_impl to cancel current prompt, which should have ID @prompt_id.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter_impl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="210">an #ECredentialsPrompterImpl</doc>
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </instance-parameter>
          <parameter name="prompt_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="211">a prompt ID to cancel</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="process_prompt">
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter_impl" transfer-ownership="none">
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </instance-parameter>
          <parameter name="prompt_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="auth_source" transfer-ownership="none">
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="cred_source" transfer-ownership="none">
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="error_text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="credentials" transfer-ownership="none">
            <type name="EDataServer.NamedParameters"
                  c:type="const ENamedParameters*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="prompt_finished">
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter_impl" transfer-ownership="none">
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </instance-parameter>
          <parameter name="prompt_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="credentials" transfer-ownership="none">
            <type name="EDataServer.NamedParameters"
                  c:type="const ENamedParameters*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="cancel_prompt"
              c:identifier="e_credentials_prompter_impl_cancel_prompt"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
             line="208">Asks the @prompt_impl to cancel current prompt, which should have ID @prompt_id.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter_impl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="210">an #ECredentialsPrompterImpl</doc>
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </instance-parameter>
          <parameter name="prompt_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="211">a prompt ID to cancel</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_credentials_prompter"
              c:identifier="e_credentials_prompter_impl_get_credentials_prompter"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
             line="112">Returns an #ECredentialsPrompter with which the @prompter_impl is associated.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                         line="102"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
               line="118">an #ECredentialsPrompter</doc>
          <type name="gpointer" c:type="_ECredentialsPrompter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter_impl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="114">an #ECredentialsPrompterImpl</doc>
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="prompt"
              c:identifier="e_credentials_prompter_impl_prompt"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
             line="136">Runs a credentials prompt for the @prompter_impl. The actual prompter implementation
receives the prompt through ECredentialsPrompterImplClass::process_prompt(), where the given
@prompt_id is used for an identification. The prompt is left 'active' as long as it is
not finished with a call of e_credentials_prompter_impl_prompt_finish(). This should be
called even for cancelled prompts. The prompt can be cancelled before it's processed,
using the e_credentials_prompter_impl_cancel_prompt().

The @auth_source can be the same as @cred_source, in case the credentials
are stored only for that particular source. If the sources share credentials,
which can be a case when the @auth_source is part of a collection, then
the @cred_stource can be that collection source.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter_impl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="138">an #ECredentialsPrompterImpl</doc>
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </instance-parameter>
          <parameter name="prompt_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="139">a prompt ID to be passed to e_credentials_prompter_impl_prompt_finish()</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="auth_source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="140">an #ESource, to prompt the credentials for (the source which asked for credentials)</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="cred_source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="141">a parent #ESource, from which credentials were taken, or should be stored to</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="error_text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="142">an optional error text from the previous credentials prompt; can be %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="credentials" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="143">credentials, as saved in keyring; can be empty, but not %NULL</doc>
            <type name="EDataServer.NamedParameters"
                  c:type="const ENamedParameters*"/>
          </parameter>
        </parameters>
      </method>
      <method name="prompt_finish"
              c:identifier="e_credentials_prompter_impl_prompt_finish"
              version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
             line="181">The actual credentials prompt implementation finishes a previously started
credentials prompt @prompt_id with ECredentialsPrompterImplClass::process_prompt()
by a call to this function. This function should be called regardless the prompt
was or was not cancelled with e_credentials_prompter_impl_cancel_prompt().
Once the prompt is finished another queued is started, if any pending exists.
Use %NULL @credentials for cancelled prompts, otherwise the credentials are used
for authentication of the associated #ESource.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prompter_impl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="183">an #ECredentialsPrompterImpl</doc>
            <type name="CredentialsPrompterImpl"
                  c:type="ECredentialsPrompterImpl*"/>
          </instance-parameter>
          <parameter name="prompt_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="184">a prompt ID</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="credentials"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="185">credentials to use; can be %NULL for cancelled prompts</doc>
            <type name="EDataServer.NamedParameters"
                  c:type="const ENamedParameters*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="EDataServer.Extension" c:type="EExtension"/>
      </field>
      <field name="priv">
        <type name="CredentialsPrompterImplPrivate"
              c:type="ECredentialsPrompterImplPrivate*"/>
      </field>
      <glib:signal name="prompt-finished" when="last" version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
             line="85">Emitted when a prompt of ID @prompt_id is finished.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="prompt_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="88">an ID of the prompt which was finished</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="credentials"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                 line="89">entered credentials, or %NULL for cancelled prompts</doc>
            <type name="EDataServer.NamedParameters"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CredentialsPrompterImplClass"
            c:type="ECredentialsPrompterImplClass"
            glib:is-gtype-struct-for="CredentialsPrompterImpl">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="98"/>
      <field name="parent_class">
        <type name="EDataServer.ExtensionClass" c:type="EExtensionClass"/>
      </field>
      <field name="authentication_methods">
        <type name="utf8" c:type="const gchar* const*"/>
      </field>
      <field name="process_prompt">
        <callback name="process_prompt">
          <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="prompter_impl" transfer-ownership="none">
              <type name="CredentialsPrompterImpl"
                    c:type="ECredentialsPrompterImpl*"/>
            </parameter>
            <parameter name="prompt_id"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
            <parameter name="auth_source" transfer-ownership="none">
              <type name="EDataServer.Source" c:type="ESource*"/>
            </parameter>
            <parameter name="cred_source" transfer-ownership="none">
              <type name="EDataServer.Source" c:type="ESource*"/>
            </parameter>
            <parameter name="error_text" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="credentials" transfer-ownership="none">
              <type name="EDataServer.NamedParameters"
                    c:type="const ENamedParameters*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cancel_prompt">
        <callback name="cancel_prompt">
          <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="prompter_impl" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                   line="210">an #ECredentialsPrompterImpl</doc>
              <type name="CredentialsPrompterImpl"
                    c:type="ECredentialsPrompterImpl*"/>
            </parameter>
            <parameter name="prompt_id"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.c"
                   line="211">a prompt ID to cancel</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="prompt_finished">
        <callback name="prompt_finished">
          <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="prompter_impl" transfer-ownership="none">
              <type name="CredentialsPrompterImpl"
                    c:type="ECredentialsPrompterImpl*"/>
            </parameter>
            <parameter name="prompt_id"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
            <parameter name="credentials" transfer-ownership="none">
              <type name="EDataServer.NamedParameters"
                    c:type="const ENamedParameters*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="CredentialsPrompterImplOAuth2"
           c:symbol-prefix="credentials_prompter_impl_oauth2"
           c:type="ECredentialsPrompterImplOAuth2"
           version="3.28"
           parent="CredentialsPrompterImpl"
           glib:type-name="ECredentialsPrompterImplOAuth2"
           glib:get-type="e_credentials_prompter_impl_oauth2_get_type"
           glib:type-struct="CredentialsPrompterImplOAuth2Class">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
           line="65">Contains only private data that should be read and manipulated using the
functions below.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="80"/>
      <constructor name="new"
                   c:identifier="e_credentials_prompter_impl_oauth2_new"
                   version="3.28">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.c"
             line="1588">Creates a new instance of an #ECredentialsPrompterImplOAuth2.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                         line="84"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.c"
               line="1593">a newly created #ECredentialsPrompterImplOAuth2,
   which should be freed with g_object_unref() when no longer needed.</doc>
          <type name="CredentialsPrompterImpl"
                c:type="ECredentialsPrompterImpl*"/>
        </return-value>
      </constructor>
      <field name="parent">
        <type name="CredentialsPrompterImpl"
              c:type="ECredentialsPrompterImpl"/>
      </field>
      <field name="priv">
        <type name="CredentialsPrompterImplOAuth2Private"
              c:type="ECredentialsPrompterImplOAuth2Private*"/>
      </field>
    </class>
    <record name="CredentialsPrompterImplOAuth2Class"
            c:type="ECredentialsPrompterImplOAuth2Class"
            glib:is-gtype-struct-for="CredentialsPrompterImplOAuth2">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="80"/>
      <field name="parent_class">
        <type name="CredentialsPrompterImplClass"
              c:type="ECredentialsPrompterImplClass"/>
      </field>
    </record>
    <record name="CredentialsPrompterImplOAuth2Private"
            c:type="ECredentialsPrompterImplOAuth2Private"
            disguised="1"
            opaque="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="63"/>
    </record>
    <class name="CredentialsPrompterImplPassword"
           c:symbol-prefix="credentials_prompter_impl_password"
           c:type="ECredentialsPrompterImplPassword"
           version="3.16"
           parent="CredentialsPrompterImpl"
           glib:type-name="ECredentialsPrompterImplPassword"
           glib:get-type="e_credentials_prompter_impl_password_get_type"
           glib:type-struct="CredentialsPrompterImplPasswordClass">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
           line="64">Contains only private data that should be read and manipulated using the
functions below.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="79"/>
      <constructor name="new"
                   c:identifier="e_credentials_prompter_impl_password_new"
                   version="3.16">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.c"
             line="601">Creates a new instance of an #ECredentialsPrompterImplPassword.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                         line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.c"
               line="606">a newly created #ECredentialsPrompterImplPassword,
   which should be freed with g_object_unref() when no longer needed.</doc>
          <type name="CredentialsPrompterImpl"
                c:type="ECredentialsPrompterImpl*"/>
        </return-value>
      </constructor>
      <field name="parent">
        <type name="CredentialsPrompterImpl"
              c:type="ECredentialsPrompterImpl"/>
      </field>
      <field name="priv">
        <type name="CredentialsPrompterImplPasswordPrivate"
              c:type="ECredentialsPrompterImplPasswordPrivate*"/>
      </field>
    </class>
    <record name="CredentialsPrompterImplPasswordClass"
            c:type="ECredentialsPrompterImplPasswordClass"
            glib:is-gtype-struct-for="CredentialsPrompterImplPassword">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="79"/>
      <field name="parent_class">
        <type name="CredentialsPrompterImplClass"
              c:type="ECredentialsPrompterImplClass"/>
      </field>
    </record>
    <record name="CredentialsPrompterImplPasswordPrivate"
            c:type="ECredentialsPrompterImplPasswordPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="62"/>
    </record>
    <record name="CredentialsPrompterImplPrivate"
            c:type="ECredentialsPrompterImplPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="58"/>
    </record>
    <callback name="CredentialsPrompterLoopPromptFunc"
              c:type="ECredentialsPrompterLoopPromptFunc"
              throws="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="106"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
             line="102">%TRUE to continue the loop (reprompt credentials), unless @authenticated is
  also set to %TRUE, or %FALSE on error, as an indication that the loop should
  be terminated.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="prompter" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
               line="94">an #ECredentialsPrompter</doc>
          <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
        </parameter>
        <parameter name="source" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
               line="95">an #ESource, as passed to e_credentials_prompter_loop_prompt_sync()</doc>
          <type name="EDataServer.Source" c:type="ESource*"/>
        </parameter>
        <parameter name="credentials" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
               line="96">an #ENamedParameters with provided credentials</doc>
          <type name="EDataServer.NamedParameters"
                c:type="const ENamedParameters*"/>
        </parameter>
        <parameter name="out_authenticated"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
               line="97">set to %TRUE, when the authentication was successful</doc>
          <type name="gboolean" c:type="gboolean*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="4">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
               line="98">user data, as passed to e_credentials_prompter_loop_prompt_sync()</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="cancellable"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
               line="99">a #GCancellable, as passed to e_credentials_prompter_loop_prompt_sync()</doc>
          <type name="Gio.Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="CredentialsPrompterPrivate"
            c:type="ECredentialsPrompterPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="66"/>
    </record>
    <bitfield name="CredentialsPrompterPromptFlags"
              version="3.16"
              c:type="ECredentialsPrompterPromptFlags">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
           line="68">An #ECredentialsPrompter prompt flags, influencing behaviour
of the e_credentials_prompter_prompt().</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="90"/>
      <member name="none"
              value="0"
              c:identifier="E_CREDENTIALS_PROMPTER_PROMPT_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
             line="70">No flag is set.</doc>
      </member>
      <member name="allow_source_save"
              value="1"
              c:identifier="E_CREDENTIALS_PROMPTER_PROMPT_FLAG_ALLOW_SOURCE_SAVE">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
             line="72">If set, any source changes during the credentials prompts, like
  the "remember-password" or user name changes, will be automatically
  stored in the source (written on the disk).</doc>
      </member>
      <member name="allow_stored_credentials"
              value="2"
              c:identifier="E_CREDENTIALS_PROMPTER_PROMPT_FLAG_ALLOW_STORED_CREDENTIALS">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
             line="76">If set, the stored credentials will be returned first. If there are no
  credentials saved, then the user will be asked. Any credentials
  reprompt should not have set this flag.</doc>
      </member>
    </bitfield>
    <function-macro name="IS_CELL_RENDERER_COLOR"
                    c:identifier="E_IS_CELL_RENDERER_COLOR"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CELL_RENDERER_COLOR_CLASS"
                    c:identifier="E_IS_CELL_RENDERER_COLOR_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-cell-renderer-color.h"
                       line="43"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CERTIFICATE_WIDGET"
                    c:identifier="E_IS_CERTIFICATE_WIDGET"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="28"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CERTIFICATE_WIDGET_CLASS"
                    c:identifier="E_IS_CERTIFICATE_WIDGET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-certificate-widget.h"
                       line="31"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="51"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER_CLASS"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter.h"
                       line="54"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER_IMPL"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER_IMPL"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER_IMPL_CLASS"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER_IMPL_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl.h"
                       line="46"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER_IMPL_OAUTH2"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER_IMPL_OAUTH2"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="48"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER_IMPL_OAUTH2_CLASS"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER_IMPL_OAUTH2_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-oauth2.h"
                       line="51"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER_IMPL_PASSWORD"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER_IMPL_PASSWORD"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="47"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CREDENTIALS_PROMPTER_IMPL_PASSWORD_CLASS"
                    c:identifier="E_IS_CREDENTIALS_PROMPTER_IMPL_PASSWORD_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-credentials-prompter-impl-password.h"
                       line="50"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_REMINDERS_WIDGET"
                    c:identifier="E_IS_REMINDERS_WIDGET"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_REMINDERS_WIDGET_CLASS"
                    c:identifier="E_IS_REMINDERS_WIDGET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="44"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="REMINDERS_WIDGET"
                    c:identifier="E_REMINDERS_WIDGET"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="REMINDERS_WIDGET_CLASS"
                    c:identifier="E_REMINDERS_WIDGET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="38"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="REMINDERS_WIDGET_GET_CLASS"
                    c:identifier="E_REMINDERS_WIDGET_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="47"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="RemindersWidget"
           c:symbol-prefix="reminders_widget"
           c:type="ERemindersWidget"
           version="3.30"
           parent="Gtk.Grid"
           glib:type-name="ERemindersWidget"
           glib:get-type="e_reminders_widget_get_type"
           glib:type-struct="RemindersWidgetClass">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
           line="65">Contains only private data that should be read and manipulated using
the functions below.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="97"/>
      <implements name="EDataServer.Extensible"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="e_reminders_widget_new"
                   version="3.30">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
             line="1995">Creates a new instance of #ERemindersWidget. It adds its own reference
on the @watcher.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
               line="2002">a new instance of #ERemindersWidget.</doc>
          <type name="RemindersWidget" c:type="ERemindersWidget*"/>
        </return-value>
        <parameters>
          <parameter name="watcher" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="1997">an #EReminderWatcher</doc>
            <type name="ECal.ReminderWatcher" c:type="EReminderWatcher*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="activated">
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
          <parameter name="rd" transfer-ownership="none">
            <type name="ECal.ReminderData" c:type="const EReminderData*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="changed">
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_paned"
              c:identifier="e_reminders_widget_get_paned"
              version="3.38">
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
               line="2087">a #GtkPaned used to split list of events and
   the description of the reminders. It's owned by the @reminders widget.</doc>
          <type name="Gtk.Paned" c:type="GtkPaned*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2085">an #ERemindersWidget</doc>
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_settings"
              c:identifier="e_reminders_widget_get_settings"
              version="3.30">
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
               line="2037">a #GSettings pointing to org.gnome.evolution-data-server.calendar
   used by the @reminders widget.</doc>
          <type name="Gio.Settings" c:type="GSettings*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2035">an #ERemindersWidget</doc>
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tree_view"
              c:identifier="e_reminders_widget_get_tree_view"
              version="3.30">
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
               line="2070">a #GtkTreeView with past reminders. It's owned
   by the @reminders widget.</doc>
          <type name="Gtk.TreeView" c:type="GtkTreeView*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2068">an #ERemindersWidget</doc>
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_watcher"
              c:identifier="e_reminders_widget_get_watcher"
              glib:get-property="watcher"
              version="3.30">
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
               line="2020">an #EReminderWatcher with which the @reminders had
   been created. Do on unref it, it's owned by the @reminders.</doc>
          <type name="ECal.ReminderWatcher" c:type="EReminderWatcher*"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2018">an #ERemindersWidget</doc>
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_empty"
              c:identifier="e_reminders_widget_is_empty"
              version="3.30">
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
               line="2054">%TRUE, when there is no past reminder left, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2052">an #ERemindersWidget</doc>
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="report_error"
              c:identifier="e_reminders_widget_report_error"
              version="3.30">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
             line="2115">Shows a warning in the GUI with the @error message, optionally prefixed
with @prefix. When @error is %NULL, an "Unknown error" message is shown
instead.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="reminders" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2117">an #ERemindersWidget</doc>
            <type name="RemindersWidget" c:type="ERemindersWidget*"/>
          </instance-parameter>
          <parameter name="prefix"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2118">an optional prefix to show before the error message, or %NULL for none</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="error"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
                 line="2119">a #GError to show the message from in the UI, or %NULL for unknown error</doc>
            <type name="GLib.Error" c:type="const GError*"/>
          </parameter>
        </parameters>
      </method>
      <property name="empty" transfer-ownership="none" default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="watcher"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_watcher">
        <type name="ECal.ReminderWatcher"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Gtk.Grid" c:type="GtkGrid"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="RemindersWidgetPrivate" c:type="ERemindersWidgetPrivate*"/>
      </field>
      <glib:signal name="activated" when="last" action="1">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="ECal.ReminderData"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="changed" when="last" action="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="RemindersWidgetClass"
            c:type="ERemindersWidgetClass"
            glib:is-gtype-struct-for="RemindersWidget"
            version="3.30">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
           line="79">Class structure for the #ERemindersWidget class.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="97"/>
      <field name="parent_class" readable="0" private="1">
        <type name="Gtk.GridClass" c:type="GtkGridClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="reminders" transfer-ownership="none">
              <type name="RemindersWidget" c:type="ERemindersWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activated">
        <callback name="activated">
          <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="reminders" transfer-ownership="none">
              <type name="RemindersWidget" c:type="ERemindersWidget*"/>
            </parameter>
            <parameter name="rd" transfer-ownership="none">
              <type name="ECal.ReminderData" c:type="const EReminderData*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="10">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="RemindersWidgetPrivate"
            c:type="ERemindersWidgetPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/libedataserverui/libedataserverui4/e-reminders-widget.h"
                       line="63"/>
    </record>
    <class name="WebDAVDiscoverContent"
           c:symbol-prefix="webdav_discover_content"
           c:type="EWebDAVDiscoverContent"
           parent="Gtk.Grid"
           glib:type-name="EWebDAVDiscoverContent"
           glib:get-type="e_webdav_discover_content_get_type"
           glib:type-struct="WebDAVDiscoverContentClass">
      <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                       line="45"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="e_webdav_discover_content_new"
                   version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="104">Creates a new WebDAV discovery content, which is a #GtkGrid containing necessary
widgets to provide a UI interface for a user to search and select for available
WebDAV (CalDAV or CardDAV) sources provided by the given server. Do not pack
anything into this content, its content can be changed dynamically.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="118">a new #EWebDAVDiscoverContent.</doc>
          <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="credentials_prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="106">an #ECredentialsPrompter to use to ask for credentials</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </parameter>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="107">optional #ESource to use for authentication, or %NULL</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="base_url"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="108">optional base URL to use for discovery, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="supports_filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="109">a bit-or of #EWebDAVDiscoverSupports, a filter to limit what source
   types will be shown in the dialog content; use %E_WEBDAV_DISCOVER_SUPPORTS_NONE
   to show all</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_base_url"
              c:identifier="e_webdav_discover_content_get_base_url"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="354">Returns currently set base URL for the @content. This is used to overwrite the one
set on the #ESource from the creation time. The URL can be either a full URL, a path
or even a %NULL.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="362">currently set base URL for the @content.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="356">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_multiselect"
              c:identifier="e_webdav_discover_content_get_multiselect"
              version="3.18">
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="308">whether multiselect is allowed for the @content.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="306">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected"
              c:identifier="e_webdav_discover_content_get_selected"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="377">Returns information about selected source at index @index. The function can be called
multiple times, with the index starting at zero and as long as it doesn't return %FALSE.
If the @content doesn't have allowed multiselection, then the only valid @index is 0.

All the @out_href, @out_display_name and @out_color are newly allocated strings, which should
be freed with g_free(), when no longer needed.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="396">%TRUE, when a selected source of index @index exists, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="379">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="380">an index of the selected source; counts from 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="out_href"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="381">an output location for the URL of the selected source</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_supports"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="382">an output location of a bit-or of #EWebDAVDiscoverSupports, the set
   of source types this server source location supports</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="out_display_name"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="384">an output location of the sources display name</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_color"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="385">an output location of the string representation of the color
   for the source, as set on the server</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_order"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="387">an output location of the preferred sorting order</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tree_selection"
              c:identifier="e_webdav_discover_content_get_tree_selection"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="261">Returns inner #GtkTreeViewSelection. This is meant to be able to connect
to its "changed" signal and update other parts of the parent widgets accordingly.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="268">inner #GtkTreeViewSelection</doc>
          <type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="263">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_address"
              c:identifier="e_webdav_discover_content_get_user_address"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="454">Get currently selected user address in the @content, if the server returned any.
This value has meaning only with calendar sources.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="69"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="461">currently selected user address. The
  returned string is newly allocated and should be freed with g_free() when
  no longer needed. If there are none addresses provided by the server, or
  no calendar sources were found, then %NULL is returned instead.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="456">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="refresh"
              c:identifier="e_webdav_discover_content_refresh"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="842">Asynchronously starts refresh of the @content. This means to access the server
and search it for available sources. The @content shows a feedback and a Cancel
button during the operation.

The @display_name is used only if the @content wasn't created with an #ESource and
it's shown in the password prompts, if there are required any.

When the operation is finished, @callback will be called. You can then
call e_webdav_discover_content_refresh_finish() to get the result of the operation.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="844">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
          <parameter name="display_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="845">optional display name to use for scratch sources</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="846">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="847">a #GAsyncReadyCallback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="848">data to pass to the callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_finish"
              c:identifier="e_webdav_discover_content_refresh_finish"
              version="3.18"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="969">Finishes the operation started with e_webdav_discover_content_refresh(). If an
error occurred, the function will set @error and return %FALSE. There is
available e_webdav_discover_content_show_error() for convenience, which
shows the error within @content and takes care of it when refreshing
the content.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="981">%TRUE on success, %FALSE on failure</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="971">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="972">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_base_url"
              c:identifier="e_webdav_discover_content_set_base_url"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="326">Sets base URL for the @content. This is used to overwrite the one set on
the #ESource from the creation time. The URL can be either a full URL, a path
or even a %NULL.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="328">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
          <parameter name="base_url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="329">a base URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_multiselect"
              c:identifier="e_webdav_discover_content_set_multiselect"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="280">Sets whether the WebDAV discovery content allows multiselect.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="282">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
          <parameter name="multiselect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="283">whether multiselect is allowed</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_error"
              c:identifier="e_webdav_discover_content_show_error"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="1016">Shows the @error within @content, unless it's a #G_IO_ERROR_CANCELLED, or %NULL,
which are safely ignored. The advantage of this function is that the error
message is removed when the refresh operation is started.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1018">an #EWebDAVDiscoverContent</doc>
            <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
          </instance-parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1019">a #GError to show in the UI, or %NULL</doc>
            <type name="GLib.Error" c:type="const GError*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="WebDAVDiscoverContentClass"
            c:type="EWebDAVDiscoverContentClass"
            glib:is-gtype-struct-for="WebDAVDiscoverContent">
      <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                       line="45"/>
      <field name="parent_class">
        <type name="Gtk.GridClass" c:type="GtkGridClass"/>
      </field>
    </record>
    <class name="WebDAVDiscoverDialog"
           c:symbol-prefix="webdav_discover_dialog"
           c:type="EWebDAVDiscoverDialog"
           parent="Gtk.Dialog"
           glib:type-name="EWebDAVDiscoverDialog"
           glib:get-type="e_webdav_discover_dialog_get_type"
           glib:type-struct="WebDAVDiscoverDialogClass">
      <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                       line="42"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.Root"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new"
                   c:identifier="e_webdav_discover_dialog_new"
                   version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="1107">Creates a new #GtkDialog which has as its content a WebDAV discovery widget,
created with e_webdav_discover_content_new(). This dialog can be shown to a user
and when its final response is %GTK_RESPONSE_ACCEPT, then the inner content
can be asked for currently selected source(s).</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="1123">a newly created #GtkDialog, which should be freed
with g_object_unref(), when no longer needed.</doc>
          <type name="Gtk.Dialog" c:type="GtkDialog*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1109">a #GtkWindow parent for the dialog</doc>
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1110">title of the window</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="credentials_prompter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1111">an #ECredentialsPrompter to use to ask for credentials</doc>
            <type name="CredentialsPrompter" c:type="ECredentialsPrompter*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1112">an #ESource to use for authentication</doc>
            <type name="EDataServer.Source" c:type="ESource*"/>
          </parameter>
          <parameter name="base_url"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1113">optional base URL to use for discovery, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="supports_filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1114">a bit-or of #EWebDAVDiscoverSupports, a filter to limit what source
   types will be shown in the dialog content; use %E_WEBDAV_DISCOVER_SUPPORTS_NONE
   to show all</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_content"
              c:identifier="e_webdav_discover_dialog_get_content"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="1178">Returns inner WebDAV discovery content, which can be further manipulated.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
               line="1184">inner WebDAV discovery content</doc>
          <type name="WebDAVDiscoverContent" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1180">an #EWebDAVDiscoverDialog</doc>
            <type name="WebDAVDiscoverDialog" c:type="GtkDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="refresh"
              c:identifier="e_webdav_discover_dialog_refresh"
              version="3.18">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
             line="1201">Invokes refresh of the inner content of the WebDAV discovery dialog.</doc>
        <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.c"
                 line="1203">an #EWebDAVDiscoverDialog</doc>
            <type name="WebDAVDiscoverDialog" c:type="GtkDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="WebDAVDiscoverDialogClass"
            c:type="EWebDAVDiscoverDialogClass"
            glib:is-gtype-struct-for="WebDAVDiscoverDialog">
      <source-position filename="src/libedataserverui/libedataserverui4/e-webdav-discover-widget.h"
                       line="42"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
    </record>
    <function name="buffer_tagger_connect"
              c:identifier="e_buffer_tagger_connect">
      <source-position filename="src/libedataserverui/libedataserverui4/e-buffer-tagger.h"
                       line="36"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="textview" transfer-ownership="none">
          <type name="Gtk.TextView" c:type="GtkTextView*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_tagger_disconnect"
              c:identifier="e_buffer_tagger_disconnect">
      <source-position filename="src/libedataserverui/libedataserverui4/e-buffer-tagger.h"
                       line="37"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="textview" transfer-ownership="none">
          <type name="Gtk.TextView" c:type="GtkTextView*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_tagger_update_tags"
              c:identifier="e_buffer_tagger_update_tags">
      <source-position filename="src/libedataserverui/libedataserverui4/e-buffer-tagger.h"
                       line="38"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="textview" transfer-ownership="none">
          <type name="Gtk.TextView" c:type="GtkTextView*"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="e-certificate-widget">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-certificate-widget.c"
           line="7">The #ECertificateWidget shows information about the provided certificate.</doc>
    </docsection>
    <docsection name="e-reminders-widget">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-reminders-widget.c"
           line="18">The #ERemindersWidget is a widget which does common tasks on past reminders
provided by #EReminderWatcher. The owner should connect to the "changed" signal
to be notified on any changes, including when the list of past reminders
is either expanded or shrunk, which usually causes the dialog with this
widget to be shown or hidden.

The widget itself is an #EExtensible.

The widget does not listen to #EReminderWatcher::triggered signal.</doc>
    </docsection>
    <function name="trust_prompt_describe_certificate_errors"
              c:identifier="e_trust_prompt_describe_certificate_errors"
              version="3.16">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
           line="281">Converts @flags into a localized text description of the set bits, one
bit description per line. If no bit is set, then an empty string is
returned.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-trust-prompt.h"
                       line="38"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
             line="289">A newly allocated string with text description
 of @flags. Free the returned pointer with g_free() when no longer needed.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="283">a #GTlsCertificateFlags to describe</doc>
          <type name="Gio.TlsCertificateFlags" c:type="GTlsCertificateFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="trust_prompt_run_for_source"
              c:identifier="e_trust_prompt_run_for_source"
              version="3.16">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
           line="496">Similar to e_trust_prompt_run_modal(), except it also manages all the necessary things
around the @source&lt;!-- --&gt;'s SSL/TLS trust properties when it also contains %E_SOURCE_EXTENSION_WEBDAV,
thus the SSL/TLS trust on the WebDAV @source is properly updated based on the user's choice.
The call is finished with e_trust_prompt_run_for_source_finish(),
which also returns the user's choice. The finish happens in the @callback.
This is necessary, because the @source can be also saved.

The function fails, if the @source doesn't contain the %E_SOURCE_EXTENSION_AUTHENTICATION.

Note: The dialog is not shown when the stored certificate trust in the WebDAV @source
   matches the @certificate_pem and the stored result is #E_TRUST_PROMPT_RESPONSE_REJECT.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-trust-prompt.h"
                       line="49"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="498">A #GtkWindow to use as a parent for the trust prompt dialog</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </parameter>
        <parameter name="source" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="499">an #ESource, with %E_SOURCE_EXTENSION_AUTHENTICATION</doc>
          <type name="EDataServer.Source" c:type="ESource*"/>
        </parameter>
        <parameter name="certificate_pem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="500">a PEM-encoded certificate for which to show the trust prompt</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="certificate_errors" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="501">errors of the @certificate_pem</doc>
          <type name="Gio.TlsCertificateFlags" c:type="GTlsCertificateFlags"/>
        </parameter>
        <parameter name="error_text"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="502">an optional error text to show in the dialog; can be %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="allow_source_save" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="503">whether can also save any @source changes</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="cancellable"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="504">a #GCancellable, or %NULL</doc>
          <type name="Gio.Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="async"
                   closure="8">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="505">a callback to call, when the prompt (an @source save) is done</doc>
          <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="506">user data passed into @callback</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="trust_prompt_run_for_source_finish"
              c:identifier="e_trust_prompt_run_for_source_finish"
              version="3.16"
              throws="1">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
           line="685">Finishes the operation started with e_trust_prompt_run_for_source().
The @response will contain a code of the user's choice.
The #E_TRUST_PROMPT_RESPONSE_UNKNOWN is used, when the user cancelled the trust
prompt dialog and no changes are made with the @source.

If an error occurs, the function sets @error and returns %FALSE.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-trust-prompt.h"
                       line="59"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
             line="699">%TRUE on success, %FALSE on error</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="687">an #ESource which was used with e_trust_prompt_run_for_source()</doc>
          <type name="EDataServer.Source" c:type="ESource*"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="688">a #GAsyncResult</doc>
          <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="response" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="689">an output argument, user's response to the trust prompt</doc>
          <type name="EDataServer.TrustPromptResponse"
                c:type="ETrustPromptResponse*"/>
        </parameter>
      </parameters>
    </function>
    <function name="trust_prompt_run_modal"
              c:identifier="e_trust_prompt_run_modal"
              version="3.16">
      <doc xml:space="preserve"
           filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
           line="358">Runs modal (doesn't return until the dialog is closed) a trust prompt dialog,
it is a prompt whether a user wants to accept or reject the @certificate_pem
for the @host due to the @certificate_errors errors.

The pair @source_extension and @source_display_name influences the trust prompt message.
If both are set, then the message also contains which source failed to connect according
to these two arguments.

The dialog can contain a custom error text, passed in as @error_text.
The error might be a detailed error string returned by the server. If set,
it is prefixed with "Detailed error:" string.</doc>
      <source-position filename="src/libedataserverui/libedataserverui4/e-trust-prompt.h"
                       line="41"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
             line="380">A code of the user's choice. The #E_TRUST_PROMPT_RESPONSE_UNKNOWN
   is returned, when the user cancelled the trust prompt dialog.</doc>
        <type name="EDataServer.TrustPromptResponse"
              c:type="ETrustPromptResponse"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="360">A #GtkWindow to use as a parent for the trust prompt dialog</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </parameter>
        <parameter name="source_extension"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="361">an #ESource extension, to identify a kind of the source; or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="source_display_name"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="362">an #ESource display name, to identify what prompts; or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="host" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="363">a host name to which the certificate belongs</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="certificate_pem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="364">a PEM-encoded certificate for which to show the trust prompt</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="certificate_errors" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="365">errors of the @certificate_pem</doc>
          <type name="Gio.TlsCertificateFlags" c:type="GTlsCertificateFlags"/>
        </parameter>
        <parameter name="error_text"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libedataserverui/libedataserverui4/e-trust-prompt.c"
               line="366">an optional error text to show in the dialog; can be %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
