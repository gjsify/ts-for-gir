<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Goa" version="1.0"/>
  <include name="Json" version="1.0"/>
  <include name="Soup" version="2.4"/>
  <include name="libxml2" version="2.0"/>
  <package name="libgdata"/>
  <c:include name="gdata/gdata.h"/>
  <namespace name="GData"
             version="0.0"
             shared-library="libgdata.so.22"
             c:identifier-prefixes="GData"
             c:symbol-prefixes="gdata">
    <function-macro name="ACCESS_HANDLER"
                    c:identifier="GDATA_ACCESS_HANDLER"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-handler.h" line="46"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACCESS_HANDLER_CLASS"
                    c:identifier="GDATA_ACCESS_HANDLER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-handler.h" line="47"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACCESS_HANDLER_GET_IFACE"
                    c:identifier="GDATA_ACCESS_HANDLER_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-handler.h" line="49"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="ACCESS_ROLE_NONE"
              value="none"
              c:type="GDATA_ACCESS_ROLE_NONE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-rule.h"
           line="58">The users specified by the #GDataAccessRule have no rights.</doc>
      <source-position filename="gdata/gdata-access-rule.h" line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="ACCESS_RULE"
                    c:identifier="GDATA_ACCESS_RULE"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-rule.h" line="68"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACCESS_RULE_CLASS"
                    c:identifier="GDATA_ACCESS_RULE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-rule.h" line="69"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACCESS_RULE_GET_CLASS"
                    c:identifier="GDATA_ACCESS_RULE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-rule.h" line="72"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="ACCESS_SCOPE_DEFAULT"
              value="default"
              c:type="GDATA_ACCESS_SCOPE_DEFAULT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-rule.h"
           line="49">The #GDataAccessRule applies to all users.</doc>
      <source-position filename="gdata/gdata-access-rule.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACCESS_SCOPE_DOMAIN"
              value="domain"
              c:type="GDATA_ACCESS_SCOPE_DOMAIN"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-rule.h"
           line="40">The #GDataAccessRule applies to all users in a Google Apps For Your Domain domain, given in #GDataAccessRule:scope-value.</doc>
      <source-position filename="gdata/gdata-access-rule.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACCESS_SCOPE_USER"
              value="user"
              c:type="GDATA_ACCESS_SCOPE_USER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-rule.h"
           line="31">The #GDataAccessRule applies to a single individual, whose e-mail address is given in #GDataAccessRule:scope-value.</doc>
      <source-position filename="gdata/gdata-access-rule.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="APPCategories"
           c:symbol-prefix="app_categories"
           c:type="GDataAPPCategories"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataAPPCategories"
           glib:get-type="gdata_app_categories_get_type"
           glib:type-struct="APPCategoriesClass">
      <doc xml:space="preserve"
           filename="gdata/app/gdata-app-categories.h"
           line="39">All the fields in the #GDataAPPCategories structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/app/gdata-app-categories.h" line="67"/>
      <method name="get_categories"
              c:identifier="gdata_app_categories_get_categories"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/app/gdata-app-categories.c"
             line="221">Returns a list of the categories in this category list.</doc>
        <source-position filename="gdata/app/gdata-app-categories.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/app/gdata-app-categories.c"
               line="227">a #GList of #GDataCategorys</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Category"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/app/gdata-app-categories.c"
                 line="223">a #GDataAPPCategories</doc>
            <type name="APPCategories" c:type="GDataAPPCategories*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_fixed"
              c:identifier="gdata_app_categories_is_fixed"
              glib:get-property="is-fixed"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/app/gdata-app-categories.c"
             line="238">Returns #GDataAPPCategories:is-fixed.</doc>
        <source-position filename="gdata/app/gdata-app-categories.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/app/gdata-app-categories.c"
               line="244">whether entries may use categories not in this category list</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/app/gdata-app-categories.c"
                 line="240">a #GDataAPPCategories</doc>
            <type name="APPCategories" c:type="GDataAPPCategories*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="is-fixed"
                version="0.7.0"
                transfer-ownership="none"
                getter="is_fixed"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/app/gdata-app-categories.c"
             line="80">Whether entries may use categories not in this category list.

API reference: &lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/#appCategories2"&gt;app:categories&lt;/ulink&gt;</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="APPCategoriesPrivate" c:type="GDataAPPCategoriesPrivate*"/>
      </field>
    </class>
    <record name="APPCategoriesClass"
            c:type="GDataAPPCategoriesClass"
            glib:is-gtype-struct-for="APPCategories"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/app/gdata-app-categories.h"
           line="52">All the fields in the #GDataAPPCategoriesClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/app/gdata-app-categories.h" line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/app/gdata-app-categories.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/app/gdata-app-categories.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="APPCategoriesPrivate"
            c:type="GDataAPPCategoriesPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/app/gdata-app-categories.h" line="37"/>
    </record>
    <function-macro name="APP_CATEGORIES"
                    c:identifier="GDATA_APP_CATEGORIES"
                    introspectable="0">
      <source-position filename="gdata/app/gdata-app-categories.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="APP_CATEGORIES_CLASS"
                    c:identifier="GDATA_APP_CATEGORIES_CLASS"
                    introspectable="0">
      <source-position filename="gdata/app/gdata-app-categories.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="APP_CATEGORIES_GET_CLASS"
                    c:identifier="GDATA_APP_CATEGORIES_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/app/gdata-app-categories.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHOR"
                    c:identifier="GDATA_AUTHOR"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-author.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHORIZATION_DOMAIN"
                    c:identifier="GDATA_AUTHORIZATION_DOMAIN"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHORIZATION_DOMAIN_CLASS"
                    c:identifier="GDATA_AUTHORIZATION_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHORIZATION_DOMAIN_GET_CLASS"
                    c:identifier="GDATA_AUTHORIZATION_DOMAIN_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHORIZER"
                    c:identifier="GDATA_AUTHORIZER"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorizer.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHORIZER_CLASS"
                    c:identifier="GDATA_AUTHORIZER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorizer.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHORIZER_GET_IFACE"
                    c:identifier="GDATA_AUTHORIZER_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorizer.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHOR_CLASS"
                    c:identifier="GDATA_AUTHOR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-author.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUTHOR_GET_CLASS"
                    c:identifier="GDATA_AUTHOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-author.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="AccessHandler"
               c:symbol-prefix="access_handler"
               c:type="GDataAccessHandler"
               version="0.3.0"
               glib:type-name="GDataAccessHandler"
               glib:get-type="gdata_access_handler_get_type"
               glib:type-struct="AccessHandlerIface">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-handler.h"
           line="51">All the fields in the #GDataAccessHandler structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-access-handler.h" line="95"/>
      <prerequisite name="Entry"/>
      <virtual-method name="get_authorization_domain" introspectable="0">
        <source-position filename="gdata/gdata-access-handler.h" line="79"/>
        <return-value>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="AccessHandler" c:type="GDataAccessHandler*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_rules"
                      invoker="get_rules"
                      version="0.3.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-handler.c"
             line="211">Retrieves a #GDataFeed containing all the access rules which apply to the given #GDataAccessHandler. Only the owner of a #GDataAccessHandler may
view its rule feed.

If @cancellable is not %NULL, then the operation can be cancelled by triggering the @cancellable object from another thread.
If the operation was cancelled, the error %G_IO_ERROR_CANCELLED will be returned.

A %GDATA_SERVICE_ERROR_PROTOCOL_ERROR will be returned if the server indicates there is a problem with the query.

For each rule in the response feed, @progress_callback will be called in the main thread. If there was an error parsing the XML response,
a #GDataParserError will be returned.</doc>
        <source-position filename="gdata/gdata-access-handler.h" line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-access-handler.c"
               line="231">a #GDataFeed of access control rules, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="213">a #GDataAccessHandler</doc>
            <type name="AccessHandler" c:type="GDataAccessHandler*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="214">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="215">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="216">a #GDataQueryProgressCallback to call when a rule is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="217">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_rules"
              c:identifier="gdata_access_handler_get_rules"
              version="0.3.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-handler.c"
             line="211">Retrieves a #GDataFeed containing all the access rules which apply to the given #GDataAccessHandler. Only the owner of a #GDataAccessHandler may
view its rule feed.

If @cancellable is not %NULL, then the operation can be cancelled by triggering the @cancellable object from another thread.
If the operation was cancelled, the error %G_IO_ERROR_CANCELLED will be returned.

A %GDATA_SERVICE_ERROR_PROTOCOL_ERROR will be returned if the server indicates there is a problem with the query.

For each rule in the response feed, @progress_callback will be called in the main thread. If there was an error parsing the XML response,
a #GDataParserError will be returned.</doc>
        <source-position filename="gdata/gdata-access-handler.h" line="99"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-access-handler.c"
               line="231">a #GDataFeed of access control rules, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="213">a #GDataAccessHandler</doc>
            <type name="AccessHandler" c:type="GDataAccessHandler*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="214">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="215">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="216">a #GDataQueryProgressCallback to call when a rule is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="217">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rules_async"
              c:identifier="gdata_access_handler_get_rules_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-handler.c"
             line="162">Retrieves a #GDataFeed containing all the access rules which apply to the given #GDataAccessHandler. Only the owner of a #GDataAccessHandler may
view its rule feed. @self and @service are both reffed when this function is called, so can safely be unreffed after this function returns.

For more details, see gdata_access_handler_get_rules(), which is the synchronous version of this function, and gdata_service_query_async(), which
is the base asynchronous query function.

When the operation is finished, @callback will be called. You can then call gdata_service_query_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/gdata-access-handler.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="164">a #GDataAccessHandler</doc>
            <type name="AccessHandler" c:type="GDataAccessHandler*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="165">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="166">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="167">a #GDataQueryProgressCallback to call when a rule is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="168">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="169">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="171">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="172">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="AccessHandlerIface"
            c:type="GDataAccessHandlerIface"
            glib:is-gtype-struct-for="AccessHandler"
            version="0.9.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-handler.h"
           line="60">The class structure for the #GDataAccessHandler interface.</doc>
      <source-position filename="gdata/gdata-access-handler.h" line="95"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-handler.h"
             line="62">the parent type</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="is_owner_rule">
        <callback name="is_owner_rule">
          <source-position filename="gdata/gdata-access-handler.h" line="78"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="rule" transfer-ownership="none">
              <type name="AccessRule" c:type="GDataAccessRule*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_authorization_domain" introspectable="0">
        <callback name="get_authorization_domain" introspectable="0">
          <source-position filename="gdata/gdata-access-handler.h" line="79"/>
          <return-value>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="AccessHandler" c:type="GDataAccessHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_rules">
        <callback name="get_rules" throws="1">
          <source-position filename="gdata/gdata-access-handler.h" line="81"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-handler.c"
                 line="231">a #GDataFeed of access control rules, or %NULL; unref with g_object_unref()</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-access-handler.c"
                   line="213">a #GDataAccessHandler</doc>
              <type name="AccessHandler" c:type="GDataAccessHandler*"/>
            </parameter>
            <parameter name="service" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-access-handler.c"
                   line="214">a #GDataService</doc>
              <type name="Service" c:type="GDataService*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdata/gdata-access-handler.c"
                   line="215">optional #GCancellable object, or %NULL</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="call"
                       closure="4">
              <doc xml:space="preserve"
                   filename="gdata/gdata-access-handler.c"
                   line="216">a #GDataQueryProgressCallback to call when a rule is loaded, or %NULL</doc>
              <type name="QueryProgressCallback"
                    c:type="GDataQueryProgressCallback"/>
            </parameter>
            <parameter name="progress_user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdata/gdata-access-handler.c"
                   line="217">data to pass to the @progress_callback function</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-access-handler.h" line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-access-handler.h" line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-access-handler.h" line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-access-handler.h" line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-access-handler.h" line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="AccessRule"
           c:symbol-prefix="access_rule"
           c:type="GDataAccessRule"
           version="0.3.0"
           parent="Entry"
           glib:type-name="GDataAccessRule"
           glib:get-type="gdata_access_rule_get_type"
           glib:type-struct="AccessRuleClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-rule.h"
           line="76">All the fields in the #GDataAccessRule structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-access-rule.h" line="103"/>
      <constructor name="new"
                   c:identifier="gdata_access_rule_new"
                   version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="499">Creates a new #GDataAccessRule with the given ID and default properties.</doc>
        <source-position filename="gdata/gdata-access-rule.h" line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-access-rule.c"
               line="505">a new #GDataAccessRule; unref with g_object_unref()</doc>
          <type name="AccessRule" c:type="GDataAccessRule*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="501">the access rule's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_edited"
              c:identifier="gdata_access_rule_get_edited"
              glib:get-property="edited"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="611">Gets the #GDataAccessRule:edited property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gdata-access-rule.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-access-rule.c"
               line="617">the UNIX timestamp for the time the access rule was last edited, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="613">a #GDataAccessRule</doc>
            <type name="AccessRule" c:type="GDataAccessRule*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key"
              c:identifier="gdata_access_rule_get_key"
              glib:get-property="key"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="642">Gets the #GDataAccessRule:key property.</doc>
        <source-position filename="gdata/gdata-access-rule.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-access-rule.c"
               line="648">the access rule's authorisation key, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="644">a #GDataAccessRule</doc>
            <type name="AccessRule" c:type="GDataAccessRule*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_role"
              c:identifier="gdata_access_rule_get_role"
              glib:get-property="role"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="537">Gets the #GDataAccessRule:role property.</doc>
        <source-position filename="gdata/gdata-access-rule.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-access-rule.c"
               line="543">the access rule's role, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="539">a #GDataAccessRule</doc>
            <type name="AccessRule" c:type="GDataAccessRule*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scope"
              c:identifier="gdata_access_rule_get_scope"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="591">Gets the #GDataAccessRule:scope-type and #GDataAccessRule:scope-value properties.</doc>
        <source-position filename="gdata/gdata-access-rule.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="593">a #GDataAccessRule</doc>
            <type name="AccessRule" c:type="GDataAccessRule*"/>
          </instance-parameter>
          <parameter name="type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="594">return location for the scope type, or %NULL</doc>
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="595">return location for the scope value, or %NULL</doc>
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_role"
              c:identifier="gdata_access_rule_set_role"
              glib:set-property="role"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="515">Sets the #GDataAccessRule:role property to @role. @role must be a non-empty string, such as %GDATA_ACCESS_ROLE_NONE.

Set @role to %NULL to unset the property in the access rule.</doc>
        <source-position filename="gdata/gdata-access-rule.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="517">a #GDataAccessRule</doc>
            <type name="AccessRule" c:type="GDataAccessRule*"/>
          </instance-parameter>
          <parameter name="role" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="518">a new role, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scope"
              c:identifier="gdata_access_rule_set_scope"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="555">Sets the #GDataAccessRule:scope-type property to @type and the #GDataAccessRule:scope-value property to @value.

Set @scope_value to %NULL to unset the #GDataAccessRule:scope-value property in the access rule. @type cannot
be %NULL. @scope_value must be %NULL if @type is &lt;literal&gt;default&lt;/literal&gt;, and non-%NULL otherwise.

See the
&lt;ulink type="http" url="https://developers.google.com/google-apps/calendar/v3/reference/acl"&gt;online
documentation&lt;/ulink&gt; for more information.</doc>
        <source-position filename="gdata/gdata-access-rule.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="557">a #GDataAccessRule</doc>
            <type name="AccessRule" c:type="GDataAccessRule*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="558">a new scope type</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-access-rule.c"
                 line="559">a new scope value, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="edited"
                version="0.7.0"
                transfer-ownership="none"
                getter="get_edited"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="181">The last time the access rule was edited. If the rule has not been edited yet, the content indicates the time it was created.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/#appEdited"&gt;
Atom Publishing Protocol specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="key"
                version="0.16.0"
                transfer-ownership="none"
                getter="get_key"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="197">An optional authorisation key required to access this item with the given scope. If set, this restricts
access to those principals who have a copy of the key. The key is generated server-side and cannot be
modified by the client. If no authorisation key is set (and hence none is needed for access to the item),
this will be %NULL.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="role"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                setter="set_role"
                getter="get_role"
                default-value="none">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="138">The role of the person concerned by this ACL. By default, this can only be %GDATA_ACCESS_ROLE_NONE. Services may extend it with
their own namespaced roles.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="scope-type"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                default-value="default">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="152">Specifies to whom this access rule applies. For example, %GDATA_ACCESS_SCOPE_USER or %GDATA_ACCESS_SCOPE_DEFAULT.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="scope-value"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-access-rule.c"
             line="165">A value representing the user who is represented by the access rule, such as an
e-mail address for users, or a domain name for domains.

This must be %NULL if and only if #GDataAccessRule:scope-type is %GDATA_ACCESS_SCOPE_DEFAULT.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="AccessRulePrivate" c:type="GDataAccessRulePrivate*"/>
      </field>
    </class>
    <record name="AccessRuleClass"
            c:type="GDataAccessRuleClass"
            glib:is-gtype-struct-for="AccessRule"
            version="0.3.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-rule.h"
           line="88">All the fields in the #GDataAccessRuleClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-access-rule.h" line="103"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-access-rule.h" line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-access-rule.h" line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="AccessRulePrivate"
            c:type="GDataAccessRulePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-access-rule.h" line="74"/>
    </record>
    <class name="Author"
           c:symbol-prefix="author"
           c:type="GDataAuthor"
           parent="Parsable"
           glib:type-name="GDataAuthor"
           glib:get-type="gdata_author_get_type"
           glib:type-struct="AuthorClass">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-author.h"
           line="39">All the fields in the #GDataAuthor structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-author.h" line="64"/>
      <implements name="Comparable"/>
      <constructor name="new" c:identifier="gdata_author_new">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="245">Creates a new #GDataAuthor. More information is available in the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.author"&gt;Atom specification&lt;/ulink&gt;.

@name must be non-%NULL and non-empty.</doc>
        <source-position filename="gdata/atom/gdata-author.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-author.c"
               line="256">a new #GDataAuthor, or %NULL; unref with g_object_unref()</doc>
          <type name="Author" c:type="GDataAuthor*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="247">the author's name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="uri"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="248">an IRI describing the author, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="email_address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="249">the author's e-mail address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_email_address"
              c:identifier="gdata_author_get_email_address"
              glib:get-property="email-address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="340">Gets the #GDataAuthor:email-address property. If the e-mail address is non-%NULL, it will be non-empty.</doc>
        <source-position filename="gdata/atom/gdata-author.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-author.c"
               line="346">the author's e-mail address, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="342">a #GDataAuthor</doc>
            <type name="Author" c:type="GDataAuthor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gdata_author_get_name"
              glib:get-property="name"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="265">Gets the #GDataAuthor:name property. The name will always be a non-%NULL, non-empty string.</doc>
        <source-position filename="gdata/atom/gdata-author.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-author.c"
               line="271">the author's name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="267">a #GDataAuthor</doc>
            <type name="Author" c:type="GDataAuthor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_author_get_uri"
              glib:get-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="302">Gets the #GDataAuthor:uri property. If the URI is non-%NULL, it will be non-empty.</doc>
        <source-position filename="gdata/atom/gdata-author.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-author.c"
               line="308">the author's URI, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="304">a #GDataAuthor</doc>
            <type name="Author" c:type="GDataAuthor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_email_address"
              c:identifier="gdata_author_set_email_address"
              glib:set-property="email-address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="357">Sets the #GDataAuthor:email-address property to @email_address. @email_address must be %NULL or non-empty.

Set @email_address to %NULL to unset the property in the author.</doc>
        <source-position filename="gdata/atom/gdata-author.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="359">a #GDataAuthor</doc>
            <type name="Author" c:type="GDataAuthor*"/>
          </instance-parameter>
          <parameter name="email_address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="360">the new e-mail address for the author, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gdata_author_set_name"
              glib:set-property="name"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="282">Sets the #GDataAuthor:name property to @name. @name must be non-%NULL and non-empty.</doc>
        <source-position filename="gdata/atom/gdata-author.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="284">a #GDataAuthor</doc>
            <type name="Author" c:type="GDataAuthor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="285">the new name for the author</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="gdata_author_set_uri"
              glib:set-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="319">Sets the #GDataAuthor:uri property to @uri. @uri must be %NULL or non-empty.

Set @uri to %NULL to unset the property in the author.</doc>
        <source-position filename="gdata/atom/gdata-author.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="321">a #GDataAuthor</doc>
            <type name="Author" c:type="GDataAuthor*"/>
          </instance-parameter>
          <parameter name="uri"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-author.c"
                 line="322">the new URI for the author, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="email-address"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_email_address"
                getter="get_email_address"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="111">An e-mail address associated with the person.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.author"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="79">A human-readable name for the person.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.author"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uri"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_uri"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-author.c"
             line="95">An IRI associated with the person.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.author"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="AuthorPrivate" c:type="GDataAuthorPrivate*"/>
      </field>
    </class>
    <record name="AuthorClass"
            c:type="GDataAuthorClass"
            glib:is-gtype-struct-for="Author"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-author.h"
           line="49">All the fields in the #GDataAuthorClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-author.h" line="64"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/atom/gdata-author.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/atom/gdata-author.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="AuthorPrivate"
            c:type="GDataAuthorPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/atom/gdata-author.h" line="37"/>
    </record>
    <class name="AuthorizationDomain"
           c:symbol-prefix="authorization_domain"
           c:type="GDataAuthorizationDomain"
           version="0.9.0"
           parent="GObject.Object"
           glib:type-name="GDataAuthorizationDomain"
           glib:get-type="gdata_authorization_domain_get_type"
           glib:type-struct="AuthorizationDomainClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-authorization-domain.h"
           line="37">All the fields in the #GDataAuthorizationDomain structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="69"/>
      <method name="get_scope"
              c:identifier="gdata_authorization_domain_get_scope"
              glib:get-property="scope"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorization-domain.c"
             line="179">Returns a URI detailing the scope of the authorization domain. See #GDataAuthorizationDomain:scope for more details.</doc>
        <source-position filename="gdata/gdata-authorization-domain.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorization-domain.c"
               line="185">URI detailing the scope of the authorization domain</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorization-domain.c"
                 line="181">a #GDataAuthorizationDomain</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_service_name"
              c:identifier="gdata_authorization_domain_get_service_name"
              glib:get-property="service-name"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorization-domain.c"
             line="161">Returns the name of the service containing the authorization domain. See #GDataAuthorizationDomain:service-name for more details.</doc>
        <source-position filename="gdata/gdata-authorization-domain.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorization-domain.c"
               line="167">name of the service containing the authorization domain</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorization-domain.c"
                 line="163">a #GDataAuthorizationDomain</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="scope"
                version="0.9.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_scope"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorization-domain.c"
             line="88">A URI detailing the scope of the authorization domain, as enumerated in the
&lt;ulink type="http" url="http://code.google.com/apis/documents/faq_gdata.html#AuthScopes"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="service-name"
                version="0.9.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_service_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorization-domain.c"
             line="74">The name of the service which contains the authorization domain, as enumerated in the
&lt;ulink type="http" url="http://code.google.com/apis/documents/faq_gdata.html#clientlogin"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="AuthorizationDomainPrivate"
              c:type="GDataAuthorizationDomainPrivate*"/>
      </field>
    </class>
    <record name="AuthorizationDomainClass"
            c:type="GDataAuthorizationDomainClass"
            glib:is-gtype-struct-for="AuthorizationDomain"
            version="0.9.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-authorization-domain.h"
           line="50">All the fields in the #GDataAuthorizationDomainClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="69"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-authorization-domain.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-authorization-domain.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-authorization-domain.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-authorization-domain.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-authorization-domain.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-authorization-domain.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="AuthorizationDomainPrivate"
            c:type="GDataAuthorizationDomainPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="35"/>
    </record>
    <interface name="Authorizer"
               c:symbol-prefix="authorizer"
               c:type="GDataAuthorizer"
               version="0.9.0"
               glib:type-name="GDataAuthorizer"
               glib:get-type="gdata_authorizer_get_type"
               glib:type-struct="AuthorizerInterface">
      <doc xml:space="preserve"
           filename="gdata/gdata-authorizer.h"
           line="38">All the fields in the #GDataAuthorizer structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-authorizer.h" line="77"/>
      <virtual-method name="is_authorized_for_domain"
                      invoker="is_authorized_for_domain"
                      version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="103">Returns whether the #GDataAuthorizer instance believes it's currently authorized to access the given @domain. Note that this will not perform any
network requests, and will just look up the result in the #GDataAuthorizer's local cache of authorizations. This means that the result may be out
of date, as the server may have since invalidated the authorization. If the #GDataAuthorizer class supports timeouts and TTLs on authorizations,
they will not be taken into account; this method effectively returns whether the last successful authorization operation performed on the
#GDataAuthorizer included @domain in the list of requested authorization domains.

Note that %NULL may be passed as the #GDataAuthorizer, in which case %FALSE will always be returned, regardless of the @domain. This is for
convenience of checking whether a domain is authorized by the #GDataAuthorizer returned by gdata_service_get_authorizer(), which may be %NULL.
For example:
|[
if (gdata_authorizer_is_authorized_for_domain (gdata_service_get_authorizer (my_service), my_domain) == TRUE) {
	/&lt;!-- --&gt;* Code to execute only if we're authorized for the given domain *&lt;!-- --&gt;/
}
]|

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorizer.c"
               line="125">%TRUE if the #GDataAuthorizer has been authorized to access @domain, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="105">a #GDataAuthorizer, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="106">the #GDataAuthorizationDomain to check against</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="process_request"
                      invoker="process_request"
                      version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="69">Processes @message, adding all the necessary extra headers and parameters to ensure that it's correctly authenticated and authorized under the
given @domain for the online service. Basically, if a query is not processed by calling this method on it, it will be sent to the online service as
if it's a query from a non-logged-in user. Similarly, if the #GDataAuthorizer isn't authenticated or authorized (for @domain), no changes will
be made to the @message.

@domain may be %NULL if the request doesn't require authorization.

This modifies @message in place.

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="71">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="72">the #GDataAuthorizationDomain the query falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="73">the query to process</doc>
            <type name="Soup.Message" c:type="SoupMessage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="refresh_authorization"
                      invoker="refresh_authorization"
                      version="0.9.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="147">Forces the #GDataAuthorizer to refresh any authorization tokens it holds with the online service. This should typically be called when a
#GDataService query returns %GDATA_SERVICE_ERROR_AUTHENTICATION_REQUIRED, and is already called transparently by methods such as
gdata_service_query() and gdata_service_insert_entry() (see their documentation for more details).

If re-authorization is successful, it's guaranteed that by the time this method returns, the properties containing the relevant authorization
tokens on the #GDataAuthorizer instance will have been updated.

If %FALSE is returned, @error will be set if (and only if) it's due to a refresh being attempted and failing. If a refresh is not attempted, %FALSE
will be returned but @error will not be set.

If the #GDataAuthorizer has not been previously authenticated or authorized (using the class' specific methods), no authorization will be
attempted, %FALSE will be returned immediately and @error will not be set.

Some #GDataAuthorizer implementations may not support refreshing authorization tokens at all; for example if doing so requires user interaction.
%FALSE will be returned immediately in that case and @error will not be set.

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorizer.c"
               line="171">%TRUE if an authorization refresh was attempted and was successful, %FALSE if a refresh wasn't attempted or was unsuccessful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="149">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="150">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="refresh_authorization_async"
                      invoker="refresh_authorization_async"
                      version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="209">Forces the #GDataAuthorizer to refresh any authorization tokens it holds with the online service. @self and @cancellable are reffed when this
method is called, so can safely be freed after this method returns.

For more details, see gdata_authorizer_refresh_authorization(), which is the synchronous version of this method. If the #GDataAuthorizer class
doesn't implement #GDataAuthorizerInterface.refresh_authorization_async but does implement #GDataAuthorizerInterface.refresh_authorization, the
latter will be called from a new thread to make it asynchronous.

When the authorization refresh operation is finished, @callback will be called. You can then call gdata_authorizer_refresh_authorization_finish()
to get the results of the operation.

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="211">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="212">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="213">a #GAsyncReadyCallback to call when the authorization refresh operation is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="214">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="refresh_authorization_finish"
                      invoker="refresh_authorization_finish"
                      version="0.9.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="266">Finishes an asynchronous authorization refresh operation for the #GDataAuthorizer, as started with gdata_authorizer_refresh_authorization_async().

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorizer.c"
               line="276">%TRUE if an authorization refresh was attempted and was successful, %FALSE if a refresh wasn't attempted or was unsuccessful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="268">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="269">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="is_authorized_for_domain"
              c:identifier="gdata_authorizer_is_authorized_for_domain"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="103">Returns whether the #GDataAuthorizer instance believes it's currently authorized to access the given @domain. Note that this will not perform any
network requests, and will just look up the result in the #GDataAuthorizer's local cache of authorizations. This means that the result may be out
of date, as the server may have since invalidated the authorization. If the #GDataAuthorizer class supports timeouts and TTLs on authorizations,
they will not be taken into account; this method effectively returns whether the last successful authorization operation performed on the
#GDataAuthorizer included @domain in the list of requested authorization domains.

Note that %NULL may be passed as the #GDataAuthorizer, in which case %FALSE will always be returned, regardless of the @domain. This is for
convenience of checking whether a domain is authorized by the #GDataAuthorizer returned by gdata_service_get_authorizer(), which may be %NULL.
For example:
|[
if (gdata_authorizer_is_authorized_for_domain (gdata_service_get_authorizer (my_service), my_domain) == TRUE) {
	/&lt;!-- --&gt;* Code to execute only if we're authorized for the given domain *&lt;!-- --&gt;/
}
]|

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorizer.c"
               line="125">%TRUE if the #GDataAuthorizer has been authorized to access @domain, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="105">a #GDataAuthorizer, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="106">the #GDataAuthorizationDomain to check against</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_request"
              c:identifier="gdata_authorizer_process_request"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="69">Processes @message, adding all the necessary extra headers and parameters to ensure that it's correctly authenticated and authorized under the
given @domain for the online service. Basically, if a query is not processed by calling this method on it, it will be sent to the online service as
if it's a query from a non-logged-in user. Similarly, if the #GDataAuthorizer isn't authenticated or authorized (for @domain), no changes will
be made to the @message.

@domain may be %NULL if the request doesn't require authorization.

This modifies @message in place.

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="71">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="72">the #GDataAuthorizationDomain the query falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="73">the query to process</doc>
            <type name="Soup.Message" c:type="SoupMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_authorization"
              c:identifier="gdata_authorizer_refresh_authorization"
              version="0.9.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="147">Forces the #GDataAuthorizer to refresh any authorization tokens it holds with the online service. This should typically be called when a
#GDataService query returns %GDATA_SERVICE_ERROR_AUTHENTICATION_REQUIRED, and is already called transparently by methods such as
gdata_service_query() and gdata_service_insert_entry() (see their documentation for more details).

If re-authorization is successful, it's guaranteed that by the time this method returns, the properties containing the relevant authorization
tokens on the #GDataAuthorizer instance will have been updated.

If %FALSE is returned, @error will be set if (and only if) it's due to a refresh being attempted and failing. If a refresh is not attempted, %FALSE
will be returned but @error will not be set.

If the #GDataAuthorizer has not been previously authenticated or authorized (using the class' specific methods), no authorization will be
attempted, %FALSE will be returned immediately and @error will not be set.

Some #GDataAuthorizer implementations may not support refreshing authorization tokens at all; for example if doing so requires user interaction.
%FALSE will be returned immediately in that case and @error will not be set.

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorizer.c"
               line="171">%TRUE if an authorization refresh was attempted and was successful, %FALSE if a refresh wasn't attempted or was unsuccessful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="149">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="150">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_authorization_async"
              c:identifier="gdata_authorizer_refresh_authorization_async"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="209">Forces the #GDataAuthorizer to refresh any authorization tokens it holds with the online service. @self and @cancellable are reffed when this
method is called, so can safely be freed after this method returns.

For more details, see gdata_authorizer_refresh_authorization(), which is the synchronous version of this method. If the #GDataAuthorizer class
doesn't implement #GDataAuthorizerInterface.refresh_authorization_async but does implement #GDataAuthorizerInterface.refresh_authorization, the
latter will be called from a new thread to make it asynchronous.

When the authorization refresh operation is finished, @callback will be called. You can then call gdata_authorizer_refresh_authorization_finish()
to get the results of the operation.

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="211">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="212">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="213">a #GAsyncReadyCallback to call when the authorization refresh operation is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="214">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_authorization_finish"
              c:identifier="gdata_authorizer_refresh_authorization_finish"
              version="0.9.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.c"
             line="266">Finishes an asynchronous authorization refresh operation for the #GDataAuthorizer, as started with gdata_authorizer_refresh_authorization_async().

This method is thread safe.</doc>
        <source-position filename="gdata/gdata-authorizer.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-authorizer.c"
               line="276">%TRUE if an authorization refresh was attempted and was successful, %FALSE if a refresh wasn't attempted or was unsuccessful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="268">a #GDataAuthorizer</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="269">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="AuthorizerInterface"
            c:type="GDataAuthorizerInterface"
            glib:is-gtype-struct-for="Authorizer"
            version="0.9.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-authorizer.h"
           line="47">The class structure for the #GDataAuthorizer interface.</doc>
      <source-position filename="gdata/gdata-authorizer.h" line="77"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="gdata/gdata-authorizer.h"
             line="49">the parent type</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="process_request">
        <callback name="process_request">
          <source-position filename="gdata/gdata-authorizer.h" line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="71">a #GDataAuthorizer</doc>
              <type name="Authorizer" c:type="GDataAuthorizer*"/>
            </parameter>
            <parameter name="domain"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="72">the #GDataAuthorizationDomain the query falls under, or %NULL</doc>
              <type name="AuthorizationDomain"
                    c:type="GDataAuthorizationDomain*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="73">the query to process</doc>
              <type name="Soup.Message" c:type="SoupMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_authorized_for_domain">
        <callback name="is_authorized_for_domain">
          <source-position filename="gdata/gdata-authorizer.h" line="72"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="125">%TRUE if the #GDataAuthorizer has been authorized to access @domain, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="105">a #GDataAuthorizer, or %NULL</doc>
              <type name="Authorizer" c:type="GDataAuthorizer*"/>
            </parameter>
            <parameter name="domain" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="106">the #GDataAuthorizationDomain to check against</doc>
              <type name="AuthorizationDomain"
                    c:type="GDataAuthorizationDomain*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="refresh_authorization">
        <callback name="refresh_authorization" throws="1">
          <source-position filename="gdata/gdata-authorizer.h" line="73"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="171">%TRUE if an authorization refresh was attempted and was successful, %FALSE if a refresh wasn't attempted or was unsuccessful</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="149">a #GDataAuthorizer</doc>
              <type name="Authorizer" c:type="GDataAuthorizer*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="150">optional #GCancellable object, or %NULL</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="refresh_authorization_async">
        <callback name="refresh_authorization_async">
          <source-position filename="gdata/gdata-authorizer.h" line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="211">a #GDataAuthorizer</doc>
              <type name="Authorizer" c:type="GDataAuthorizer*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="212">optional #GCancellable object, or %NULL</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="3">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="213">a #GAsyncReadyCallback to call when the authorization refresh operation is finished, or %NULL</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="3">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="214">data to pass to the @callback function</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="refresh_authorization_finish">
        <callback name="refresh_authorization_finish" throws="1">
          <source-position filename="gdata/gdata-authorizer.h" line="76"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-authorizer.c"
                 line="276">%TRUE if an authorization refresh was attempted and was successful, %FALSE if a refresh wasn't attempted or was unsuccessful</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="268">a #GDataAuthorizer</doc>
              <type name="Authorizer" c:type="GDataAuthorizer*"/>
            </parameter>
            <parameter name="async_result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdata/gdata-authorizer.c"
                   line="269">a #GAsyncResult</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <function-macro name="BATCHABLE"
                    c:identifier="GDATA_BATCHABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-batchable.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BATCHABLE_CLASS"
                    c:identifier="GDATA_BATCHABLE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-batchable.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BATCHABLE_GET_IFACE"
                    c:identifier="GDATA_BATCHABLE_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdata/gdata-batchable.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BATCH_OPERATION"
                    c:identifier="GDATA_BATCH_OPERATION"
                    introspectable="0">
      <source-position filename="gdata/gdata-batch-operation.h" line="91"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BATCH_OPERATION_CLASS"
                    c:identifier="GDATA_BATCH_OPERATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-batch-operation.h" line="92"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BATCH_OPERATION_GET_CLASS"
                    c:identifier="GDATA_BATCH_OPERATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-batch-operation.h" line="95"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="BatchOperation"
           c:symbol-prefix="batch_operation"
           c:type="GDataBatchOperation"
           version="0.7.0"
           parent="GObject.Object"
           glib:type-name="GDataBatchOperation"
           glib:get-type="gdata_batch_operation_get_type"
           glib:type-struct="BatchOperationClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-batch-operation.h"
           line="99">All the fields in the #GDataBatchOperation structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-batch-operation.h" line="130"/>
      <method name="add_deletion"
              c:identifier="gdata_batch_operation_add_deletion"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="542">Add an entry to the #GDataBatchOperation, to be deleted on the server when the operation is run. @entry is reffed by the function, so may be freed
after it returns.

Note that a single batch operation should not operate on a given #GDataEntry more than once, as there's no guarantee about the order in which the
batch operation's operations will be performed.

@callback will be called as specified in the documentation for gdata_batch_operation_add_query(), with an @operation_type of
%GDATA_BATCH_OPERATION_DELETION.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="558">operation ID for the added deletion, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="544">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="545">the #GDataEntry to delete</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="546">a #GDataBatchOperationCallback to call when the deletion is finished, or %NULL</doc>
            <type name="BatchOperationCallback"
                  c:type="GDataBatchOperationCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="547">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_insertion"
              c:identifier="gdata_batch_operation_add_insertion"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="485">Add an entry to the #GDataBatchOperation, to be inserted on the server when the operation is run. The insertion will return the inserted version
of @entry. @entry is reffed by the function, so may be freed after it returns.

@callback will be called as specified in the documentation for gdata_batch_operation_add_query(), with an @operation_type of
%GDATA_BATCH_OPERATION_INSERTION.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="498">operation ID for the added insertion, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="487">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="488">the #GDataEntry to insert</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="489">a #GDataBatchOperationCallback to call when the insertion is finished, or %NULL</doc>
            <type name="BatchOperationCallback"
                  c:type="GDataBatchOperationCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="490">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_query"
              c:identifier="gdata_batch_operation_add_query"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="435">Add a query to the #GDataBatchOperation, to be executed when the operation is run. The query will return a #GDataEntry (of subclass type
@entry_type) representing the given entry @id. The ID is of the same format as that returned by gdata_entry_get_id().

Note that a single batch operation should not operate on a given #GDataEntry more than once, as there's no guarantee about the order in which the
batch operation's operations will be performed.

@callback will be called when the #GDataBatchOperation is run with gdata_batch_operation_run() (in which case it will be called in the thread which
ran the batch operation), or with gdata_batch_operation_run_async() (in which case it will be called in an idle handler in the main thread). The
@operation_id passed to the callback will match the return value of gdata_batch_operation_add_query(), and the @operation_type will be
%GDATA_BATCH_OPERATION_QUERY. If the query was successful, the resulting entry will be passed to the callback function as @entry, and @error will
be %NULL. If, however, the query was unsuccessful, @entry will be %NULL and @error will contain a #GError detailing what went wrong.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="455">operation ID for the added query, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="437">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="438">the ID of the entry being queried for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="439">the type of the entry which will be returned</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="440">a #GDataBatchOperationCallback to call when the query is finished, or %NULL</doc>
            <type name="BatchOperationCallback"
                  c:type="GDataBatchOperationCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="441">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_update"
              c:identifier="gdata_batch_operation_add_update"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="512">Add an entry to the #GDataBatchOperation, to be updated on the server when the operation is run. The update will return the updated version of
@entry. @entry is reffed by the function, so may be freed after it returns.

Note that a single batch operation should not operate on a given #GDataEntry more than once, as there's no guarantee about the order in which the
batch operation's operations will be performed.

@callback will be called as specified in the documentation for gdata_batch_operation_add_query(), with an @operation_type of
%GDATA_BATCH_OPERATION_UPDATE.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="528">operation ID for the added update, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="514">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="515">the #GDataEntry to update</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="516">a #GDataBatchOperationCallback to call when the update is finished, or %NULL</doc>
            <type name="BatchOperationCallback"
                  c:type="GDataBatchOperationCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="517">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_authorization_domain"
              c:identifier="gdata_batch_operation_get_authorization_domain"
              glib:get-property="authorization-domain"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="284">Gets the #GDataBatchOperation:authorization-domain property.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="135"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="290">the #GDataAuthorizationDomain used to authorize the batch operation, or %NULL</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="286">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_feed_uri"
              c:identifier="gdata_batch_operation_get_feed_uri"
              glib:get-property="feed-uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="302">Gets the #GDataBatchOperation:feed-uri property.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="308">the batch operation's feed URI</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="304">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_service"
              c:identifier="gdata_batch_operation_get_service"
              glib:get-property="service"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="267">Gets the #GDataBatchOperation:service property.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="273">the batch operation's attached service</doc>
          <type name="Service" c:type="GDataService*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="269">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="run"
              c:identifier="gdata_batch_operation_run"
              version="0.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="572">Run the #GDataBatchOperation synchronously. This will send all the operations in the batch operation to the server, and call their respective
callbacks synchronously (i.e. before gdata_batch_operation_run() returns, and in the same thread that called gdata_batch_operation_run()) as the
server returns results for each operation.

The callbacks for all of the operations in the batch operation are always guaranteed to be called, even if the batch operation as a whole fails.
Each callback will be called exactly once for each time gdata_batch_operation_run() is called.

The return value of the function indicates whether the overall batch operation was successful, and doesn't indicate the status of any of the
operations it comprises. gdata_batch_operation_run() could return %TRUE even if all of its operations failed.

@cancellable can be used to cancel the entire batch operation any time before or during the network activity. If @cancellable is cancelled
after network activity has finished, gdata_batch_operation_run() will continue and finish as normal.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="591">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="574">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="575">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_async"
              c:identifier="gdata_batch_operation_run_async"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="736">Run the #GDataBatchOperation asynchronously. This will send all the operations in the batch operation to the server, and call their respective
callbacks asynchronously (i.e. in idle functions in the main thread, usually after gdata_batch_operation_run_async() has returned) as the
server returns results for each operation. @self is reffed when this function is called, so can safely be unreffed after this function returns.

For more details, see gdata_batch_operation_run(), which is the synchronous version of this function.

When the entire batch operation is finished, @callback will be called. You can then call gdata_batch_operation_run_finish() to get the results of
the batch operation.</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="738">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="739">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="740">a #GAsyncReadyCallback to call when the batch operation is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="741">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_finish"
              c:identifier="gdata_batch_operation_run_finish"
              version="0.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="771">Finishes an asynchronous batch operation run with gdata_batch_operation_run_async().

Return values are as for gdata_batch_operation_run().</doc>
        <source-position filename="gdata/gdata-batch-operation.h" line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.c"
               line="781">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="773">a #GDataBatchOperation</doc>
            <type name="BatchOperation" c:type="GDataBatchOperation*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batch-operation.c"
                 line="774">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="authorization-domain"
                version="0.9.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_authorization_domain">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="154">The authorization domain for the batch operation, against which the #GDataService:authorizer for the #GDataBatchOperation:service should be
authorized. This may be %NULL if authorization is not needed for any of the requests in the batch operation.

All requests in the batch operation must be authorizable under this single authorization domain. If requests need different authorization
domains, they must be performed in different batch operations.</doc>
        <type name="AuthorizationDomain"/>
      </property>
      <property name="feed-uri"
                version="0.7.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_feed_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="171">The feed URI that this batch operation will be sent to.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="service"
                version="0.7.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_service">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.c"
             line="141">The service this batch operation is attached to.</doc>
        <type name="Service"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="BatchOperationPrivate"
              c:type="GDataBatchOperationPrivate*"/>
      </field>
    </class>
    <callback name="BatchOperationCallback"
              c:type="GDataBatchOperationCallback"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-batch-operation.h"
           line="61">Callback function called once for each operation in a batch operation run. The operation is identified by @operation_id and @operation_type (where
@operation_id is the ID returned by the relevant call to gdata_batch_operation_add_query(), gdata_batch_operation_add_insertion(),
gdata_batch_operation_add_update() or gdata_batch_operation_add_deletion(), and @operation_type shows which one of the above was called).

If the operation was successful, the resulting #GDataEntry will be passed in as @entry, and @error will be %NULL. Otherwise, @entry will be %NULL
and a descriptive error will be in @error. If @operation_type is %GDATA_BATCH_OPERATION_DELETION, @entry will always be %NULL, and @error will be
%NULL or non-%NULL as appropriate.

If the callback code needs to retain a copy of @entry, it must be referenced (with g_object_ref()). Similarly, @error is owned by the calling code,
and must not be freed.

The callback is called in the main thread, and there is no guarantee on the order in which the callbacks for the operations in a run are executed,
or whether they will be called in a timely manner. It is, however, guaranteed that they will all be called before the #GAsyncReadyCallback which
signals the completion of the run (if initiated with gdata_batch_operation_run_async()) is called; or gdata_batch_operation_run() returns (if
initiated synchronously).</doc>
      <source-position filename="gdata/gdata-batch-operation.h" line="87"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="operation_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.h"
               line="63">the operation ID returned from gdata_batch_operation_add_*()</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="operation_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.h"
               line="64">the type of operation which was requested</doc>
          <type name="BatchOperationType" c:type="GDataBatchOperationType"/>
        </parameter>
        <parameter name="entry" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.h"
               line="65">the result of the operation, or %NULL</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.h"
               line="66">a #GError describing any error which occurred, or %NULL</doc>
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="4">
          <doc xml:space="preserve"
               filename="gdata/gdata-batch-operation.h"
               line="67">user data passed to the callback</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="BatchOperationClass"
            c:type="GDataBatchOperationClass"
            glib:is-gtype-struct-for="BatchOperation"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-batch-operation.h"
           line="111">All the fields in the #GDataBatchOperationClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-batch-operation.h" line="130"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-batch-operation.h"
                           line="124"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-batch-operation.h"
                           line="125"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-batch-operation.h"
                           line="126"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-batch-operation.h"
                           line="127"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-batch-operation.h"
                           line="128"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-batch-operation.h"
                           line="129"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BatchOperationPrivate"
            c:type="GDataBatchOperationPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-batch-operation.h" line="97"/>
    </record>
    <enumeration name="BatchOperationType"
                 version="0.7.0"
                 glib:type-name="GDataBatchOperationType"
                 glib:get-type="gdata_batch_operation_type_get_type"
                 c:type="GDataBatchOperationType">
      <doc xml:space="preserve"
           filename="gdata/gdata-batch-operation.h"
           line="43">Indicates which type of batch operation caused the current #GDataBatchOperationCallback to be called.</doc>
      <member name="query"
              value="0"
              c:identifier="GDATA_BATCH_OPERATION_QUERY"
              glib:nick="query"
              glib:name="GDATA_BATCH_OPERATION_QUERY">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.h"
             line="45">a query operation</doc>
      </member>
      <member name="insertion"
              value="1"
              c:identifier="GDATA_BATCH_OPERATION_INSERTION"
              glib:nick="insertion"
              glib:name="GDATA_BATCH_OPERATION_INSERTION">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.h"
             line="46">an insertion operation</doc>
      </member>
      <member name="update"
              value="2"
              c:identifier="GDATA_BATCH_OPERATION_UPDATE"
              glib:nick="update"
              glib:name="GDATA_BATCH_OPERATION_UPDATE">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.h"
             line="47">an update operation</doc>
      </member>
      <member name="deletion"
              value="3"
              c:identifier="GDATA_BATCH_OPERATION_DELETION"
              glib:nick="deletion"
              glib:name="GDATA_BATCH_OPERATION_DELETION">
        <doc xml:space="preserve"
             filename="gdata/gdata-batch-operation.h"
             line="48">a deletion operation</doc>
      </member>
    </enumeration>
    <interface name="Batchable"
               c:symbol-prefix="batchable"
               c:type="GDataBatchable"
               version="0.7.0"
               glib:type-name="GDataBatchable"
               glib:get-type="gdata_batchable_get_type"
               glib:type-struct="BatchableIface">
      <doc xml:space="preserve"
           filename="gdata/gdata-batchable.h"
           line="38">All the fields in the #GDataBatchable structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-batchable.h" line="67"/>
      <prerequisite name="Service"/>
      <method name="create_operation"
              c:identifier="gdata_batchable_create_operation"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-batchable.c"
             line="54">Creates a new #GDataBatchOperation for the given #GDataBatchable service, and with the given @feed_uri. @feed_uri is normally the %GDATA_LINK_BATCH
link URI in the appropriate #GDataFeed from the service. If authorization will be required to perform any of the requests in the batch operation,
@domain must be non-%NULL, and must be an authorization domain which covers all of the requests. Otherwise, @domain may be %NULL if authorization
is not required.</doc>
        <source-position filename="gdata/gdata-batchable.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-batchable.c"
               line="65">a new #GDataBatchOperation; unref with g_object_unref()</doc>
          <type name="BatchOperation" c:type="GDataBatchOperation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batchable.c"
                 line="56">a #GDataBatchable</doc>
            <type name="Batchable" c:type="GDataBatchable*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batchable.c"
                 line="57">the #GDataAuthorizationDomain to authorize the operation, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="feed_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-batchable.c"
                 line="58">the URI to send the batch operation request to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="BatchableIface"
            c:type="GDataBatchableIface"
            glib:is-gtype-struct-for="Batchable"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-batchable.h"
           line="47">All the fields in the #GDataBatchableIface structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-batchable.h" line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="is_supported">
        <callback name="is_supported">
          <source-position filename="gdata/gdata-batchable.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="operation_type" transfer-ownership="none">
              <type name="BatchOperationType"
                    c:type="GDataBatchOperationType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <constant name="CALENDAR_ACCESS_ROLE_EDITOR"
              value="http://schemas.google.com/gCal/2005#editor"
              c:type="GDATA_CALENDAR_ACCESS_ROLE_EDITOR"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.h"
           line="50">The users specified by the #GDataCalendarAccessRule have full edit access to
the calendar, except they can’t change the calendar’s access rules.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="58"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CALENDAR_ACCESS_ROLE_FREE_BUSY"
              value="http://schemas.google.com/gCal/2005#freebusy"
              c:type="GDATA_CALENDAR_ACCESS_ROLE_FREE_BUSY"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.h"
           line="40">The users specified by the #GDataCalendarAccessRule can only see the
free/busy information on the calendar; not event details.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CALENDAR_ACCESS_ROLE_OWNER"
              value="http://schemas.google.com/gCal/2005#owner"
              c:type="GDATA_CALENDAR_ACCESS_ROLE_OWNER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.h"
           line="60">The users specified by the #GDataCalendarAccessRule have full owner access
to the calendar.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="68"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CALENDAR_ACCESS_ROLE_READ"
              value="http://schemas.google.com/gCal/2005#read"
              c:type="GDATA_CALENDAR_ACCESS_ROLE_READ"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.h"
           line="30">The users specified by the #GDataCalendarAccessRule have read-only access to
the calendar.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CALENDAR_ACCESS_ROLE_ROOT"
              value="http://schemas.google.com/gCal/2005#root"
              c:type="GDATA_CALENDAR_ACCESS_ROLE_ROOT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.h"
           line="70">The users specified by the #GDataCalendarAccessRule have full administrator
access to the calendar server. This is only available in Google Apps For
Your Domain.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="79"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="CALENDAR_ACCESS_RULE"
                    c:identifier="GDATA_CALENDAR_ACCESS_RULE"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="82"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_ACCESS_RULE_CLASS"
                    c:identifier="GDATA_CALENDAR_ACCESS_RULE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="83"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_ACCESS_RULE_GET_CLASS"
                    c:identifier="GDATA_CALENDAR_ACCESS_RULE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="86"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_CALENDAR"
                    c:identifier="GDATA_CALENDAR_CALENDAR"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_CALENDAR_CLASS"
                    c:identifier="GDATA_CALENDAR_CALENDAR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_CALENDAR_GET_CLASS"
                    c:identifier="GDATA_CALENDAR_CALENDAR_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_EVENT"
                    c:identifier="GDATA_CALENDAR_EVENT"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_EVENT_CLASS"
                    c:identifier="GDATA_CALENDAR_EVENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="36"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_EVENT_GET_CLASS"
                    c:identifier="GDATA_CALENDAR_EVENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="39"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_FEED"
                    c:identifier="GDATA_CALENDAR_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_FEED_CLASS"
                    c:identifier="GDATA_CALENDAR_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_FEED_GET_CLASS"
                    c:identifier="GDATA_CALENDAR_FEED_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_QUERY"
                    c:identifier="GDATA_CALENDAR_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_QUERY_CLASS"
                    c:identifier="GDATA_CALENDAR_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_QUERY_GET_CLASS"
                    c:identifier="GDATA_CALENDAR_QUERY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_SERVICE"
                    c:identifier="GDATA_CALENDAR_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_SERVICE_CLASS"
                    c:identifier="GDATA_CALENDAR_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CALENDAR_SERVICE_GET_CLASS"
                    c:identifier="GDATA_CALENDAR_SERVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CATEGORY"
                    c:identifier="GDATA_CATEGORY"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-category.h" line="71"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CATEGORY_CLASS"
                    c:identifier="GDATA_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-category.h" line="72"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CATEGORY_GET_CLASS"
                    c:identifier="GDATA_CATEGORY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-category.h" line="75"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="CATEGORY_SCHEMA_LABELS"
              value="http://schemas.google.com/g/2005/labels"
              c:type="GDATA_CATEGORY_SCHEMA_LABELS"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-category.h"
           line="30">A schema for categories which label the entry they're applied to in some way, such as starring it. The semantics of the various labels
(such as %GDATA_CATEGORY_SCHEMA_LABELS_STARRED) are service-specific.</doc>
      <source-position filename="gdata/atom/gdata-category.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="CHECK_VERSION"
                    c:identifier="GDATA_CHECK_VERSION"
                    version="0.11.0"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="gdata/gdata-version.h"
           line="63">Evaluates to %TRUE if the version of the GData header files
is the same as or newer than the passed-in version.</doc>
      <source-position filename="gdata/gdata-version.h" line="74"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="gdata/gdata-version.h"
               line="65">major version (e.g. 1 for version 1.2.3)</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="gdata/gdata-version.h"
               line="66">minor version (e.g. 2 for version 1.2.3)</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="gdata/gdata-version.h"
               line="67">micro version (e.g. 3 for version 1.2.3)</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMMENT"
                    c:identifier="GDATA_COMMENT"
                    introspectable="0">
      <source-position filename="gdata/gdata-comment.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMMENTABLE"
                    c:identifier="GDATA_COMMENTABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-commentable.h" line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMMENTABLE_CLASS"
                    c:identifier="GDATA_COMMENTABLE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-commentable.h" line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMMENTABLE_GET_IFACE"
                    c:identifier="GDATA_COMMENTABLE_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdata/gdata-commentable.h" line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMMENT_CLASS"
                    c:identifier="GDATA_COMMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-comment.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMMENT_GET_CLASS"
                    c:identifier="GDATA_COMMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-comment.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPARABLE"
                    c:identifier="GDATA_COMPARABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-comparable.h" line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPARABLE_CLASS"
                    c:identifier="GDATA_COMPARABLE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-comparable.h" line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPARABLE_GET_IFACE"
                    c:identifier="GDATA_COMPARABLE_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdata/gdata-comparable.h" line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="CalendarAccessRule"
           c:symbol-prefix="calendar_access_rule"
           c:type="GDataCalendarAccessRule"
           version="0.17.2"
           parent="AccessRule"
           glib:type-name="GDataCalendarAccessRule"
           glib:get-type="gdata_calendar_access_rule_get_type"
           glib:type-struct="CalendarAccessRuleClass">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.h"
           line="88">All the fields in the #GDataCalendarAccessRule structure are private and
should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="116"/>
      <constructor name="new"
                   c:identifier="gdata_calendar_access_rule_new"
                   version="0.17.2">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-access-rule.c"
             line="256">Creates a new #GDataCalendarAccessRule with the given ID and default
properties.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                         line="121"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-access-rule.c"
               line="263">a new #GDataCalendarAccessRule; unref with
  g_object_unref()</doc>
          <type name="CalendarAccessRule" c:type="GDataCalendarAccessRule*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-access-rule.c"
                 line="258">the access rule's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="AccessRule" c:type="GDataAccessRule"/>
      </field>
    </class>
    <record name="CalendarAccessRuleClass"
            c:type="GDataCalendarAccessRuleClass"
            glib:is-gtype-struct-for="CalendarAccessRule"
            version="0.17.2">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.h"
           line="100">All the fields in the #GDataCalendarAccessRuleClass structure are private
and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="116"/>
      <field name="parent" readable="0" private="1">
        <type name="AccessRuleClass" c:type="GDataAccessRuleClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                           line="114"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                           line="115"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="CalendarCalendar"
           c:symbol-prefix="calendar_calendar"
           c:type="GDataCalendarCalendar"
           parent="Entry"
           glib:type-name="GDataCalendarCalendar"
           glib:get-type="gdata_calendar_calendar_get_type"
           glib:type-struct="CalendarCalendarClass">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-calendar.h"
           line="40">All the fields in the #GDataCalendarCalendar structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="63"/>
      <implements name="AccessHandler"/>
      <constructor name="new" c:identifier="gdata_calendar_calendar_new">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="560">Creates a new #GDataCalendarCalendar with the given ID and default properties.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-calendar.c"
               line="566">a new #GDataCalendarCalendar; unref with g_object_unref()</doc>
          <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="562">the calendar's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_access_level"
              c:identifier="gdata_calendar_calendar_get_access_level"
              glib:get-property="access-level">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="708">Gets the #GDataCalendarCalendar:access-level property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-calendar.c"
               line="714">the authenticated user's access level to the calendar, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="710">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="gdata_calendar_calendar_get_color"
              glib:get-property="color">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="643">Gets the #GDataCalendarCalendar:color property and puts it in @color.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="645">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="646">a #GDataColor</doc>
            <type name="Color" c:type="GDataColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_timezone"
              c:identifier="gdata_calendar_calendar_get_timezone"
              glib:get-property="timezone">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="574">Gets the #GDataCalendarCalendar:timezone property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-calendar.c"
               line="580">the calendar's timezone, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="576">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_hidden"
              c:identifier="gdata_calendar_calendar_is_hidden"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="609">Gets the #GDataCalendarCalendar:is-hidden property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-calendar.c"
               line="615">%TRUE if the calendar is hidden, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="611">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_selected"
              c:identifier="gdata_calendar_calendar_is_selected"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="674">Gets the #GDataCalendarCalendar:is-selected property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-calendar.c"
               line="680">%TRUE if the calendar is selected, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="676">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="gdata_calendar_calendar_set_color"
              glib:set-property="color">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="658">Sets the #GDataCalendarCalendar:color property to @color.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="660">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="661">a new #GDataColor</doc>
            <type name="Color" c:type="const GDataColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_hidden"
              c:identifier="gdata_calendar_calendar_set_is_hidden"
              glib:set-property="is-hidden"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="626">Sets the #GDataCalendarCalendar:is-hidden property to @is_hidden.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="628">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
          <parameter name="is_hidden" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="629">%TRUE to hide the calendar, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_selected"
              c:identifier="gdata_calendar_calendar_set_is_selected"
              glib:set-property="is-selected"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="691">Sets the #GDataCalendarCalendar:is-selected property to @is_selected.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="693">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
          <parameter name="is_selected" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="694">%TRUE to select the calendar, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timezone"
              c:identifier="gdata_calendar_calendar_set_timezone"
              glib:set-property="timezone">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="589">Sets the #GDataCalendarCalendar:timezone property to the new timezone, @_timezone.

Set @_timezone to %NULL to unset the property in the calendar.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="591">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </instance-parameter>
          <parameter name="_timezone"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-calendar.c"
                 line="592">a new timezone, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="access-level"
                transfer-ownership="none"
                getter="get_access_level"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="188">Indicates the access level the current user has to the calendar. For example: %GDATA_CALENDAR_ACCESS_ROLE_READ or
%GDATA_CALENDAR_ACCESS_ROLE_FREE_BUSY. The "current user" is the one authenticated against the service's #GDataService:authorizer,
or the guest user.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="color"
                writable="1"
                transfer-ownership="none"
                setter="set_color"
                getter="get_color">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="162">The background color used to highlight the calendar in the user’s
browser. This used to be restricted to a limited set of colours, but
since 0.17.2 may be any RGB colour.</doc>
        <type name="Color"/>
      </property>
      <property name="is-hidden"
                version="0.2.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_hidden"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="149">Indicates whether the calendar is visible.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="is-selected"
                version="0.2.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_selected"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="175">Indicates whether the calendar is selected.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="timezone"
                writable="1"
                transfer-ownership="none"
                setter="set_timezone"
                getter="get_timezone"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-calendar.c"
             line="137">The timezone in which the calendar's times are given. This is a timezone name in tz database notation: &lt;ulink type="http"
url="http://en.wikipedia.org/wiki/Tz_database#Names_of_time_zones"&gt;reference&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="CalendarCalendarPrivate"
              c:type="GDataCalendarCalendarPrivate*"/>
      </field>
    </class>
    <record name="CalendarCalendarClass"
            c:type="GDataCalendarCalendarClass"
            glib:is-gtype-struct-for="CalendarCalendar">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-calendar.h"
           line="50">All the fields in the #GDataCalendarCalendarClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="63"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CalendarCalendarPrivate"
            c:type="GDataCalendarCalendarPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="38"/>
    </record>
    <class name="CalendarEvent"
           c:symbol-prefix="calendar_event"
           c:type="GDataCalendarEvent"
           parent="Entry"
           glib:type-name="GDataCalendarEvent"
           glib:get-type="gdata_calendar_event_get_type"
           glib:type-struct="CalendarEventClass">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-event.h"
           line="43">All the fields in the #GDataCalendarEvent structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="66"/>
      <constructor name="new" c:identifier="gdata_calendar_event_new">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1251">Creates a new #GDataCalendarEvent with the given ID and default properties.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1257">a new #GDataCalendarEvent; unref with g_object_unref()</doc>
          <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1253">the event's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_person" c:identifier="gdata_calendar_event_add_person">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1571">Adds the person @who to the event as a guest (attendee, organiser, performer, etc.), and increments its reference count.

Duplicate people will not be added to the list.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1573">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="who" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1574">a #GDataGDWho to add</doc>
            <type name="GDWho" c:type="GDataGDWho*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_place" c:identifier="gdata_calendar_event_add_place">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1607">Adds the place @where to the event as a location and increments its reference count.

Duplicate places will not be added to the list.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1609">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="where" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1610">a #GDataGDWhere to add</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_time"
              c:identifier="gdata_calendar_event_add_time"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1643">Adds @when to the event as a time period when the event happens, and increments its reference count.

Duplicate times will not be added to the list.

Note: gdata_calendar_event_add_time() and gdata_calendar_event_set_recurrence() are mutually
exclusive, as the server doesn't support positive exceptions to recurrence rules. If recurrences
are required, use gdata_calendar_event_set_recurrence(). Note that this means reminders cannot
be set for the event, as they are only supported by #GDataGDWhen. No checks are performed for
these forbidden conditions, as to do so would break libgdata's API; if both a recurrence is set
and a specific time is added, the server will return an error when the #GDataCalendarEvent is
inserted using gdata_service_insert_entry().</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1645">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="when" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1646">a #GDataGDWhen to add</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_anyone_can_add_self"
              c:identifier="gdata_calendar_event_get_anyone_can_add_self"
              glib:get-property="anyone-can-add-self">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1541">Gets the #GDataCalendarEvent:anyone-can-add-self property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1547">%TRUE if anyone can add themselves as an attendee to the event, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1543">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_edited"
              c:identifier="gdata_calendar_event_get_edited"
              glib:get-property="edited">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1265">Gets the #GDataCalendarEvent:edited property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1271">the UNIX timestamp for the time the event was last edited, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1267">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guests_can_invite_others"
              c:identifier="gdata_calendar_event_get_guests_can_invite_others"
              glib:get-property="guests-can-invite-others">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1481">Gets the #GDataCalendarEvent:guests-can-invite-others property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1487">%TRUE if attendees can invite others to the event, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1483">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guests_can_modify"
              c:identifier="gdata_calendar_event_get_guests_can_modify"
              glib:get-property="guests-can-modify">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1451">Gets the #GDataCalendarEvent:guests-can-modify property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1457">%TRUE if attendees can modify the original event, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1453">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guests_can_see_guests"
              c:identifier="gdata_calendar_event_get_guests_can_see_guests"
              glib:get-property="guests-can-see-guests">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1511">Gets the #GDataCalendarEvent:guests-can-see-guests property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1517">%TRUE if attendees can see who's attending the event, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1513">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_original_event_details"
              c:identifier="gdata_calendar_event_get_original_event_details"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1768">Gets details of the original event, if this event is an exception to a recurring event. The original
event's ID and the URI of the event's XML are returned in @event_id and @event_uri, respectively.

If this event is not an exception to a recurring event, @event_id and @event_uri will be set to %NULL.
See gdata_calendar_event_is_exception() to determine more simply whether an event is an exception to a
recurring event.

If both @event_id and @event_uri are %NULL, this function is a no-op. Otherwise, they should both be
freed with g_free().</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1770">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="event_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1771">return location for the original event's ID, or %NULL</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="event_uri"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1772">return location for the original event's URI, or %NULL</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_people"
              c:identifier="gdata_calendar_event_get_people"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1590">Gets a list of the people attending the event.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1596">a #GList of #GDataGDWhos, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GDWho"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1592">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_places"
              c:identifier="gdata_calendar_event_get_places"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1626">Gets a list of the locations associated with the event.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1632">a #GList of #GDataGDWheres, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GDWhere"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1628">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_primary_time"
              c:identifier="gdata_calendar_event_get_primary_time"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1689">Gets the first time period associated with the event, conveniently returning just its start and
end times if required.

If there are no time periods, or more than one time period, associated with the event, %FALSE will
be returned, and the parameters will remain unmodified.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1702">%TRUE if there is only one time period associated with the event, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1691">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="start_time"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1692">a #gint64 for the start time, or %NULL</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="end_time"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1693">a #gint64 for the end time, or %NULL</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="when"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1694">a #GDataGDWhen for the primary time structure, or %NULL</doc>
            <type name="GDWhen" c:type="GDataGDWhen**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_recurrence"
              c:identifier="gdata_calendar_event_get_recurrence"
              glib:get-property="recurrence"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1727">Gets the #GDataCalendarEvent:recurrence property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1733">the event recurrence patterns, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1729">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sequence"
              c:identifier="gdata_calendar_event_get_sequence"
              glib:get-property="sequence">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1421">Gets the #GDataCalendarEvent:sequence property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1427">the event's sequence number</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1423">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="gdata_calendar_event_get_status"
              glib:get-property="status"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1280">Gets the #GDataCalendarEvent:status property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1286">the event status, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1282">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_times"
              c:identifier="gdata_calendar_event_get_times"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1672">Gets a list of the time periods associated with the event.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1678">a #GList of #GDataGDWhens, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GDWhen"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1674">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transparency"
              c:identifier="gdata_calendar_event_get_transparency"
              glib:get-property="transparency">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1352">Gets the #GDataCalendarEvent:transparency property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1358">the event transparency, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1354">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uid"
              c:identifier="gdata_calendar_event_get_uid"
              glib:get-property="uid">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1386">Gets the #GDataCalendarEvent:uid property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1392">the event's UID, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1388">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visibility"
              c:identifier="gdata_calendar_event_get_visibility"
              glib:get-property="visibility">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1318">Gets the #GDataCalendarEvent:visibility property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1324">the event visibility, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1320">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_exception"
              c:identifier="gdata_calendar_event_is_exception"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1797">Determines whether the event is an exception to a recurring event. If it is, details of the original event
can be retrieved using gdata_calendar_event_get_original_event_details().</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-event.c"
               line="1804">%TRUE if the event is an exception, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1799">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_anyone_can_add_self"
              c:identifier="gdata_calendar_event_set_anyone_can_add_self"
              glib:set-property="anyone-can-add-self">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1556">Sets the #GDataCalendarEvent:anyone-can-add-self property to @anyone_can_add_self.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1558">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="anyone_can_add_self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1559">%TRUE if anyone can add themselves as an attendee to the event, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_guests_can_invite_others"
              c:identifier="gdata_calendar_event_set_guests_can_invite_others"
              glib:set-property="guests-can-invite-others">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1496">Sets the #GDataCalendarEvent:guests-can-invite-others property to @guests_can_invite_others.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1498">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="guests_can_invite_others" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1499">%TRUE if attendees can invite others to the event, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_guests_can_modify"
              c:identifier="gdata_calendar_event_set_guests_can_modify"
              glib:set-property="guests-can-modify">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1466">Sets the #GDataCalendarEvent:guests-can-modify property to @guests_can_modify.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1468">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="guests_can_modify" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1469">%TRUE if attendees can modify the original event, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_guests_can_see_guests"
              c:identifier="gdata_calendar_event_set_guests_can_see_guests"
              glib:set-property="guests-can-see-guests">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1526">Sets the #GDataCalendarEvent:guests-can-see-guests property to @guests_can_see_guests.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1528">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="guests_can_see_guests" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1529">%TRUE if attendees can see who's attending the event, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_recurrence"
              c:identifier="gdata_calendar_event_set_recurrence"
              glib:set-property="recurrence"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1744">Sets the #GDataCalendarEvent:recurrence property to the new recurrence, @recurrence.

Set @recurrence to %NULL to unset the property in the event.

Note: gdata_calendar_event_add_time() and gdata_calendar_event_set_recurrence() are mutually
exclusive. See the documentation for gdata_calendar_event_add_time() for details.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1746">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="recurrence"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1747">a new event recurrence, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sequence"
              c:identifier="gdata_calendar_event_set_sequence"
              glib:set-property="sequence">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1436">Sets the #GDataCalendarEvent:sequence property to the new sequence number, @sequence.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1438">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="sequence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1439">a new sequence number, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_status"
              c:identifier="gdata_calendar_event_set_status"
              glib:set-property="status"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1297">Sets the #GDataCalendarEvent:status property to the new status, @status.

Set @status to %NULL to unset the property in the event.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1299">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="status"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1300">a new event status, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transparency"
              c:identifier="gdata_calendar_event_set_transparency"
              glib:set-property="transparency">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1367">Sets the #GDataCalendarEvent:transparency property to the new transparency, @transparency.

Set @transparency to %NULL to unset the property in the event.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1369">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="transparency"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1370">a new event transparency, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uid"
              c:identifier="gdata_calendar_event_set_uid"
              glib:set-property="uid">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1401">Sets the #GDataCalendarEvent:uid property to the new UID, @uid.

Set @uid to %NULL to unset the property in the event.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1403">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="uid"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1404">a new event UID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visibility"
              c:identifier="gdata_calendar_event_set_visibility"
              glib:set-property="visibility">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="1333">Sets the #GDataCalendarEvent:visibility property to the new visibility, @visibility.

Set @visibility to %NULL to unset the property in the event.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1335">a #GDataCalendarEvent</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </instance-parameter>
          <parameter name="visibility"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-event.c"
                 line="1336">a new event visibility, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="anyone-can-add-self"
                writable="1"
                transfer-ownership="none"
                setter="set_anyone_can_add_self"
                getter="get_anyone_can_add_self"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="303">Indicates whether anyone can invite themselves to the event, by adding themselves to the attendee list.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="edited"
                transfer-ownership="none"
                getter="get_edited"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="175">The last time the event was edited. If the event has not been edited yet, the content indicates the time it was created.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/#appEdited"&gt;
Atom Publishing Protocol specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="guests-can-invite-others"
                writable="1"
                transfer-ownership="none"
                setter="set_guests_can_invite_others"
                getter="get_guests_can_invite_others"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="274">Indicates whether attendees may invite others to the event.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/google-apps/calendar/v3/reference/events#guestsCanInviteOthers"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="guests-can-modify"
                writable="1"
                transfer-ownership="none"
                setter="set_guests_can_modify"
                getter="get_guests_can_modify"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="258">Indicates whether attendees may modify the original event, so that changes are visible to organizers and other attendees.
Otherwise, any changes made by attendees will be restricted to that attendee's calendar.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/calendar/v3/reference/events#guestsCanInviteOthers"&gt;
GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="guests-can-see-guests"
                writable="1"
                transfer-ownership="none"
                setter="set_guests_can_see_guests"
                getter="get_guests_can_see_guests"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="288">Indicates whether attendees can see other people invited to the event.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/calendar/v3/reference/events#guestsCanSeeOtherGuests"&gt;
GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="original-event-id"
                version="0.3.0"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="333">The event ID for the original event, if this event is an exception to a recurring event.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="original-event-uri"
                version="0.3.0"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="346">The event URI for the original event, if this event is an exception to a recurring event.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="recurrence"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                setter="set_recurrence"
                getter="get_recurrence"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="314">Represents the dates and times when a recurring event takes place. The returned string is in iCal format, as a list of properties.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/gdata/elements.html#gdRecurrence"&gt;
GData specification&lt;/ulink&gt;.

Note: gdata_calendar_event_add_time() and gdata_calendar_event_set_recurrence() are mutually
exclusive. See the documentation for gdata_calendar_event_add_time() for details.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="sequence"
                writable="1"
                transfer-ownership="none"
                setter="set_sequence"
                getter="get_sequence"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="246">The revision sequence number of the event as defined in Section 4.8.7.4 of &lt;ulink type="http"
url="http://www.ietf.org/rfc/rfc2445.txt"&gt;RFC 2445&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="status"
                version="0.2.0"
                writable="1"
                transfer-ownership="none"
                setter="set_status"
                getter="get_status"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="189">The scheduling status of the event. For example: %GDATA_GD_EVENT_STATUS_CANCELED or %GDATA_GD_EVENT_STATUS_CONFIRMED.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/gdata/elements.html#gdEventStatus"&gt;
GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="transparency"
                writable="1"
                transfer-ownership="none"
                setter="set_transparency"
                getter="get_transparency"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="219">How the event is marked as consuming time on a calendar. For example: %GDATA_GD_EVENT_TRANSPARENCY_OPAQUE or
%GDATA_GD_EVENT_TRANSPARENCY_TRANSPARENT.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/gdata/elements.html#gdTransparency"&gt;
GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uid"
                writable="1"
                transfer-ownership="none"
                setter="set_uid"
                getter="get_uid"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="234">The globally unique identifier (UID) of the event as defined in Section 4.8.4.7 of &lt;ulink type="http"
url="http://www.ietf.org/rfc/rfc2445.txt"&gt;RFC 2445&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="visibility"
                writable="1"
                transfer-ownership="none"
                setter="set_visibility"
                getter="get_visibility"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-event.c"
             line="205">The event's visibility to calendar users. For example: %GDATA_GD_EVENT_VISIBILITY_PUBLIC or %GDATA_GD_EVENT_VISIBILITY_DEFAULT.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/gdata/elements.html#gdVisibility"&gt;
GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="CalendarEventPrivate" c:type="GDataCalendarEventPrivate*"/>
      </field>
    </class>
    <record name="CalendarEventClass"
            c:type="GDataCalendarEventClass"
            glib:is-gtype-struct-for="CalendarEvent">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-event.h"
           line="53">All the fields in the #GDataCalendarEventClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CalendarEventPrivate"
            c:type="GDataCalendarEventPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="41"/>
    </record>
    <class name="CalendarFeed"
           c:symbol-prefix="calendar_feed"
           c:type="GDataCalendarFeed"
           version="0.3.0"
           parent="Feed"
           glib:type-name="GDataCalendarFeed"
           glib:get-type="gdata_calendar_feed_get_type"
           glib:type-struct="CalendarFeedClass">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-feed.h"
           line="40">All the fields in the #GDataCalendarFeed structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="67"/>
      <field name="parent">
        <type name="Feed" c:type="GDataFeed"/>
      </field>
      <field name="priv">
        <type name="CalendarFeedPrivate" c:type="GDataCalendarFeedPrivate*"/>
      </field>
    </class>
    <record name="CalendarFeedClass"
            c:type="GDataCalendarFeedClass"
            glib:is-gtype-struct-for="CalendarFeed"
            version="0.3.0">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-feed.h"
           line="52">All the fields in the #GDataCalendarFeedClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="FeedClass" c:type="GDataFeedClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CalendarFeedPrivate"
            c:type="GDataCalendarFeedPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="38"/>
    </record>
    <class name="CalendarQuery"
           c:symbol-prefix="calendar_query"
           c:type="GDataCalendarQuery"
           parent="Query"
           glib:type-name="GDataCalendarQuery"
           glib:get-type="gdata_calendar_query_get_type"
           glib:type-struct="CalendarQueryClass">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-query.h"
           line="40">All the fields in the #GDataCalendarQuery structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="63"/>
      <constructor name="new" c:identifier="gdata_calendar_query_new">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="426">Creates a new #GDataCalendarQuery with its #GDataQuery:q property set to @q.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="432">a new #GDataCalendarQuery</doc>
          <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="428">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_limits"
                   c:identifier="gdata_calendar_query_new_with_limits">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="440">Creates a new #GDataCalendarQuery with its #GDataQuery:q property set to @q, and the time limits @start_min and @start_max
applied (both in seconds since the UNIX epoch).</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="449">a new #GDataCalendarQuery</doc>
          <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="442">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="start_min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="443">a starting time for the event period, or -1</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="start_max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="444">an ending time for the event period, or -1</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_future_events"
              c:identifier="gdata_calendar_query_get_future_events"
              glib:get-property="future-events">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="461">Gets the #GDataCalendarQuery:future-events property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="467">the future events property</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="463">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_attendees"
              c:identifier="gdata_calendar_query_get_max_attendees"
              glib:get-property="max-attendees"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="695">Gets the #GDataCalendarQuery:max-attendees property. If the property is unset, &lt;code class="literal"&gt;0&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="701">the maximum number of attendees, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="697">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_order_by"
              c:identifier="gdata_calendar_query_get_order_by"
              glib:get-property="order-by">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="494">Gets the #GDataCalendarQuery:order-by property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="500">the order by property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="496">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_single_events"
              c:identifier="gdata_calendar_query_get_single_events"
              glib:get-property="single-events">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="531">Gets the #GDataCalendarQuery:single-events property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="537">the single events property</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="533">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_max"
              c:identifier="gdata_calendar_query_get_start_max"
              glib:get-property="start-max">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="602">Gets the #GDataCalendarQuery:start-max property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="608">the UNIX timestamp (in seconds) for the start-max property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="604">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_min"
              c:identifier="gdata_calendar_query_get_start_min"
              glib:get-property="start-min">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="564">Gets the #GDataCalendarQuery:start-min property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="570">the UNIX timestamp (in seconds) for the start-min property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="566">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timezone"
              c:identifier="gdata_calendar_query_get_timezone"
              glib:get-property="timezone"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="640">Gets the #GDataCalendarQuery:timezone property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="646">the timezone property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="642">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_future_events"
              c:identifier="gdata_calendar_query_set_future_events"
              glib:set-property="future-events">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="476">Sets the #GDataCalendarQuery:future-events property of the #GDataCalendarQuery to @future_events.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="478">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="future_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="479">%TRUE to unconditionally show future events, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_attendees"
              c:identifier="gdata_calendar_query_set_max_attendees"
              glib:set-property="max-attendees"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="712">Sets the #GDataCalendarQuery:max-attendees property of the #GDataCalendarQuery to the new value, @max_attendees.

Set @max_attendees to &lt;code class="literal"&gt;0&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="714">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="max_attendees" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="715">a new maximum attendee count, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_order_by"
              c:identifier="gdata_calendar_query_set_order_by"
              glib:set-property="order-by">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="509">Sets the #GDataCalendarQuery:order-by property of the #GDataCalendarQuery to the new order by string, @order_by.

Set @order_by to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="511">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="order_by"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="512">a new order by string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_deleted"
              c:identifier="gdata_calendar_query_set_show_deleted"
              glib:set-property="show-deleted"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="752">Sets the #GDataCalendarQuery:show-deleted property of the #GDataCalendarQuery.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="754">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="show_deleted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="755">%TRUE to show deleted events, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_single_events"
              c:identifier="gdata_calendar_query_set_single_events"
              glib:set-property="single-events">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="546">Sets the #GDataCalendarQuery:single-events property of the #GDataCalendarQuery to @single_events.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="548">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="single_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="549">%TRUE to show recurring events as single events, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_max"
              c:identifier="gdata_calendar_query_set_start_max"
              glib:set-property="start-max">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="617">Sets the #GDataCalendarQuery:start-max property of the #GDataCalendarQuery
to the new time/date, @start_max.

Set @start_max to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="619">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="start_max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="620">a new maximum start time (in seconds since the UNIX epoch), or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_min"
              c:identifier="gdata_calendar_query_set_start_min"
              glib:set-property="start-min">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="579">Sets the #GDataCalendarQuery:start-min property of the #GDataCalendarQuery
to the new time/date, @start_min.

Set @start_min to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="581">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="start_min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="582">a new minimum start time (in seconds since the UNIX epoch), or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timezone"
              c:identifier="gdata_calendar_query_set_timezone"
              glib:set-property="timezone"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="657">Sets the #GDataCalendarQuery:timezone property of the #GDataCalendarQuery to the new timezone string, @timezone.

Set @timezone to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="659">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
          <parameter name="_timezone"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="660">a new timezone string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_deleted"
              c:identifier="gdata_calendar_query_show_deleted"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="735">Gets the #GDataCalendarQuery:show-deleted property.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-query.c"
               line="741">%TRUE if deleted/cancelled events should be shown, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-query.c"
                 line="737">a #GDataCalendarQuery</doc>
            <type name="CalendarQuery" c:type="GDataCalendarQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="future-events"
                writable="1"
                transfer-ownership="none"
                setter="set_future_events"
                getter="get_future_events"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="130">A shortcut to request all events scheduled for the future. Overrides the
#GDataCalendarQuery:start-min and #GDataCalendarQuery:start-max properties.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="max-attendees"
                version="0.9.1"
                writable="1"
                transfer-ownership="none"
                setter="set_max_attendees"
                getter="get_max_attendees"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="210">Specifies the maximum number of attendees to list for an event. If the actual number of attendees for an event is greater than this value,
only the current user and the event organiser are listed.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="order-by"
                writable="1"
                transfer-ownership="none"
                setter="set_order_by"
                getter="get_order_by"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="142">Specifies order of entries in a feed. Supported values are &lt;literal&gt;lastmodified&lt;/literal&gt; and
&lt;literal&gt;starttime&lt;/literal&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-deleted"
                version="0.9.1"
                writable="1"
                transfer-ownership="none"
                setter="set_show_deleted"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="224">Whether to include deleted/cancelled events in the query feed. Deleted events have their #GDataCalendarEvent:status property set to
%GDATA_GD_EVENT_STATUS_CANCELED. They do not normally appear in query results.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="single-events"
                writable="1"
                transfer-ownership="none"
                setter="set_single_events"
                getter="get_single_events"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="154">Indicates whether recurring events should be expanded or represented as a single event.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="start-max"
                writable="1"
                transfer-ownership="none"
                setter="set_start_max"
                getter="get_start_max"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="181">Together with #GDataCalendarQuery:start-min, creates a timespan such that only events within the timespan are returned

#GDataCalendarQuery:start-min is inclusive, while #GDataCalendarQuery:start-max is exclusive. Events that overlap the range are
included. Both are specified in seconds since the UNIX epoch.

If not specified, the default #GDataCalendarQuery:start-max is &lt;literal&gt;2031-01-01&lt;/literal&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="start-min"
                writable="1"
                transfer-ownership="none"
                setter="set_start_min"
                getter="get_start_min"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="165">Together with #GDataCalendarQuery:start-max, creates a timespan such that only events within the timespan are returned.

#GDataCalendarQuery:start-min is inclusive, while #GDataCalendarQuery:start-max is exclusive. Events that overlap the range are
included. Both are specified in seconds since the UNIX epoch.

If not specified, the default #GDataCalendarQuery:start-min is &lt;literal&gt;1970-01-01&lt;/literal&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="timezone"
                version="0.2.0"
                writable="1"
                transfer-ownership="none"
                setter="set_timezone"
                getter="get_timezone"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-query.c"
             line="197">The current timezone. If this is not specified, all times are returned in UTC.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Query" c:type="GDataQuery"/>
      </field>
      <field name="priv">
        <type name="CalendarQueryPrivate" c:type="GDataCalendarQueryPrivate*"/>
      </field>
    </class>
    <record name="CalendarQueryClass"
            c:type="GDataCalendarQueryClass"
            glib:is-gtype-struct-for="CalendarQuery">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-query.h"
           line="50">All the fields in the #GDataCalendarQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="63"/>
      <field name="parent" readable="0" private="1">
        <type name="QueryClass" c:type="GDataQueryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CalendarQueryPrivate"
            c:type="GDataCalendarQueryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="38"/>
    </record>
    <class name="CalendarService"
           c:symbol-prefix="calendar_service"
           c:type="GDataCalendarService"
           parent="Service"
           glib:type-name="GDataCalendarService"
           glib:get-type="gdata_calendar_service_get_type"
           glib:type-struct="CalendarServiceClass">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-service.h"
           line="41">All the fields in the #GDataCalendarService structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="67"/>
      <implements name="Batchable"/>
      <constructor name="new"
                   c:identifier="gdata_calendar_service_new"
                   version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="393">Creates a new #GDataCalendarService using the given #GDataAuthorizer. If @authorizer is %NULL, all requests are made as an unauthenticated user.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-service.c"
               line="399">a new #GDataCalendarService, or %NULL; unref with g_object_unref()</doc>
          <type name="CalendarService" c:type="GDataCalendarService*"/>
        </return-value>
        <parameters>
          <parameter name="authorizer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="395">a #GDataAuthorizer to authorize the service's requests, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_primary_authorization_domain"
                c:identifier="gdata_calendar_service_get_primary_authorization_domain"
                version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="413">The primary #GDataAuthorizationDomain for interacting with Google Calendar. This will not normally need to be used, as it's used internally
by the #GDataCalendarService methods. However, if using the plain #GDataService methods to implement custom queries or requests which libgdata
does not support natively, then this domain may be needed to authorize the requests.

The domain never changes, and is interned so that pointer comparison can be used to differentiate it from other authorization domains.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-service.c"
               line="422">the service's authorization domain</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
      </function>
      <method name="insert_calendar_event"
              c:identifier="gdata_calendar_service_insert_calendar_event"
              version="0.17.2"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="756">Inserts @event by uploading it to the online calendar service, adding it to
the specified @calendar.

For more details, see gdata_service_insert_entry().</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="99"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-service.c"
               line="769">an updated #GDataCalendarEvent, or %NULL;
unref with g_object_unref()</doc>
          <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="758">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="calendar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="759">the #GDataCalendarCalendar to insert the event into</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="760">the #GDataCalendarEvent to insert</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="761">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_calendar_event_async"
              c:identifier="gdata_calendar_service_insert_calendar_event_async"
              version="0.17.2">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="800">Inserts @event by uploading it to the online calendar service, adding it to
the specified @calendar. @self and @event are both reffed when this function
is called, so can safely be unreffed after this function returns.

@callback should call gdata_service_insert_entry_finish() to obtain a
#GDataCalendarEvent representing the inserted event and to check for possible
errors.

For more details, see gdata_calendar_service_insert_event(), which is the
synchronous version of this function, and gdata_service_insert_entry_async(),
which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="802">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="calendar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="803">the #GDataCalendarCalendar to insert the event into</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="804">the #GDataCalendarEvent to insert</doc>
            <type name="CalendarEvent" c:type="GDataCalendarEvent*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="805">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="806">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="807">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_all_calendars"
              c:identifier="gdata_calendar_service_query_all_calendars"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="432">Queries the service to return a list of all calendars from the authenticated account which match the given
@query. It will return all calendars the user has read access to, including primary, secondary and imported
calendars.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-service.c"
               line="447">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="434">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="435">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="436">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="437">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="438">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_all_calendars_async"
              c:identifier="gdata_calendar_service_query_all_calendars_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="477">Queries the service to return a list of all calendars from the authenticated account which match the given
@query. @self and @query are all reffed when this function is called, so can safely be unreffed after
this function returns.

For more details, see gdata_calendar_service_query_all_calendars(), which is the synchronous version of
this function, and gdata_service_query_async(), which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="479">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="480">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="481">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="482">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="483">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="484">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="486">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="487">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_events"
              c:identifier="gdata_calendar_service_query_events"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="644">Queries the service to return a list of events in the given @calendar, which match @query.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-service.c"
               line="658">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="646">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="calendar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="647">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="648">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="649">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="650">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="651">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_events_async"
              c:identifier="gdata_calendar_service_query_events_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="694">Queries the service to return a list of events in the given @calendar, which match @query. @self, @calendar and @query are all reffed when this
function is called, so can safely be unreffed after this function returns.

Get the results of the query using gdata_service_query_finish() in the @callback.

For more details, see gdata_calendar_service_query_events(), which is the synchronous version of this function, and gdata_service_query_async(),
which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="696">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="calendar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="697">a #GDataCalendarCalendar</doc>
            <type name="CalendarCalendar" c:type="GDataCalendarCalendar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="698">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="699">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="700">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="701">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="702">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="704">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="705">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_own_calendars"
              c:identifier="gdata_calendar_service_query_own_calendars"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="530">Queries the service to return a list of calendars from the authenticated account which match the given
@query, and the authenticated user owns. (i.e. They have full read/write access to the calendar, as well
as the ability to set permissions on the calendar.)

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/calendar/gdata-calendar-service.c"
               line="545">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="532">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="533">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="534">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="535">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="536">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_own_calendars_async"
              c:identifier="gdata_calendar_service_query_own_calendars_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/calendar/gdata-calendar-service.c"
             line="575">Queries the service to return a list of calendars from the authenticated account which match the given
@query, and the authenticated user owns. @self and @query are all reffed when this function is called,
so can safely be unreffed after this function returns.

For more details, see gdata_calendar_service_query_own_calendars(), which is the synchronous version of
this function, and gdata_service_query_async(), which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="577">a #GDataCalendarService</doc>
            <type name="CalendarService" c:type="GDataCalendarService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="578">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="579">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="580">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="581">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="582">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="584">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/calendar/gdata-calendar-service.c"
                 line="585">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Service" c:type="GDataService"/>
      </field>
    </class>
    <record name="CalendarServiceClass"
            c:type="GDataCalendarServiceClass"
            glib:is-gtype-struct-for="CalendarService">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-service.h"
           line="50">All the fields in the #GDataCalendarServiceClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="ServiceClass" c:type="GDataServiceClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CalendarServicePrivate"
            c:type="GDataCalendarServicePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="39"/>
    </record>
    <class name="Category"
           c:symbol-prefix="category"
           c:type="GDataCategory"
           parent="Parsable"
           glib:type-name="GDataCategory"
           glib:get-type="gdata_category_get_type"
           glib:type-struct="CategoryClass">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-category.h"
           line="79">All the fields in the #GDataCategory structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-category.h" line="104"/>
      <implements name="Comparable"/>
      <constructor name="new" c:identifier="gdata_category_new">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="244">Creates a new #GDataCategory. More information is available in the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.category"&gt;Atom specification&lt;/ulink&gt;.

@term must be non-%NULL and non-empty. @scheme must be %NULL or non-empty.</doc>
        <source-position filename="gdata/atom/gdata-category.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-category.c"
               line="255">a new #GDataCategory, or %NULL; unref with g_object_unref()</doc>
          <type name="Category" c:type="GDataCategory*"/>
        </return-value>
        <parameters>
          <parameter name="term" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="246">a category identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="scheme"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="247">an IRI to define the categorisation scheme, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="248">a human-readable label for the category, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_label"
              c:identifier="gdata_category_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="340">Gets the #GDataCategory:label property.</doc>
        <source-position filename="gdata/atom/gdata-category.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-category.c"
               line="346">the category's label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="342">a #GDataCategory</doc>
            <type name="Category" c:type="GDataCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scheme"
              c:identifier="gdata_category_get_scheme"
              glib:get-property="scheme"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="302">Gets the #GDataCategory:scheme property. If the scheme is non-%NULL, it will be non-empty.</doc>
        <source-position filename="gdata/atom/gdata-category.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-category.c"
               line="308">the category's scheme, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="304">a #GDataCategory</doc>
            <type name="Category" c:type="GDataCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_term"
              c:identifier="gdata_category_get_term"
              glib:get-property="term"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="265">Gets the #GDataCategory:term property. The term will always be a non-%NULL, non-empty string.</doc>
        <source-position filename="gdata/atom/gdata-category.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-category.c"
               line="271">the category's term</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="267">a #GDataCategory</doc>
            <type name="Category" c:type="GDataCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_category_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="357">Sets the #GDataCategory:label property to @label.

Set @label to %NULL to unset the property in the category.</doc>
        <source-position filename="gdata/atom/gdata-category.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="359">a #GDataCategory</doc>
            <type name="Category" c:type="GDataCategory*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="360">the new label for the category, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scheme"
              c:identifier="gdata_category_set_scheme"
              glib:set-property="scheme"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="319">Sets the #GDataCategory:scheme property to @scheme. @scheme must be %NULL or non-empty.

Set @scheme to %NULL to unset the property in the category.</doc>
        <source-position filename="gdata/atom/gdata-category.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="321">a #GDataCategory</doc>
            <type name="Category" c:type="GDataCategory*"/>
          </instance-parameter>
          <parameter name="scheme"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="322">the new scheme for the category, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_term"
              c:identifier="gdata_category_set_term"
              glib:set-property="term"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="282">Sets the #GDataCategory:term property to @term. @term must be non-%NULL and non-empty.</doc>
        <source-position filename="gdata/atom/gdata-category.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="284">a #GDataCategory</doc>
            <type name="Category" c:type="GDataCategory*"/>
          </instance-parameter>
          <parameter name="term" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-category.c"
                 line="285">the new term for the category</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="111">A human-readable label for display in end-user applications.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.category"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="scheme"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_scheme"
                getter="get_scheme"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="94">An IRI that identifies a categorization scheme.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.category"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="term"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_term"
                getter="get_term"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-category.c"
             line="77">Identifies the category to which the entry or feed belongs.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.category"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="CategoryPrivate" c:type="GDataCategoryPrivate*"/>
      </field>
    </class>
    <record name="CategoryClass"
            c:type="GDataCategoryClass"
            glib:is-gtype-struct-for="Category"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-category.h"
           line="89">All the fields in the #GDataCategoryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-category.h" line="104"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/atom/gdata-category.h" line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/atom/gdata-category.h" line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CategoryPrivate"
            c:type="GDataCategoryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/atom/gdata-category.h" line="77"/>
    </record>
    <record name="Color"
            c:type="GDataColor"
            glib:type-name="GDataColor"
            glib:get-type="gdata_color_get_type"
            c:symbol-prefix="color">
      <doc xml:space="preserve"
           filename="gdata/gdata-types.h"
           line="27">Describes a color, such as used in the Google Calendar interface to
differentiate calendars.</doc>
      <source-position filename="gdata/gdata-types.h" line="41"/>
      <field name="red" writable="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-types.h"
             line="29">red color intensity, from 0–255</doc>
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="green" writable="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-types.h"
             line="30">green color intensity, from 0–255</doc>
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="blue" writable="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-types.h"
             line="31">blue color intensity, from 0–255</doc>
        <type name="guint16" c:type="guint16"/>
      </field>
      <method name="to_hexadecimal"
              c:identifier="gdata_color_to_hexadecimal"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-types.c"
             line="121">Returns a string describing @color in hexadecimal form; in the form &lt;literal&gt;#&lt;replaceable&gt;rr&lt;/replaceable&gt;&lt;replaceable&gt;gg&lt;/replaceable&gt;
&lt;replaceable&gt;bb&lt;/replaceable&gt;&lt;/literal&gt;, where &lt;replaceable&gt;rr&lt;/replaceable&gt; is a two-digit hexadecimal red intensity value,
&lt;replaceable&gt;gg&lt;/replaceable&gt; is green and &lt;replaceable&gt;bb&lt;/replaceable&gt; is blue. The hash is always present.</doc>
        <source-position filename="gdata/gdata-types.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-types.c"
               line="129">the color string; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-types.c"
                 line="123">a #GDataColor</doc>
            <type name="Color" c:type="const GDataColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="from_hexadecimal"
                c:identifier="gdata_color_from_hexadecimal">
        <doc xml:space="preserve"
             filename="gdata/gdata-types.c"
             line="62">Parses @hexadecimal and returns a #GDataColor describing it in @color.

@hexadecimal should be in the form &lt;literal&gt;#&lt;replaceable&gt;rr&lt;/replaceable&gt;&lt;replaceable&gt;gg&lt;/replaceable&gt;&lt;replaceable&gt;bb&lt;/replaceable&gt;&lt;/literal&gt;,
where &lt;replaceable&gt;rr&lt;/replaceable&gt; is a two-digit hexadecimal red intensity value, &lt;replaceable&gt;gg&lt;/replaceable&gt; is green
and &lt;replaceable&gt;bb&lt;/replaceable&gt; is blue. The hash is optional.</doc>
        <source-position filename="gdata/gdata-types.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-types.c"
               line="73">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="hexadecimal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-types.c"
                 line="64">a hexadecimal color string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-types.c"
                 line="65">a #GDataColor</doc>
            <type name="Color" c:type="GDataColor*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="Comment"
           c:symbol-prefix="comment"
           c:type="GDataComment"
           version="0.10.0"
           parent="Entry"
           abstract="1"
           glib:type-name="GDataComment"
           glib:get-type="gdata_comment_get_type"
           glib:type-struct="CommentClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-comment.h"
           line="39">All the fields in the #GDataComment structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-comment.h" line="66"/>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="CommentPrivate" c:type="GDataCommentPrivate*"/>
      </field>
    </class>
    <record name="CommentClass"
            c:type="GDataCommentClass"
            glib:is-gtype-struct-for="Comment"
            version="0.10.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-comment.h"
           line="51">All the fields in the #GDataCommentClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-comment.h" line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-comment.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-comment.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CommentPrivate"
            c:type="GDataCommentPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-comment.h" line="37"/>
    </record>
    <interface name="Commentable"
               c:symbol-prefix="commentable"
               c:type="GDataCommentable"
               version="0.10.0"
               glib:type-name="GDataCommentable"
               glib:get-type="gdata_commentable_get_type"
               glib:type-struct="CommentableInterface">
      <doc xml:space="preserve"
           filename="gdata/gdata-commentable.h"
           line="39">All the fields in the #GDataCommentable structure are private and should never be accessed directly</doc>
      <source-position filename="gdata/gdata-commentable.h" line="75"/>
      <prerequisite name="Entry"/>
      <virtual-method name="get_authorization_domain" introspectable="0">
        <source-position filename="gdata/gdata-commentable.h" line="70"/>
        <return-value>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_insert_comment_uri">
        <source-position filename="gdata/gdata-commentable.h" line="73"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="comment" transfer-ownership="none">
            <type name="Comment" c:type="GDataComment*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_query_comments_uri">
        <source-position filename="gdata/gdata-commentable.h" line="72"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_comment_deletable">
        <source-position filename="gdata/gdata-commentable.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="comment" transfer-ownership="none">
            <type name="Comment" c:type="GDataComment*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="delete_comment"
              c:identifier="gdata_commentable_delete_comment"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="458">Deletes @comment from the #GDataCommentable.

If the given @comment isn't deletable (either because the service doesn't support deleting comments at all, or because this particular comment
is not deletable due to having insufficient permissions), %GDATA_SERVICE_ERROR_FORBIDDEN will be set in @error and %FALSE will be returned.</doc>
        <source-position filename="gdata/gdata-commentable.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-commentable.c"
               line="471">%TRUE if the comment was successfully deleted, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="460">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="461">a #GDataService with which the comment will be deleted</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="comment_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="462">a comment to be deleted</doc>
            <type name="Comment" c:type="GDataComment*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="463">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_comment_async"
              c:identifier="gdata_commentable_delete_comment_async"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="519">Deletes @comment from the #GDataCommentable. @self, @service and @comment_ are all reffed when this method is called, so can safely be freed after
this method returns.

For more details, see gdata_commentable_delete_comment(), which is the synchronous version of this method.

When the operation is finished, @callback will be called. You can then call gdata_commentable_delete_comment_finish() to get the results of the
operation.</doc>
        <source-position filename="gdata/gdata-commentable.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="521">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="522">a #GDataService with which the comment will be deleted</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="comment_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="523">a comment to be deleted</doc>
            <type name="Comment" c:type="GDataComment*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="524">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="525">a #GAsyncReadyCallback to call when the operation is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="526">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_comment_finish"
              c:identifier="gdata_commentable_delete_comment_finish"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="576">Finishes an asynchronous comment deletion operation started with gdata_commentable_delete_comment_async().</doc>
        <source-position filename="gdata/gdata-commentable.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-commentable.c"
               line="584">%TRUE if the comment was successfully deleted, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="578">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="579">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_comment"
              c:identifier="gdata_commentable_insert_comment"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="297">Adds @comment to the #GDataCommentable.

If the #GDataCommentable doesn't support commenting, %NULL will be returned and @error will be set to %GDATA_SERVICE_ERROR_FORBIDDEN.</doc>
        <source-position filename="gdata/gdata-commentable.h" line="88"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-commentable.c"
               line="309">the added #GDataComment, or %NULL; unref with g_object_unref()</doc>
          <type name="Comment" c:type="GDataComment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="299">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="300">a #GDataService with which the comment will be added</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="comment_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="301">a new comment to be added to the #GDataCommentable</doc>
            <type name="Comment" c:type="GDataComment*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="302">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_comment_async"
              c:identifier="gdata_commentable_insert_comment_async"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="370">Adds @comment to the #GDataCommentable. @self, @service and @comment_ are all reffed when this method is called, so can safely be freed after this
method returns.

For more details, see gdata_commentable_insert_comment(), which is the synchronous version of this method.

When the operation is finished, @callback will be called. You can then call gdata_commentable_insert_comment_finish() to get the results of the
operation.</doc>
        <source-position filename="gdata/gdata-commentable.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="372">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="373">a #GDataService with which the comment will be added</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="comment_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="374">a new comment to be added to the #GDataCommentable</doc>
            <type name="Comment" c:type="GDataComment*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="375">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="376">a #GAsyncReadyCallback to call when the operation is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="377">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_comment_finish"
              c:identifier="gdata_commentable_insert_comment_finish"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="434">Finishes an asynchronous comment insertion operation started with gdata_commentable_insert_comment_async().</doc>
        <source-position filename="gdata/gdata-commentable.h" line="92"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-commentable.c"
               line="442">the added #GDataComment, or %NULL; unref with g_object_unref()</doc>
          <type name="Comment" c:type="GDataComment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="436">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="437">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_comments"
              c:identifier="gdata_commentable_query_comments"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="126">Retrieves a #GDataFeed containing the #GDataComments representing the comments on the #GDataCommentable which match the given @query.

If the #GDataCommentable doesn't support commenting, %NULL will be returned and @error will be set to %GDATA_SERVICE_ERROR_FORBIDDEN. This is in
contrast to if it does support commenting but hasn't had any comments added yet, in which case an empty #GDataFeed will be returned and no error
will be set.</doc>
        <source-position filename="gdata/gdata-commentable.h" line="79"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-commentable.c"
               line="142">a #GDataFeed of #GDataComments, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="128">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="129">a #GDataService representing the service with which the object's comments will be manipulated</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="130">a #GDataQuery with query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="131">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="132">a #GDataQueryProgressCallback to call when a comment is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="133">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_comments_async"
              c:identifier="gdata_commentable_query_comments_async"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="203">Retrieves a #GDataFeed containing the #GDataComments representing the comments on the #GDataCommentable which match the given @query.
@self, @service and @query are all reffed when this method is called, so can safely be freed after this method returns.

For more details, see gdata_commentable_query_comments(), which is the synchronous version of this method.

When the operation is finished, @callback will be called. You can then call gdata_commentable_query_comments_finish() to get the results of the
operation.</doc>
        <source-position filename="gdata/gdata-commentable.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="205">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="206">a #GDataService representing the service with which the object's comments will be manipulated</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="207">a #GDataQuery with query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="208">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="209">a #GDataQueryProgressCallback to call when a comment is loaded,
or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="211">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="212">a function to call when @progress_callback will not be called any more, or %NULL; this function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="214">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="215">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_comments_finish"
              c:identifier="gdata_commentable_query_comments_finish"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.c"
             line="273">Finishes an asynchronous comment query operation started with gdata_commentable_query_comments_async().</doc>
        <source-position filename="gdata/gdata-commentable.h" line="85"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-commentable.c"
               line="281">a #GDataFeed of #GDataComments, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="275">a #GDataCommentable</doc>
            <type name="Commentable" c:type="GDataCommentable*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-commentable.c"
                 line="276">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="CommentableInterface"
            c:type="GDataCommentableInterface"
            glib:is-gtype-struct-for="Commentable"
            version="0.10.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-commentable.h"
           line="48">The interface structure for the #GDataCommentable interface.</doc>
      <source-position filename="gdata/gdata-commentable.h" line="75"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.h"
             line="50">the parent type</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="comment_type">
        <doc xml:space="preserve"
             filename="gdata/gdata-commentable.h"
             line="51">the #GType of the comment class (subclass of #GDataComment) to use for query results from this commentable object</doc>
        <type name="GType" c:type="GType"/>
      </field>
      <field name="get_authorization_domain" introspectable="0">
        <callback name="get_authorization_domain" introspectable="0">
          <source-position filename="gdata/gdata-commentable.h" line="70"/>
          <return-value>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Commentable" c:type="GDataCommentable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_query_comments_uri">
        <callback name="get_query_comments_uri">
          <source-position filename="gdata/gdata-commentable.h" line="72"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Commentable" c:type="GDataCommentable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_insert_comment_uri">
        <callback name="get_insert_comment_uri">
          <source-position filename="gdata/gdata-commentable.h" line="73"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Commentable" c:type="GDataCommentable*"/>
            </parameter>
            <parameter name="comment" transfer-ownership="none">
              <type name="Comment" c:type="GDataComment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_comment_deletable">
        <callback name="is_comment_deletable">
          <source-position filename="gdata/gdata-commentable.h" line="74"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Commentable" c:type="GDataCommentable*"/>
            </parameter>
            <parameter name="comment" transfer-ownership="none">
              <type name="Comment" c:type="GDataComment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="Comparable"
               c:symbol-prefix="comparable"
               c:type="GDataComparable"
               version="0.7.0"
               glib:type-name="GDataComparable"
               glib:get-type="gdata_comparable_get_type"
               glib:type-struct="ComparableIface">
      <doc xml:space="preserve"
           filename="gdata/gdata-comparable.h"
           line="34">All the fields in the #GDataComparable structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-comparable.h" line="58"/>
      <virtual-method name="compare_with">
        <source-position filename="gdata/gdata-comparable.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Comparable" c:type="GDataComparable*"/>
          </instance-parameter>
          <parameter name="other" transfer-ownership="none">
            <type name="Comparable" c:type="GDataComparable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="compare"
              c:identifier="gdata_comparable_compare"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-comparable.c"
             line="55">Compares the two objects, returning &lt;code class="literal"&gt;-1&lt;/code&gt; if @self is "less than" @other by some metric, &lt;code class="literal"&gt;0&lt;/code&gt;
if they're equal, or &lt;code class="literal"&gt;1&lt;/code&gt; if @self is "greater than" @other.

%NULL values are handled gracefully, with &lt;code class="literal"&gt;0&lt;/code&gt; returned if both @self and @other are %NULL,
&lt;code class="literal"&gt;-1&lt;/code&gt; if @self is %NULL and &lt;code class="literal"&gt;1&lt;/code&gt; if @other is %NULL.

The @other object must be of the same type as @self, or of a type derived from @self's type.</doc>
        <source-position filename="gdata/gdata-comparable.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-comparable.c"
               line="68">%TRUE on success, %FALSE otherwise</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-comparable.c"
                 line="57">a #GDataComparable, or %NULL</doc>
            <type name="Comparable" c:type="GDataComparable*"/>
          </instance-parameter>
          <parameter name="other"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-comparable.c"
                 line="58">another #GDataComparable of the same type, or %NULL</doc>
            <type name="Comparable" c:type="GDataComparable*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="ComparableIface"
            c:type="GDataComparableIface"
            glib:is-gtype-struct-for="Comparable"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-comparable.h"
           line="43">The class structure for the #GDataComparable interface.</doc>
      <source-position filename="gdata/gdata-comparable.h" line="58"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="gdata/gdata-comparable.h"
             line="45">the parent type</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="compare_with">
        <callback name="compare_with">
          <source-position filename="gdata/gdata-comparable.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Comparable" c:type="GDataComparable*"/>
            </parameter>
            <parameter name="other" transfer-ownership="none">
              <type name="Comparable" c:type="GDataComparable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <constant name="DOCUMENTS_ACCESS_ROLE_OWNER"
              value="owner"
              c:type="GDATA_DOCUMENTS_ACCESS_ROLE_OWNER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-entry.h"
           line="33">The users specified by the #GDataAccessRule have full owner access to the document. This allows them to modify the access rules and delete
the document, amongst other things.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_ACCESS_ROLE_READER"
              value="reader"
              c:type="GDATA_DOCUMENTS_ACCESS_ROLE_READER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-entry.h"
           line="52">The users specified by the #GDataAccessRule have read-only access to the document.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_ACCESS_ROLE_WRITER"
              value="writer"
              c:type="GDATA_DOCUMENTS_ACCESS_ROLE_WRITER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-entry.h"
           line="43">The users specified by the #GDataAccessRule have write access to the document. They cannot modify the access rules or delete the document.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_ACCESS_RULE"
                    c:identifier="GDATA_DOCUMENTS_ACCESS_RULE"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_ACCESS_RULE_CLASS"
                    c:identifier="GDATA_DOCUMENTS_ACCESS_RULE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_ACCESS_RULE_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_ACCESS_RULE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_DOCUMENT"
                    c:identifier="GDATA_DOCUMENTS_DOCUMENT"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_DOCUMENT_CLASS"
                    c:identifier="GDATA_DOCUMENTS_DOCUMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_DOCUMENT_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_DOCUMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_DRAWING"
                    c:identifier="GDATA_DOCUMENTS_DRAWING"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="86"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_DRAWING_CLASS"
                    c:identifier="GDATA_DOCUMENTS_DRAWING_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="87"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_DRAWING_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_DRAWING_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="90"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DOCUMENTS_DRAWING_JPEG"
              value="jpeg"
              c:type="GDATA_DOCUMENTS_DRAWING_JPEG"
              version="0.13.1">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drawing.h"
           line="32">The export format for JPEG image format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_drawings"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_DRAWING_PDF"
              value="pdf"
              c:type="GDATA_DOCUMENTS_DRAWING_PDF"
              version="0.13.1">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drawing.h"
           line="45">The export format for Portable Document Format (PDF).

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_drawings"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_DRAWING_PNG"
              value="png"
              c:type="GDATA_DOCUMENTS_DRAWING_PNG"
              version="0.13.1">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drawing.h"
           line="58">The export format for Portable Network Graphics (PNG) image format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_drawings"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_DRAWING_SVG"
              value="svg"
              c:type="GDATA_DOCUMENTS_DRAWING_SVG"
              version="0.13.1">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drawing.h"
           line="71">The export format for Scalable Vector Graphics (SVG) image format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_drawings"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_ENTRY"
                    c:identifier="GDATA_DOCUMENTS_ENTRY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="62"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_ENTRY_CLASS"
                    c:identifier="GDATA_DOCUMENTS_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="63"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_ENTRY_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="66"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_FEED"
                    c:identifier="GDATA_DOCUMENTS_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_FEED_CLASS"
                    c:identifier="GDATA_DOCUMENTS_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_FEED_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_FEED_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_FOLDER"
                    c:identifier="GDATA_DOCUMENTS_FOLDER"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_FOLDER_CLASS"
                    c:identifier="GDATA_DOCUMENTS_FOLDER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_FOLDER_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_FOLDER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_METADATA"
                    c:identifier="GDATA_DOCUMENTS_METADATA"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_METADATA_CLASS"
                    c:identifier="GDATA_DOCUMENTS_METADATA_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_METADATA_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_METADATA_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PDF"
                    c:identifier="GDATA_DOCUMENTS_PDF"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PDF_CLASS"
                    c:identifier="GDATA_DOCUMENTS_PDF_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PDF_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_PDF_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PRESENTATION"
                    c:identifier="GDATA_DOCUMENTS_PRESENTATION"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="83"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PRESENTATION_CLASS"
                    c:identifier="GDATA_DOCUMENTS_PRESENTATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="85"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PRESENTATION_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_PRESENTATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="89"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DOCUMENTS_PRESENTATION_PDF"
              value="pdf"
              c:type="GDATA_DOCUMENTS_PRESENTATION_PDF"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-presentation.h"
           line="30">The export format for Portable Document Format (PDF).

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_presentations"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_PRESENTATION_PNG"
              value="png"
              c:type="GDATA_DOCUMENTS_PRESENTATION_PNG"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-presentation.h"
           line="43">The export format for Portable Network Graphics (PNG) image format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_presentations"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_PRESENTATION_PPT"
              value="ppt"
              c:type="GDATA_DOCUMENTS_PRESENTATION_PPT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-presentation.h"
           line="56">The export format for Microsoft PowerPoint (PPT) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_presentations"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_PRESENTATION_TXT"
              value="txt"
              c:type="GDATA_DOCUMENTS_PRESENTATION_TXT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-presentation.h"
           line="69">The export format for plain text format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_presentations"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="80"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_PROPERTY"
                    c:identifier="GDATA_DOCUMENTS_PROPERTY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="52"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PROPERTY_CLASS"
                    c:identifier="GDATA_DOCUMENTS_PROPERTY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="53"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_PROPERTY_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_PROPERTY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="56"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DOCUMENTS_PROPERTY_VISIBILITY_PRIVATE"
              value="PRIVATE"
              c:type="GDATA_DOCUMENTS_PROPERTY_VISIBILITY_PRIVATE"
              version="0.17.11">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-property.h"
           line="41">The #GDataDocumentsProperty having the visibility set to FALSE (default) corresponds to having the visibility property on a Drive Property Resource
set to "PRIVATE". This makes the Property Resource accessible only by the app that created it.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_PROPERTY_VISIBILITY_PUBLIC"
              value="PUBLIC"
              c:type="GDATA_DOCUMENTS_PROPERTY_VISIBILITY_PUBLIC"
              version="0.17.11">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-property.h"
           line="30">The #GDataDocumentsProperty having the visibility set to TRUE corresponds to having the visibility property
on a Drive Property Resource
set to "PUBLIC". This makes the Property Resource visible to other apps.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_QUERY"
                    c:identifier="GDATA_DOCUMENTS_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_QUERY_CLASS"
                    c:identifier="GDATA_DOCUMENTS_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_QUERY_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_QUERY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_SERVICE"
                    c:identifier="GDATA_DOCUMENTS_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="48"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_SERVICE_CLASS"
                    c:identifier="GDATA_DOCUMENTS_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="49"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_SERVICE_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_SERVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="52"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_SPREADSHEET"
                    c:identifier="GDATA_DOCUMENTS_SPREADSHEET"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="109"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_SPREADSHEET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_SPREADSHEET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="111"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DOCUMENTS_SPREADSHEET_CSV"
              value="csv"
              c:type="GDATA_DOCUMENTS_SPREADSHEET_CSV"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="30">The export format for Comma-Separated Values (CSV) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_spreadsheets"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_SPREADSHEET_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_SPREADSHEET_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="115"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DOCUMENTS_SPREADSHEET_HTML"
              value="html"
              c:type="GDATA_DOCUMENTS_SPREADSHEET_HTML"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="95">The export format for HyperText Markup Language (HTML) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_spreadsheets"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="106"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_SPREADSHEET_ODS"
              value="ods"
              c:type="GDATA_DOCUMENTS_SPREADSHEET_ODS"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="43">The export format for OpenDocument Spreadsheet (ODS) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_spreadsheets"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_SPREADSHEET_PDF"
              value="pdf"
              c:type="GDATA_DOCUMENTS_SPREADSHEET_PDF"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="56">The export format for Portable Document Format (PDF).

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_spreadsheets"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_SPREADSHEET_TSV"
              value="tsv"
              c:type="GDATA_DOCUMENTS_SPREADSHEET_TSV"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="69">The export format for Tab-Separated Values (TSV) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_spreadsheets"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="80"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_SPREADSHEET_XLS"
              value="xls"
              c:type="GDATA_DOCUMENTS_SPREADSHEET_XLS"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="82">The export format for Microsoft Excel spreadsheet (XLS) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_formats_for_spreadsheets"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="93"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_TEXT"
                    c:identifier="GDATA_DOCUMENTS_TEXT"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="148"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_TEXT_CLASS"
                    c:identifier="GDATA_DOCUMENTS_TEXT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="149"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DOCUMENTS_TEXT_DOC"
              value="doc"
              c:type="GDATA_DOCUMENTS_TEXT_DOC"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="30">The export format for Microsoft Word (DOC) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_TEXT_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_TEXT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="152"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DOCUMENTS_TEXT_HTML"
              value="html"
              c:type="GDATA_DOCUMENTS_TEXT_HTML"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="43">The export format for HyperText Markup Language (HTML) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_TEXT_JPEG"
              value="jpeg"
              c:type="GDATA_DOCUMENTS_TEXT_JPEG"
              version="0.13.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="56">The export format for JPEG image format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_TEXT_ODT"
              value="odt"
              c:type="GDATA_DOCUMENTS_TEXT_ODT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="69">The export format for OpenDocument Text (ODT) format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="80"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_TEXT_PDF"
              value="pdf"
              c:type="GDATA_DOCUMENTS_TEXT_PDF"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="82">The export format for Portable Document Format (PDF).

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="93"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_TEXT_PNG"
              value="png"
              c:type="GDATA_DOCUMENTS_TEXT_PNG"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="95">The export format for Portable Network Graphics (PNG) image format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="106"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_TEXT_RTF"
              value="rtf"
              c:type="GDATA_DOCUMENTS_TEXT_RTF"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="108">The export format for Rich Text Format (RTF).

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="119"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_TEXT_TXT"
              value="txt"
              c:type="GDATA_DOCUMENTS_TEXT_TXT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="121">The export format for plain text format.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="132"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DOCUMENTS_TEXT_ZIP"
              value="zip"
              c:type="GDATA_DOCUMENTS_TEXT_ZIP"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="134">The export format for a ZIP archive containing images and exported HTML.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#valid_download_formats_for_text_documents"&gt;
GData protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="145"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DOCUMENTS_UPLOAD_QUERY"
                    c:identifier="GDATA_DOCUMENTS_UPLOAD_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_UPLOAD_QUERY_CLASS"
                    c:identifier="GDATA_DOCUMENTS_UPLOAD_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOCUMENTS_UPLOAD_QUERY_GET_CLASS"
                    c:identifier="GDATA_DOCUMENTS_UPLOAD_QUERY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOWNLOAD_STREAM"
                    c:identifier="GDATA_DOWNLOAD_STREAM"
                    introspectable="0">
      <source-position filename="gdata/gdata-download-stream.h" line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOWNLOAD_STREAM_CLASS"
                    c:identifier="GDATA_DOWNLOAD_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-download-stream.h" line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOWNLOAD_STREAM_GET_CLASS"
                    c:identifier="GDATA_DOWNLOAD_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-download-stream.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="DocumentsAccessRule"
           c:symbol-prefix="documents_access_rule"
           c:type="GDataDocumentsAccessRule"
           version="0.17.2"
           parent="AccessRule"
           glib:type-name="GDataDocumentsAccessRule"
           glib:get-type="gdata_documents_access_rule_get_type"
           glib:type-struct="DocumentsAccessRuleClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-access-rule.h"
           line="37">All the fields in the #GDataDocumentsAccessRule structure are private and
should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                       line="65"/>
      <constructor name="new"
                   c:identifier="gdata_documents_access_rule_new"
                   version="0.17.2">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-access-rule.c"
             line="209">Creates a new #GDataDocumentsAccessRule with the given ID and default
properties.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-access-rule.c"
               line="216">a new #GDataDocumentsAccessRule; unref with
  g_object_unref()</doc>
          <type name="DocumentsAccessRule" c:type="GDataDocumentsAccessRule*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-access-rule.c"
                 line="211">the access rule's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="AccessRule" c:type="GDataAccessRule"/>
      </field>
    </class>
    <record name="DocumentsAccessRuleClass"
            c:type="GDataDocumentsAccessRuleClass"
            glib:is-gtype-struct-for="DocumentsAccessRule"
            version="0.17.2">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-access-rule.h"
           line="49">All the fields in the #GDataDocumentsAccessRuleClass structure are private
and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                       line="65"/>
      <field name="parent" readable="0" private="1">
        <type name="AccessRuleClass" c:type="GDataAccessRuleClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DocumentsDocument"
           c:symbol-prefix="documents_document"
           c:type="GDataDocumentsDocument"
           version="0.7.0"
           parent="DocumentsEntry"
           glib:type-name="GDataDocumentsDocument"
           glib:get-type="gdata_documents_document_get_type"
           glib:type-struct="DocumentsDocumentClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-document.h"
           line="40">All the fields in the #GDataDocumentsDocument structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="67"/>
      <implements name="AccessHandler"/>
      <constructor name="new"
                   c:identifier="gdata_documents_document_new"
                   version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-document.c"
             line="333">Creates a new #GDataDocumentsDocument with the given entry ID (#GDataEntry:id).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-document.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-document.c"
               line="339">a new #GDataDocumentsDocument, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="335">the entry's ID (not the document ID), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="download"
              c:identifier="gdata_documents_document_download"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-document.c"
             line="349">Downloads and returns the document file represented by the #GDataDocumentsDocument. If the document doesn't exist, %NULL is returned, but no error
is set in @error.

@export_format should be the file extension of the desired output format for the document, from the list accepted by Google Documents. For example:
%GDATA_DOCUMENTS_PRESENTATION_PDF, %GDATA_DOCUMENTS_SPREADSHEET_ODS or %GDATA_DOCUMENTS_TEXT_ODT.

If @self is a #GDataDocumentsSpreadsheet, only the first grid, or sheet, in the spreadsheet will be downloaded for some export formats. To download
a specific a specific grid, use gdata_documents_spreadsheet_get_download_uri() with #GDataDownloadStream to download the grid manually. See the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#downloading_spreadsheets"&gt;GData protocol
specification&lt;/ulink&gt; for more information.

To get the content type of the downloaded file, gdata_download_stream_get_content_type() can be called on the returned #GDataDownloadStream.
Calling gdata_download_stream_get_content_length() on the stream will not return a meaningful result, however, as the stream is encoded in chunks,
rather than by content length.

In order to cancel the download, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GInputStream operations on the #GDataDownloadStream will not cancel the entire download; merely the read or close operation in question. See the
#GDataDownloadStream:cancellable for more details.

If the given @export_format is unrecognised or not supported for this document, %GDATA_SERVICE_ERROR_NOT_FOUND will be returned.

If @service isn't authenticated, a %GDATA_SERVICE_ERROR_AUTHENTICATION_REQUIRED will be returned.

If there is an error getting the document, a %GDATA_SERVICE_ERROR_PROTOCOL_ERROR error will be returned.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-document.h"
                         line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-document.c"
               line="382">a #GDataDownloadStream to download the document with, or %NULL; unref with g_object_unref()</doc>
          <type name="DownloadStream" c:type="GDataDownloadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="351">a #GDataDocumentsDocument</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="352">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </parameter>
          <parameter name="export_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="353">the format in which the document should be exported</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="354">a #GCancellable for the entire download stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_download_uri"
              c:identifier="gdata_documents_document_get_download_uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-document.c"
             line="429">Builds and returns the download URI for the given #GDataDocumentsDocument in the desired format. Note that directly downloading the document using
this URI isn't possible, as authentication is required. You should instead use gdata_download_stream_new() with the URI, and use the resulting
#GInputStream.

@export_format should be the file extension of the desired output format for the document, from the list accepted by Google Documents. For example:
%GDATA_DOCUMENTS_PRESENTATION_PDF, %GDATA_DOCUMENTS_SPREADSHEET_ODS or %GDATA_DOCUMENTS_TEXT_ODT.

If the @export_format is not recognised or not supported for this document, %NULL is returned.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-document.h"
                         line="78"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-document.c"
               line="443">the download URI, or %NULL; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="431">a #GDataDocumentsDocument</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </instance-parameter>
          <parameter name="export_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="432">the format in which the document should be exported when downloaded</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_thumbnail_uri"
              c:identifier="gdata_documents_document_get_thumbnail_uri"
              version="0.13.1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-document.c"
             line="494">Gets the URI of the thumbnail for the #GDataDocumentsDocument. If no thumbnail exists for the document, %NULL will be returned.

The thumbnail may then be downloaded using a #GDataDownloadStream.

&lt;example&gt;
&lt;title&gt;Downloading a Document Thumbnail&lt;/title&gt;
&lt;programlisting&gt;
GDataDocumentsService *service;
const gchar *thumbnail_uri;
GCancellable *cancellable;
GdkPixbuf *pixbuf;
GError *error = NULL;

service = get_my_documents_service ();
thumbnail_uri = gdata_documents_document_get_thumbnail_uri (my_document);
cancellable = g_cancellable_new ();

/&lt;!-- --&gt;* Prepare a download stream *&lt;!-- --&gt;/
download_stream = GDATA_DOWNLOAD_STREAM (gdata_download_stream_new (GDATA_SERVICE (service), NULL, thumbnail_uri, cancellable));

/&lt;!-- --&gt;* Download into a new GdkPixbuf. This can be cancelled using 'cancellable'. *&lt;!-- --&gt;/
pixbuf = gdk_pixbuf_new_from_stream (G_INPUT_STREAM (download_stream), NULL, &amp;error);

if (error != NULL) {
	/&lt;!-- --&gt;* Handle the error. *&lt;!-- --&gt;/
	g_error_free (error);
}

g_object_unref (download_stream);
g_object_unref (cancellable);

/&lt;!-- --&gt;* Do something with the GdkPixbuf. *&lt;!-- --&gt;/

g_object_unref (pixbuf);
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
        <source-position filename="gdata/services/documents/gdata-documents-document.h"
                         line="80"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-document.c"
               line="535">the URI of the document's thumbnail, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-document.c"
                 line="496">a #GDataDocumentsDocument</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DocumentsEntry" c:type="GDataDocumentsEntry"/>
      </field>
      <field name="priv">
        <type name="DocumentsDocumentPrivate"
              c:type="GDataDocumentsDocumentPrivate*"/>
      </field>
    </class>
    <record name="DocumentsDocumentClass"
            c:type="GDataDocumentsDocumentClass"
            glib:is-gtype-struct-for="DocumentsDocument"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-document.h"
           line="52">All the fields in the #GDataDocumentsDocumentClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="DocumentsEntryClass" c:type="GDataDocumentsEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-document.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-document.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsDocumentPrivate"
            c:type="GDataDocumentsDocumentPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="38"/>
    </record>
    <class name="DocumentsDrawing"
           c:symbol-prefix="documents_drawing"
           c:type="GDataDocumentsDrawing"
           version="0.13.1"
           parent="DocumentsDocument"
           glib:type-name="GDataDocumentsDrawing"
           glib:get-type="gdata_documents_drawing_get_type"
           glib:type-struct="DocumentsDrawingClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drawing.h"
           line="94">All the fields in the #GDataDocumentsDrawing structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="121"/>
      <implements name="AccessHandler"/>
      <constructor name="new"
                   c:identifier="gdata_documents_drawing_new"
                   version="0.13.1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-drawing.c"
             line="74">Creates a new #GDataDocumentsDrawing with the given entry ID (#GDataEntry:id).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                         line="126"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-drawing.c"
               line="80">a new #GDataDocumentsDrawing, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsDrawing" c:type="GDataDocumentsDrawing*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-drawing.c"
                 line="76">the entry's ID (not the document ID of the drawing document), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DocumentsDocument" c:type="GDataDocumentsDocument"/>
      </field>
      <field name="priv">
        <type name="DocumentsDrawingPrivate"
              c:type="GDataDocumentsDrawingPrivate*"/>
      </field>
    </class>
    <record name="DocumentsDrawingClass"
            c:type="GDataDocumentsDrawingClass"
            glib:is-gtype-struct-for="DocumentsDrawing"
            version="0.13.1">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drawing.h"
           line="106">All the fields in the #GDataDocumentsDrawingClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="121"/>
      <field name="parent" readable="0" private="1">
        <type name="DocumentsDocumentClass"
              c:type="GDataDocumentsDocumentClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                           line="119"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                           line="120"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsDrawingPrivate"
            c:type="GDataDocumentsDrawingPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="92"/>
    </record>
    <class name="DocumentsDrive"
           c:symbol-prefix="documents_drive"
           c:type="GDataDocumentsDrive"
           parent="Entry"
           glib:type-name="GDataDocumentsDrive"
           glib:get-type="gdata_documents_drive_get_type"
           glib:type-struct="DocumentsDriveClass">
      <source-position filename="gdata/services/documents/gdata-documents-drive.h"
                       line="49"/>
      <method name="get_name"
              c:identifier="gdata_documents_drive_get_name"
              glib:get-property="name"
              version="0.18.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-drive.c"
             line="110">Returns the human-readable name of this shared drive.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-drive.h"
                         line="51"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-drive.c"
               line="116">the drives's human-readable name, or %NULL if not set</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-drive.c"
                 line="112">a #GDataDocumentsDrive</doc>
            <type name="DocumentsDrive" c:type="GDataDocumentsDrive*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="name"
                version="0.18.0"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-drive.c"
             line="65">The human-readable name of this shared drive.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
    </class>
    <record name="DocumentsDriveClass"
            c:type="GDataDocumentsDriveClass"
            glib:is-gtype-struct-for="DocumentsDrive"
            version="0.18.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drive.h"
           line="34">All the fields in the #GDataDocumentsDriveClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drive.h"
                       line="49"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-drive.h"
                           line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-drive.h"
                           line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DocumentsDriveQuery"
           c:symbol-prefix="documents_drive_query"
           c:type="GDataDocumentsDriveQuery"
           parent="Query"
           glib:type-name="GDataDocumentsDriveQuery"
           glib:get-type="gdata_documents_drive_query_get_type"
           glib:type-struct="DocumentsDriveQueryClass">
      <source-position filename="gdata/services/documents/gdata-documents-drive-query.h"
                       line="49"/>
      <constructor name="new"
                   c:identifier="gdata_documents_drive_query_new"
                   version="0.18.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-drive-query.c"
             line="84">Creates a new #GDataDocumentsDriveQuery with its #GDataQuery:q property set to @q.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-drive-query.h"
                         line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-drive-query.c"
               line="90">a new #GDataDocumentsDriveQuery</doc>
          <type name="DocumentsDriveQuery" c:type="GDataDocumentsDriveQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-drive-query.c"
                 line="86">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Query" c:type="GDataQuery"/>
      </field>
    </class>
    <record name="DocumentsDriveQueryClass"
            c:type="GDataDocumentsDriveQueryClass"
            glib:is-gtype-struct-for="DocumentsDriveQuery"
            version="0.18.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drive-query.h"
           line="34">All the fields in the #GDataDocumentsDriveQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-drive-query.h"
                       line="49"/>
      <field name="parent" readable="0" private="1">
        <type name="QueryClass" c:type="GDataQueryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-drive-query.h"
                           line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-drive-query.h"
                           line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DocumentsEntry"
           c:symbol-prefix="documents_entry"
           c:type="GDataDocumentsEntry"
           version="0.4.0"
           parent="Entry"
           abstract="1"
           glib:type-name="GDataDocumentsEntry"
           glib:get-type="gdata_documents_entry_get_type"
           glib:type-struct="DocumentsEntryClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-entry.h"
           line="70">All the fields in the #GDataDocumentsEntry structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="97"/>
      <implements name="AccessHandler"/>
      <method name="add_documents_property"
              c:identifier="gdata_documents_entry_add_documents_property"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1326">Inserts/updates @property on "properties" list in @self. Since, a GDataDocumentsProperty is uniquely identified by #GDataDocumentsProperty:key and #GDataDocumentsProperty:visibility, if no such property exists in the "properties" list, then a @property will be appended to the list after incrementing the reference count.

In case that there already exists a @property in "properties", the #GDataDocumentsProperty inside the list will be updated to @property. Note that #GDataDocumentsProperty:value has no role in determining the uniqueness of a #GDataDocumentsProperty.

The changes made by this function will be local only and you need to explicitly update @self by calling gdata_service_update_entry().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1337">%TRUE if the @property doesn't exist in the "properties" list, or that #GDataDocumentsProperty:value  of @property has been set to %NULL by a call to gdata_documents_entry_remove_documents_property(). %FALSE if @property exists in "properties" list, or in the case that @self or @property aren't of proper types.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1328">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1329">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_edit"
              c:identifier="gdata_documents_entry_can_edit"
              glib:get-property="can-edit"
              version="0.18.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1424">Gets the #GDataDocumentsEntry:can-edit property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1430">%TRUE if the current user can edit this file, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1426">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_document_properties"
              c:identifier="gdata_documents_entry_get_document_properties"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1309">Gets a list of the #GDataDocumentsPropertys for this entry.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1315">a #GList of pointers to #GDataDocumentsPropertys</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DocumentsProperty"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1311">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_file_size"
              c:identifier="gdata_documents_entry_get_file_size"
              glib:get-property="file-size"
              version="0.17.7">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1273">Gets the #GDataDocumentsEntry:file-size property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1279">the size of the document in bytes</doc>
          <type name="gint64" c:type="goffset"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1275">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_last_modified_by"
              c:identifier="gdata_documents_entry_get_last_modified_by"
              glib:get-property="last-modified-by"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1238">Gets the #GDataDocumentsEntry:last-modified-by property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1244">the author who last modified the document</doc>
          <type name="Author" c:type="GDataAuthor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1240">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_last_viewed"
              c:identifier="gdata_documents_entry_get_last_viewed"
              glib:get-property="last-viewed"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1086">Gets the #GDataDocumentsEntry:last-viewed property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1092">the UNIX timestamp for the time the document was last viewed, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1088">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path"
              c:identifier="gdata_documents_entry_get_path"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1103">Builds a path for the #GDataDocumentsEntry, starting from a root node and traversing the folders containing the document, then ending with the
document's ID.

An example path would be: &lt;literal&gt;/folder_id1/folder_id2/document_id&lt;/literal&gt;.

Note: the path is based on the entry/document IDs of the folders (#GDataEntry:id) and document (#GDataDocumentsEntry:document-id),
and not the entries' human-readable names (#GDataEntry:title).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1115">the folder hierarchy path containing the document, or %NULL; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1105">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_quota_used"
              c:identifier="gdata_documents_entry_get_quota_used"
              glib:get-property="quota-used"
              version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1255">Gets the #GDataDocumentsEntry:quota-used property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1261">the number of quota bytes used by the document</doc>
          <type name="gint64" c:type="goffset"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1257">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_resource_id"
              c:identifier="gdata_documents_entry_get_resource_id"
              glib:get-property="resource-id"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1172">Gets the #GDataDocumentsEntry:resource-id property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1178">the document's resource ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1174">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shared_with_me_date"
              c:identifier="gdata_documents_entry_get_shared_with_me_date"
              glib:get-property="shared-with-me-date"
              version="0.18.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1407">Gets the #GDataDocumentsEntry:shared-with-me-date property. If the property is unset, `-1` will be returned.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1413">the UNIX timestamp for the time at which this file was shared with the user, or `-1`</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1409">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_deleted"
              c:identifier="gdata_documents_entry_is_deleted"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1291">Gets the #GDataDocumentsEntry:is-deleted property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1297">%TRUE if the document has been deleted, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1293">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_documents_property"
              c:identifier="gdata_documents_entry_remove_documents_property"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1363">The property specified by @property will be removed from the "properties" list on @self.

Only #GDataDocumentsProperty:key and #GDataDocumentsProperty:visibility will be used to find @property in "properties" list. #GDataDocumentsProperty:value has no role in determining the uniqueness of a #GDataDocumentsProperty.

The changes made by this function will be local only and you need to explicitly update @self by calling gdata_service_update_entry().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1374">%TRUE if @property has been successfully removed from "properties" list on @self, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1365">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1366">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_writers_can_invite"
              c:identifier="gdata_documents_entry_set_writers_can_invite"
              glib:set-property="writers-can-invite"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1204">Sets the #GDataDocumentsEntry:writers-can-invite property to @writers_can_invite.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1206">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
          <parameter name="writers_can_invite" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1207">%TRUE if writers can invite other people to edit the document, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="writers_can_invite"
              c:identifier="gdata_documents_entry_writers_can_invite"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="1221">Gets the #GDataDocumentsEntry:writers-can-invite property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-entry.c"
               line="1227">%TRUE if writers can invite other people to edit the document, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-entry.c"
                 line="1223">a #GDataDocumentsEntry</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="can-edit"
                version="0.18.0"
                transfer-ownership="none"
                getter="can_edit"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="299">Indicates whether the current user can edit this file.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="file-size"
                version="0.17.7"
                transfer-ownership="none"
                getter="get_file_size"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="270">The size of the document. This is only set for non-document files.
Standard formats, such as #GDataDocumentsText,
#GDataDocumentsSpreadsheet and #GDataDocumentsFolder are not binary
data and so have no size. Measured in bytes.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="is-deleted"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="204">Indicates whether the document entry has been deleted (moved to the trash). Deleted documents will only
appear in query results if the #GDataDocumentsQuery:show-deleted property is %TRUE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="last-modified-by"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_last_modified_by">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="241">Indicates the author of the last modification.</doc>
        <type name="Author"/>
      </property>
      <property name="last-viewed"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_last_viewed"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="178">The last time the document was viewed.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="quota-used"
                version="0.13.0"
                transfer-ownership="none"
                getter="get_quota_used"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="254">The amount of user quota the document is occupying. Currently, only arbitrary files consume file space quota (whereas standard document
formats, such as #GDataDocumentsText, #GDataDocumentsSpreadsheet and #GDataDocumentsFolder don't). Measured in bytes.

This property will be &lt;code class="literal"&gt;0&lt;/code&gt; for documents which aren't consuming any quota.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="resource-id"
                version="0.11.0"
                transfer-ownership="none"
                getter="get_resource_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="218">The resource ID of the document. This should not normally need to be used in client code, and is mostly for internal use. To uniquely
identify a given document or folder, use its #GDataEntry:id.

Resource IDs have the form:
&lt;literal&gt;&lt;replaceable&gt;document|drawing|pdf|spreadsheet|presentation|folder&lt;/replaceable&gt;:&lt;replaceable&gt;untyped resource ID&lt;/replaceable&gt;&lt;/literal&gt;; whereas
entry IDs have the form:
&lt;literal&gt;https://docs.google.com/feeds/id/&lt;replaceable&gt;resource ID&lt;/replaceable&gt;&lt;/literal&gt; in version 3 of the API.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#resource_ids_explained"&gt;Google Documents
API reference&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="shared-with-me-date"
                version="0.18.0"
                transfer-ownership="none"
                getter="get_shared_with_me_date"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="286">The UNIX timestamp for the time at which this file was shared with the user.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="writers-can-invite"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_writers_can_invite"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-entry.c"
             line="191">Indicates whether the document entry writers can invite others to edit the document.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="DocumentsEntryPrivate"
              c:type="GDataDocumentsEntryPrivate*"/>
      </field>
    </class>
    <record name="DocumentsEntryClass"
            c:type="GDataDocumentsEntryClass"
            glib:is-gtype-struct-for="DocumentsEntry"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-entry.h"
           line="82">All the fields in the #GDataDocumentsEntryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="97"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsEntryPrivate"
            c:type="GDataDocumentsEntryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="68"/>
    </record>
    <class name="DocumentsFeed"
           c:symbol-prefix="documents_feed"
           c:type="GDataDocumentsFeed"
           version="0.4.0"
           parent="Feed"
           glib:type-name="GDataDocumentsFeed"
           glib:get-type="gdata_documents_feed_get_type"
           glib:type-struct="DocumentsFeedClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-feed.h"
           line="38">All the fields in the #GDataDocumentsFeed structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="Feed" c:type="GDataFeed"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DocumentsFeedPrivate" c:type="GDataDocumentsFeedPrivate*"/>
      </field>
    </class>
    <record name="DocumentsFeedClass"
            c:type="GDataDocumentsFeedClass"
            glib:is-gtype-struct-for="DocumentsFeed"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-feed.h"
           line="51">All the fields in the #GDataDocumentsFeedClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="FeedClass" c:type="GDataFeedClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsFeedPrivate"
            c:type="GDataDocumentsFeedPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="36"/>
    </record>
    <class name="DocumentsFolder"
           c:symbol-prefix="documents_folder"
           c:type="GDataDocumentsFolder"
           version="0.4.0"
           parent="DocumentsEntry"
           glib:type-name="GDataDocumentsFolder"
           glib:get-type="gdata_documents_folder_get_type"
           glib:type-struct="DocumentsFolderClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-folder.h"
           line="40">All the fields in the #GDataDocumentsFolder structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="67"/>
      <implements name="AccessHandler"/>
      <constructor name="new"
                   c:identifier="gdata_documents_folder_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-folder.c"
             line="143">Creates a new #GDataDocumentsFolder with the given entry ID (#GDataEntry:id).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-folder.c"
               line="149">a new #GDataDocumentsFolder, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-folder.c"
                 line="145">the entry's ID (not the document ID of the folder), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DocumentsEntry" c:type="GDataDocumentsEntry"/>
      </field>
      <field name="priv">
        <type name="DocumentsFolderPrivate"
              c:type="GDataDocumentsFolderPrivate*"/>
      </field>
    </class>
    <record name="DocumentsFolderClass"
            c:type="GDataDocumentsFolderClass"
            glib:is-gtype-struct-for="DocumentsFolder"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-folder.h"
           line="52">All the fields in the #GDataDocumentsFolderClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="DocumentsEntryClass" c:type="GDataDocumentsEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsFolderPrivate"
            c:type="GDataDocumentsFolderPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="38"/>
    </record>
    <class name="DocumentsMetadata"
           c:symbol-prefix="documents_metadata"
           c:type="GDataDocumentsMetadata"
           version="0.17.9"
           parent="Parsable"
           glib:type-name="GDataDocumentsMetadata"
           glib:get-type="gdata_documents_metadata_get_type"
           glib:type-struct="DocumentsMetadataClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-metadata.h"
           line="40">All the fields in the #GDataDocumentsMetadata structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="67"/>
      <method name="get_quota_total"
              c:identifier="gdata_documents_metadata_get_quota_total"
              glib:get-property="quota-total"
              version="0.17.9">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-metadata.c"
             line="190">Gets the #GDataDocumentsMetadata:quota-total property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-metadata.c"
               line="196">the number of quota bytes available in total. Returns -1 if
              there is no quota limit.</doc>
          <type name="gint64" c:type="goffset"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-metadata.c"
                 line="192">a #GDataDocumentsMetadata</doc>
            <type name="DocumentsMetadata" c:type="GDataDocumentsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_quota_used"
              c:identifier="gdata_documents_metadata_get_quota_used"
              glib:get-property="quota-used"
              version="0.17.9">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-metadata.c"
             line="212">Gets the #GDataDocumentsMetadata:quota-used property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-metadata.c"
               line="218">the number of quota bytes used by the documents service</doc>
          <type name="gint64" c:type="goffset"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-metadata.c"
                 line="214">a #GDataDocumentsMetadata</doc>
            <type name="DocumentsMetadata" c:type="GDataDocumentsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="quota-total"
                version="0.17.9"
                transfer-ownership="none"
                getter="get_quota_total"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-metadata.c"
             line="73">The user quota limit across all services. Measured in bytes.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="quota-used"
                version="0.17.9"
                transfer-ownership="none"
                getter="get_quota_used"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-metadata.c"
             line="86">The amount of user quota used up across all services. Measured in bytes.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="DocumentsMetadataPrivate"
              c:type="GDataDocumentsMetadataPrivate*"/>
      </field>
    </class>
    <record name="DocumentsMetadataClass"
            c:type="GDataDocumentsMetadataClass"
            glib:is-gtype-struct-for="DocumentsMetadata"
            version="0.17.9">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-metadata.h"
           line="52">All the fields in the #GDataDocumentsMetadataClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsMetadataPrivate"
            c:type="GDataDocumentsMetadataPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="38"/>
    </record>
    <class name="DocumentsPdf"
           c:symbol-prefix="documents_pdf"
           c:type="GDataDocumentsPdf"
           version="0.13.3"
           parent="DocumentsDocument"
           glib:type-name="GDataDocumentsPdf"
           glib:get-type="gdata_documents_pdf_get_type"
           glib:type-struct="DocumentsPdfClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-pdf.h"
           line="41">All the fields in the #GDataDocumentsPdf structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="68"/>
      <implements name="AccessHandler"/>
      <constructor name="new"
                   c:identifier="gdata_documents_pdf_new"
                   version="0.13.3">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-pdf.c"
             line="74">Creates a new #GDataDocumentsPdf with the given entry ID (#GDataEntry:id).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-pdf.c"
               line="80">a new #GDataDocumentsPdf, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsPdf" c:type="GDataDocumentsPdf*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-pdf.c"
                 line="76">the entry's ID (not the document ID of the pdf document), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DocumentsDocument" c:type="GDataDocumentsDocument"/>
      </field>
      <field name="priv">
        <type name="DocumentsPdfPrivate" c:type="GDataDocumentsPdfPrivate*"/>
      </field>
    </class>
    <record name="DocumentsPdfClass"
            c:type="GDataDocumentsPdfClass"
            glib:is-gtype-struct-for="DocumentsPdf"
            version="0.13.3">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-pdf.h"
           line="53">All the fields in the #GDataDocumentsPdfClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="68"/>
      <field name="parent" readable="0" private="1">
        <type name="DocumentsDocumentClass"
              c:type="GDataDocumentsDocumentClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsPdfPrivate"
            c:type="GDataDocumentsPdfPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="39"/>
    </record>
    <class name="DocumentsPresentation"
           c:symbol-prefix="documents_presentation"
           c:type="GDataDocumentsPresentation"
           version="0.4.0"
           parent="DocumentsDocument"
           glib:type-name="GDataDocumentsPresentation"
           glib:get-type="gdata_documents_presentation_get_type"
           glib:type-struct="DocumentsPresentationClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-presentation.h"
           line="94">All the fields in the #GDataDocumentsPresentation structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="121"/>
      <implements name="AccessHandler"/>
      <constructor name="new"
                   c:identifier="gdata_documents_presentation_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-presentation.c"
             line="73">Creates a new #GDataDocumentsPresentation with the given entry ID (#GDataEntry:id).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                         line="126"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-presentation.c"
               line="79">a new #GDataDocumentsPresentation, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsPresentation"
                c:type="GDataDocumentsPresentation*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-presentation.c"
                 line="75">the entry's ID (not the document ID of the presentation), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DocumentsDocument" c:type="GDataDocumentsDocument"/>
      </field>
      <field name="priv">
        <type name="DocumentsPresentationPrivate"
              c:type="GDataDocumentsPresentationPrivate*"/>
      </field>
    </class>
    <record name="DocumentsPresentationClass"
            c:type="GDataDocumentsPresentationClass"
            glib:is-gtype-struct-for="DocumentsPresentation"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-presentation.h"
           line="106">All the fields in the #GDataDocumentsPresentationClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="121"/>
      <field name="parent" readable="0" private="1">
        <type name="DocumentsDocumentClass"
              c:type="GDataDocumentsDocumentClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                           line="119"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                           line="120"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsPresentationPrivate"
            c:type="GDataDocumentsPresentationPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="92"/>
    </record>
    <class name="DocumentsProperty"
           c:symbol-prefix="documents_property"
           c:type="GDataDocumentsProperty"
           version="0.17.11"
           parent="Parsable"
           glib:type-name="GDataDocumentsProperty"
           glib:get-type="gdata_documents_property_get_type"
           glib:type-struct="DocumentsPropertyClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-property.h"
           line="60">All the fields in the #GDataDocumentsProperty structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="87"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_documents_property_new"
                   version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="308">Creates a new #GDataEntry with the given ID and default properties.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-property.h"
                         line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-property.c"
               line="314">a new #GDataDocumentsProperty; unref with g_object_unref()</doc>
          <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="310">the property's key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_etag"
              c:identifier="gdata_documents_property_get_etag"
              glib:get-property="etag"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="358">Returns the ETag of the property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-property.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-property.c"
               line="364">the property's ETag. The ETag will never be empty; it's either %NULL or a valid ETag.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="360">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key"
              c:identifier="gdata_documents_property_get_key"
              glib:get-property="key"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="328">Returns the key of the property. This will never be %NULL or an empty string ("").</doc>
        <source-position filename="gdata/services/documents/gdata-documents-property.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-property.c"
               line="334">the property's key</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="330">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="gdata_documents_property_get_value"
              glib:get-property="value"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="387">Returns the value of the property.

In the case that this value is %NULL, the Property Resource corresponding to @self will be deleted from the properties array on a file's metadata, whereas in the case that it's empty string (""), it will be set as it is.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-property.h"
                         line="98"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-property.c"
               line="395">the property's value. This can be %NULL or empty.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="389">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visibility"
              c:identifier="gdata_documents_property_get_visibility"
              glib:get-property="visibility"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="429">Returns the visibility status of the property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-property.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-property.c"
               line="435">%GDATA_DOCUMENTS_PROPERTY_VISIBILITY_PUBLIC if the #GDataDocumentsProperty is publicly visible to other
apps, %GDATA_DOCUMENTS_PROPERTY_VISIBILITY_PRIVATE if the #GDataDocumentsProperty is restricted to the application which
created it.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="431">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="gdata_documents_property_set_value"
              glib:set-property="value"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="406">Sets #GDataDocumentsProperty:value to @value, corresponding to the key.

In the case that @value is %NULL, the Property Resource corresponding to @self will be deleted from the properties array on a file's metadata, whereas in the case that it's empty string (""), it will be set as it is.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-property.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="408">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="409">the new value of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visibility"
              c:identifier="gdata_documents_property_set_visibility"
              glib:set-property="visibility"
              version="0.17.11">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="448">Sets #GDataDocumentsProperty:visibility to %GDATA_DOCUMENTS_PROPERTY_VISIBILITY_PUBLIC for
public properties and %GDATA_DOCUMENTS_PROPERTY_VISIBILITY_PRIVATE for
private properties (default).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-property.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="450">a #GDataDocumentsProperty</doc>
            <type name="DocumentsProperty" c:type="GDataDocumentsProperty*"/>
          </instance-parameter>
          <parameter name="visibility" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-property.c"
                 line="451">the new visibility status of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="etag"
                version="0.17.11"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_etag"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="101">ETag of the property.

For more information, see the &lt;ulink type="http" url="https://developers.google.com/drive/api/v2/reference/properties"&gt;Properties Resource&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="key"
                version="0.17.11"
                writable="1"
                transfer-ownership="none"
                getter="get_key"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="86">The key of this property.

For more information, see the &lt;ulink type="http" url="https://developers.google.com/drive/api/v2/reference/properties"&gt;Properties Resource&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="value"
                version="0.17.11"
                writable="1"
                transfer-ownership="none"
                setter="set_value"
                getter="get_value"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="116">The value of this property. By default, it takes the an empty string ("").

For more information, see the &lt;ulink type="http" url="https://developers.google.com/drive/api/v2/reference/properties"&gt;Properties Resource&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="visibility"
                version="0.17.11"
                writable="1"
                transfer-ownership="none"
                setter="set_visibility"
                getter="get_visibility"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-property.c"
             line="131">The visibility status of this property. The default value of
visibility is PRIVATE on a Drive Properties Resource object,
hence #GDataDocumentsProperty:visibility is %GDATA_DOCUMENTS_PROPERTY_VISIBILITY_PRIVATE
by default. A private property restricts its visibility to only the app which created it.

For more information, see the &lt;ulink type="http" url="https://developers.google.com/drive/api/v2/reference/properties"&gt;Properties Resource&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="DocumentsPropertyPrivate"
              c:type="GDataDocumentsPropertyPrivate*"/>
      </field>
    </class>
    <record name="DocumentsPropertyClass"
            c:type="GDataDocumentsPropertyClass"
            glib:is-gtype-struct-for="DocumentsProperty"
            version="0.17.11">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-property.h"
           line="72">All the fields in the #GDataDocumentsPropertyClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="87"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-property.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-property.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsPropertyPrivate"
            c:type="GDataDocumentsPropertyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="58"/>
    </record>
    <class name="DocumentsQuery"
           c:symbol-prefix="documents_query"
           c:type="GDataDocumentsQuery"
           version="0.4.0"
           parent="Query"
           glib:type-name="GDataDocumentsQuery"
           glib:get-type="gdata_documents_query_get_type"
           glib:type-struct="DocumentsQueryClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-query.h"
           line="40">All the fields in the #GDataDocumentsQuery structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="68"/>
      <constructor name="new"
                   c:identifier="gdata_documents_query_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="412">Creates a new #GDataDocumentsQuery with its #GDataQuery:q property set to @q.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="418">a new #GDataDocumentsQuery</doc>
          <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="414">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_limits"
                   c:identifier="gdata_documents_query_new_with_limits"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="428">Creates a new #GDataDocumentsQuery with its #GDataQuery:q property set to @q, and the limits @start_index and @max_results
applied.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="437">a new #GDataDocumentsQuery</doc>
          <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="430">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="start_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="431">a one-based start index for the results, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="max_results" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="432">the maximum number of results to return, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_collaborator"
              c:identifier="gdata_documents_query_add_collaborator"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="690">Add @email_address as a #GDataGDEmailAddress to the list of collaborators whose edited documents will be queried.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="692">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
          <parameter name="email_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="693">the e-mail address of the collaborator to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_reader"
              c:identifier="gdata_documents_query_add_reader"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="666">Add @email_address as a #GDataGDEmailAddress to the list of readers, the documents readable by whom will be queried.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="668">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
          <parameter name="email_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="669">the e-mail address of the reader to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_collaborator_addresses"
              c:identifier="gdata_documents_query_get_collaborator_addresses"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="630">Gets a list of #GDataGDEmailAddress&lt;!-- --&gt;es of the document collaborators whose documents will be queried.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="636">a list of #GDataGDEmailAddress&lt;!-- --&gt;es of the collaborators concerned by the
query, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GDEmailAddress"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="632">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exact_title"
              c:identifier="gdata_documents_query_get_exact_title"
              glib:get-property="exact-title"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="583">Gets the #GDataDocumentsQuery:exact-title property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="589">%TRUE if the query matches the exact title of documents with #GDataDocumentsQuery:title, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="585">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folder_id"
              c:identifier="gdata_documents_query_get_folder_id"
              glib:get-property="folder-id"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="525">Gets the #GDataDocumentsQuery:folder-id property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="531">the ID of the folder to be queried, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="527">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reader_addresses"
              c:identifier="gdata_documents_query_get_reader_addresses"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="648">Gets a list of #GDataGDEmailAddress&lt;!-- --&gt;es of the document readers whose documents will be queried.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="654">a list of #GDataGDEmailAddress&lt;!-- --&gt;es of the readers concerned by the query,
or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GDEmailAddress"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="650">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gdata_documents_query_get_title"
              glib:get-property="title"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="566">Gets the #GDataDocumentsQuery:title property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="572">the title (or title fragment) being queried for, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="568">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_folder_id"
              c:identifier="gdata_documents_query_set_folder_id"
              glib:set-property="folder-id"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="542">Sets the #GDataDocumentsQuery:folder-id property to @folder_id.

Set @folder_id to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="544">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
          <parameter name="folder_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="545">the ID of the folder to be queried, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_deleted"
              c:identifier="gdata_documents_query_set_show_deleted"
              glib:set-property="show-deleted"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="468">Sets the #GDataDocumentsQuery:show_deleted property to @show_deleted.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="470">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
          <parameter name="show_deleted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="471">%TRUE if the request should return deleted entries, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_folders"
              c:identifier="gdata_documents_query_set_show_folders"
              glib:set-property="show-folders"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="505">Sets the #GDataDocumentsQuery:show-folders property to show_folders.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="507">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
          <parameter name="show_folders" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="508">%TRUE if the request should return folders, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gdata_documents_query_set_title"
              glib:set-property="title"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="600">Sets the #GDataDocumentsQuery:title property to @title.

Set @title to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="602">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="603">the title (or title fragment) to query for, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="exact_title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="604">%TRUE if the query should match the exact @title, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_deleted"
              c:identifier="gdata_documents_query_show_deleted"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="451">Gets the #GDataDocumentsQuery:show_deleted property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="457">%TRUE if the request should return deleted entries, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="453">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show_folders"
              c:identifier="gdata_documents_query_show_folders"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="488">Gets the #GDataDocumentsQuery:show-folders property.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-query.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-query.c"
               line="494">%TRUE if the request should return folders, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-query.c"
                 line="490">a #GDataDocumentsQuery</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="exact-title"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                getter="get_exact_title"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="164">Specifies whether the query should search for an exact title match for the #GDataDocumentsQuery:title parameter.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="folder-id"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_folder_id"
                getter="get_folder_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="177">Specifies the ID of the folder in which to search.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-deleted"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_deleted"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="138">A shortcut to request all documents that have been deleted.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-folders"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_folders"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="151">Specifies if the request also returns folders.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="title"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-query.c"
             line="190">A title (or title fragment) to be searched for. If #GDataDocumentsQuery:exact-title is %TRUE, an exact
title match will be searched for, otherwise substring matches will also be returned.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Query" c:type="GDataQuery"/>
      </field>
      <field name="priv">
        <type name="DocumentsQueryPrivate"
              c:type="GDataDocumentsQueryPrivate*"/>
      </field>
    </class>
    <record name="DocumentsQueryClass"
            c:type="GDataDocumentsQueryClass"
            glib:is-gtype-struct-for="DocumentsQuery"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-query.h"
           line="52">All the fields in the #GDataDocumentsQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="68"/>
      <field name="parent" readable="0" private="1">
        <type name="QueryClass" c:type="GDataQueryClass"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DocumentsQueryPrivate"
              c:type="GDataDocumentsQueryPrivate*"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-query.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-query.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsQueryPrivate"
            c:type="GDataDocumentsQueryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="38"/>
    </record>
    <class name="DocumentsService"
           c:symbol-prefix="documents_service"
           c:type="GDataDocumentsService"
           version="0.4.0"
           parent="Service"
           glib:type-name="GDataDocumentsService"
           glib:get-type="gdata_documents_service_get_type"
           glib:type-struct="DocumentsServiceClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-service.h"
           line="58">All the fields in the #GDataDocumentsService structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="89"/>
      <implements name="Batchable"/>
      <constructor name="new"
                   c:identifier="gdata_documents_service_new"
                   version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="357">Creates a new #GDataDocumentsService using the given #GDataAuthorizer. If @authorizer is %NULL, all requests are made as an unauthenticated user.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="363">a new #GDataDocumentsService, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsService" c:type="GDataDocumentsService*"/>
        </return-value>
        <parameters>
          <parameter name="authorizer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="359">a #GDataAuthorizer to authorize the service's requests, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_primary_authorization_domain"
                c:identifier="gdata_documents_service_get_primary_authorization_domain"
                version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="377">The primary #GDataAuthorizationDomain for interacting with Google Documents. This will not normally need to be used, as it's used internally
by the #GDataDocumentsService methods. However, if using the plain #GDataService methods to implement custom queries or requests which libgdata
does not support natively, then this domain may be needed to authorize the requests.

The domain never changes, and is interned so that pointer comparison can be used to differentiate it from other authorization domains.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="386">the service's authorization domain</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
      </function>
      <function name="get_spreadsheet_authorization_domain"
                c:identifier="gdata_documents_service_get_spreadsheet_authorization_domain"
                version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="396">The #GDataAuthorizationDomain for interacting with spreadsheet data. This will not normally need to be used, as it's automatically used internally
by the #GDataDocumentsService methods. However, if using the plain #GDataService methods to implement custom queries or requests which libgdata
does not support natively, then this domain may be needed to authorize the requests which pertain to the Google Spreadsheets Data API, such as
requests to download or upload spreadsheet documents.

The domain never changes, and is interned so that pointer comparison can be used to differentiate it from other authorization domains.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="406">the service's authorization domain</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
      </function>
      <function name="get_upload_uri"
                c:identifier="gdata_documents_service_get_upload_uri"
                version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1705">Gets the upload URI for documents for the service.

If @folder is %NULL, the URI will be the one to upload documents to the "root" folder.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="169"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1713">the URI permitting the upload of documents to @folder, or %NULL; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="folder"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1707">the #GDataDocumentsFolder into which to upload the document, or %NULL</doc>
            <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_entry_to_folder"
              c:identifier="gdata_documents_service_add_entry_to_folder"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1258">Add the given @entry to the specified @folder, and return an updated #GDataDocumentsEntry for @entry. If the @entry is already in another folder,
a copy will be added to the new folder. The copy and original will have different IDs. Note that @entry can't be a #GDataDocumentsFolder that
already exists on the server. It can be a new #GDataDocumentsFolder, or a #GDataDocumentsDocument that is either new or already present on the
server.

Errors from #GDataServiceError can be returned for exceptional conditions, as determined by the server.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="153"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1273">an updated #GDataDocumentsEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1260">an authenticated #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1261">the #GDataDocumentsEntry to copy</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </parameter>
          <parameter name="folder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1262">the #GDataDocumentsFolder to copy @entry into</doc>
            <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1263">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_entry_to_folder_async"
              c:identifier="gdata_documents_service_add_entry_to_folder_async"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1402">Add the given @entry to the specified @folder. @self, @entry and @folder are all reffed when this function is called, so can safely be unreffed
after this function returns.

For more details, see gdata_documents_service_add_entry_to_folder(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_documents_service_add_entry_to_folder_finish() to get the results
of the operation.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1404">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1405">the #GDataDocumentsEntry to add to @folder</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </parameter>
          <parameter name="folder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1406">the #GDataDocumentsFolder to add @entry to</doc>
            <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1407">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1408">a #GAsyncReadyCallback to call when the operation is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1409">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_entry_to_folder_finish"
              c:identifier="gdata_documents_service_add_entry_to_folder_finish"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1443">Finish an asynchronous operation to add a #GDataDocumentsEntry to a folder started with gdata_documents_service_add_entry_to_folder_async().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="158"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1451">an updated #GDataDocumentsEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1445">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1446">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_document"
              c:identifier="gdata_documents_service_copy_document"
              version="0.13.1"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1119">Copy the given @document, producing a duplicate document in the same folder and returning its #GDataDocumentsDocument.

Errors from #GDataServiceError can be returned for exceptional conditions, as determined by the server.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="146"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1130">the duplicate #GDataDocumentsDocument, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1121">an authenticated #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1122">the #GDataDocumentsDocument to copy</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1123">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_document_async"
              c:identifier="gdata_documents_service_copy_document_async"
              version="0.13.1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1200">Copy the given @document, producing a duplicate document in the same folder and returning its #GDataDocumentsDocument. @self and @document are
both reffed when this function is called, so can safely be unreffed after this function returns.

For more details, see gdata_documents_service_copy_document(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_documents_service_copy_document_finish() to get the results
of the operation.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1202">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1203">the #GDataDocumentsDocument to copy</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1204">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1205">a #GAsyncReadyCallback to call when the operation is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1206">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_document_finish"
              c:identifier="gdata_documents_service_copy_document_finish"
              version="0.13.1"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1234">Finish an asynchronous operation to copy a #GDataDocumentsDocument started with gdata_documents_service_copy_document_async().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="150"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1242">the duplicate #GDataDocumentsDocument, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1236">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1237">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="finish_upload"
              c:identifier="gdata_documents_service_finish_upload"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1070">Finish off a document upload or update operation started by gdata_documents_service_upload_document() or gdata_documents_service_update_document(),
parsing the result and returning the new or updated #GDataDocumentsDocument.

If an error occurred during the upload or update operation, it will have been returned during the operation (e.g. by g_output_stream_splice() or one
of the other stream methods). In such a case, %NULL will be returned but @error will remain unset. @error is only set in the case that the server
indicates that the operation was successful, but an error is encountered in parsing the result sent by the server.

In the case that no #GDataDocumentsDocument was passed (to gdata_documents_service_upload_document() or gdata_documents_service_update_document())
when starting the operation, %GDATA_DOCUMENTS_SERVICE_ERROR_INVALID_CONTENT_TYPE will be thrown in @error if the content type of the uploaded data
could not be mapped to a document type with which to interpret the response from the server.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="143"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1087">the new or updated #GDataDocumentsDocument, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1072">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="upload_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1073">the #GDataUploadStream from the operation</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="gdata_documents_service_get_metadata"
              version="0.17.9"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="416">Gets a #GDataDocumentsMetadata object containing metadata about the documents
service itself, like how large the user quota is.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="425">the service's metadata object; unref with g_object_unref()</doc>
          <type name="DocumentsMetadata" c:type="GDataDocumentsMetadata*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="418">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="419">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_metadata_async"
              c:identifier="gdata_documents_service_get_metadata_async"
              version="0.17.9">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="484">Gets a #GDataDocumentsMetadata object containing metadata about the documents
service itself, like how large the user quota is.

For more details, see gdata_documents_service_get_metadata(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_documents_service_get_metadata_finish() to get the results
of the operation.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="486">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="487">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="488">a #GAsyncReadyCallback to call when the operation is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="489">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_metadata_finish"
              c:identifier="gdata_documents_service_get_metadata_finish"
              version="0.17.9"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="515">Finish an asynchronous operation to get a #GDataDocumentsMetadata started with gdata_documents_service_get_metadata_async().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="523">the service's metadata object; unref with g_object_unref()</doc>
          <type name="DocumentsMetadata" c:type="GDataDocumentsMetadata*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="517">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="518">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_documents"
              c:identifier="gdata_documents_service_query_documents"
              version="0.4.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="547">Queries the service to return a list of documents matching the given @query. Note that @query has to be a #GDataDocumentsQuery, rather than just
a #GDataQuery, as it uses the folder ID specified in #GDataDocumentsQuery:folder-id.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="561">a #GDataDocumentsFeed of query results; unref with g_object_unref()</doc>
          <type name="DocumentsFeed" c:type="GDataDocumentsFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="549">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="550">a #GDataDocumentsQuery with the query parameters, or %NULL</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="551">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="552">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="553">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_documents_async"
              c:identifier="gdata_documents_service_query_documents_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="594">Queries the service to return a list of documents matching the given @query. @self and
@query are both reffed when this function is called, so can safely be unreffed after this function returns.

For more details, see gdata_documents_service_query_documents(), which is the synchronous version of this function,
and gdata_service_query_async(), which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="596">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="597">a #GDataDocumentsQuery with the query parameters, or %NULL</doc>
            <type name="DocumentsQuery" c:type="GDataDocumentsQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="598">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="599">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="600">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="601">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="603">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="604">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_drives"
              c:identifier="gdata_documents_service_query_drives"
              version="0.18.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="647">Queries the service to return a list of shared drives matching the given @query.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="116"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="660">a #GDataDocumentsFeed of query results; unref with g_object_unref()</doc>
          <type name="DocumentsFeed" c:type="GDataDocumentsFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="649">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="650">a #GDataDocumentsDriveQuery with the query parameters, or %NULL</doc>
            <type name="DocumentsDriveQuery"
                  c:type="GDataDocumentsDriveQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="651">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="652">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="653">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_drives_async"
              c:identifier="gdata_documents_service_query_drives_async"
              version="0.18.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="691">Queries the service to return a list of shared drives matching the given @query. @self and
@query are both reffed when this function is called, so can safely be unreffed after this function returns.

For more details, see gdata_documents_service_query_drives(), which is the synchronous version of this function,
and gdata_service_query_async(), which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="693">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="694">a #GDataDocumentsDriveQuery with the query parameters, or %NULL</doc>
            <type name="DocumentsDriveQuery"
                  c:type="GDataDocumentsDriveQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="695">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="696">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="697">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="698">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="700">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="701">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_entry_from_folder"
              c:identifier="gdata_documents_service_remove_entry_from_folder"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1467">Remove the given @entry from @folder, and return an updated #GDataDocumentsEntry for @entry. @entry will remain a member of any other folders it's
currently in. Note that @entry can be either a #GDataDocumentsDocument or a #GDataDocumentsFolder.

Errors from #GDataServiceError can be returned for exceptional conditions, as determined by the server.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="161"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1480">an updated #GDataDocumentsEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1469">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1470">the #GDataDocumentsEntry to remove</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </parameter>
          <parameter name="folder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1471">the #GDataDocumentsFolder from which we should remove @entry</doc>
            <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1472">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_entry_from_folder_async"
              c:identifier="gdata_documents_service_remove_entry_from_folder_async"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1624">Remove the given @entry from the specified @folder. @self, @entry and @folder are all reffed when this function is called, so can safely be unreffed
after this function returns.

For more details, see gdata_documents_service_remove_entry_from_folder(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_documents_service_remove_entry_from_folder_finish() to get the
results of the operation.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1626">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1627">the #GDataDocumentsEntry to remove from @folder</doc>
            <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
          </parameter>
          <parameter name="folder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1628">the #GDataDocumentsFolder to remove @entry from</doc>
            <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1629">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1630">a #GAsyncReadyCallback to call when the operation is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1631">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_entry_from_folder_finish"
              c:identifier="gdata_documents_service_remove_entry_from_folder_finish"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1665">Finish an asynchronous operation to remove a #GDataDocumentsEntry from a folder started with
gdata_documents_service_remove_entry_from_folder_async().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="166"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1674">an updated #GDataDocumentsEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsEntry" c:type="GDataDocumentsEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1667">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1668">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_document"
              c:identifier="gdata_documents_service_update_document"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="951">Update the document using the properties from @document and the document data written to the resulting #GDataUploadStream. If the document data does
not need to be changed, just the metadata, use gdata_service_update_entry() instead.

This performs a non-resumable upload, unlike gdata_documents_service_update_document(). This means that errors during transmission will cause the
upload to fail, and the entire document will have to be re-uploaded. It is recommended that gdata_documents_service_update_document_resumable()
be used instead.

The stream returned by this function should be written to using the standard #GOutputStream methods, asynchronously or synchronously. Once the stream
is closed (using g_output_stream_close()), gdata_documents_service_finish_upload() should be called on it to parse and return the updated
#GDataDocumentsDocument for the document. This must be done, as @document isn't updated in-place.

In order to cancel the update, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GOutputStream operations on the #GDataUploadStream will not cancel the entire update; merely the write or close operation in question. See the
#GDataUploadStream:cancellable for more details.

Any upload errors will be thrown by the stream methods, and may come from the #GDataServiceError domain.

For more information, see gdata_service_update_entry().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="136"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="979">a #GDataUploadStream to write the document data to; unref with g_object_unref()</doc>
          <type name="UploadStream" c:type="GDataUploadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="953">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="954">the #GDataDocumentsDocument to update</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="955">the filename to give to the uploaded document</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="956">the content type of the uploaded data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="957">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_document_resumable"
              c:identifier="gdata_documents_service_update_document_resumable"
              version="0.13.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="1013">Update the document using the properties from @document and the document data written to the resulting #GDataUploadStream. If the document data does
not need to be changed, just the metadata, use gdata_service_update_entry() instead.

Unlike gdata_documents_service_update_document(), this method performs a
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/resumable_upload.html"&gt;resumable upload&lt;/ulink&gt; which allows for correction of
transmission errors without re-uploading the entire file. Use of this method is preferred over gdata_documents_service_update_document().

The stream returned by this function should be written to using the standard #GOutputStream methods, asynchronously or synchronously. Once the stream
is closed (using g_output_stream_close()), gdata_documents_service_finish_upload() should be called on it to parse and return the updated
#GDataDocumentsDocument for the document. This must be done, as @document isn't updated in-place.

In order to cancel the update, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GOutputStream operations on the #GDataUploadStream will not cancel the entire update; merely the write or close operation in question. See the
#GDataUploadStream:cancellable for more details.

Any upload errors will be thrown by the stream methods, and may come from the #GDataServiceError domain.

For more information, see gdata_service_update_entry().</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="139"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="1042">a #GDataUploadStream to write the document data to; unref with g_object_unref()</doc>
          <type name="UploadStream" c:type="GDataUploadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1015">a #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1016">the #GDataDocumentsDocument to update</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1017">the filename to give to the uploaded document</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1018">the content type of the uploaded data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1019">the size (in bytes) of the file being uploaded</doc>
            <type name="gint64" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="1020">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_document"
              c:identifier="gdata_documents_service_upload_document"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="806">Uploads a document to Google Documents, using the properties from @document and the document data written to the resulting #GDataUploadStream. If
the document data does not need to be provided at the moment, just the metadata, use gdata_service_insert_entry() instead (e.g. in the case of
creating a new, empty file to be edited at a later date).

This performs a non-resumable upload, unlike gdata_documents_service_upload_document(). This means that errors during transmission will cause the
upload to fail, and the entire document will have to be re-uploaded. It is recommended that gdata_documents_service_upload_document_resumable()
be used instead.

If @document is %NULL, only the document data will be uploaded. The new document entry will be named using @slug, and will have default metadata.

The stream returned by this function should be written to using the standard #GOutputStream methods, asynchronously or synchronously. Once the stream
is closed (using g_output_stream_close()), gdata_documents_service_finish_upload() should be called on it to parse and return the updated
#GDataDocumentsDocument for the document. This must be done, as @document isn't updated in-place.

In order to cancel the upload, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GOutputStream operations on the #GDataUploadStream will not cancel the entire upload; merely the write or close operation in question. See the
#GDataUploadStream:cancellable for more details.

Any upload errors will be thrown by the stream methods, and may come from the #GDataServiceError domain.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="128"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="836">a #GDataUploadStream to write the document data to, or %NULL; unref with g_object_unref()</doc>
          <type name="UploadStream" c:type="GDataUploadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="808">an authenticated #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="document"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="809">the #GDataDocumentsDocument to insert, or %NULL</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="810">the filename to give to the uploaded document</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="811">the content type of the uploaded data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="folder"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="812">the folder to which the document should be uploaded, or %NULL</doc>
            <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="813">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_document_resumable"
              c:identifier="gdata_documents_service_upload_document_resumable"
              version="0.13.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.c"
             line="869">Uploads a document to Google Documents, using the properties from @document and the document data written to the resulting #GDataUploadStream. If
the document data does not need to be provided at the moment, just the metadata, use gdata_service_insert_entry() instead (e.g. in the case of
creating a new, empty file to be edited at a later date).

Unlike gdata_documents_service_upload_document(), this method performs a
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/resumable_upload.html"&gt;resumable upload&lt;/ulink&gt; which allows for correction of
transmission errors without re-uploading the entire file. Use of this method is preferred over gdata_documents_service_upload_document().

If @document is %NULL, only the document data will be uploaded. The new document entry will be named using @slug, and will have default metadata.

If non-%NULL, the @query specifies parameters for the upload, such as a #GDataDocumentsFolder to upload the document into; and whether to treat
the document as an opaque file, or convert it to a standard format. If @query is %NULL, the document will be uploaded into the root folder, and
automatically converted to a standard format. No OCR or automatic language translation will be performed by default.

If @query is non-%NULL and #GDataDocumentsUploadQuery:convert is %FALSE, @document must be an instance of #GDataDocumentsDocument. Otherwise,
@document must be a subclass of it, such as #GDataDocumentsPresentation.

The stream returned by this function should be written to using the standard #GOutputStream methods, asynchronously or synchronously. Once the stream
is closed (using g_output_stream_close()), gdata_documents_service_finish_upload() should be called on it to parse and return the updated
#GDataDocumentsDocument for the document. This must be done, as @document isn't updated in-place.

In order to cancel the upload, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GOutputStream operations on the #GDataUploadStream will not cancel the entire upload; merely the write or close operation in question. See the
#GDataUploadStream:cancellable for more details.

Any upload errors will be thrown by the stream methods, and may come from the #GDataServiceError domain.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-service.h"
                         line="131"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-service.c"
               line="907">a #GDataUploadStream to write the document data to, or %NULL; unref with g_object_unref()</doc>
          <type name="UploadStream" c:type="GDataUploadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="871">an authenticated #GDataDocumentsService</doc>
            <type name="DocumentsService" c:type="GDataDocumentsService*"/>
          </instance-parameter>
          <parameter name="document"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="872">the #GDataDocumentsDocument to insert, or %NULL</doc>
            <type name="DocumentsDocument" c:type="GDataDocumentsDocument*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="873">the filename to give to the uploaded document</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="874">the content type of the uploaded data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="875">the size (in bytes) of the file being uploaded</doc>
            <type name="gint64" c:type="goffset"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="876">a query specifying parameters for the upload, or %NULL</doc>
            <type name="DocumentsUploadQuery"
                  c:type="GDataDocumentsUploadQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-service.c"
                 line="877">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Service" c:type="GDataService"/>
      </field>
      <field name="priv">
        <type name="DocumentsServicePrivate"
              c:type="GDataDocumentsServicePrivate*"/>
      </field>
    </class>
    <record name="DocumentsServiceClass"
            c:type="GDataDocumentsServiceClass"
            glib:is-gtype-struct-for="DocumentsService"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-service.h"
           line="70">All the fields in the #GDataDocumentsServiceClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="89"/>
      <field name="parent" readable="0" private="1">
        <type name="ServiceClass" c:type="GDataServiceClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-service.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-service.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/services/documents/gdata-documents-service.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/services/documents/gdata-documents-service.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/services/documents/gdata-documents-service.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/services/documents/gdata-documents-service.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="DocumentsServiceError"
                 version="0.4.0"
                 glib:type-name="GDataDocumentsServiceError"
                 glib:get-type="gdata_documents_service_error_get_type"
                 c:type="GDataDocumentsServiceError"
                 glib:error-domain="gdata-documents-service-error-quark">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-service.h"
           line="35">Error codes for #GDataDocumentsService operations.</doc>
      <member name="type"
              value="0"
              c:identifier="GDATA_DOCUMENTS_SERVICE_ERROR_INVALID_CONTENT_TYPE"
              glib:nick="type"
              glib:name="GDATA_DOCUMENTS_SERVICE_ERROR_INVALID_CONTENT_TYPE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-service.h"
             line="37">the content type of a provided file was invalid</doc>
      </member>
      <function name="quark"
                c:identifier="gdata_documents_service_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="DocumentsServicePrivate"
            c:type="GDataDocumentsServicePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="56"/>
    </record>
    <class name="DocumentsSpreadsheet"
           c:symbol-prefix="documents_spreadsheet"
           c:type="GDataDocumentsSpreadsheet"
           version="0.4.0"
           parent="DocumentsDocument"
           glib:type-name="GDataDocumentsSpreadsheet"
           glib:get-type="gdata_documents_spreadsheet_get_type"
           glib:type-struct="DocumentsSpreadsheetClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="120">All the fields in the #GDataDocumentsSpreadsheet structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="147"/>
      <implements name="AccessHandler"/>
      <constructor name="new"
                   c:identifier="gdata_documents_spreadsheet_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-spreadsheet.c"
             line="130">Creates a new #GDataDocumentsSpreadsheet with the given entry ID (#GDataEntry:id).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                         line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-spreadsheet.c"
               line="136">a new #GDataDocumentsSpreadsheet, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsSpreadsheet"
                c:type="GDataDocumentsSpreadsheet*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-spreadsheet.c"
                 line="132">the entry's ID (not the document ID of the spreadsheet), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_download_uri"
              c:identifier="gdata_documents_spreadsheet_get_download_uri"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-spreadsheet.c"
             line="146">Builds and returns the download URI for the given #GDataDocumentsSpreadsheet in the desired format. Note that directly downloading
the document using this URI isn't possible, as authentication is required. You should instead use gdata_download_stream_new() with
the URI, and use the resulting #GInputStream.

When requesting a &lt;code class="literal"&gt;"csv"&lt;/code&gt;, &lt;code class="literal"&gt;"tsv"&lt;/code&gt;, &lt;code class="literal"&gt;"pdf"&lt;/code&gt; or
&lt;code class="literal"&gt;"html"&lt;/code&gt; file you may specify an additional parameter called @gid which indicates which grid, or sheet, you wish to get
(the index is &lt;code class="literal"&gt;0&lt;/code&gt;-based, so GID &lt;code class="literal"&gt;1&lt;/code&gt; actually refers to the second sheet on a given
spreadsheet).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                         line="154"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-spreadsheet.c"
               line="161">the download URI; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-spreadsheet.c"
                 line="148">a #GDataDocumentsSpreadsheet</doc>
            <type name="DocumentsSpreadsheet"
                  c:type="GDataDocumentsSpreadsheet*"/>
          </instance-parameter>
          <parameter name="export_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-spreadsheet.c"
                 line="149">the format in which the spreadsheet should be exported when downloaded</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="gid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-spreadsheet.c"
                 line="150">the &lt;code class="literal"&gt;0&lt;/code&gt;-based sheet ID to download, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DocumentsDocument" c:type="GDataDocumentsDocument"/>
      </field>
      <field name="priv">
        <type name="DocumentsSpreadsheetPrivate"
              c:type="GDataDocumentsSpreadsheetPrivate*"/>
      </field>
    </class>
    <record name="DocumentsSpreadsheetClass"
            c:type="GDataDocumentsSpreadsheetClass"
            glib:is-gtype-struct-for="DocumentsSpreadsheet"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.h"
           line="132">All the fields in the #GDataDocumentsSpreadsheetClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="147"/>
      <field name="parent" readable="0" private="1">
        <type name="DocumentsDocumentClass"
              c:type="GDataDocumentsDocumentClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                           line="145"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                           line="146"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsSpreadsheetPrivate"
            c:type="GDataDocumentsSpreadsheetPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="118"/>
    </record>
    <class name="DocumentsText"
           c:symbol-prefix="documents_text"
           c:type="GDataDocumentsText"
           version="0.4.0"
           parent="DocumentsDocument"
           glib:type-name="GDataDocumentsText"
           glib:get-type="gdata_documents_text_get_type"
           glib:type-struct="DocumentsTextClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="156">All the fields in the #GDataDocumentsText structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="183"/>
      <implements name="AccessHandler"/>
      <constructor name="new"
                   c:identifier="gdata_documents_text_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-text.c"
             line="73">Creates a new #GDataDocumentsText with the given entry ID (#GDataEntry:id).</doc>
        <source-position filename="gdata/services/documents/gdata-documents-text.h"
                         line="188"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-text.c"
               line="79">a new #GDataDocumentsText, or %NULL; unref with g_object_unref()</doc>
          <type name="DocumentsText" c:type="GDataDocumentsText*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-text.c"
                 line="75">the entry's ID (not the document ID of the text document), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DocumentsDocument" c:type="GDataDocumentsDocument"/>
      </field>
      <field name="priv">
        <type name="DocumentsTextPrivate" c:type="GDataDocumentsTextPrivate*"/>
      </field>
    </class>
    <record name="DocumentsTextClass"
            c:type="GDataDocumentsTextClass"
            glib:is-gtype-struct-for="DocumentsText"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.h"
           line="168">All the fields in the #GDataDocumentsTextClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="183"/>
      <field name="parent" readable="0" private="1">
        <type name="DocumentsDocumentClass"
              c:type="GDataDocumentsDocumentClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-text.h"
                           line="181"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-text.h"
                           line="182"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsTextPrivate"
            c:type="GDataDocumentsTextPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="154"/>
    </record>
    <class name="DocumentsUploadQuery"
           c:symbol-prefix="documents_upload_query"
           c:type="GDataDocumentsUploadQuery"
           version="0.13.0"
           parent="GObject.Object"
           glib:type-name="GDataDocumentsUploadQuery"
           glib:get-type="gdata_documents_upload_query_get_type"
           glib:type-struct="DocumentsUploadQueryClass">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-upload-query.h"
           line="40">All the fields in the #GDataDocumentsUploadQuery structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="67"/>
      <constructor name="new"
                   c:identifier="gdata_documents_upload_query_new"
                   version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="263">Constructs a new empty #GDataDocumentsUploadQuery.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-upload-query.c"
               line="268">a new #GDataDocumentsUploadQuery; unref with g_object_unref()</doc>
          <type name="DocumentsUploadQuery"
                c:type="GDataDocumentsUploadQuery*"/>
        </return-value>
      </constructor>
      <method name="build_uri"
              c:identifier="gdata_documents_upload_query_build_uri"
              version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="278">Builds an upload URI suitable for passing to gdata_upload_stream_new_resumable() in order to upload a document to Google Documents as described in
the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#uploading_a_new_document_or_file_with_both_metadata_and_content"&gt;
online documentation&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-upload-query.c"
               line="287">a complete upload URI; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-upload-query.c"
                 line="280">a #GDataDocumentsUploadQuery</doc>
            <type name="DocumentsUploadQuery"
                  c:type="GDataDocumentsUploadQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_convert"
              c:identifier="gdata_documents_upload_query_get_convert"
              glib:get-property="convert"
              version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="383">Gets #GDataDocumentsUploadQuery:convert.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-upload-query.c"
               line="389">%TRUE to convert documents to common formats, %FALSE to upload them unmodified</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-upload-query.c"
                 line="385">a #GDataDocumentsUploadQuery</doc>
            <type name="DocumentsUploadQuery"
                  c:type="GDataDocumentsUploadQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folder"
              c:identifier="gdata_documents_upload_query_get_folder"
              glib:get-property="folder"
              version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="336">Gets #GDataDocumentsUploadQuery:folder.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                         line="76"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/documents/gdata-documents-upload-query.c"
               line="342">the folder to upload into, or %NULL</doc>
          <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-upload-query.c"
                 line="338">a #GDataDocumentsUploadQuery</doc>
            <type name="DocumentsUploadQuery"
                  c:type="GDataDocumentsUploadQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_convert"
              c:identifier="gdata_documents_upload_query_set_convert"
              glib:set-property="convert"
              version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="401">Sets #GDataDocumentsUploadQuery:convert to @convert.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-upload-query.c"
                 line="403">a #GDataDocumentsUploadQuery</doc>
            <type name="DocumentsUploadQuery"
                  c:type="GDataDocumentsUploadQuery*"/>
          </instance-parameter>
          <parameter name="convert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-upload-query.c"
                 line="404">%TRUE to convert documents to common formats, %FALSE to upload them unmodified</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_folder"
              c:identifier="gdata_documents_upload_query_set_folder"
              glib:set-property="folder"
              version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="354">Sets #GDataDocumentsUploadQuery:folder to @folder.</doc>
        <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-upload-query.c"
                 line="356">a #GDataDocumentsUploadQuery</doc>
            <type name="DocumentsUploadQuery"
                  c:type="GDataDocumentsUploadQuery*"/>
          </instance-parameter>
          <parameter name="folder"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/documents/gdata-documents-upload-query.c"
                 line="357">a new folder to upload into, or %NULL</doc>
            <type name="DocumentsFolder" c:type="GDataDocumentsFolder*"/>
          </parameter>
        </parameters>
      </method>
      <property name="convert"
                version="0.13.0"
                writable="1"
                transfer-ownership="none"
                setter="set_convert"
                getter="get_convert"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="184">%TRUE to automatically convert the uploaded document into a standard format (such as a text document, spreadsheet, presentation, etc.).
%FALSE to upload the document without converting it; this allows for arbitrary files to be uploaded to Google Documents.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#creating_or_uploading_files"&gt;online documentation&lt;/ulink&gt;.

Note that uploading with this property set to %FALSE will only have an effect when using gdata_documents_service_update_document_resumable()
and not gdata_documents_service_update_document(). Additionally, the #GDataDocumentsDocument passed to
gdata_documents_service_update_document_resumable() must be a #GDataDocumentsDocument if this property is %FALSE, and a subclass of it
otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="folder"
                version="0.13.0"
                writable="1"
                transfer-ownership="none"
                setter="set_folder"
                getter="get_folder">
        <doc xml:space="preserve"
             filename="gdata/services/documents/gdata-documents-upload-query.c"
             line="171">Folder to upload the document into. If this is %NULL, the document will be uploaded into the root folder.</doc>
        <type name="DocumentsFolder"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DocumentsUploadQueryPrivate"
              c:type="GDataDocumentsUploadQueryPrivate*"/>
      </field>
    </class>
    <record name="DocumentsUploadQueryClass"
            c:type="GDataDocumentsUploadQueryClass"
            glib:is-gtype-struct-for="DocumentsUploadQuery"
            version="0.13.0">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-upload-query.h"
           line="52">All the fields in the #GDataDocumentsUploadQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DocumentsUploadQueryPrivate"
            c:type="GDataDocumentsUploadQueryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="38"/>
    </record>
    <class name="DownloadStream"
           c:symbol-prefix="download_stream"
           c:type="GDataDownloadStream"
           version="0.5.0"
           parent="Gio.InputStream"
           glib:type-name="GDataDownloadStream"
           glib:get-type="gdata_download_stream_get_type"
           glib:type-struct="DownloadStreamClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-download-stream.h"
           line="40">All the fields in the #GDataDownloadStream structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-download-stream.h" line="71"/>
      <implements name="Gio.Seekable"/>
      <constructor name="new"
                   c:identifier="gdata_download_stream_new"
                   version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="940">Creates a new #GDataDownloadStream, allowing a file to be downloaded from a GData service using standard #GInputStream API.

As well as the standard GIO errors, calls to the #GInputStream API on a #GDataDownloadStream can also return any relevant specific error from
#GDataServiceError, or %GDATA_SERVICE_ERROR_PROTOCOL_ERROR in the general case.

If a #GCancellable is provided in @cancellable, the download operation may be cancelled at any time from another thread using g_cancellable_cancel().
In this case, any ongoing network activity will be stopped, and any pending or future calls to #GInputStream API on the #GDataDownloadStream will
return %G_IO_ERROR_CANCELLED. Note that the #GCancellable objects which can be passed to individual #GInputStream operations will not cancel the
download operation proper if cancelled — they will merely cancel that API call. The only way to cancel the download operation completely is using
this @cancellable.</doc>
        <source-position filename="gdata/gdata-download-stream.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-download-stream.c"
               line="958">a new #GInputStream, or %NULL; unref with g_object_unref()</doc>
          <type name="Gio.InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="942">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="943">the #GDataAuthorizationDomain to authorize the download, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="download_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="944">the URI to download; this must be HTTPS</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="945">a #GCancellable for the entire download stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_authorization_domain"
              c:identifier="gdata_download_stream_get_authorization_domain"
              glib:get-property="authorization-domain"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="995">Gets the authorization domain used to authorize the download, as passed to gdata_download_stream_new(). It may be %NULL if authorization is not
needed for the download.</doc>
        <source-position filename="gdata/gdata-download-stream.h" line="79"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-download-stream.c"
               line="1002">the #GDataAuthorizationDomain used to authorize the download, or %NULL</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="997">a #GDataDownloadStream</doc>
            <type name="DownloadStream" c:type="GDataDownloadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cancellable"
              c:identifier="gdata_download_stream_get_cancellable"
              glib:get-property="cancellable"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="1083">Gets the #GCancellable for the entire download operation, #GDataDownloadStream:cancellable.</doc>
        <source-position filename="gdata/gdata-download-stream.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-download-stream.c"
               line="1089">the #GCancellable for the entire download operation</doc>
          <type name="Gio.Cancellable" c:type="GCancellable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="1085">a #GDataDownloadStream</doc>
            <type name="DownloadStream" c:type="GDataDownloadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_length"
              c:identifier="gdata_download_stream_get_content_length"
              glib:get-property="content-length"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="1056">Gets the length (in bytes) of the file being downloaded. If the &lt;literal&gt;Content-Length&lt;/literal&gt; header has not yet
been received from the server, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gdata-download-stream.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-download-stream.c"
               line="1063">the content length of the file being downloaded, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="1058">a #GDataDownloadStream</doc>
            <type name="DownloadStream" c:type="GDataDownloadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_type"
              c:identifier="gdata_download_stream_get_content_type"
              glib:get-property="content-type"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="1030">Gets the content type of the file being downloaded. If the &lt;literal&gt;Content-Type&lt;/literal&gt; header has not yet
been received, %NULL will be returned.</doc>
        <source-position filename="gdata/gdata-download-stream.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-download-stream.c"
               line="1037">the content type of the file being downloaded, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="1032">a #GDataDownloadStream</doc>
            <type name="DownloadStream" c:type="GDataDownloadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_download_uri"
              c:identifier="gdata_download_stream_get_download_uri"
              glib:get-property="download-uri"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="1013">Gets the URI of the file being downloaded, as passed to gdata_download_stream_new().</doc>
        <source-position filename="gdata/gdata-download-stream.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-download-stream.c"
               line="1019">the URI of the file being downloaded</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="1015">a #GDataDownloadStream</doc>
            <type name="DownloadStream" c:type="GDataDownloadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_service"
              c:identifier="gdata_download_stream_get_service"
              glib:get-property="service"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="978">Gets the service used to authorize the download, as passed to gdata_download_stream_new().</doc>
        <source-position filename="gdata/gdata-download-stream.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-download-stream.c"
               line="984">the #GDataService used to authorize the download</doc>
          <type name="Service" c:type="GDataService*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-download-stream.c"
                 line="980">a #GDataDownloadStream</doc>
            <type name="DownloadStream" c:type="GDataDownloadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="authorization-domain"
                version="0.9.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_authorization_domain">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="218">The authorization domain for the download, against which the #GDataService:authorizer for the #GDataDownloadStream:service should be
authorized. This may be %NULL if authorization is not needed for the download.</doc>
        <type name="AuthorizationDomain"/>
      </property>
      <property name="cancellable"
                version="0.8.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_cancellable">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="281">An optional cancellable used to cancel the entire download operation. If a #GCancellable instance isn't provided for this property at
construction time (i.e. to gdata_download_stream_new()), one will be created internally and can be retrieved using
gdata_download_stream_get_cancellable() and used to cancel the download operation with g_cancellable_cancel() just as if it was passed to
gdata_download_stream_new().

If the download operation is cancelled using this #GCancellable, any ongoing network activity will be stopped, and any pending or future
calls to #GInputStream API on the #GDataDownloadStream will return %G_IO_ERROR_CANCELLED. Note that the #GCancellable objects which can be
passed to individual #GInputStream operations will not cancel the download operation proper if cancelled — they will merely cancel that API
call. The only way to cancel the download operation completely is using #GDataDownloadStream:cancellable.</doc>
        <type name="Gio.Cancellable"/>
      </property>
      <property name="content-length"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_content_length"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="263">The length (in bytes) of the file being downloaded. This will initially be &lt;code class="literal"&gt;-1&lt;/code&gt;, and will be populated as soon as
the appropriate header is received from the server. Its value will never change after this.

Note that change notifications for this property (#GObject::notify emissions) may be emitted in threads other than the one which created
the #GDataDownloadStream. It is the client's responsibility to ensure that any notification signal handlers are either multi-thread safe
or marshal the notification to the thread which owns the #GDataDownloadStream as appropriate.</doc>
        <type name="glong" c:type="glong"/>
      </property>
      <property name="content-type"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_content_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="245">The content type of the file being downloaded. This will initially be %NULL, and will be populated as soon as the appropriate header is
received from the server. Its value will never change after this.

Note that change notifications for this property (#GObject::notify emissions) may be emitted in threads other than the one which created
the #GDataDownloadStream. It is the client's responsibility to ensure that any notification signal handlers are either multi-thread safe
or marshal the notification to the thread which owns the #GDataDownloadStream as appropriate.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="download-uri"
                version="0.5.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_download_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="232">The URI of the file to download. This must be HTTPS.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="service"
                version="0.5.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_service">
        <doc xml:space="preserve"
             filename="gdata/gdata-download-stream.c"
             line="205">The service which is used to authorize the download, and to which the download relates.</doc>
        <type name="Service"/>
      </property>
      <field name="parent">
        <type name="Gio.InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv">
        <type name="DownloadStreamPrivate"
              c:type="GDataDownloadStreamPrivate*"/>
      </field>
    </class>
    <record name="DownloadStreamClass"
            c:type="GDataDownloadStreamClass"
            glib:is-gtype-struct-for="DownloadStream"
            version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-download-stream.h"
           line="52">All the fields in the #GDataDownloadStreamClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-download-stream.h" line="71"/>
      <field name="parent" readable="0" private="1">
        <type name="Gio.InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-download-stream.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-download-stream.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-download-stream.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-download-stream.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-download-stream.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-download-stream.h" line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DownloadStreamPrivate"
            c:type="GDataDownloadStreamPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-download-stream.h" line="38"/>
    </record>
    <function-macro name="ENTRY" c:identifier="GDATA_ENTRY" introspectable="0">
      <source-position filename="gdata/gdata-entry.h" line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_CLASS"
                    c:identifier="GDATA_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-entry.h" line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_GET_CLASS"
                    c:identifier="GDATA_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-entry.h" line="38"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Entry"
           c:symbol-prefix="entry"
           c:type="GDataEntry"
           parent="Parsable"
           glib:type-name="GDataEntry"
           glib:get-type="gdata_entry_get_type"
           glib:type-struct="EntryClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-entry.h"
           line="42">All the fields in the #GDataEntry structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-entry.h" line="77"/>
      <constructor name="new" c:identifier="gdata_entry_new">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="681">Creates a new #GDataEntry with the given ID and default properties.</doc>
        <source-position filename="gdata/gdata-entry.h" line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="687">a new #GDataEntry; unref with g_object_unref()</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="683">the entry's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_author" c:identifier="gdata_entry_add_author">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1207">Adds @author to the list of authors in the given #GDataEntry and increments its reference count.

Duplicate authors will not be added to the list.</doc>
        <source-position filename="gdata/gdata-entry.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1209">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="author" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1210">a #GDataAuthor to add</doc>
            <type name="Author" c:type="GDataAuthor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_category" c:identifier="gdata_entry_add_category">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="927">Adds @category to the list of categories in the given #GDataEntry, and increments its reference count.

Duplicate categories will not be added to the list.</doc>
        <source-position filename="gdata/gdata-entry.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="929">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="930">a #GDataCategory to add</doc>
            <type name="Category" c:type="GDataCategory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_link" c:identifier="gdata_entry_add_link">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1089">Adds @_link to the list of links in the given #GDataEntry and increments its reference count.

Duplicate links will not be added to the list.</doc>
        <source-position filename="gdata/gdata-entry.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1091">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="_link" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1092">a #GDataLink to add</doc>
            <type name="Link" c:type="GDataLink*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_authors"
              c:identifier="gdata_entry_get_authors"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="992">Gets a list of the #GDataAuthors for this entry.</doc>
        <source-position filename="gdata/gdata-entry.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="998">a #GList of #GDataAuthors</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Author"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="994">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_categories"
              c:identifier="gdata_entry_get_categories"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="975">Gets a list of the #GDataCategorys containing this entry.</doc>
        <source-position filename="gdata/gdata-entry.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="981">a #GList of #GDataCategorys</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Category"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="977">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content"
              c:identifier="gdata_entry_get_content"
              glib:get-property="content">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1009">Returns the textual content in this entry. If the content in this entry is pointed to by a URI, %NULL will be returned; the content URI will be
returned by gdata_entry_get_content_uri().</doc>
        <source-position filename="gdata/gdata-entry.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="1016">the entry's content, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1011">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_uri"
              c:identifier="gdata_entry_get_content_uri"
              glib:get-property="content-uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1047">Returns a URI pointing to the content of this entry. If the content in this entry is stored directly, %NULL will be returned; the content will be
returned by gdata_entry_get_content().</doc>
        <source-position filename="gdata/gdata-entry.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="1054">a URI pointing to the entry's content, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1049">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_etag"
              c:identifier="gdata_entry_get_etag"
              glib:get-property="etag"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="798">Returns the ETag of the entry; a unique identifier for each version of the entry. For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/reference.html#ResourceVersioning"&gt;online documentation&lt;/ulink&gt;.

The ETag will never be empty; it's either %NULL or a valid ETag.</doc>
        <source-position filename="gdata/gdata-entry.h" line="89"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="807">the entry's ETag, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="800">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gdata_entry_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="768">Returns the URN ID of the entry; a unique and permanent identifier for the object the entry represents.

The ID may be %NULL if and only if the #GDataEntry has been newly created, and hasn't yet been inserted on the server.</doc>
        <source-position filename="gdata/gdata-entry.h" line="88"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="776">the entry's ID, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="770">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_published"
              c:identifier="gdata_entry_get_published"
              glib:get-property="published">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="912">Gets the time the entry was originally published.</doc>
        <source-position filename="gdata/gdata-entry.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="918">the UNIX timestamp for the original publish time of the entry</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="914">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rights"
              c:identifier="gdata_entry_get_rights"
              glib:get-property="rights"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1245">Returns the rights pertaining to the entry, or %NULL if not set.</doc>
        <source-position filename="gdata/gdata-entry.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="1251">the entry's rights information</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1247">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="gdata_entry_get_summary"
              glib:get-property="summary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="732">Returns the summary of the entry.</doc>
        <source-position filename="gdata/gdata-entry.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="738">the entry's summary, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="734">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gdata_entry_get_title"
              glib:get-property="title">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="700">Returns the title of the entry. This will never be %NULL, but may be an empty string.</doc>
        <source-position filename="gdata/gdata-entry.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="706">the entry's title</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="702">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_updated"
              c:identifier="gdata_entry_get_updated"
              glib:get-property="updated">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="847">Gets the time the entry was last updated.</doc>
        <source-position filename="gdata/gdata-entry.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="853">the UNIX timestamp for the last update of the entry</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="849">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_inserted"
              c:identifier="gdata_entry_is_inserted"
              glib:get-property="is-inserted">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1227">Returns whether the entry is marked as having been inserted on (uploaded to) the server already.</doc>
        <source-position filename="gdata/gdata-entry.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="1233">%TRUE if the entry has been inserted already, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1229">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="look_up_link"
              c:identifier="gdata_entry_look_up_link"
              version="0.1.1">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1147">Looks up a link by relation type from the list of links in the entry. If the link has one of the standard Atom relation types,
use one of the defined @rel values, instead of a static string. e.g. %GDATA_LINK_EDIT or %GDATA_LINK_SELF.

In the rare event of requiring a list of links with the same @rel value, use gdata_entry_look_up_links().</doc>
        <source-position filename="gdata/gdata-entry.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="1157">a #GDataLink, or %NULL if one was not found</doc>
          <type name="Link" c:type="GDataLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1149">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="rel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1150">the value of the &lt;structfield&gt;rel&lt;/structfield&gt; attribute of the desired link</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="look_up_links"
              c:identifier="gdata_entry_look_up_links"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1175">Looks up a list of links by relation type from the list of links in the entry. If the links have one of the standard Atom
relation types, use one of the defined @rel values, instead of a static string. e.g. %GDATA_LINK_EDIT or %GDATA_LINK_SELF.

If you will only use the first link found, consider calling gdata_entry_look_up_link() instead.</doc>
        <source-position filename="gdata/gdata-entry.h" line="101"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="1185">a #GList of #GDataLinks, or %NULL if none were found; free the list with
g_list_free()</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Link"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1177">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="rel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1178">the value of the &lt;structfield&gt;rel&lt;/structfield&gt; attribute of the desired links</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_link"
              c:identifier="gdata_entry_remove_link"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1109">Removes @_link from the list of links in the given #GDataEntry and decrements its reference count (since the #GDataEntry held a reference to it
while it was in the list).</doc>
        <source-position filename="gdata/gdata-entry.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-entry.c"
               line="1117">%TRUE if @_link was found in the #GDataEntry and removed, %FALSE if it was not found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1111">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="_link" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1112">a #GDataLink to remove</doc>
            <type name="Link" c:type="GDataLink*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content"
              c:identifier="gdata_entry_set_content"
              glib:set-property="content">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1025">Sets the entry's content to @content. This unsets #GDataEntry:content-uri.</doc>
        <source-position filename="gdata/gdata-entry.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1027">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="content"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1028">the new content for the entry, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_uri"
              c:identifier="gdata_entry_set_content_uri"
              glib:set-property="content-uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1065">Sets the URI pointing to the entry's content to @content. This unsets #GDataEntry:content.</doc>
        <source-position filename="gdata/gdata-entry.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1067">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="content_uri"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1068">the new URI pointing to the content for the entry, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rights"
              c:identifier="gdata_entry_set_rights"
              glib:set-property="rights"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="1262">Sets the rights for this entry.</doc>
        <source-position filename="gdata/gdata-entry.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1264">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="rights"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="1265">the new rights, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary"
              c:identifier="gdata_entry_set_summary"
              glib:set-property="summary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="749">Sets the summary of the entry.</doc>
        <source-position filename="gdata/gdata-entry.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="751">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="summary"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="752">the new entry summary, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gdata_entry_set_title"
              glib:set-property="title">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="715">Sets the title of the entry.</doc>
        <source-position filename="gdata/gdata-entry.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="717">a #GDataEntry</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-entry.c"
                 line="718">the new entry title, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="content"
                writable="1"
                transfer-ownership="none"
                setter="set_content"
                getter="get_content"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="211">The content of the entry. This is mutually exclusive with #GDataEntry:content.

For more information, see the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.content"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="content-uri"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_content_uri"
                getter="get_content_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="225">A URI pointing to the location of the content of the entry. This is mutually exclusive with #GDataEntry:content.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.content"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="etag"
                version="0.2.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_etag"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="166">An identifier for a particular version of the entry. This changes every time the entry on the server changes, and can be used
for conditional retrieval and locking.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/reference.html#ResourceVersioning"&gt;
GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="151">A permanent, universally unique identifier for the entry, in IRI form. This is %NULL for new entries (i.e. ones which haven't yet been
inserted on the server, created with gdata_entry_new()), and a non-empty IRI string for all other entries.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.id"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-inserted"
                transfer-ownership="none"
                getter="is_inserted"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="241">Whether the entry has been inserted on the server. This is %FALSE for entries which have just been created using gdata_entry_new() and
%TRUE for entries returned from the server by queries. It is set to %TRUE when an entry is inserted using gdata_service_insert_entry().</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="published"
                transfer-ownership="none"
                getter="get_published"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="197">The date and time the entry was first published or made available.

For more information, see the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.published"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="rights"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_rights"
                getter="get_rights"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="253">The ownership rights pertaining to the entry.

For more information, see the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.rights"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_summary"
                getter="get_summary"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="135">A short summary, abstract, or excerpt of the entry.

For more information, see the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.summary"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="121">A human-readable title for the entry.

For more information, see the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.title"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="updated"
                transfer-ownership="none"
                getter="get_updated"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.c"
             line="183">The date and time when the entry was most recently updated significantly.

For more information, see the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.updated"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="EntryPrivate" c:type="GDataEntryPrivate*"/>
      </field>
    </class>
    <record name="EntryClass"
            c:type="GDataEntryClass"
            glib:is-gtype-struct-for="Entry">
      <doc xml:space="preserve"
           filename="gdata/gdata-entry.h"
           line="52">The class structure for the #GDataEntry type.</doc>
      <source-position filename="gdata/gdata-entry.h" line="77"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.h"
             line="54">the parent class</doc>
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="get_entry_uri">
        <callback name="get_entry_uri">
          <source-position filename="gdata/gdata-entry.h" line="64"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="id" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="kind_term">
        <doc xml:space="preserve"
             filename="gdata/gdata-entry.h"
             line="56">the term for this entry's kind category (see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#Introduction"&gt;documentation on kinds&lt;/ulink&gt;)</doc>
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-entry.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-entry.h" line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-entry.h" line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-entry.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-entry.h" line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-entry.h" line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved6" introspectable="0">
        <callback name="_g_reserved6">
          <source-position filename="gdata/gdata-entry.h" line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved7" introspectable="0">
        <callback name="_g_reserved7">
          <source-position filename="gdata/gdata-entry.h" line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="EntryPrivate"
            c:type="GDataEntryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-entry.h" line="40"/>
    </record>
    <function-macro name="FEED" c:identifier="GDATA_FEED" introspectable="0">
      <source-position filename="gdata/gdata-feed.h" line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FEED_CLASS"
                    c:identifier="GDATA_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-feed.h" line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FEED_GET_CLASS"
                    c:identifier="GDATA_FEED_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-feed.h" line="38"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Feed"
           c:symbol-prefix="feed"
           c:type="GDataFeed"
           parent="Parsable"
           glib:type-name="GDataFeed"
           glib:get-type="gdata_feed_get_type"
           glib:type-struct="FeedClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-feed.h"
           line="42">All the fields in the #GDataFeed structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-feed.h" line="70"/>
      <method name="get_authors" c:identifier="gdata_feed_get_authors">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="877">Returns a list of the authors listed in this feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="883">a #GList of #GDataAuthors</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Author"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="879">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_categories" c:identifier="gdata_feed_get_categories">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="804">Returns a list of the categories listed in this feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="810">a #GList of #GDataCategorys</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Category"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="806">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entries" c:identifier="gdata_feed_get_entries">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="758">Returns a list of the entries contained in this feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="764">a #GList of #GDataEntrys</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Entry"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="760">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_etag"
              c:identifier="gdata_feed_get_etag"
              glib:get-property="etag"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="943">Returns the feed's unique ETag for this version.</doc>
        <source-position filename="gdata/gdata-feed.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="949">the feed's ETag</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="945">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_generator"
              c:identifier="gdata_feed_get_generator"
              glib:get-property="generator">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="1007">Returns details about the software which generated the feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="1013">a #GDataGenerator, or %NULL</doc>
          <type name="Generator" c:type="GDataGenerator*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="1009">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="gdata_feed_get_icon"
              glib:get-property="icon"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="990">Returns the icon URI of the feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="996">the feed's icon URI, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="992">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gdata_feed_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="928">Returns the feed's unique and permanent URN ID.</doc>
        <source-position filename="gdata/gdata-feed.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="934">the feed's ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="930">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_items_per_page"
              c:identifier="gdata_feed_get_items_per_page"
              glib:get-property="items-per-page">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="1039">Returns the number of items per results page feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="1045">the number of items per results page feed, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="1041">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_links" c:identifier="gdata_feed_get_links">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="825">Returns a list of the links listed in this feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="831">a #GList of #GDataLinks</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Link"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="827">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_logo"
              c:identifier="gdata_feed_get_logo"
              glib:get-property="logo">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="975">Returns the logo URI of the feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="981">the feed's logo URI, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="977">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_next_page_token"
              c:identifier="gdata_feed_get_next_page_token"
              glib:get-property="next-page-token"
              version="0.17.7">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="1085">Returns the next page token for a query result, or %NULL if not set.
This is #GDataFeed:next-page-token. The page token might not be set if there
is no next page, or if this service does not use token based paging (for
example, if it uses page number or offset based paging instead). Most more
recent services use token based paging.</doc>
        <source-position filename="gdata/gdata-feed.h" line="94"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="1095">the next page token</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="1087">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rights"
              c:identifier="gdata_feed_get_rights"
              glib:get-property="rights"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="1022">Returns the rights pertaining to the entire feed, or %NULL if not set.</doc>
        <source-position filename="gdata/gdata-feed.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="1028">the feed's rights information</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="1024">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_index"
              c:identifier="gdata_feed_get_start_index"
              glib:get-property="start-index">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="1054">Returns the one-based start index of the results feed in the result set.</doc>
        <source-position filename="gdata/gdata-feed.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="1060">the one-based start index, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="1056">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="gdata_feed_get_subtitle"
              glib:get-property="subtitle">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="913">Returns the subtitle of the feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="919">the feed's subtitle, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="915">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gdata_feed_get_title"
              glib:get-property="title">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="898">Returns the title of the feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="904">the feed's title</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="900">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_total_results"
              c:identifier="gdata_feed_get_total_results"
              glib:get-property="total-results">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="1069">Returns the total number of results in the result set, including results on other
pages. If this is zero, the total number is unknown.</doc>
        <source-position filename="gdata/gdata-feed.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="1076">the total number of results, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="1071">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_updated"
              c:identifier="gdata_feed_get_updated"
              glib:get-property="updated">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="960">Gets the time the feed was last updated.</doc>
        <source-position filename="gdata/gdata-feed.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="966">the UNIX timestamp for the time the feed was last updated</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="962">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="look_up_entry"
              c:identifier="gdata_feed_look_up_entry"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="779">Returns the entry in the feed with the given @id, if found.</doc>
        <source-position filename="gdata/gdata-feed.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="786">the #GDataEntry, or %NULL</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="781">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="782">the entry's ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="look_up_link"
              c:identifier="gdata_feed_look_up_link"
              version="0.1.1">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="846">Looks up a link by #GDataLink:relation-type value from the list of links in the feed.</doc>
        <source-position filename="gdata/gdata-feed.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-feed.c"
               line="853">a #GDataLink, or %NULL if one was not found</doc>
          <type name="Link" c:type="GDataLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="848">a #GDataFeed</doc>
            <type name="Feed" c:type="GDataFeed*"/>
          </instance-parameter>
          <parameter name="rel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-feed.c"
                 line="849">the value of the #GDataLink:relation-type property of the desired link</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="etag"
                version="0.2.0"
                transfer-ownership="none"
                getter="get_etag"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="162">The unique ETag for this version of the feed. See the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/reference.html#ResourceVersioning"&gt;online documentation&lt;/ulink&gt; for
more information.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="generator"
                transfer-ownership="none"
                getter="get_generator">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="220">Details of the software used to generate the feed.

API reference: &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_generator"&gt;
atom:generator&lt;/ulink&gt;</doc>
        <type name="Generator"/>
      </property>
      <property name="icon"
                version="0.6.0"
                transfer-ownership="none"
                getter="get_icon"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="204">The URI of an icon for the feed.

API reference:
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.icon"&gt;atom:icon&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                transfer-ownership="none"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="149">The unique and permanent URN ID for the feed.

API reference: &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_id"&gt;atom:id&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="items-per-page"
                transfer-ownership="none"
                getter="get_items_per_page"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="250">The number of items per results page feed.

API reference:
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_openSearch:itemsPerPage"&gt;
openSearch:itemsPerPage&lt;/ulink&gt;</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="logo"
                transfer-ownership="none"
                getter="get_logo"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="191">The URI of a logo for the feed.

API reference: &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_logo"&gt;atom:logo&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="next-page-token"
                version="0.17.7"
                transfer-ownership="none"
                getter="get_next_page_token"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="300">The next page token for feeds. Pass this to
gdata_query_set_page_token() to advance to the next page when
querying APIs which use page tokens rather than page numbers or
offsets.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="rights"
                version="0.7.0"
                transfer-ownership="none"
                getter="get_rights"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="234">The ownership rights pertaining to the entire feed.

For more information, see the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.rights"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="start-index"
                transfer-ownership="none"
                getter="get_start_index"
                default-value="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="265">The one-based index of the first item in the results feed.

This should &lt;emphasis&gt;not&lt;/emphasis&gt; be used manually for pagination. Instead, use a #GDataQuery and call its gdata_query_next_page()
or gdata_query_previous_page() functions before making the query to the service.

API reference: &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_openSearch:startIndex"&gt;
openSearch:startIndex&lt;/ulink&gt;</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="subtitle"
                transfer-ownership="none"
                getter="get_subtitle"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="136">The subtitle of the feed.

API reference: &lt;ulink type="http" url="http://atomenabled.org/developers/syndication/"&gt;atom:subtitle&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                transfer-ownership="none"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="122">The title of the feed.

API reference:
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_title"&gt;atom:title&lt;/ulink&gt;</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="total-results"
                transfer-ownership="none"
                getter="get_total_results"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="282">The number of items in the result set for the feed, including those on other pages. If this is zero, the total number is unknown.

This should &lt;emphasis&gt;not&lt;/emphasis&gt; be used manually for pagination. Instead, use a #GDataQuery and call its gdata_query_next_page()
or gdata_query_previous_page() functions before making the query to the service.

API reference:
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_openSearch:totalResults"&gt;
openSearch:totalResults&lt;/ulink&gt;</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="updated"
                transfer-ownership="none"
                getter="get_updated"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gdata-feed.c"
             line="177">The time the feed was last updated.

API reference: &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_updated"&gt;
atom:updated&lt;/ulink&gt;</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="FeedPrivate" c:type="GDataFeedPrivate*"/>
      </field>
    </class>
    <record name="FeedClass"
            c:type="GDataFeedClass"
            glib:is-gtype-struct-for="Feed">
      <doc xml:space="preserve"
           filename="gdata/gdata-feed.h"
           line="53">All the fields in the #GDataFeedClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-feed.h" line="70"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-feed.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-feed.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-feed.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-feed.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-feed.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-feed.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FeedPrivate"
            c:type="GDataFeedPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-feed.h" line="40"/>
    </record>
    <function-macro name="GCONTACT_CALENDAR"
                    c:identifier="GDATA_GCONTACT_CALENDAR"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="67"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GCONTACT_CALENDAR_CLASS"
                    c:identifier="GDATA_GCONTACT_CALENDAR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="68"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_CALENDAR_FREE_BUSY"
              value="free-busy"
              c:type="GDATA_GCONTACT_CALENDAR_FREE_BUSY"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-calendar.h"
           line="54">The relation type URI for a contact's free/busy calendar.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_CALENDAR_GET_CLASS"
                    c:identifier="GDATA_GCONTACT_CALENDAR_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="71"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_CALENDAR_HOME"
              value="home"
              c:type="GDATA_GCONTACT_CALENDAR_HOME"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-calendar.h"
           line="42">The relation type URI for a contact's home calendar.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_CALENDAR_WORK"
              value="work"
              c:type="GDATA_GCONTACT_CALENDAR_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-calendar.h"
           line="30">The relation type URI for a contact's work calendar.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_EVENT"
                    c:identifier="GDATA_GCONTACT_EVENT"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="55"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_EVENT_ANNIVERSARY"
              value="anniversary"
              c:type="GDATA_GCONTACT_EVENT_ANNIVERSARY"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-event.h"
           line="30">The relation type URI for an anniversary event.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcEvent"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_EVENT_CLASS"
                    c:identifier="GDATA_GCONTACT_EVENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="56"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GCONTACT_EVENT_GET_CLASS"
                    c:identifier="GDATA_GCONTACT_EVENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="59"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_EVENT_OTHER"
              value="other"
              c:type="GDATA_GCONTACT_EVENT_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-event.h"
           line="42">The relation type URI for a miscellaneous event.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcEvent"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_EXTERNAL_ID"
                    c:identifier="GDATA_GCONTACT_EXTERNAL_ID"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="79"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_EXTERNAL_ID_ACCOUNT"
              value="account"
              c:type="GDATA_GCONTACT_EXTERNAL_ID_ACCOUNT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-external-id.h"
           line="30">The relation type URI for an account number identifier.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_EXTERNAL_ID_CLASS"
                    c:identifier="GDATA_GCONTACT_EXTERNAL_ID_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="80"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_EXTERNAL_ID_CUSTOMER"
              value="customer"
              c:type="GDATA_GCONTACT_EXTERNAL_ID_CUSTOMER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-external-id.h"
           line="42">The relation type URI for a customer identifier.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_EXTERNAL_ID_GET_CLASS"
                    c:identifier="GDATA_GCONTACT_EXTERNAL_ID_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="83"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_EXTERNAL_ID_NETWORK"
              value="network"
              c:type="GDATA_GCONTACT_EXTERNAL_ID_NETWORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-external-id.h"
           line="54">The relation type URI for a network identifier.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_EXTERNAL_ID_ORGANIZATION"
              value="organization"
              c:type="GDATA_GCONTACT_EXTERNAL_ID_ORGANIZATION"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-external-id.h"
           line="66">The relation type URI for an identifier related to an organization the contact is associated with.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_JOT"
                    c:identifier="GDATA_GCONTACT_JOT"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="91"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GCONTACT_JOT_CLASS"
                    c:identifier="GDATA_GCONTACT_JOT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="92"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GCONTACT_JOT_GET_CLASS"
                    c:identifier="GDATA_GCONTACT_JOT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="95"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_JOT_HOME"
              value="home"
              c:type="GDATA_GCONTACT_JOT_HOME"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.h"
           line="30">The relation type URI for a jot about a contact's home.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_JOT_KEYWORDS"
              value="keywords"
              c:type="GDATA_GCONTACT_JOT_KEYWORDS"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.h"
           line="66">The relation type URI for a jot with keywords about a contact.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_JOT_OTHER"
              value="other"
              c:type="GDATA_GCONTACT_JOT_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.h"
           line="54">The relation type URI for a jot about an other facet of a contact.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_JOT_USER"
              value="user"
              c:type="GDATA_GCONTACT_JOT_USER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.h"
           line="78">The relation type URI for a jot about the relationship between a contact and the user.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="88"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_JOT_WORK"
              value="work"
              c:type="GDATA_GCONTACT_JOT_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.h"
           line="42">The relation type URI for a jot about a contact's work.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_LANGUAGE"
                    c:identifier="GDATA_GCONTACT_LANGUAGE"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GCONTACT_LANGUAGE_CLASS"
                    c:identifier="GDATA_GCONTACT_LANGUAGE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GCONTACT_LANGUAGE_GET_CLASS"
                    c:identifier="GDATA_GCONTACT_LANGUAGE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GCONTACT_RELATION"
                    c:identifier="GDATA_GCONTACT_RELATION"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="199"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_RELATION_ASSISTANT"
              value="assistant"
              c:type="GDATA_GCONTACT_RELATION_ASSISTANT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="30">The relation type URI for a contact's assistant.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_BROTHER"
              value="brother"
              c:type="GDATA_GCONTACT_RELATION_BROTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="42">The relation type URI for a contact's brother.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_CHILD"
              value="child"
              c:type="GDATA_GCONTACT_RELATION_CHILD"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="54">The relation type URI for a contact's child.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_RELATION_CLASS"
                    c:identifier="GDATA_GCONTACT_RELATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="200"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_RELATION_DOMESTIC_PARTNER"
              value="domestic-partner"
              c:type="GDATA_GCONTACT_RELATION_DOMESTIC_PARTNER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="66">The relation type URI for a contact's domestic partner.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_FATHER"
              value="father"
              c:type="GDATA_GCONTACT_RELATION_FATHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="78">The relation type URI for a contact's father.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="88"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_FRIEND"
              value="friend"
              c:type="GDATA_GCONTACT_RELATION_FRIEND"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="90">The relation type URI for a contact's friend.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_RELATION_GET_CLASS"
                    c:identifier="GDATA_GCONTACT_RELATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="203"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_RELATION_MANAGER"
              value="manager"
              c:type="GDATA_GCONTACT_RELATION_MANAGER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="102">The relation type URI for a contact's manager.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="112"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_MOTHER"
              value="mother"
              c:type="GDATA_GCONTACT_RELATION_MOTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="114">The relation type URI for a contact's mother.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="124"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_PARENT"
              value="parent"
              c:type="GDATA_GCONTACT_RELATION_PARENT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="126">The relation type URI for a contact's parent.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="136"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_PARTNER"
              value="partner"
              c:type="GDATA_GCONTACT_RELATION_PARTNER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="138">The relation type URI for a contact's business partner.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="148"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_REFERRER"
              value="referred-by"
              c:type="GDATA_GCONTACT_RELATION_REFERRER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="150">The relation type URI for a contact's referrer.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="160"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_RELATIVE"
              value="relative"
              c:type="GDATA_GCONTACT_RELATION_RELATIVE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="162">The relation type URI for a contact's (general) family relative.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="172"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_SISTER"
              value="sister"
              c:type="GDATA_GCONTACT_RELATION_SISTER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="174">The relation type URI for a contact's sister.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="184"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_RELATION_SPOUSE"
              value="spouse"
              c:type="GDATA_GCONTACT_RELATION_SPOUSE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="186">The relation type URI for a contact's spouse.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="196"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_WEBSITE"
                    c:identifier="GDATA_GCONTACT_WEBSITE"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="115"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_WEBSITE_BLOG"
              value="blog"
              c:type="GDATA_GCONTACT_WEBSITE_BLOG"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="42">The relation type URI for a contact's blog.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_WEBSITE_CLASS"
                    c:identifier="GDATA_GCONTACT_WEBSITE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="116"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_WEBSITE_FTP"
              value="ftp"
              c:type="GDATA_GCONTACT_WEBSITE_FTP"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="102">The relation type URI for a contact's FTP site.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="112"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GCONTACT_WEBSITE_GET_CLASS"
                    c:identifier="GDATA_GCONTACT_WEBSITE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="119"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GCONTACT_WEBSITE_HOME"
              value="home"
              c:type="GDATA_GCONTACT_WEBSITE_HOME"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="66">The relation type URI for a contact's home website.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_WEBSITE_HOME_PAGE"
              value="home-page"
              c:type="GDATA_GCONTACT_WEBSITE_HOME_PAGE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="30">The relation type URI for a contact's home page.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_WEBSITE_OTHER"
              value="other"
              c:type="GDATA_GCONTACT_WEBSITE_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="90">The relation type URI for a miscellaneous website of the contact.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_WEBSITE_PROFILE"
              value="profile"
              c:type="GDATA_GCONTACT_WEBSITE_PROFILE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="54">The relation type URI for a contact's online profile.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GCONTACT_WEBSITE_WORK"
              value="work"
              c:type="GDATA_GCONTACT_WEBSITE_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="78">The relation type URI for a contact's work website.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;
gContact specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="88"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="GContactCalendar"
           c:symbol-prefix="gcontact_calendar"
           c:type="GDataGContactCalendar"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataGContactCalendar"
           glib:get-type="gdata_gcontact_calendar_get_type"
           glib:type-struct="GContactCalendarClass">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-calendar.h"
           line="75">All the fields in the #GDataGContactCalendar structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="102"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gcontact_calendar_new"
                   version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="299">Creates a new #GDataGContactCalendar. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;gContact specification&lt;/ulink&gt;.

Exactly one of @relation_type and @label should be provided; the other must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-calendar.c"
               line="311">a new #GDataGContactCalendar; unref with g_object_unref()</doc>
          <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="301">the URI of the calendar</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="302">the type of calendar, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="303">a free-form label for the calendar, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="304">%TRUE if this calendar is its owner's primary calendar, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_label"
              c:identifier="gdata_gcontact_calendar_get_label"
              glib:get-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="404">Gets the #GDataGContactCalendar:label property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-calendar.c"
               line="410">a free-form label for the calendar, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="406">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gcontact_calendar_get_relation_type"
              glib:get-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="363">Gets the #GDataGContactCalendar:relation-type property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-calendar.c"
               line="369">the type of the relation, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="365">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_gcontact_calendar_get_uri"
              glib:get-property="uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="326">Gets the #GDataGContactCalendar:uri property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-calendar.c"
               line="332">the calendar's URI</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="328">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_primary"
              c:identifier="gdata_gcontact_calendar_is_primary"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="444">Gets the #GDataGContactCalendar:is-primary property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-calendar.c"
               line="450">%TRUE if this is the contact's primary calendar, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="446">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_is_primary"
              c:identifier="gdata_gcontact_calendar_set_is_primary"
              glib:set-property="is-primary"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="461">Sets the #GDataGContactCalendar:is-primary property to @is_primary.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="463">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="464">%TRUE if this is the contact's primary calendar, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gcontact_calendar_set_label"
              glib:set-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="421">Sets the #GDataGContactCalendar:label property to @label.

If @label is %NULL, the label will be unset. When the #GDataGContactCalendar is used in a query, however,
exactly one of #GDataGContactCalendar:relation-type and #GDataGContactCalendar:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="423">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="424">the new free-form label for the calendar, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gcontact_calendar_set_relation_type"
              glib:set-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="380">Sets the #GDataGContactCalendar:relation-type property to @relation_type,
such as %GDATA_GCONTACT_CALENDAR_HOME or %GDATA_GCONTACT_CALENDAR_FREE_BUSY.

If @relation_type is %NULL, the relation type will be unset. When the #GDataGContactCalendar is used in a query, however,
exactly one of #GDataGContactCalendar:relation-type and #GDataGContactCalendar:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="382">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="383">the new type for the calendar, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="gdata_gcontact_calendar_set_uri"
              glib:set-property="uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="343">Sets the #GDataGContactCalendar:uri property to @uri.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="345">a #GDataGContactCalendar</doc>
            <type name="GContactCalendar" c:type="GDataGContactCalendar*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-calendar.c"
                 line="346">the new URI for the calendar</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="is-primary"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_primary"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="131">Indicates which calendar out of a group is primary.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="label"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="115">A free-form string that identifies the type of calendar. It is mutually exclusive with #GDataGContactCalendar:relation-type.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="98">A programmatic value that identifies the type of calendar. It is mutually exclusive with #GDataGContactCalendar:label.
Examples are %GDATA_GCONTACT_CALENDAR_HOME or %GDATA_GCONTACT_CALENDAR_FREE_BUSY.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uri"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_uri"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-calendar.c"
             line="82">The URI of the calendar.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GContactCalendarPrivate"
              c:type="GDataGContactCalendarPrivate*"/>
      </field>
    </class>
    <record name="GContactCalendarClass"
            c:type="GDataGContactCalendarClass"
            glib:is-gtype-struct-for="GContactCalendar"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-calendar.h"
           line="87">All the fields in the #GDataGContactCalendarClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="102"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GContactCalendarPrivate"
            c:type="GDataGContactCalendarPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="73"/>
    </record>
    <class name="GContactEvent"
           c:symbol-prefix="gcontact_event"
           c:type="GDataGContactEvent"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataGContactEvent"
           glib:get-type="gdata_gcontact_event_get_type"
           glib:type-struct="GContactEventClass">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-event.h"
           line="63">All the fields in the #GDataGContactEvent structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="90"/>
      <constructor name="new"
                   c:identifier="gdata_gcontact_event_new"
                   version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="304">Creates a new #GDataGContactEvent. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcEvent"&gt;gContact specification&lt;/ulink&gt;.

Exactly one of @relation_type and @label should be provided; the other must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                         line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-event.c"
               line="315">a new #GDataGContactEvent; unref with g_object_unref()</doc>
          <type name="GContactEvent" c:type="GDataGContactEvent*"/>
        </return-value>
        <parameters>
          <parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="306">the date of the event</doc>
            <type name="GLib.Date" c:type="const GDate*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="307">the relationship between the event and its owner, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="308">a human-readable label for the event, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_date"
              c:identifier="gdata_gcontact_event_get_date"
              glib:get-property="date"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="329">Gets the #GDataGContactEvent:date property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="331">a #GDataGContactEvent</doc>
            <type name="GContactEvent" c:type="GDataGContactEvent*"/>
          </instance-parameter>
          <parameter name="date"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="332">return location for the date of the event</doc>
            <type name="GLib.Date" c:type="GDate*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gdata_gcontact_event_get_label"
              glib:get-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="406">Gets the #GDataGContactEvent:label property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-event.c"
               line="412">the event's label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="408">a #GDataGContactEvent</doc>
            <type name="GContactEvent" c:type="GDataGContactEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gcontact_event_get_relation_type"
              glib:get-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="365">Gets the #GDataGContactEvent:relation-type property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-event.c"
               line="371">the event's relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="367">a #GDataGContactEvent</doc>
            <type name="GContactEvent" c:type="GDataGContactEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_date"
              c:identifier="gdata_gcontact_event_set_date"
              glib:set-property="date"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="346">Sets the #GDataGContactEvent:date property to @date.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="348">a #GDataGContactEvent</doc>
            <type name="GContactEvent" c:type="GDataGContactEvent*"/>
          </instance-parameter>
          <parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="349">the new date for the event</doc>
            <type name="GLib.Date" c:type="const GDate*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gcontact_event_set_label"
              glib:set-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="423">Sets the #GDataGContactEvent:label property to @label.

If @label is %NULL, the label will be unset. When the #GDataGContactEvent is used in a query, however,
exactly one of #GDataGContactEvent:relation-type and #GDataGContactEvent:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="425">a #GDataGContactEvent</doc>
            <type name="GContactEvent" c:type="GDataGContactEvent*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="426">the new label for the event, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gcontact_event_set_relation_type"
              glib:set-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="382">Sets the #GDataGContactEvent:relation-type property to @relation_type
such as %GDATA_GCONTACT_EVENT_ANNIVERSARY or %GDATA_GCONTACT_EVENT_OTHER.

If @relation_type is %NULL, the relation type will be unset. When the #GDataGContactEvent is used in a query, however,
exactly one of #GDataGContactEvent:relation-type and #GDataGContactEvent:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="384">a #GDataGContactEvent</doc>
            <type name="GContactEvent" c:type="GDataGContactEvent*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-event.c"
                 line="385">the new relation type for the event, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="date"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_date"
                getter="get_date">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="83">The date of the event.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcEvent"&gt;GContact specification&lt;/ulink&gt;.</doc>
        <type name="GLib.Date"/>
      </property>
      <property name="label"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="116">A simple string value used to name this event. It is mutually exclusive with #GDataGContactEvent:relation-type.
It allows UIs to display a label such as "Wedding anniversary".

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcEvent"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-event.c"
             line="99">A programmatic value that identifies the type of event. It is mutually exclusive with #GDataGContactEvent:label.
Examples are %GDATA_GCONTACT_EVENT_ANNIVERSARY or %GDATA_GCONTACT_EVENT_OTHER.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcEvent"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GContactEventPrivate" c:type="GDataGContactEventPrivate*"/>
      </field>
    </class>
    <record name="GContactEventClass"
            c:type="GDataGContactEventClass"
            glib:is-gtype-struct-for="GContactEvent"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-event.h"
           line="75">All the fields in the #GDataGContactEventClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="90"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GContactEventPrivate"
            c:type="GDataGContactEventPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="61"/>
    </record>
    <class name="GContactExternalID"
           c:symbol-prefix="gcontact_external_id"
           c:type="GDataGContactExternalID"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataGContactExternalID"
           glib:get-type="gdata_gcontact_external_id_get_type"
           glib:type-struct="GContactExternalIDClass">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-external-id.h"
           line="87">All the fields in the #GDataGContactExternalID structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="114"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gcontact_external_id_new"
                   version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="264">Creates a new #GDataGContactExternalID. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;gContact specification&lt;/ulink&gt;.

Exactly one of @relation_type and @label should be provided; the other must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                         line="118"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-external-id.c"
               line="275">a new #GDataGContactExternalID; unref with g_object_unref()</doc>
          <type name="GContactExternalID" c:type="GDataGContactExternalID*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="266">the value of the external ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="267">the type of external ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="268">a free-form label for the external ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_label"
              c:identifier="gdata_gcontact_external_id_get_label"
              glib:get-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="367">Gets the #GDataGContactExternalID:label property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-external-id.c"
               line="373">a free-form label for the external ID, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="369">a #GDataGContactExternalID</doc>
            <type name="GContactExternalID" c:type="GDataGContactExternalID*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gcontact_external_id_get_relation_type"
              glib:get-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="326">Gets the #GDataGContactExternalID:relation-type property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-external-id.c"
               line="332">the type of the relation, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="328">a #GDataGContactExternalID</doc>
            <type name="GContactExternalID" c:type="GDataGContactExternalID*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="gdata_gcontact_external_id_get_value"
              glib:get-property="value"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="289">Gets the #GDataGContactExternalID:value property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-external-id.c"
               line="295">the external ID's value</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="291">a #GDataGContactExternalID</doc>
            <type name="GContactExternalID" c:type="GDataGContactExternalID*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gcontact_external_id_set_label"
              glib:set-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="384">Sets the #GDataGContactExternalID:label property to @label.

If @label is %NULL, the label will be unset. When the #GDataGContactExternalID is used in a query, however,
exactly one of #GDataGContactExternalID:relation-type and #GDataGContactExternalID:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="386">a #GDataGContactExternalID</doc>
            <type name="GContactExternalID" c:type="GDataGContactExternalID*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="387">the new free-form label for the external ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gcontact_external_id_set_relation_type"
              glib:set-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="343">Sets the #GDataGContactExternalID:relation-type property to @relation_type,
such as %GDATA_GCONTACT_EXTERNAL_ID_NETWORK or %GDATA_GCONTACT_EXTERNAL_ID_ACCOUNT.

If @relation_type is %NULL, the relation type will be unset. When the #GDataGContactExternalID is used in a query, however,
exactly one of #GDataGContactExternalID:relation-type and #GDataGContactExternalID:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="345">a #GDataGContactExternalID</doc>
            <type name="GContactExternalID" c:type="GDataGContactExternalID*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="346">the new type for the external ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="gdata_gcontact_external_id_set_value"
              glib:set-property="value"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="306">Sets the #GDataGContactExternalID:value property to @value.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="308">a #GDataGContactExternalID</doc>
            <type name="GContactExternalID" c:type="GDataGContactExternalID*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-external-id.c"
                 line="309">the new value for the external ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="label"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="113">A free-form string that identifies the type of external ID. It is mutually exclusive with #GDataGContactExternalID:relation-type.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="96">A programmatic value that identifies the type of external ID. It is mutually exclusive with #GDataGContactExternalID:label.
Examples are %GDATA_GCONTACT_EXTERNAL_ID_NETWORK or %GDATA_GCONTACT_EXTERNAL_ID_ACCOUNT.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="value"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_value"
                getter="get_value"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-external-id.c"
             line="80">The value of the external ID.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GContactExternalIDPrivate"
              c:type="GDataGContactExternalIDPrivate*"/>
      </field>
    </class>
    <record name="GContactExternalIDClass"
            c:type="GDataGContactExternalIDClass"
            glib:is-gtype-struct-for="GContactExternalID"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-external-id.h"
           line="99">All the fields in the #GDataGContactExternalIDClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="114"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                           line="112"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                           line="113"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GContactExternalIDPrivate"
            c:type="GDataGContactExternalIDPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="85"/>
    </record>
    <class name="GContactJot"
           c:symbol-prefix="gcontact_jot"
           c:type="GDataGContactJot"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataGContactJot"
           glib:get-type="gdata_gcontact_jot_get_type"
           glib:type-struct="GContactJotClass">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.h"
           line="99">All the fields in the #GDataGContactJot structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="126"/>
      <constructor name="new"
                   c:identifier="gdata_gcontact_jot_new"
                   version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-jot.c"
             line="213">Creates a new #GDataGContactJot. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                         line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-jot.c"
               line="221">a new #GDataGContactJot; unref with g_object_unref()</doc>
          <type name="GContactJot" c:type="GDataGContactJot*"/>
        </return-value>
        <parameters>
          <parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="215">the content of the jot</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="216">the relationship between the jot and its owner</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_content"
              c:identifier="gdata_gcontact_jot_get_content"
              glib:get-property="content"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-jot.c"
             line="233">Gets the #GDataGContactJot:content property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-jot.c"
               line="239">the jot's content</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="235">a #GDataGContactJot</doc>
            <type name="GContactJot" c:type="GDataGContactJot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gcontact_jot_get_relation_type"
              glib:get-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-jot.c"
             line="270">Gets the #GDataGContactJot:relation-type property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-jot.c"
               line="276">the jot's relation type</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="272">a #GDataGContactJot</doc>
            <type name="GContactJot" c:type="GDataGContactJot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_content"
              c:identifier="gdata_gcontact_jot_set_content"
              glib:set-property="content"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-jot.c"
             line="250">Sets the #GDataGContactJot:content property to @content.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="252">a #GDataGContactJot</doc>
            <type name="GContactJot" c:type="GDataGContactJot*"/>
          </instance-parameter>
          <parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="253">the new content</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gcontact_jot_set_relation_type"
              glib:set-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-jot.c"
             line="287">Sets the #GDataGContactJot:relation-type property to @relation_type
such as %GDATA_GCONTACT_JOT_HOME or %GDATA_GCONTACT_JOT_OTHER.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="289">a #GDataGContactJot</doc>
            <type name="GContactJot" c:type="GDataGContactJot*"/>
          </instance-parameter>
          <parameter name="relation_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-jot.c"
                 line="290">the new relation type for the jot, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="content"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_content"
                getter="get_content"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-jot.c"
             line="78">The content of the jot.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-jot.c"
             line="94">A programmatic value that identifies the type of jot. Examples are %GDATA_GCONTACT_JOT_HOME or %GDATA_GCONTACT_JOT_OTHER.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GContactJotPrivate" c:type="GDataGContactJotPrivate*"/>
      </field>
    </class>
    <record name="GContactJotClass"
            c:type="GDataGContactJotClass"
            glib:is-gtype-struct-for="GContactJot"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.h"
           line="111">All the fields in the #GDataGContactJotClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="126"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                           line="124"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                           line="125"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GContactJotPrivate"
            c:type="GDataGContactJotPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="97"/>
    </record>
    <class name="GContactLanguage"
           c:symbol-prefix="gcontact_language"
           c:type="GDataGContactLanguage"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataGContactLanguage"
           glib:get-type="gdata_gcontact_language_get_type"
           glib:type-struct="GContactLanguageClass">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-language.h"
           line="39">All the fields in the #GDataGContactLanguage structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="66"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gcontact_language_new"
                   version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-language.c"
             line="227">Creates a new #GDataGContactLanguage. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcLanguage"&gt;gContact specification&lt;/ulink&gt;.

Exactly one of @code and @label should be provided; the other must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-language.c"
               line="237">a new #GDataGContactLanguage; unref with g_object_unref()</doc>
          <type name="GContactLanguage" c:type="GDataGContactLanguage*"/>
        </return-value>
        <parameters>
          <parameter name="code"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="229">the language code, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="230">a free-form label for the language, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_code"
              c:identifier="gdata_gcontact_language_get_code"
              glib:get-property="code"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-language.c"
             line="248">Gets the #GDataGContactLanguage:code property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-language.c"
               line="254">the language's code, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="250">a #GDataGContactLanguage</doc>
            <type name="GContactLanguage" c:type="GDataGContactLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gdata_gcontact_language_get_label"
              glib:get-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-language.c"
             line="288">Gets the #GDataGContactLanguage:label property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-language.c"
               line="294">a free-form label for the language, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="290">a #GDataGContactLanguage</doc>
            <type name="GContactLanguage" c:type="GDataGContactLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_code"
              c:identifier="gdata_gcontact_language_set_code"
              glib:set-property="code"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-language.c"
             line="265">Sets the #GDataGContactLanguage:code property to @code.

If @code is %NULL, the code will be unset. When the #GDataGContactLanguage is used in a query, however,
exactly one of #GDataGContactLanguage:code and #GDataGContactLanguage:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="267">a #GDataGContactLanguage</doc>
            <type name="GContactLanguage" c:type="GDataGContactLanguage*"/>
          </instance-parameter>
          <parameter name="code"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="268">the new code for the language, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gcontact_language_set_label"
              glib:set-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-language.c"
             line="305">Sets the #GDataGContactLanguage:label property to @label.

If @label is %NULL, the label will be unset. When the #GDataGContactLanguage is used in a query, however,
exactly one of #GDataGContactLanguage:code and #GDataGContactLanguage:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="307">a #GDataGContactLanguage</doc>
            <type name="GContactLanguage" c:type="GDataGContactLanguage*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-language.c"
                 line="308">the new free-form label for the language, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="code"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_code"
                getter="get_code"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-language.c"
             line="78">A code identifying the language, conforming to the IETF BCP 47 specification. It is mutually exclusive with #GDataGContactLanguage:label.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcLanguage"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-language.c"
             line="94">A free-form string that identifies the language. It is mutually exclusive with #GDataGContactLanguage:code.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcLanguage"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GContactLanguagePrivate"
              c:type="GDataGContactLanguagePrivate*"/>
      </field>
    </class>
    <record name="GContactLanguageClass"
            c:type="GDataGContactLanguageClass"
            glib:is-gtype-struct-for="GContactLanguage"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-language.h"
           line="51">All the fields in the #GDataGContactLanguageClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GContactLanguagePrivate"
            c:type="GDataGContactLanguagePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="37"/>
    </record>
    <class name="GContactRelation"
           c:symbol-prefix="gcontact_relation"
           c:type="GDataGContactRelation"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataGContactRelation"
           glib:get-type="gdata_gcontact_relation_get_type"
           glib:type-struct="GContactRelationClass">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="207">All the fields in the #GDataGContactRelation structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="234"/>
      <constructor name="new"
                   c:identifier="gdata_gcontact_relation_new"
                   version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="263">Creates a new #GDataGContactRelation. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;gContact specification&lt;/ulink&gt;.

Exactly one of @relation_type and @label should be provided; the other must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                         line="238"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-relation.c"
               line="274">a new #GDataGContactRelation; unref with g_object_unref()</doc>
          <type name="GContactRelation" c:type="GDataGContactRelation*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="265">the name of the relation</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="266">the type of relation, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="267">a free-form label for the type of relation, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_label"
              c:identifier="gdata_gcontact_relation_get_label"
              glib:get-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="366">Gets the #GDataGContactRelation:label property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                         line="247"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-relation.c"
               line="372">a free-form label for the type of the relation, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="368">a #GDataGContactRelation</doc>
            <type name="GContactRelation" c:type="GDataGContactRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gdata_gcontact_relation_get_name"
              glib:get-property="name"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="288">Gets the #GDataGContactRelation:name property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                         line="241"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-relation.c"
               line="294">the relation's name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="290">a #GDataGContactRelation</doc>
            <type name="GContactRelation" c:type="GDataGContactRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gcontact_relation_get_relation_type"
              glib:get-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="325">Gets the #GDataGContactRelation:relation-type property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                         line="244"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-relation.c"
               line="331">the type of the relation, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="327">a #GDataGContactRelation</doc>
            <type name="GContactRelation" c:type="GDataGContactRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gcontact_relation_set_label"
              glib:set-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="383">Sets the #GDataGContactRelation:label property to @label.

If @label is %NULL, the label will be unset. When the #GDataGContactRelation is used in a query, however,
exactly one of #GDataGContactRelation:relation-type and #GDataGContactRelation:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                         line="248"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="385">a #GDataGContactRelation</doc>
            <type name="GContactRelation" c:type="GDataGContactRelation*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="386">the new free-form type for the relation, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gdata_gcontact_relation_set_name"
              glib:set-property="name"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="305">Sets the #GDataGContactRelation:name property to @name.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                         line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="307">a #GDataGContactRelation</doc>
            <type name="GContactRelation" c:type="GDataGContactRelation*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="308">the new name for the relation</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gcontact_relation_set_relation_type"
              glib:set-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="342">Sets the #GDataGContactRelation:relation-type property to @relation_type,
such as %GDATA_GCONTACT_RELATION_MANAGER or %GDATA_GCONTACT_RELATION_CHILD.

If @relation_type is %NULL, the relation type will be unset. When the #GDataGContactRelation is used in a query, however,
exactly one of #GDataGContactRelation:relation-type and #GDataGContactRelation:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                         line="245"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="344">a #GDataGContactRelation</doc>
            <type name="GContactRelation" c:type="GDataGContactRelation*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-relation.c"
                 line="345">the new type for the relation, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="label"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="113">A free-form string that identifies the type of relation. It is mutually exclusive with #GDataGContactRelation:relation-type.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="80">The name of the relation. It need not be a full name, and there need not be a contact representing the name.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-relation.c"
             line="96">A programmatic value that identifies the type of relation. It is mutually exclusive with #GDataGContactRelation:label.
Examples are %GDATA_GCONTACT_RELATION_MANAGER or %GDATA_GCONTACT_RELATION_CHILD.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcRelation"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GContactRelationPrivate"
              c:type="GDataGContactRelationPrivate*"/>
      </field>
    </class>
    <record name="GContactRelationClass"
            c:type="GDataGContactRelationClass"
            glib:is-gtype-struct-for="GContactRelation"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.h"
           line="219">All the fields in the #GDataGContactRelationClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="234"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                           line="232"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                           line="233"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GContactRelationPrivate"
            c:type="GDataGContactRelationPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="205"/>
    </record>
    <class name="GContactWebsite"
           c:symbol-prefix="gcontact_website"
           c:type="GDataGContactWebsite"
           version="0.7.0"
           parent="Parsable"
           glib:type-name="GDataGContactWebsite"
           glib:get-type="gdata_gcontact_website_get_type"
           glib:type-struct="GContactWebsiteClass">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="123">All the fields in the #GDataGContactWebsite structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="150"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gcontact_website_new"
                   version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="301">Creates a new #GDataGContactWebsite. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;gContact specification&lt;/ulink&gt;.

Exactly one of @relation_type and @label should be provided; the other must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="154"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-website.c"
               line="313">a new #GDataGContactWebsite; unref with g_object_unref()</doc>
          <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="303">the website URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="304">the relationship between the website and its owner, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="305">a human-readable label for the website, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="306">%TRUE if this website is its owner's primary website, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_label"
              c:identifier="gdata_gcontact_website_get_label"
              glib:get-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="406">Gets the #GDataGContactWebsite:label property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-website.c"
               line="412">the website's label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="408">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gcontact_website_get_relation_type"
              glib:get-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="365">Gets the #GDataGContactWebsite:relation-type property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-website.c"
               line="371">the website's relation type</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="367">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_gcontact_website_get_uri"
              glib:get-property="uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="328">Gets the #GDataGContactWebsite:uri property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-website.c"
               line="334">the URI of the website</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="330">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_primary"
              c:identifier="gdata_gcontact_website_is_primary"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="447">Gets the #GDataGContactWebsite:is-primary property.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gcontact/gdata-gcontact-website.c"
               line="453">%TRUE if this is the primary website, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="449">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_is_primary"
              c:identifier="gdata_gcontact_website_set_is_primary"
              glib:set-property="is-primary"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="464">Sets the #GDataGContactWebsite:is-primary property to @is_primary.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="466">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="467">%TRUE if this is the primary website, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gcontact_website_set_label"
              glib:set-property="label"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="423">Sets the #GDataGContactWebsite:label property to @label.

If @label is %NULL, the label will be unset. When the #GDataGContactWebsite is used in a query, however,
exactly one of #GDataGContactWebsite:relation-type and #GDataGContactWebsite:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="425">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="426">the new label for the website, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gcontact_website_set_relation_type"
              glib:set-property="relation-type"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="382">Sets the #GDataGContactWebsite:relation-type property to @relation_type
such as %GDATA_GCONTACT_WEBSITE_HOME_PAGE or %GDATA_GCONTACT_WEBSITE_FTP.

If @relation_type is %NULL, the relation type will be unset. When the #GDataGContactWebsite is used in a query, however,
exactly one of #GDataGContactWebsite:relation-type and #GDataGContactWebsite:label must be %NULL.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="384">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
          <parameter name="relation_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="385">the new relation type for the website</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="gdata_gcontact_website_set_uri"
              glib:set-property="uri"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="345">Sets the #GDataGContactWebsite:uri property to @uri.</doc>
        <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="347">a #GDataGContactWebsite</doc>
            <type name="GContactWebsite" c:type="GDataGContactWebsite*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gcontact/gdata-gcontact-website.c"
                 line="348">the new website URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="is-primary"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_primary"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="132">Indicates which website out of a group is primary.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="label"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="115">A simple string value used to name this website. It allows UIs to display a label such as "Work", "Travel blog", "Personal blog", etc.
It is mutually exclusive with #GDataGContactWebsite:relation-type.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="98">A programmatic value that identifies the type of website. Examples are %GDATA_GCONTACT_WEBSITE_HOME_PAGE or %GDATA_GCONTACT_WEBSITE_FTP.
It is mutually exclusive with #GDataGContactWebsite:label.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uri"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_uri"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gcontact/gdata-gcontact-website.c"
             line="82">The URI of the website.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;gContact specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GContactWebsitePrivate"
              c:type="GDataGContactWebsitePrivate*"/>
      </field>
    </class>
    <record name="GContactWebsiteClass"
            c:type="GDataGContactWebsiteClass"
            glib:is-gtype-struct-for="GContactWebsite"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.h"
           line="135">All the fields in the #GDataGContactWebsiteClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="150"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                           line="148"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                           line="149"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GContactWebsitePrivate"
            c:type="GDataGContactWebsitePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="121"/>
    </record>
    <class name="GDEmailAddress"
           c:symbol-prefix="gd_email_address"
           c:type="GDataGDEmailAddress"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDEmailAddress"
           glib:get-type="gdata_gd_email_address_get_type"
           glib:type-struct="GDEmailAddressClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-email-address.h"
           line="66">All the fields in the #GDataGDEmailAddress structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="93"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gd_email_address_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="311">Creates a new #GDataGDEmailAddress. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdEmail"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-email-address.c"
               line="321">a new #GDataGDEmailAddress, or %NULL; unref with g_object_unref()</doc>
          <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="313">the e-mail address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="314">the relationship between the e-mail address and its owner, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="315">a human-readable label for the e-mail address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="316">%TRUE if this e-mail address is its owner's primary address, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address"
              c:identifier="gdata_gd_email_address_get_address"
              glib:get-property="address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="334">Gets the #GDataGDEmailAddress:address property.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-email-address.c"
               line="340">the e-mail address itself, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="336">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="gdata_gd_email_address_get_display_name"
              glib:get-property="display-name"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="483">Gets the #GDataGDEmailAddress:display-name property.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-email-address.c"
               line="489">a display name for the e-mail address, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="485">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gdata_gd_email_address_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="410">Gets the #GDataGDEmailAddress:label property.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-email-address.c"
               line="416">the e-mail address' label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="412">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gd_email_address_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="371">Gets the #GDataGDEmailAddress:relation-type property.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-email-address.c"
               line="377">the e-mail address' relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="373">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_primary"
              c:identifier="gdata_gd_email_address_is_primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="448">Gets the #GDataGDEmailAddress:is-primary property.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-email-address.c"
               line="454">%TRUE if this is the primary e-mail address, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="450">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_address"
              c:identifier="gdata_gd_email_address_set_address"
              glib:set-property="address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="351">Sets the #GDataGDEmailAddress:address property to @address.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="353">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="354">the new e-mail address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name"
              c:identifier="gdata_gd_email_address_set_display_name"
              glib:set-property="display-name"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="500">Sets the #GDataGDEmailAddress:display-name property to @display_name.

Set @display_name to %NULL to unset the property in the e-mail address.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="502">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
          <parameter name="display_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="503">the new display name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_primary"
              c:identifier="gdata_gd_email_address_set_is_primary"
              glib:set-property="is-primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="465">Sets the #GDataGDEmailAddress:is-primary property to @is_primary.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="467">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="468">%TRUE if this is the primary e-mail address, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gd_email_address_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="427">Sets the #GDataGDEmailAddress:label property to @label.

Set @label to %NULL to unset the property in the e-mail address.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="429">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="430">the new label for the e-mail address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gd_email_address_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="388">Sets the #GDataGDEmailAddress:relation-type property to @relation_type.

Set @relation_type to %NULL to unset the property in the e-mail address.</doc>
        <source-position filename="gdata/gd/gdata-gd-email-address.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="390">a #GDataGDEmailAddress</doc>
            <type name="GDEmailAddress" c:type="GDataGDEmailAddress*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-email-address.c"
                 line="391">the new relation type for the email_address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="address"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_address"
                getter="get_address"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="84">The e-mail address itself.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdEmail"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="display-name"
                version="0.6.0"
                writable="1"
                transfer-ownership="none"
                setter="set_display_name"
                getter="get_display_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="148">A display name of the entity (e.g. a person) the e-mail address belongs to.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdEmail"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-primary"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_primary"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="132">Indicates which e-mail address out of a group is primary.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdEmail"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="116">A simple string value used to name this e-mail address. It allows UIs to display a label such as "Work", "Personal", "Preferred", etc.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdEmail"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-email-address.c"
             line="100">A programmatic value that identifies the type of e-mail address. For example: %GDATA_GD_EMAIL_ADDRESS_HOME or %GDATA_GD_EMAIL_ADDRESS_WORK.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdEmail"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDEmailAddressPrivate"
              c:type="GDataGDEmailAddressPrivate*"/>
      </field>
    </class>
    <record name="GDEmailAddressClass"
            c:type="GDataGDEmailAddressClass"
            glib:is-gtype-struct-for="GDEmailAddress"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-email-address.h"
           line="78">All the fields in the #GDataGDEmailAddressClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="93"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-email-address.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-email-address.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDEmailAddressPrivate"
            c:type="GDataGDEmailAddressPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="64"/>
    </record>
    <class name="GDIMAddress"
           c:symbol-prefix="gd_im_address"
           c:type="GDataGDIMAddress"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDIMAddress"
           glib:get-type="gdata_gd_im_address_get_type"
           glib:type-struct="GDIMAddressClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="147">All the fields in the #GDataGDIMAddress structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="174"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gd_im_address_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="316">Creates a new #GDataGDIMAddress. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdIm"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="178"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-im-address.c"
               line="327">a new #GDataGDIMAddress, or %NULL; unref with g_object_unref()</doc>
          <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="318">the IM address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="protocol"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="319">a URI identifying the IM protocol, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="320">the relationship between the IM address and its owner, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="321">a human-readable label for the IM address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="322">%TRUE if this IM address is its owner's primary address, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address"
              c:identifier="gdata_gd_im_address_get_address"
              glib:get-property="address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="341">Gets the #GDataGDIMAddress:address property.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="181"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-im-address.c"
               line="347">the IM address itself, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="343">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gdata_gd_im_address_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="454">Gets the #GDataGDIMAddress:label property.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-im-address.c"
               line="460">the IM address' label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="456">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocol"
              c:identifier="gdata_gd_im_address_get_protocol"
              glib:get-property="protocol"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="378">Gets the #GDataGDIMAddress:protocol property.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="184"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-im-address.c"
               line="384">the IM address' protocol, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="380">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gd_im_address_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="415">Gets the #GDataGDIMAddress:relation-type property.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-im-address.c"
               line="421">the IM address' relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="417">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_primary"
              c:identifier="gdata_gd_im_address_is_primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="492">Gets the #GDataGDIMAddress:is-primary property.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-im-address.c"
               line="498">%TRUE if this is the primary IM address, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="494">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_address"
              c:identifier="gdata_gd_im_address_set_address"
              glib:set-property="address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="358">Sets the #GDataGDIMAddress:address property to @address.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="360">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="361">the new IM address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_primary"
              c:identifier="gdata_gd_im_address_set_is_primary"
              glib:set-property="is-primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="509">Sets the #GDataGDIMAddress:is-primary property to @is_primary.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="511">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="512">%TRUE if this is the primary IM address, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gd_im_address_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="471">Sets the #GDataGDIMAddress:label property to @label.

Set @label to %NULL to unset the property in the IM address.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="473">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="474">the new label for the IM address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_protocol"
              c:identifier="gdata_gd_im_address_set_protocol"
              glib:set-property="protocol"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="395">Sets the #GDataGDIMAddress:protocol property to @protocol.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="185"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="397">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
          <parameter name="protocol"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="398">the new IM protocol, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gd_im_address_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="432">Sets the #GDataGDIMAddress:relation-type property to @relation_type.

Set @relation_type to %NULL to unset the property in the IM address.</doc>
        <source-position filename="gdata/gd/gdata-gd-im-address.h" line="188"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="434">a #GDataGDIMAddress</doc>
            <type name="GDIMAddress" c:type="GDataGDIMAddress*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-im-address.c"
                 line="435">the new relation type for the im_address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="address"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_address"
                getter="get_address"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="84">The IM address itself.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdIm"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-primary"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_primary"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="148">Indicates which IM address out of a group is primary.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdIm"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="132">A simple string value used to name this IM address. It allows UIs to display a label such as "Work", "Personal", "Preferred", etc.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdIm"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="protocol"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_protocol"
                getter="get_protocol"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="100">Identifies the IM network. For example: %GDATA_GD_IM_PROTOCOL_JABBER or %GDATA_GD_IM_PROTOCOL_GOOGLE_TALK.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdIm"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-im-address.c"
             line="116">A programmatic value that identifies the type of IM address. For example: %GDATA_GD_IM_ADDRESS_HOME or %GDATA_GD_IM_ADDRESS_WORK.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdIm"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDIMAddressPrivate" c:type="GDataGDIMAddressPrivate*"/>
      </field>
    </class>
    <record name="GDIMAddressClass"
            c:type="GDataGDIMAddressClass"
            glib:is-gtype-struct-for="GDIMAddress"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="159">All the fields in the #GDataGDIMAddressClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="174"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-im-address.h"
                           line="172"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-im-address.h"
                           line="173"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDIMAddressPrivate"
            c:type="GDataGDIMAddressPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="145"/>
    </record>
    <class name="GDName"
           c:symbol-prefix="gd_name"
           c:type="GDataGDName"
           version="0.5.0"
           parent="Parsable"
           glib:type-name="GDataGDName"
           glib:get-type="gdata_gd_name_get_type"
           glib:type-struct="GDNameClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-name.h"
           line="39">All the fields in the #GDataGDName structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-name.h" line="66"/>
      <implements name="Comparable"/>
      <constructor name="new" c:identifier="gdata_gd_name_new" version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="343">Creates a new #GDataGDName. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-name.c"
               line="351">a new #GDataGDName, or %NULL; unref with g_object_unref()</doc>
          <type name="GDName" c:type="GDataGDName*"/>
        </return-value>
        <parameters>
          <parameter name="given_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="345">the person's given name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="family_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="346">the person's family name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_additional_name"
              c:identifier="gdata_gd_name_get_additional_name"
              glib:get-property="additional-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="400">Gets the #GDataGDName:additional-name property.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-name.c"
               line="406">the person's additional name, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="402">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_family_name"
              c:identifier="gdata_gd_name_get_family_name"
              glib:get-property="family-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="437">Gets the #GDataGDName:family-name property.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-name.c"
               line="443">the person's family name, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="439">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_full_name"
              c:identifier="gdata_gd_name_get_full_name"
              glib:get-property="full-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="548">Gets the #GDataGDName:full-name property.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-name.c"
               line="554">the person's full name, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="550">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_given_name"
              c:identifier="gdata_gd_name_get_given_name"
              glib:get-property="given-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="363">Gets the #GDataGDName:given-name property.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-name.c"
               line="369">the person's given name, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="365">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_prefix"
              c:identifier="gdata_gd_name_get_prefix"
              glib:get-property="prefix"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="474">Gets the #GDataGDName:prefix property.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-name.c"
               line="480">the person's name prefix, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="476">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_suffix"
              c:identifier="gdata_gd_name_get_suffix"
              glib:get-property="suffix"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="511">Gets the #GDataGDName:suffix property.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-name.c"
               line="517">the person's name suffix, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="513">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_additional_name"
              c:identifier="gdata_gd_name_set_additional_name"
              glib:set-property="additional-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="417">Sets the #GDataGDName:additional-name property to @additional_name.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="419">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
          <parameter name="additional_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="420">the new additional name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_family_name"
              c:identifier="gdata_gd_name_set_family_name"
              glib:set-property="family-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="454">Sets the #GDataGDName:family-name property to @family_name.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="456">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
          <parameter name="family_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="457">the new family name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_full_name"
              c:identifier="gdata_gd_name_set_full_name"
              glib:set-property="full-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="565">Sets the #GDataGDName:full-name property to @full_name.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="567">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
          <parameter name="full_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="568">the new full name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_given_name"
              c:identifier="gdata_gd_name_set_given_name"
              glib:set-property="given-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="380">Sets the #GDataGDName:given-name property to @given_name.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="382">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
          <parameter name="given_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="383">the new given name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_prefix"
              c:identifier="gdata_gd_name_set_prefix"
              glib:set-property="prefix"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="491">Sets the #GDataGDName:prefix property to @prefix.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="493">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
          <parameter name="prefix"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="494">the new prefix, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_suffix"
              c:identifier="gdata_gd_name_set_suffix"
              glib:set-property="suffix"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="528">Sets the #GDataGDName:suffix property to @suffix.</doc>
        <source-position filename="gdata/gd/gdata-gd-name.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="530">a #GDataGDName</doc>
            <type name="GDName" c:type="GDataGDName*"/>
          </instance-parameter>
          <parameter name="suffix"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-name.c"
                 line="531">the new suffix, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="additional-name"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_additional_name"
                getter="get_additional_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="112">An additional name for the person (e.g. a middle name).

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="family-name"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_family_name"
                getter="get_family_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="128">The person's family name.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="full-name"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_full_name"
                getter="get_full_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="176">An unstructured representation of the person's full name. It's generally advised to use the other individual properties in preference
to this one, which can fall out of synchronisation with the other properties.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="given-name"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_given_name"
                getter="get_given_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="96">The person's given name.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="prefix"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_prefix"
                getter="get_prefix"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="144">An honorific prefix (e.g. &lt;literal&gt;Mr&lt;/literal&gt; or &lt;literal&gt;Mrs&lt;/literal&gt;).

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="suffix"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_suffix"
                getter="get_suffix"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-name.c"
             line="160">An honorific suffix (e.g. &lt;literal&gt;san&lt;/literal&gt; or &lt;literal&gt;III&lt;/literal&gt;).

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDNamePrivate" c:type="GDataGDNamePrivate*"/>
      </field>
    </class>
    <record name="GDNameClass"
            c:type="GDataGDNameClass"
            glib:is-gtype-struct-for="GDName"
            version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-name.h"
           line="51">All the fields in the #GDataGDNameClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-name.h" line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-name.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-name.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDNamePrivate"
            c:type="GDataGDNamePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-name.h" line="37"/>
    </record>
    <class name="GDOrganization"
           c:symbol-prefix="gd_organization"
           c:type="GDataGDOrganization"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDOrganization"
           glib:get-type="gdata_gd_organization_get_type"
           glib:type-struct="GDOrganizationClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-organization.h"
           line="58">All the fields in the #GDataGDOrganization structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="85"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gd_organization_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="462">Creates a new #GDataGDOrganization. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="473">a new #GDataGDOrganization, or %NULL; unref with g_object_unref()</doc>
          <type name="GDOrganization" c:type="GDataGDOrganization*"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="464">the name of the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="465">the owner's title within the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="466">the relationship between the organization and its owner, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="467">a human-readable label for the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="468">%TRUE if this organization is its owner's primary organization, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_department"
              c:identifier="gdata_gd_organization_get_department"
              glib:get-property="department"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="673">Gets the #GDataGDOrganization:department property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="679">the department in which the person works in this organization, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="675">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_job_description"
              c:identifier="gdata_gd_organization_get_job_description"
              glib:get-property="job-description"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="711">Gets the #GDataGDOrganization:job-description property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="717">the job description of the person in the organization, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="713">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gdata_gd_organization_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="600">Gets the #GDataGDOrganization:label property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="606">the organization's label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="602">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="gdata_gd_organization_get_location"
              glib:get-property="location"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="787">Gets the #GDataGDOrganization:location property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="793">the organization's location, or %NULL</doc>
          <type name="GDWhere" c:type="GDataGDWhere*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="789">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gdata_gd_organization_get_name"
              glib:get-property="name"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="485">Gets the #GDataGDOrganization:name property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="491">the organization's name, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="487">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gd_organization_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="561">Gets the #GDataGDOrganization:relation-type property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="567">the organization's relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="563">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_symbol"
              c:identifier="gdata_gd_organization_get_symbol"
              glib:get-property="symbol"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="749">Gets the #GDataGDOrganization:symbol property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="755">the organization's stock symbol, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="751">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gdata_gd_organization_get_title"
              glib:get-property="title"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="523">Gets the #GDataGDOrganization:title property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="529">the organization's title, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="525">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_primary"
              c:identifier="gdata_gd_organization_is_primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="638">Gets the #GDataGDOrganization:is-primary property.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-organization.c"
               line="644">%TRUE if this is the primary organization, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="640">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_department"
              c:identifier="gdata_gd_organization_set_department"
              glib:set-property="department"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="690">Sets the #GDataGDOrganization:department property to @department.

Set @department to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="692">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="department"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="693">the new department for the person working in the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_primary"
              c:identifier="gdata_gd_organization_set_is_primary"
              glib:set-property="is-primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="655">Sets the #GDataGDOrganization:is-primary property to @is_primary.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="657">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="658">%TRUE if this is the primary organization, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_job_description"
              c:identifier="gdata_gd_organization_set_job_description"
              glib:set-property="job-description"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="728">Sets the #GDataGDOrganization:job-description property to @job_description.

Set @job_description to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="730">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="job_description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="731">the new job description for the person in the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gd_organization_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="617">Sets the #GDataGDOrganization:label property to @label.

Set @label to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="619">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="620">the new label for the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location"
              c:identifier="gdata_gd_organization_set_location"
              glib:set-property="location"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="804">Sets the #GDataGDOrganization:location property to @location.

Set @location to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="806">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="location"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="807">the new location for the organization, or %NULL</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gdata_gd_organization_set_name"
              glib:set-property="name"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="502">Sets the #GDataGDOrganization:name property to @name.

Set @name to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="504">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="505">the new name for the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gd_organization_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="578">Sets the #GDataGDOrganization:relation-type property to @relation_type.

Set @relation_type to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="580">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="581">the new relation type for the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_symbol"
              c:identifier="gdata_gd_organization_set_symbol"
              glib:set-property="symbol"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="766">Sets the #GDataGDOrganization:symbol property to @symbol.

Set @symbol to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="768">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="symbol"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="769">the new stock symbol for the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gdata_gd_organization_set_title"
              glib:set-property="title"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="540">Sets the #GDataGDOrganization:title property to @title.

Set @title to %NULL to unset the property in the organization.</doc>
        <source-position filename="gdata/gd/gdata-gd-organization.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="542">a #GDataGDOrganization</doc>
            <type name="GDOrganization" c:type="GDataGDOrganization*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-organization.c"
                 line="543">the new title for the organization, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="department"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_department"
                getter="get_department"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="181">Specifies a department within the organization.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-primary"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_primary"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="165">Indicates which organization out of a group is primary.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="job-description"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_job_description"
                getter="get_job_description"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="197">Description of a job within the organization.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="148">A simple string value used to name this organization. It allows UIs to display a label such as "Work", "Volunteer",
"Professional Society", etc.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="location"
                version="0.6.0"
                writable="1"
                transfer-ownership="none"
                setter="set_location"
                getter="get_location">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="229">A place associated with the organization, e.g. office location.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="GDWhere"/>
      </property>
      <property name="name"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="100">The name of the organization.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="132">A programmatic value that identifies the type of organization. For example: %GDATA_GD_ORGANIZATION_WORK or %GDATA_GD_ORGANIZATION_OTHER.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="symbol"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_symbol"
                getter="get_symbol"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="213">Stock symbol of the organization.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-organization.c"
             line="116">The title of a person within the organization.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDOrganizationPrivate"
              c:type="GDataGDOrganizationPrivate*"/>
      </field>
    </class>
    <record name="GDOrganizationClass"
            c:type="GDataGDOrganizationClass"
            glib:is-gtype-struct-for="GDOrganization"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-organization.h"
           line="70">All the fields in the #GDataGDOrganizationClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="85"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-organization.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-organization.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDOrganizationPrivate"
            c:type="GDataGDOrganizationPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="56"/>
    </record>
    <class name="GDPhoneNumber"
           c:symbol-prefix="gd_phone_number"
           c:type="GDataGDPhoneNumber"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDPhoneNumber"
           glib:get-type="gdata_gd_phone_number_get_type"
           glib:type-struct="GDPhoneNumberClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="219">All the fields in the #GDataGDPhoneNumber structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="246"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gd_phone_number_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="349">Creates a new #GDataGDPhoneNumber. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdPhoneNumber"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="250"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-phone-number.c"
               line="361">a new #GDataGDPhoneNumber, or %NULL; unref with g_object_unref()</doc>
          <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
        </return-value>
        <parameters>
          <parameter name="number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="351">the phone number, in human-readable format</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="352">the relationship between the phone number and its owner, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="353">a human-readable label for the phone number, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="uri"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="354">a "tel URI" to represent the number formally (see
&lt;ulink type="http" url="http://www.ietf.org/rfc/rfc3966.txt"&gt;RFC 3966&lt;/ulink&gt;), or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="356">%TRUE if this phone number is its owner's primary number, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_label"
              c:identifier="gdata_gd_phone_number_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="490">Gets the #GDataGDPhoneNumber:label property.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="262"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-phone-number.c"
               line="496">the phone number's label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="492">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_number"
              c:identifier="gdata_gd_phone_number_get_number"
              glib:get-property="number"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="374">Gets the #GDataGDPhoneNumber:number property.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="253"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-phone-number.c"
               line="380">the phone number itself</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="376">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gd_phone_number_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="451">Gets the #GDataGDPhoneNumber:relation-type property.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="259"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-phone-number.c"
               line="457">the phone number's relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="453">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_gd_phone_number_get_uri"
              glib:get-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="413">Gets the #GDataGDPhoneNumber:uri property.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="256"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-phone-number.c"
               line="419">the phone number's URI, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="415">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_primary"
              c:identifier="gdata_gd_phone_number_is_primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="528">Gets the #GDataGDPhoneNumber:is-primary property.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="265"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-phone-number.c"
               line="534">%TRUE if this is the primary phone number, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="530">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_is_primary"
              c:identifier="gdata_gd_phone_number_set_is_primary"
              glib:set-property="is-primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="545">Sets the #GDataGDPhoneNumber:is-primary property to @is_primary.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="266"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="547">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="548">%TRUE if this is the primary phone number, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gd_phone_number_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="507">Sets the #GDataGDPhoneNumber:label property to @label.

Set @label to %NULL to unset the property in the phone number.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="263"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="509">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="510">the new label for the phone number, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_number"
              c:identifier="gdata_gd_phone_number_set_number"
              glib:set-property="number"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="391">Sets the #GDataGDPhoneNumber:number property to @number.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="254"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="393">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
          <parameter name="number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="394">the new phone number</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gd_phone_number_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="468">Sets the #GDataGDPhoneNumber:relation-type property to @relation_type.

Set @relation_type to %NULL to unset the property in the phone number.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="260"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="470">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="471">the new relation type for the phone number, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="gdata_gd_phone_number_set_uri"
              glib:set-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="430">Sets the #GDataGDPhoneNumber:uri property to @uri.

Set @uri to %NULL to unset the property in the phone number.</doc>
        <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                         line="257"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="432">a #GDataGDPhoneNumber</doc>
            <type name="GDPhoneNumber" c:type="GDataGDPhoneNumber*"/>
          </instance-parameter>
          <parameter name="uri"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-phone-number.c"
                 line="433">the new URI for the phone number, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="is-primary"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_primary"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="153">Indicates which phone number out of a group is primary.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdPhoneNumber"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="137">A simple string value used to name this phone number. It allows UIs to display a label such as "Mobile", "Home", "Work", etc.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdPhoneNumber"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="number"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_number"
                getter="get_number"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="89">Human-readable phone number; may be in any telephone number format.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdPhoneNumber"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="121">A programmatic value that identifies the type of phone number. For example: %GDATA_GD_PHONE_NUMBER_WORK or %GDATA_GD_PHONE_NUMBER_PAGER.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdPhoneNumber"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uri"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_uri"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-phone-number.c"
             line="105">An optional "tel URI" used to represent the number in a formal way. Useful for programmatic access, such as a VoIP/PSTN bridge.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdPhoneNumber"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDPhoneNumberPrivate" c:type="GDataGDPhoneNumberPrivate*"/>
      </field>
    </class>
    <record name="GDPhoneNumberClass"
            c:type="GDataGDPhoneNumberClass"
            glib:is-gtype-struct-for="GDPhoneNumber"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="231">All the fields in the #GDataGDPhoneNumberClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="246"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                           line="244"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-phone-number.h"
                           line="245"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDPhoneNumberPrivate"
            c:type="GDataGDPhoneNumberPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="217"/>
    </record>
    <class name="GDPostalAddress"
           c:symbol-prefix="gd_postal_address"
           c:type="GDataGDPostalAddress"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDPostalAddress"
           glib:get-type="gdata_gd_postal_address_get_type"
           glib:type-struct="GDPostalAddressClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="120">All the fields in the #GDataGDPostalAddress structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="147"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gd_postal_address_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="678">Creates a new #GDataGDPostalAddress. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="151"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="687">a new #GDataGDPostalAddress, or %NULL; unref with g_object_unref()</doc>
          <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
        </return-value>
        <parameters>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="680">the relationship between the address and its owner, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="681">a human-readable label for the address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="682">%TRUE if this phone number is its owner's primary number, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address"
              c:identifier="gdata_gd_postal_address_get_address"
              glib:get-property="address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="698">Gets the #GDataGDPostalAddress:address property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="704">the postal address itself, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="700">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_agent"
              c:identifier="gdata_gd_postal_address_get_agent"
              glib:get-property="agent"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="926">Gets the #GDataGDPostalAddress:agent property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="172"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="932">the postal address' agent, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="928">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_city"
              c:identifier="gdata_gd_postal_address_get_city"
              glib:get-property="city"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1121">Gets the #GDataGDPostalAddress:city property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1127">the postal address' city, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1123">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_country"
              c:identifier="gdata_gd_postal_address_get_country"
              glib:get-property="country"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1277">Gets the #GDataGDPostalAddress:country property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1283">the postal address' country, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1279">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_country_code"
              c:identifier="gdata_gd_postal_address_get_country_code"
              glib:get-property="country-code"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1294">Gets the #GDataGDPostalAddress:country-code property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="200"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1300">the postal address' ISO 3166-1 alpha-2 country code, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1296">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_house_name"
              c:identifier="gdata_gd_postal_address_get_house_name"
              glib:get-property="house-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="965">Gets the #GDataGDPostalAddress:house-name property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="175"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="971">the postal address' house name, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="967">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gdata_gd_postal_address_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="775">Gets the #GDataGDPostalAddress:label property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="781">the postal address' label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="777">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mail_class"
              c:identifier="gdata_gd_postal_address_get_mail_class"
              glib:get-property="mail-class"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="848">Gets the #GDataGDPostalAddress:mail-class property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="854">the postal address' mail class, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="850">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_neighborhood"
              c:identifier="gdata_gd_postal_address_get_neighborhood"
              glib:get-property="neighborhood"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1082">Gets the #GDataGDPostalAddress:neighborhood property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1088">the postal address' neighborhood, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1084">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_po_box"
              c:identifier="gdata_gd_postal_address_get_po_box"
              glib:get-property="po-box"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1043">Gets the #GDataGDPostalAddress:po-box property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="181"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1049">the postal address' P.O. box, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1045">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_postcode"
              c:identifier="gdata_gd_postal_address_get_postcode"
              glib:get-property="postcode"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1238">Gets the #GDataGDPostalAddress:postcode property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="196"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1244">the postal address' postcode, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1240">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_region"
              c:identifier="gdata_gd_postal_address_get_region"
              glib:get-property="region"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1199">Gets the #GDataGDPostalAddress:region property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1205">the postal address' region, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1201">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gd_postal_address_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="736">Gets the #GDataGDPostalAddress:relation-type property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="742">the postal address' relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="738">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_street"
              c:identifier="gdata_gd_postal_address_get_street"
              glib:get-property="street"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1004">Gets the #GDataGDPostalAddress:street property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1010">the postal address' street, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1006">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subregion"
              c:identifier="gdata_gd_postal_address_get_subregion"
              glib:get-property="subregion"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1160">Gets the #GDataGDPostalAddress:subregion property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="1166">the postal address' subregion, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1162">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_usage"
              c:identifier="gdata_gd_postal_address_get_usage"
              glib:get-property="usage"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="887">Gets the #GDataGDPostalAddress:usage property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="893">the postal address' usage, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="889">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_primary"
              c:identifier="gdata_gd_postal_address_is_primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="813">Gets the #GDataGDPostalAddress:is-primary property.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-postal-address.c"
               line="819">%TRUE if this is the primary postal address, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="815">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_address"
              c:identifier="gdata_gd_postal_address_set_address"
              glib:set-property="address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="715">Sets the #GDataGDPostalAddress:address property to @address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="717">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="718">the new postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_agent"
              c:identifier="gdata_gd_postal_address_set_agent"
              glib:set-property="agent"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="943">Sets the #GDataGDPostalAddress:agent property to @agent.

Set @agent to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="945">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="agent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="946">the new agent for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_city"
              c:identifier="gdata_gd_postal_address_set_city"
              glib:set-property="city"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1138">Sets the #GDataGDPostalAddress:city property to @city.

Set @city to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1140">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="city"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1141">the new city for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_country"
              c:identifier="gdata_gd_postal_address_set_country"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1311">Sets the #GDataGDPostalAddress:country property to @country, and #GDataGDPostalAddress:country-code to @country_code.

Set @country or @country_code to %NULL to unset the relevant property in the postal address. If a @country_code is provided, a @country must
also be provided.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="201"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1313">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="country"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1314">the new country for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="country_code"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1315">the new country code for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_house_name"
              c:identifier="gdata_gd_postal_address_set_house_name"
              glib:set-property="house-name"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="982">Sets the #GDataGDPostalAddress:house-name property to @house_name.

Set @house_name to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="984">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="house_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="985">the new house name for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_primary"
              c:identifier="gdata_gd_postal_address_set_is_primary"
              glib:set-property="is-primary"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="830">Sets the #GDataGDPostalAddress:is-primary property to @is_primary.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="832">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="is_primary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="833">%TRUE if this is the primary postal address, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gd_postal_address_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="792">Sets the #GDataGDPostalAddress:label property to @label.

Set @label to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="794">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="795">the new label for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mail_class"
              c:identifier="gdata_gd_postal_address_set_mail_class"
              glib:set-property="mail-class"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="865">Sets the #GDataGDPostalAddress:mail-class property to @mail_class.

Set @mail_class to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="867">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="mail_class"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="868">the new mail class for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_neighborhood"
              c:identifier="gdata_gd_postal_address_set_neighborhood"
              glib:set-property="neighborhood"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1099">Sets the #GDataGDPostalAddress:neighborhood property to @neighborhood.

Set @neighborhood to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="185"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1101">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="neighborhood"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1102">the new neighborhood for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_po_box"
              c:identifier="gdata_gd_postal_address_set_po_box"
              glib:set-property="po-box"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1060">Sets the #GDataGDPostalAddress:po-box property to @po_box.

Set @po_box to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1062">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="po_box"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1063">the new P.O. box for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_postcode"
              c:identifier="gdata_gd_postal_address_set_postcode"
              glib:set-property="postcode"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1255">Sets the #GDataGDPostalAddress:postcode property to @postcode.

Set @postcode to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="197"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1257">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="postcode"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1258">the new postcode for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_region"
              c:identifier="gdata_gd_postal_address_set_region"
              glib:set-property="region"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1216">Sets the #GDataGDPostalAddress:region property to @region.

Set @region to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1218">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="region"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1219">the new region for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gd_postal_address_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="753">Sets the #GDataGDPostalAddress:relation-type property to @relation_type.

Set @relation_type to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="755">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="756">the new relation type for the postal_address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_street"
              c:identifier="gdata_gd_postal_address_set_street"
              glib:set-property="street"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1021">Sets the #GDataGDPostalAddress:street property to @street.

Set @street to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="179"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1023">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="street"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1024">the new street for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subregion"
              c:identifier="gdata_gd_postal_address_set_subregion"
              glib:set-property="subregion"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="1177">Sets the #GDataGDPostalAddress:subregion property to @subregion.

Set @subregion to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1179">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="subregion"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="1180">the new subregion for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_usage"
              c:identifier="gdata_gd_postal_address_set_usage"
              glib:set-property="usage"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="904">Sets the #GDataGDPostalAddress:usage property to @usage.

Set @usage to %NULL to unset the property in the postal address.</doc>
        <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                         line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="906">a #GDataGDPostalAddress</doc>
            <type name="GDPostalAddress" c:type="GDataGDPostalAddress*"/>
          </instance-parameter>
          <parameter name="usage"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-postal-address.c"
                 line="907">the new usage for the postal address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="address"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_address"
                getter="get_address"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="114">The postal address itself, formatted and unstructured. It is preferred to use the other, structured properties rather than this one.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="agent"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_agent"
                getter="get_agent"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="211">The agent who actually receives the mail. Used in work addresses. Also for "in care of" or "c/o".

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="city"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_city"
                getter="get_city"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="292">Can be city, village, town, borough, etc. This is the postal town and not necessarily the place of residence or place of business.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="country"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_country"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="357">The name of the country. Since this is paired with #GDataGDPostalAddress:country-code, they must both be set with
gdata_gd_postal_address_set_country().

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="country-code"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_country_code"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="374">The ISO 3166-1 alpha-2 country code for the country in #GDataGDPostalAddress:country. Since this is paired with
#GDataGDPostalAddress:country, they must both be set with gdata_gd_postal_address_set_country().

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;
or &lt;ulink type="http" url="http://www.iso.org/iso/iso-3166-1_decoding_table"&gt;ISO 3166-1 alpha-2&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="house-name"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_house_name"
                getter="get_house_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="227">Used in places where houses or buildings have names (and not necessarily numbers).

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-primary"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_primary"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="163">Indicates which postal address out of a group is primary.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="147">A simple string value used to name this postal address. It allows UIs to display a label such as "Work", "Personal", "Preferred", etc.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mail-class"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_mail_class"
                getter="get_mail_class"
                default-value="http://schemas.google.com/g/2005#both">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="179">Classes of mail accepted at this address. For example: %GDATA_GD_MAIL_CLASS_LETTERS or %GDATA_GD_MAIL_CLASS_BOTH.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="neighborhood"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_neighborhood"
                getter="get_neighborhood"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="275">This is used to disambiguate a street address when a city contains more than one street with the same name, or to specify a small place
whose mail is routed through a larger postal town. In China it could be a county or a minor city.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="po-box"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_po_box"
                getter="get_po_box"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="259">Covers actual P.O. boxes, drawers, locked bags, etc. This is usually but not always mutually exclusive with #GDataGDPostalAddress:street.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="postcode"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_postcode"
                getter="get_postcode"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="341">Postal code. Usually country-wide, but sometimes specific to the city (e.g. "2" in "Dublin 2, Ireland" addresses).

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="region"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_region"
                getter="get_region"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="325">A state, province, county (in Ireland), Land (in Germany), departement (in France), etc.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="http://schemas.google.com/g/2005#work">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="130">A programmatic value that identifies the type of postal address. For example: %GDATA_GD_POSTAL_ADDRESS_WORK or
%GDATA_GD_POSTAL_ADDRESS_OTHER.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="street"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_street"
                getter="get_street"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="243">Can be street, avenue, road, etc. This element also includes the house number and room/apartment/flat/floor number.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subregion"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_subregion"
                getter="get_subregion"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="308">Handles administrative districts such as U.S. or U.K. counties that are not used for mail addressing purposes.
Subregion is not intended for delivery addresses.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="usage"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_usage"
                getter="get_usage"
                default-value="http://schemas.google.com/g/2005#general">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-postal-address.c"
             line="195">The context in which this address can be used. For example: %GDATA_GD_ADDRESS_USAGE_GENERAL or %GDATA_GD_ADDRESS_USAGE_LOCAL.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDPostalAddressPrivate"
              c:type="GDataGDPostalAddressPrivate*"/>
      </field>
    </class>
    <record name="GDPostalAddressClass"
            c:type="GDataGDPostalAddressClass"
            glib:is-gtype-struct-for="GDPostalAddress"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="132">All the fields in the #GDataGDPostalAddressClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="147"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                           line="145"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                           line="146"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDPostalAddressPrivate"
            c:type="GDataGDPostalAddressPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="118"/>
    </record>
    <class name="GDReminder"
           c:symbol-prefix="gd_reminder"
           c:type="GDataGDReminder"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDReminder"
           glib:get-type="gdata_gd_reminder_get_type"
           glib:type-struct="GDReminderClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-reminder.h"
           line="66">All the fields in the #GDataGDReminder structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="93"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gd_reminder_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="314">Creates a new #GDataGDReminder. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdReminder"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-reminder.c"
               line="323">a new #GDataGDReminder, or %NULL; unref with g_object_unref()</doc>
          <type name="GDReminder" c:type="GDataGDReminder*"/>
        </return-value>
        <parameters>
          <parameter name="method"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="316">the notification method the reminder should use, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="absolute_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="317">the absolute time for the reminder, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="relative_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="318">the relative time for the reminder, in minutes, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_absolute_time"
              c:identifier="gdata_gd_reminder_get_absolute_time"
              glib:get-property="absolute-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="374">Gets the #GDataGDReminder:absolute-time property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-reminder.c"
               line="380">the UNIX timestamp of the absolute time for the reminder, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="376">a #GDataGDReminder</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_method"
              c:identifier="gdata_gd_reminder_get_method"
              glib:get-property="method"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="336">Gets the #GDataGDReminder:method property.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-reminder.c"
               line="342">the method, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="338">a #GDataGDReminder</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relative_time"
              c:identifier="gdata_gd_reminder_get_relative_time"
              glib:get-property="relative-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="430">Gets the #GDataGDReminder:relative-time property.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-reminder.c"
               line="436">the relative time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="432">a #GDataGDReminder</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_absolute_time"
              c:identifier="gdata_gd_reminder_is_absolute_time"
              glib:get-property="is-absolute-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="412">Returns whether the reminder is specified as an absolute time, or as a number of minutes after
the corresponding event's start time.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-reminder.c"
               line="419">%TRUE if the reminder is absolute, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="414">a #GDataGDReminder</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_absolute_time"
              c:identifier="gdata_gd_reminder_set_absolute_time"
              glib:set-property="absolute-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="391">Sets the #GDataGDReminder:absolute-time property to @absolute_time.

Set @absolute_time to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="393">a #GDataGDReminder</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </instance-parameter>
          <parameter name="absolute_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="394">the new absolute time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_method"
              c:identifier="gdata_gd_reminder_set_method"
              glib:set-property="method"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="353">Sets the #GDataGDReminder:method property to @method.

Set @method to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="355">a #GDataGDReminder</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </instance-parameter>
          <parameter name="method"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="356">the new method, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relative_time"
              c:identifier="gdata_gd_reminder_set_relative_time"
              glib:set-property="relative-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="447">Sets the #GDataGDReminder:relative-time property to @relative_time.

Set @relative_time to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-reminder.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="449">a #GDataGDReminder</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </instance-parameter>
          <parameter name="relative_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-reminder.c"
                 line="450">the new relative time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="absolute-time"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_absolute_time"
                getter="get_absolute_time"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="98">Absolute time at which the reminder should be issued.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdReminder"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="is-absolute-time"
                version="0.4.0"
                transfer-ownership="none"
                getter="is_absolute_time"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="114">Whether the reminder is specified as an absolute or relative time.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdReminder"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="method"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_method"
                getter="get_method"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="82">The notification method the reminder should use. For example: %GDATA_GD_REMINDER_ALERT or %GDATA_GD_REMINDER_EMAIL.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdReminder"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relative-time"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relative_time"
                getter="get_relative_time"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-reminder.c"
             line="130">Time at which the reminder should be issued, in minutes relative to the start time of the corresponding event.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdReminder"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDReminderPrivate" c:type="GDataGDReminderPrivate*"/>
      </field>
    </class>
    <record name="GDReminderClass"
            c:type="GDataGDReminderClass"
            glib:is-gtype-struct-for="GDReminder"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-reminder.h"
           line="78">All the fields in the #GDataGDReminderClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="93"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-reminder.h" line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-reminder.h" line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDReminderPrivate"
            c:type="GDataGDReminderPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="64"/>
    </record>
    <class name="GDWhen"
           c:symbol-prefix="gd_when"
           c:type="GDataGDWhen"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDWhen"
           glib:get-type="gdata_gd_when_get_type"
           glib:type-struct="GDWhenClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="121">All the fields in the #GDataGDWhen structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="148"/>
      <implements name="Comparable"/>
      <constructor name="new" c:identifier="gdata_gd_when_new" version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="384">Creates a new #GDataGDWhen. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhen"&gt;GData specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-when.c"
               line="393">a new #GDataGDWhen, or %NULL; unref with g_object_unref()</doc>
          <type name="GDWhen" c:type="GDataGDWhen*"/>
        </return-value>
        <parameters>
          <parameter name="start_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="386">when the event starts or (for zero-duration events) when it occurs</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="end_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="387">when the event ends, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="is_date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="388">%TRUE if @start_time and @end_time specify dates rather than times, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_reminder"
              c:identifier="gdata_gd_when_add_reminder"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="573">Adds a reminder to the #GDataGDWhen's list of reminders and increments its reference count.

Duplicate reminders will not be added to the list.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="575">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
          <parameter name="reminder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="576">a #GDataGDReminder to add</doc>
            <type name="GDReminder" c:type="GDataGDReminder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_end_time"
              c:identifier="gdata_gd_when_get_end_time"
              glib:get-property="end-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="442">Gets the #GDataGDWhen:end-time property.

If the end time is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-when.c"
               line="450">the UNIX timestamp for the end time of the event, or
&lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="444">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reminders"
              c:identifier="gdata_gd_when_get_reminders"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="556">Returns a list of the #GDataGDReminders which are associated with this #GDataGDWhen.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-when.c"
               line="562">a #GList of #GDataGDReminders, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GDReminder"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="558">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_time"
              c:identifier="gdata_gd_when_get_start_time"
              glib:get-property="start-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="406">Gets the #GDataGDWhen:start-time property.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-when.c"
               line="412">the UNIX timestamp for the start time of the event</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="408">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_string"
              c:identifier="gdata_gd_when_get_value_string"
              glib:get-property="value-string"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="518">Gets the #GDataGDWhen:value-string property.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-when.c"
               line="524">the value string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="520">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_date"
              c:identifier="gdata_gd_when_is_date"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="483">Gets the #GDataGDWhen:is-date property.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-when.c"
               line="489">%TRUE if #GDataGDWhen:start-time and #GDataGDWhen:end-time are dates rather than times, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="485">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_end_time"
              c:identifier="gdata_gd_when_set_end_time"
              glib:set-property="end-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="462">Sets the #GDataGDWhen:end-time property to @end_time.

Set @end_time to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="464">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
          <parameter name="end_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="465">the new end time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_date"
              c:identifier="gdata_gd_when_set_is_date"
              glib:set-property="is-date"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="500">Sets the #GDataGDWhen:is-date property to @is_date.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="502">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
          <parameter name="is_date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="503">%TRUE if #GDataGDWhen:start-time and #GDataGDWhen:end-time should be dates rather than times, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_time"
              c:identifier="gdata_gd_when_set_start_time"
              glib:set-property="start-time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="423">Sets the #GDataGDWhen:start-time property to @start_time.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="425">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
          <parameter name="start_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="426">the new start time</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_string"
              c:identifier="gdata_gd_when_set_value_string"
              glib:set-property="value-string"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="535">Sets the #GDataGDWhen:value-string property to @value_string.

Set @value_string to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-when.h" line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="537">a #GDataGDWhen</doc>
            <type name="GDWhen" c:type="GDataGDWhen*"/>
          </instance-parameter>
          <parameter name="value_string"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-when.c"
                 line="538">the new value string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="end-time"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_end_time"
                getter="get_end_time"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="110">The title of a person within the when.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhen"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="is-date"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_date"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="126">A programmatic value that identifies the type of when.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhen"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="start-time"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_start_time"
                getter="get_start_time"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="94">The name of the when.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhen"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="value-string"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_value_string"
                getter="get_value_string"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-when.c"
             line="142">A simple string value used to name this when. It allows UIs to display a label such as "Work", "Volunteer",
"Professional Society", etc.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhen"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDWhenPrivate" c:type="GDataGDWhenPrivate*"/>
      </field>
    </class>
    <record name="GDWhenClass"
            c:type="GDataGDWhenClass"
            glib:is-gtype-struct-for="GDWhen"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="133">All the fields in the #GDataGDWhenClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="148"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-when.h" line="146"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-when.h" line="147"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDWhenPrivate"
            c:type="GDataGDWhenPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-when.h" line="119"/>
    </record>
    <class name="GDWhere"
           c:symbol-prefix="gd_where"
           c:type="GDataGDWhere"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDWhere"
           glib:get-type="gdata_gd_where_get_type"
           glib:type-struct="GDWhereClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-where.h"
           line="66">All the fields in the #GDataGDWhere structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-where.h" line="93"/>
      <implements name="Comparable"/>
      <constructor name="new"
                   c:identifier="gdata_gd_where_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="271">Creates a new #GDataGDWhere. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhere"&gt;GData specification&lt;/ulink&gt;.

Currently, entryLink functionality is not implemented in #GDataGDWhere.</doc>
        <source-position filename="gdata/gd/gdata-gd-where.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-where.c"
               line="282">a new #GDataGDWhere; unref with g_object_unref()</doc>
          <type name="GDWhere" c:type="GDataGDWhere*"/>
        </return-value>
        <parameters>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="273">the relationship between the item and this place, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value_string"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="274">a string to represent the place, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="275">a human-readable label for the place, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_label"
              c:identifier="gdata_gd_where_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="370">Gets the #GDataGDWhere:label property.</doc>
        <source-position filename="gdata/gd/gdata-gd-where.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-where.c"
               line="376">the label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="372">a #GDataGDWhere</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gd_where_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="293">Gets the #GDataGDWhere:relation-type property.</doc>
        <source-position filename="gdata/gd/gdata-gd-where.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-where.c"
               line="299">the relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="295">a #GDataGDWhere</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_string"
              c:identifier="gdata_gd_where_get_value_string"
              glib:get-property="value-string"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="332">Gets the #GDataGDWhere:value-string property.</doc>
        <source-position filename="gdata/gd/gdata-gd-where.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-where.c"
               line="338">the value string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="334">a #GDataGDWhere</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_gd_where_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="387">Sets the #GDataGDWhere:label property to @label.

Set @label to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-where.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="389">a #GDataGDWhere</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="390">the new label, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gd_where_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="310">Sets the #GDataGDWhere:relation-type property to @relation_type.

Set @relation_type to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-where.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="312">a #GDataGDWhere</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="313">the new relation type, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_string"
              c:identifier="gdata_gd_where_set_value_string"
              glib:set-property="value-string"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="349">Sets the #GDataGDWhere:value-string property to @value_string.

Set @value_string to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-where.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="351">a #GDataGDWhere</doc>
            <type name="GDWhere" c:type="GDataGDWhere*"/>
          </instance-parameter>
          <parameter name="value_string"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-where.c"
                 line="352">the new value string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="117">Specifies a user-readable label to distinguish this location from others.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhere"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="84">Specifies the relationship between the containing entity and the contained location. For example: %GDATA_GD_WHERE_EVENT or
%GDATA_GD_WHERE_EVENT_PARKING.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhere"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="value-string"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_value_string"
                getter="get_value_string"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-where.c"
             line="101">A simple string representation of this location.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhere"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDWherePrivate" c:type="GDataGDWherePrivate*"/>
      </field>
    </class>
    <record name="GDWhereClass"
            c:type="GDataGDWhereClass"
            glib:is-gtype-struct-for="GDWhere"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-where.h"
           line="78">All the fields in the #GDataGDWhereClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-where.h" line="93"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-where.h" line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-where.h" line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDWherePrivate"
            c:type="GDataGDWherePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-where.h" line="64"/>
    </record>
    <class name="GDWho"
           c:symbol-prefix="gd_who"
           c:type="GDataGDWho"
           version="0.2.0"
           parent="Parsable"
           glib:type-name="GDataGDWho"
           glib:get-type="gdata_gd_who_get_type"
           glib:type-struct="GDWhoClass">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-who.h"
           line="77">All the fields in the #GDataGDWho structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-who.h" line="104"/>
      <implements name="Comparable"/>
      <constructor name="new" c:identifier="gdata_gd_who_new" version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="276">Creates a new #GDataGDWho. More information is available in the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWho"&gt;GData specification&lt;/ulink&gt;.

Currently, entryLink functionality is not implemented in #GDataGDWho.</doc>
        <source-position filename="gdata/gd/gdata-gd-who.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-who.c"
               line="287">a new #GDataGDWho; unref with g_object_unref()</doc>
          <type name="GDWho" c:type="GDataGDWho*"/>
        </return-value>
        <parameters>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="278">the relationship between the item and this person, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value_string"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="279">a string to represent the person, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="email_address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="280">the person's e-mail address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_email_address"
              c:identifier="gdata_gd_who_get_email_address"
              glib:get-property="email-address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="376">Gets the #GDataGDWho:email-address property.</doc>
        <source-position filename="gdata/gd/gdata-gd-who.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-who.c"
               line="382">the e-mail address, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="378">a #GDataGDWho</doc>
            <type name="GDWho" c:type="GDataGDWho*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_gd_who_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="299">Gets the #GDataGDWho:relation-type property.</doc>
        <source-position filename="gdata/gd/gdata-gd-who.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-who.c"
               line="305">the relation type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="301">a #GDataGDWho</doc>
            <type name="GDWho" c:type="GDataGDWho*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_string"
              c:identifier="gdata_gd_who_get_value_string"
              glib:get-property="value-string"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="338">Gets the #GDataGDWho:value-string property.</doc>
        <source-position filename="gdata/gd/gdata-gd-who.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gd/gdata-gd-who.c"
               line="344">the value string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="340">a #GDataGDWho</doc>
            <type name="GDWho" c:type="GDataGDWho*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_email_address"
              c:identifier="gdata_gd_who_set_email_address"
              glib:set-property="email-address"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="393">Sets the #GDataGDWho:email-address property to @email_address.

Set @email_address to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-who.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="395">a #GDataGDWho</doc>
            <type name="GDWho" c:type="GDataGDWho*"/>
          </instance-parameter>
          <parameter name="email_address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="396">the new e-mail address, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_gd_who_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="316">Sets the #GDataGDWho:relation-type property to @relation_type.

Set @relation_type to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-who.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="318">a #GDataGDWho</doc>
            <type name="GDWho" c:type="GDataGDWho*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="319">the new relation type, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_string"
              c:identifier="gdata_gd_who_set_value_string"
              glib:set-property="value-string"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="355">Sets the #GDataGDWho:value-string property to @value_string.

Set @value_string to %NULL to unset the property.</doc>
        <source-position filename="gdata/gd/gdata-gd-who.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="357">a #GDataGDWho</doc>
            <type name="GDWho" c:type="GDataGDWho*"/>
          </instance-parameter>
          <parameter name="value_string"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gd/gdata-gd-who.c"
                 line="358">the new value string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="email-address"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_email_address"
                getter="get_email_address"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="117">The e-mail address of the person represented by the #GDataGDWho.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWho"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="84">Specifies the relationship between the containing entity and the contained person. For example: %GDATA_GD_WHO_EVENT_PERFORMER or
%GDATA_GD_WHO_EVENT_ATTENDEE.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWho"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="value-string"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_value_string"
                getter="get_value_string"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gd/gdata-gd-who.c"
             line="101">A simple string representation of this person.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWho"&gt;GData specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GDWhoPrivate" c:type="GDataGDWhoPrivate*"/>
      </field>
    </class>
    <record name="GDWhoClass"
            c:type="GDataGDWhoClass"
            glib:is-gtype-struct-for="GDWho"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-who.h"
           line="89">All the fields in the #GDataGDWhoClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gd/gdata-gd-who.h" line="104"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gd/gdata-gd-who.h" line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gd/gdata-gd-who.h" line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GDWhoPrivate"
            c:type="GDataGDWhoPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gd/gdata-gd-who.h" line="75"/>
    </record>
    <constant name="GD_ADDRESS_USAGE_GENERAL"
              value="http://schemas.google.com/g/2005#general"
              c:type="GDATA_GD_ADDRESS_USAGE_GENERAL"
              version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="93">The address is for general usage. Value for #GDataGDPostalAddress:usage.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_ADDRESS_USAGE_LOCAL"
              value="http://schemas.google.com/g/2005#local"
              c:type="GDATA_GD_ADDRESS_USAGE_LOCAL"
              version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="102">The address is for local usage. Value for #GDataGDPostalAddress:usage.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="109"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_EMAIL_ADDRESS"
                    c:identifier="GDATA_GD_EMAIL_ADDRESS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="58"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_EMAIL_ADDRESS_CLASS"
                    c:identifier="GDATA_GD_EMAIL_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="59"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_EMAIL_ADDRESS_GET_CLASS"
                    c:identifier="GDATA_GD_EMAIL_ADDRESS_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="62"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_EMAIL_ADDRESS_HOME"
              value="http://schemas.google.com/g/2005#home"
              c:type="GDATA_GD_EMAIL_ADDRESS_HOME"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-email-address.h"
           line="30">The relation type URI for a home e-mail address.</doc>
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EMAIL_ADDRESS_OTHER"
              value="http://schemas.google.com/g/2005#other"
              c:type="GDATA_GD_EMAIL_ADDRESS_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-email-address.h"
           line="39">The relation type URI for a miscellaneous e-mail address.</doc>
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EMAIL_ADDRESS_WORK"
              value="http://schemas.google.com/g/2005#work"
              c:type="GDATA_GD_EMAIL_ADDRESS_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-email-address.h"
           line="48">The relation type URI for a work e-mail address.</doc>
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_STATUS_CANCELED"
              value="http://schemas.google.com/g/2005#event.canceled"
              c:type="GDATA_GD_EVENT_STATUS_CANCELED"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="31">The event has been canceled.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_STATUS_CONFIRMED"
              value="http://schemas.google.com/g/2005#event.confirmed"
              c:type="GDATA_GD_EVENT_STATUS_CONFIRMED"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="40">The event has been planned and confirmed.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_STATUS_TENTATIVE"
              value="http://schemas.google.com/g/2005#event.tentative"
              c:type="GDATA_GD_EVENT_STATUS_TENTATIVE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="49">The event has been planned, but only tentatively scheduled.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_TRANSPARENCY_OPAQUE"
              value="http://schemas.google.com/g/2005#event.opaque"
              c:type="GDATA_GD_EVENT_TRANSPARENCY_OPAQUE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="94">The event consumes time in calendars; its time will be marked as busy in a free/busy search.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="101"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_TRANSPARENCY_TRANSPARENT"
              value="http://schemas.google.com/g/2005#event.transparent"
              c:type="GDATA_GD_EVENT_TRANSPARENCY_TRANSPARENT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="103">The event does not consume time in calendars; its time will be not marked as busy in a free/busy search.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="110"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_VISIBILITY_CONFIDENTIAL"
              value="http://schemas.google.com/g/2005#event.confidential"
              c:type="GDATA_GD_EVENT_VISIBILITY_CONFIDENTIAL"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="58">The event is visible to only certain people.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_VISIBILITY_DEFAULT"
              value="http://schemas.google.com/g/2005#event.default"
              c:type="GDATA_GD_EVENT_VISIBILITY_DEFAULT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="67">The event's visibility is inherited from the preferences of its owner.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="74"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_VISIBILITY_PRIVATE"
              value="http://schemas.google.com/g/2005#event.private"
              c:type="GDATA_GD_EVENT_VISIBILITY_PRIVATE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="76">The event is visible to very few people.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="83"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_EVENT_VISIBILITY_PUBLIC"
              value="http://schemas.google.com/g/2005#event.public"
              c:type="GDATA_GD_EVENT_VISIBILITY_PUBLIC"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.h"
           line="85">The event is visible to most people.</doc>
      <source-position filename="gdata/gd/gdata-gd-when.h" line="92"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_IM_ADDRESS"
                    c:identifier="GDATA_GD_IM_ADDRESS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="139"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_IM_ADDRESS_CLASS"
                    c:identifier="GDATA_GD_IM_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="140"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_IM_ADDRESS_GET_CLASS"
                    c:identifier="GDATA_GD_IM_ADDRESS_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="143"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_IM_ADDRESS_HOME"
              value="http://schemas.google.com/g/2005#home"
              c:type="GDATA_GD_IM_ADDRESS_HOME"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="30">The relation type URI for a home IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_ADDRESS_NETMEETING"
              value="http://schemas.google.com/g/2005#netmeeting"
              c:type="GDATA_GD_IM_ADDRESS_NETMEETING"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="39">The relation type URI for a Microsoft NetMeeting IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_ADDRESS_OTHER"
              value="http://schemas.google.com/g/2005#other"
              c:type="GDATA_GD_IM_ADDRESS_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="48">The relation type URI for a miscellaneous IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_ADDRESS_WORK"
              value="http://schemas.google.com/g/2005#work"
              c:type="GDATA_GD_IM_ADDRESS_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="57">The relation type URI for a work IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_AIM"
              value="http://schemas.google.com/g/2005#AIM"
              c:type="GDATA_GD_IM_PROTOCOL_AIM"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="66">The protocol type URI for an AIM IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="73"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_GOOGLE_TALK"
              value="http://schemas.google.com/g/2005#GOOGLE_TALK"
              c:type="GDATA_GD_IM_PROTOCOL_GOOGLE_TALK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="111">The protocol type URI for a Google Talk IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="118"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_ICQ"
              value="http://schemas.google.com/g/2005#ICQ"
              c:type="GDATA_GD_IM_PROTOCOL_ICQ"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="120">The protocol type URI for an ICQ IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="127"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_JABBER"
              value="http://schemas.google.com/g/2005#JABBER"
              c:type="GDATA_GD_IM_PROTOCOL_JABBER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="129">The protocol type URI for a Jabber IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="136"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_LIVE_MESSENGER"
              value="http://schemas.google.com/g/2005#MSN"
              c:type="GDATA_GD_IM_PROTOCOL_LIVE_MESSENGER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="75">The protocol type URI for an Windows Live Messenger IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_QQ"
              value="http://schemas.google.com/g/2005#QQ"
              c:type="GDATA_GD_IM_PROTOCOL_QQ"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="102">The protocol type URI for a QQ IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="109"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_SKYPE"
              value="http://schemas.google.com/g/2005#SKYPE"
              c:type="GDATA_GD_IM_PROTOCOL_SKYPE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="93">The protocol type URI for a Skype IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_IM_PROTOCOL_YAHOO_MESSENGER"
              value="http://schemas.google.com/g/2005#YAHOO"
              c:type="GDATA_GD_IM_PROTOCOL_YAHOO_MESSENGER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.h"
           line="84">The protocol type URI for a Yahoo! Messenger IM address.</doc>
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="91"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_MAIL_CLASS_BOTH"
              value="http://schemas.google.com/g/2005#both"
              c:type="GDATA_GD_MAIL_CLASS_BOTH"
              version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="57">Parcels and letters can be sent to the address. Value for #GDataGDPostalAddress:mail-class.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_MAIL_CLASS_LETTERS"
              value="http://schemas.google.com/g/2005#letters"
              c:type="GDATA_GD_MAIL_CLASS_LETTERS"
              version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="66">Only letters can be sent to the address. Value for #GDataGDPostalAddress:mail-class.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="73"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_MAIL_CLASS_NEITHER"
              value="http://schemas.google.com/g/2005#neither"
              c:type="GDATA_GD_MAIL_CLASS_NEITHER"
              version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="84">Address is purely locational and cannot be used for mail. Value for #GDataGDPostalAddress:mail-class.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="91"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_MAIL_CLASS_PARCELS"
              value="http://schemas.google.com/g/2005#parcels"
              c:type="GDATA_GD_MAIL_CLASS_PARCELS"
              version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="75">Only parcels can be sent to the address. Value for #GDataGDPostalAddress:mail-class.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_NAME"
                    c:identifier="GDATA_GD_NAME"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-name.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_NAME_CLASS"
                    c:identifier="GDATA_GD_NAME_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-name.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_NAME_GET_CLASS"
                    c:identifier="GDATA_GD_NAME_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-name.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_ORGANIZATION"
                    c:identifier="GDATA_GD_ORGANIZATION"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="50"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_ORGANIZATION_CLASS"
                    c:identifier="GDATA_GD_ORGANIZATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="51"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_ORGANIZATION_GET_CLASS"
                    c:identifier="GDATA_GD_ORGANIZATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="54"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_ORGANIZATION_OTHER"
              value="http://schemas.google.com/g/2005#other"
              c:type="GDATA_GD_ORGANIZATION_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-organization.h"
           line="40">The relation type URI for a miscellaneous organization.</doc>
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_ORGANIZATION_WORK"
              value="http://schemas.google.com/g/2005#work"
              c:type="GDATA_GD_ORGANIZATION_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-organization.h"
           line="31">The relation type URI for a work organization.</doc>
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_PHONE_NUMBER"
                    c:identifier="GDATA_GD_PHONE_NUMBER"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="211"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_PHONE_NUMBER_ASSISTANT"
              value="http://schemas.google.com/g/2005#assistant"
              c:type="GDATA_GD_PHONE_NUMBER_ASSISTANT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="30">The relation type URI for the phone number of an assistant.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_CALLBACK"
              value="http://schemas.google.com/g/2005#callback"
              c:type="GDATA_GD_PHONE_NUMBER_CALLBACK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="39">The relation type URI for the phone number of a callback service.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_CAR"
              value="http://schemas.google.com/g/2005#car"
              c:type="GDATA_GD_PHONE_NUMBER_CAR"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="48">The relation type URI for the phone number of a car phone.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_PHONE_NUMBER_CLASS"
                    c:identifier="GDATA_GD_PHONE_NUMBER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="212"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_PHONE_NUMBER_COMPANY_MAIN"
              value="http://schemas.google.com/g/2005#company_main"
              c:type="GDATA_GD_PHONE_NUMBER_COMPANY_MAIN"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="57">The relation type URI for the main phone number of a company.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_FAX"
              value="http://schemas.google.com/g/2005#fax"
              c:type="GDATA_GD_PHONE_NUMBER_FAX"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="66">The relation type URI for the phone number of a fax machine.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="73"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_PHONE_NUMBER_GET_CLASS"
                    c:identifier="GDATA_GD_PHONE_NUMBER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="215"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_PHONE_NUMBER_HOME"
              value="http://schemas.google.com/g/2005#home"
              c:type="GDATA_GD_PHONE_NUMBER_HOME"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="75">The relation type URI for a home phone number.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_HOME_FAX"
              value="http://schemas.google.com/g/2005#home_fax"
              c:type="GDATA_GD_PHONE_NUMBER_HOME_FAX"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="84">The relation type URI for the phone number of a home fax machine.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="91"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_ISDN"
              value="http://schemas.google.com/g/2005#isdn"
              c:type="GDATA_GD_PHONE_NUMBER_ISDN"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="93">The relation type URI for the phone number of an ISDN phone.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_MAIN"
              value="http://schemas.google.com/g/2005#main"
              c:type="GDATA_GD_PHONE_NUMBER_MAIN"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="102">The relation type URI for the main phone number of a person.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="109"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_MOBILE"
              value="http://schemas.google.com/g/2005#mobile"
              c:type="GDATA_GD_PHONE_NUMBER_MOBILE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="111">The relation type URI for the phone number of a mobile phone.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="118"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_OTHER"
              value="http://schemas.google.com/g/2005#other"
              c:type="GDATA_GD_PHONE_NUMBER_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="120">The relation type URI for a miscellaneous phone number.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="127"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_OTHER_FAX"
              value="http://schemas.google.com/g/2005#other_fax"
              c:type="GDATA_GD_PHONE_NUMBER_OTHER_FAX"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="129">The relation type URI for a miscellaneous fax machine's phone number.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="136"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_PAGER"
              value="http://schemas.google.com/g/2005#pager"
              c:type="GDATA_GD_PHONE_NUMBER_PAGER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="138">The relation type URI for the phone number of a pager.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="145"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_RADIO"
              value="http://schemas.google.com/g/2005#radio"
              c:type="GDATA_GD_PHONE_NUMBER_RADIO"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="147">The relation type URI for the phone number of a radio phone.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="154"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_TELEX"
              value="http://schemas.google.com/g/2005#telex"
              c:type="GDATA_GD_PHONE_NUMBER_TELEX"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="156">The relation type URI for the phone number of a telex machine.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="163"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_TTY_TDD"
              value="http://schemas.google.com/g/2005#tty_tdd"
              c:type="GDATA_GD_PHONE_NUMBER_TTY_TDD"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="165">The relation type URI for the phone number of a TTY TTD.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="172"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_WORK"
              value="http://schemas.google.com/g/2005#work"
              c:type="GDATA_GD_PHONE_NUMBER_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="174">The relation type URI for the phone number of a work place.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="181"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_WORK_FAX"
              value="http://schemas.google.com/g/2005#work_fax"
              c:type="GDATA_GD_PHONE_NUMBER_WORK_FAX"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="183">The relation type URI for the phone number of a work fax machine.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="190"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_WORK_MOBILE"
              value="http://schemas.google.com/g/2005#work_mobile"
              c:type="GDATA_GD_PHONE_NUMBER_WORK_MOBILE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="192">The relation type URI for the phone number of a work mobile phone.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="199"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_PHONE_NUMBER_WORK_PAGER"
              value="http://schemas.google.com/g/2005#work_pager"
              c:type="GDATA_GD_PHONE_NUMBER_WORK_PAGER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.h"
           line="201">The relation type URI for the phone number of a work pager.</doc>
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="208"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_POSTAL_ADDRESS"
                    c:identifier="GDATA_GD_POSTAL_ADDRESS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="112"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_POSTAL_ADDRESS_CLASS"
                    c:identifier="GDATA_GD_POSTAL_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="113"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_POSTAL_ADDRESS_GET_CLASS"
                    c:identifier="GDATA_GD_POSTAL_ADDRESS_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="116"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_POSTAL_ADDRESS_HOME"
              value="http://schemas.google.com/g/2005#home"
              c:type="GDATA_GD_POSTAL_ADDRESS_HOME"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="39">The relation type URI for the postal address of a home.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_POSTAL_ADDRESS_OTHER"
              value="http://schemas.google.com/g/2005#other"
              c:type="GDATA_GD_POSTAL_ADDRESS_OTHER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="48">The relation type URI for a miscellaneous postal address.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_POSTAL_ADDRESS_WORK"
              value="http://schemas.google.com/g/2005#work"
              c:type="GDATA_GD_POSTAL_ADDRESS_WORK"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.h"
           line="30">The relation type URI for the postal address of a workplace.</doc>
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_REMINDER"
                    c:identifier="GDATA_GD_REMINDER"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="58"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_REMINDER_ALERT"
              value="alert"
              c:type="GDATA_GD_REMINDER_ALERT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-reminder.h"
           line="30">The #GDataGDReminder:method for an alert to appear in the user's browser.</doc>
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_REMINDER_CLASS"
                    c:identifier="GDATA_GD_REMINDER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="59"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_REMINDER_EMAIL"
              value="email"
              c:type="GDATA_GD_REMINDER_EMAIL"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-reminder.h"
           line="39">The #GDataGDReminder:method for an alert to be sent to the user by e-mail.</doc>
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_REMINDER_GET_CLASS"
                    c:identifier="GDATA_GD_REMINDER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="62"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_REMINDER_SMS"
              value="sms"
              c:type="GDATA_GD_REMINDER_SMS"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-reminder.h"
           line="48">The #GDataGDReminder:method for an alert to be sent to the user by SMS.</doc>
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_WHEN"
                    c:identifier="GDATA_GD_WHEN"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-when.h" line="113"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_WHEN_CLASS"
                    c:identifier="GDATA_GD_WHEN_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-when.h" line="114"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_WHEN_GET_CLASS"
                    c:identifier="GDATA_GD_WHEN_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-when.h" line="117"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_WHERE"
                    c:identifier="GDATA_GD_WHERE"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-where.h" line="58"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_WHERE_CLASS"
                    c:identifier="GDATA_GD_WHERE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-where.h" line="59"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_WHERE_EVENT"
              value="http://schemas.google.com/g/2005#event"
              c:type="GDATA_GD_WHERE_EVENT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-where.h"
           line="30">The relation type URI for an event location.</doc>
      <source-position filename="gdata/gd/gdata-gd-where.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_WHERE_EVENT_ALTERNATE"
              value="http://schemas.google.com/g/2005#event.alternate"
              c:type="GDATA_GD_WHERE_EVENT_ALTERNATE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-where.h"
           line="39">The relation type URI for an alternate event location, such as a video conference site.</doc>
      <source-position filename="gdata/gd/gdata-gd-where.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_WHERE_EVENT_PARKING"
              value="http://schemas.google.com/g/2005#event.parking"
              c:type="GDATA_GD_WHERE_EVENT_PARKING"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-where.h"
           line="48">The relation type URI for an event's parking lot.</doc>
      <source-position filename="gdata/gd/gdata-gd-where.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_WHERE_GET_CLASS"
                    c:identifier="GDATA_GD_WHERE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-where.h" line="62"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_WHO"
                    c:identifier="GDATA_GD_WHO"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-who.h" line="69"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GD_WHO_CLASS"
                    c:identifier="GDATA_GD_WHO_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-who.h" line="70"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GD_WHO_EVENT_ATTENDEE"
              value="http://schemas.google.com/g/2005#event.attendee"
              c:type="GDATA_GD_WHO_EVENT_ATTENDEE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-who.h"
           line="30">The relation type URI for a general meeting or event attendee.</doc>
      <source-position filename="gdata/gd/gdata-gd-who.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_WHO_EVENT_ORGANIZER"
              value="http://schemas.google.com/g/2005#event.organizer"
              c:type="GDATA_GD_WHO_EVENT_ORGANIZER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-who.h"
           line="39">The relation type URI for an event organizer (not necessarily an attendee).</doc>
      <source-position filename="gdata/gd/gdata-gd-who.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_WHO_EVENT_PERFORMER"
              value="http://schemas.google.com/g/2005#event.performer"
              c:type="GDATA_GD_WHO_EVENT_PERFORMER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-who.h"
           line="48">The relation type URI for an event performer, which is similar to %GDATA_GD_WHO_EVENT_SPEAKER, but with more emphasis on art rather than speaking.</doc>
      <source-position filename="gdata/gd/gdata-gd-who.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GD_WHO_EVENT_SPEAKER"
              value="http://schemas.google.com/g/2005#event.speaker"
              c:type="GDATA_GD_WHO_EVENT_SPEAKER"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-who.h"
           line="57">The relation type URI for a speaker at an event.</doc>
      <source-position filename="gdata/gd/gdata-gd-who.h" line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="GD_WHO_GET_CLASS"
                    c:identifier="GDATA_GD_WHO_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-who.h" line="73"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GENERATOR"
                    c:identifier="GDATA_GENERATOR"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-generator.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GENERATOR_CLASS"
                    c:identifier="GDATA_GENERATOR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-generator.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GENERATOR_GET_CLASS"
                    c:identifier="GDATA_GENERATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-generator.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GOA_AUTHORIZER"
                    c:identifier="GDATA_GOA_AUTHORIZER"
                    introspectable="0">
      <source-position filename="gdata/gdata-goa-authorizer.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GOA_AUTHORIZER_CLASS"
                    c:identifier="GDATA_GOA_AUTHORIZER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-goa-authorizer.h" line="32"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GOA_AUTHORIZER_GET_CLASS"
                    c:identifier="GDATA_GOA_AUTHORIZER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-goa-authorizer.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Generator"
           c:symbol-prefix="generator"
           c:type="GDataGenerator"
           parent="Parsable"
           glib:type-name="GDataGenerator"
           glib:get-type="gdata_generator_get_type"
           glib:type-struct="GeneratorClass">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-generator.h"
           line="39">All the fields in the #GDataGenerator structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-generator.h" line="64"/>
      <implements name="Comparable"/>
      <method name="get_name"
              c:identifier="gdata_generator_get_name"
              glib:get-property="name"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-generator.c"
             line="214">Gets the #GDataGenerator:name property. The name will be %NULL or non-empty.</doc>
        <source-position filename="gdata/atom/gdata-generator.h" line="68"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-generator.c"
               line="220">the generator's name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-generator.c"
                 line="216">a #GDataGenerator</doc>
            <type name="Generator" c:type="GDataGenerator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_generator_get_uri"
              glib:get-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-generator.c"
             line="231">Gets the #GDataGenerator:uri property. The URI will be %NULL or non-empty.</doc>
        <source-position filename="gdata/atom/gdata-generator.h" line="69"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-generator.c"
               line="237">the generator's URI, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-generator.c"
                 line="233">a #GDataGenerator</doc>
            <type name="Generator" c:type="GDataGenerator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="gdata_generator_get_version"
              glib:get-property="version"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-generator.c"
             line="248">Gets the #GDataGenerator:version property.</doc>
        <source-position filename="gdata/atom/gdata-generator.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-generator.c"
               line="254">the generator's version, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-generator.c"
                 line="250">a #GDataGenerator</doc>
            <type name="Generator" c:type="GDataGenerator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="name"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-generator.c"
             line="73">A human-readable name for the generating agent.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.generator"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uri"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-generator.c"
             line="90">An IRI reference that is relevant to the agent.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.generator"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="version"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_version"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-generator.c"
             line="107">Indicates the version of the generating agent.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.generator"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="GeneratorPrivate" c:type="GDataGeneratorPrivate*"/>
      </field>
    </class>
    <record name="GeneratorClass"
            c:type="GDataGeneratorClass"
            glib:is-gtype-struct-for="Generator"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-generator.h"
           line="49">All the fields in the #GDataGeneratorClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-generator.h" line="64"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/atom/gdata-generator.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/atom/gdata-generator.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GeneratorPrivate"
            c:type="GDataGeneratorPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/atom/gdata-generator.h" line="37"/>
    </record>
    <class name="GoaAuthorizer"
           c:symbol-prefix="goa_authorizer"
           c:type="GDataGoaAuthorizer"
           version="0.13.1"
           parent="GObject.Object"
           glib:type-name="GDataGoaAuthorizer"
           glib:get-type="gdata_goa_authorizer_get_type"
           glib:type-struct="GoaAuthorizerClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-goa-authorizer.h"
           line="41">All the fields in the #GDataGoaAuthorizer structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-goa-authorizer.h" line="69"/>
      <implements name="Authorizer"/>
      <constructor name="new"
                   c:identifier="gdata_goa_authorizer_new"
                   version="0.13.1">
        <doc xml:space="preserve"
             filename="gdata/gdata-goa-authorizer.c"
             line="361">Create a new #GDataGoaAuthorizer using the authentication token from the given @goa_object.</doc>
        <source-position filename="gdata/gdata-goa-authorizer.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-goa-authorizer.c"
               line="367">a new #GDataGoaAuthorizer; unref with g_object_unref()</doc>
          <type name="GoaAuthorizer" c:type="GDataGoaAuthorizer*"/>
        </return-value>
        <parameters>
          <parameter name="goa_object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-goa-authorizer.c"
                 line="363">the GOA account providing authentication</doc>
            <type name="Goa.Object" c:type="GoaObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_goa_object"
              c:identifier="gdata_goa_authorizer_get_goa_object"
              glib:get-property="goa-object"
              version="0.13.1">
        <doc xml:space="preserve"
             filename="gdata/gdata-goa-authorizer.c"
             line="379">The GOA account providing authentication. This is the same as #GDataGoaAuthorizer:goa-object.</doc>
        <source-position filename="gdata/gdata-goa-authorizer.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-goa-authorizer.c"
               line="385">the GOA account providing authentication</doc>
          <type name="Goa.Object" c:type="GoaObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-goa-authorizer.c"
                 line="381">a #GDataGoaAuthorizer</doc>
            <type name="GoaAuthorizer" c:type="GDataGoaAuthorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="goa-object"
                version="0.13.1"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_goa_object">
        <doc xml:space="preserve"
             filename="gdata/gdata-goa-authorizer.c"
             line="329">The GOA account providing authentication. This should have all the necessary services enabled on it.</doc>
        <type name="Goa.Object"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GoaAuthorizerPrivate" c:type="GDataGoaAuthorizerPrivate*"/>
      </field>
    </class>
    <record name="GoaAuthorizerClass"
            c:type="GDataGoaAuthorizerClass"
            glib:is-gtype-struct-for="GoaAuthorizer"
            version="0.13.1">
      <doc xml:space="preserve"
           filename="gdata/gdata-goa-authorizer.h"
           line="54">All the fields in the #GDataGoaAuthorizerClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-goa-authorizer.h" line="69"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-goa-authorizer.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-goa-authorizer.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GoaAuthorizerPrivate"
            c:type="GDataGoaAuthorizerPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-goa-authorizer.h" line="39"/>
    </record>
    <function-macro name="IS_ACCESS_HANDLER"
                    c:identifier="GDATA_IS_ACCESS_HANDLER"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-handler.h" line="48"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACCESS_RULE"
                    c:identifier="GDATA_IS_ACCESS_RULE"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-rule.h" line="70"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACCESS_RULE_CLASS"
                    c:identifier="GDATA_IS_ACCESS_RULE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-access-rule.h" line="71"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_APP_CATEGORIES"
                    c:identifier="GDATA_IS_APP_CATEGORIES"
                    introspectable="0">
      <source-position filename="gdata/app/gdata-app-categories.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_APP_CATEGORIES_CLASS"
                    c:identifier="GDATA_IS_APP_CATEGORIES_CLASS"
                    introspectable="0">
      <source-position filename="gdata/app/gdata-app-categories.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_AUTHOR"
                    c:identifier="GDATA_IS_AUTHOR"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-author.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_AUTHORIZATION_DOMAIN"
                    c:identifier="GDATA_IS_AUTHORIZATION_DOMAIN"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_AUTHORIZATION_DOMAIN_CLASS"
                    c:identifier="GDATA_IS_AUTHORIZATION_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorization-domain.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_AUTHORIZER"
                    c:identifier="GDATA_IS_AUTHORIZER"
                    introspectable="0">
      <source-position filename="gdata/gdata-authorizer.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_AUTHOR_CLASS"
                    c:identifier="GDATA_IS_AUTHOR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-author.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BATCHABLE"
                    c:identifier="GDATA_IS_BATCHABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-batchable.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BATCH_OPERATION"
                    c:identifier="GDATA_IS_BATCH_OPERATION"
                    introspectable="0">
      <source-position filename="gdata/gdata-batch-operation.h" line="93"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BATCH_OPERATION_CLASS"
                    c:identifier="GDATA_IS_BATCH_OPERATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-batch-operation.h" line="94"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_ACCESS_RULE"
                    c:identifier="GDATA_IS_CALENDAR_ACCESS_RULE"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="84"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_ACCESS_RULE_CLASS"
                    c:identifier="GDATA_IS_CALENDAR_ACCESS_RULE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-access-rule.h"
                       line="85"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_CALENDAR"
                    c:identifier="GDATA_IS_CALENDAR_CALENDAR"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_CALENDAR_CLASS"
                    c:identifier="GDATA_IS_CALENDAR_CALENDAR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-calendar.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_EVENT"
                    c:identifier="GDATA_IS_CALENDAR_EVENT"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_EVENT_CLASS"
                    c:identifier="GDATA_IS_CALENDAR_EVENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-event.h"
                       line="38"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_FEED"
                    c:identifier="GDATA_IS_CALENDAR_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_FEED_CLASS"
                    c:identifier="GDATA_IS_CALENDAR_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-feed.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_QUERY"
                    c:identifier="GDATA_IS_CALENDAR_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_QUERY_CLASS"
                    c:identifier="GDATA_IS_CALENDAR_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-query.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_SERVICE"
                    c:identifier="GDATA_IS_CALENDAR_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CALENDAR_SERVICE_CLASS"
                    c:identifier="GDATA_IS_CALENDAR_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/calendar/gdata-calendar-service.h"
                       line="36"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CATEGORY"
                    c:identifier="GDATA_IS_CATEGORY"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-category.h" line="73"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CATEGORY_CLASS"
                    c:identifier="GDATA_IS_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-category.h" line="74"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COMMENT"
                    c:identifier="GDATA_IS_COMMENT"
                    introspectable="0">
      <source-position filename="gdata/gdata-comment.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COMMENTABLE"
                    c:identifier="GDATA_IS_COMMENTABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-commentable.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COMMENT_CLASS"
                    c:identifier="GDATA_IS_COMMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-comment.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COMPARABLE"
                    c:identifier="GDATA_IS_COMPARABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-comparable.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_ACCESS_RULE"
                    c:identifier="GDATA_IS_DOCUMENTS_ACCESS_RULE"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_ACCESS_RULE_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_ACCESS_RULE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-access-rule.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_DOCUMENT"
                    c:identifier="GDATA_IS_DOCUMENTS_DOCUMENT"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_DOCUMENT_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_DOCUMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-document.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_DRAWING"
                    c:identifier="GDATA_IS_DOCUMENTS_DRAWING"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="88"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_DRAWING_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_DRAWING_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-drawing.h"
                       line="89"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_ENTRY"
                    c:identifier="GDATA_IS_DOCUMENTS_ENTRY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="64"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_ENTRY_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-entry.h"
                       line="65"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_FEED"
                    c:identifier="GDATA_IS_DOCUMENTS_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_FEED_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-feed.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_FOLDER"
                    c:identifier="GDATA_IS_DOCUMENTS_FOLDER"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_FOLDER_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_FOLDER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-folder.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_METADATA"
                    c:identifier="GDATA_IS_DOCUMENTS_METADATA"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_METADATA_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_METADATA_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-metadata.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_PDF"
                    c:identifier="GDATA_IS_DOCUMENTS_PDF"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_PDF_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_PDF_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-pdf.h"
                       line="36"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_PRESENTATION"
                    c:identifier="GDATA_IS_DOCUMENTS_PRESENTATION"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="87"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_PRESENTATION_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_PRESENTATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-presentation.h"
                       line="88"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_PROPERTY"
                    c:identifier="GDATA_IS_DOCUMENTS_PROPERTY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="54"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_PROPERTY_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_PROPERTY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-property.h"
                       line="55"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_QUERY"
                    c:identifier="GDATA_IS_DOCUMENTS_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_QUERY_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-query.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_SERVICE"
                    c:identifier="GDATA_IS_DOCUMENTS_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="50"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_SERVICE_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-service.h"
                       line="51"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_SPREADSHEET"
                    c:identifier="GDATA_IS_DOCUMENTS_SPREADSHEET"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="113"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_SPREADSHEET_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_SPREADSHEET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-spreadsheet.h"
                       line="114"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_TEXT"
                    c:identifier="GDATA_IS_DOCUMENTS_TEXT"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="150"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_TEXT_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_TEXT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-text.h"
                       line="151"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_UPLOAD_QUERY"
                    c:identifier="GDATA_IS_DOCUMENTS_UPLOAD_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENTS_UPLOAD_QUERY_CLASS"
                    c:identifier="GDATA_IS_DOCUMENTS_UPLOAD_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/documents/gdata-documents-upload-query.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOWNLOAD_STREAM"
                    c:identifier="GDATA_IS_DOWNLOAD_STREAM"
                    introspectable="0">
      <source-position filename="gdata/gdata-download-stream.h" line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOWNLOAD_STREAM_CLASS"
                    c:identifier="GDATA_IS_DOWNLOAD_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-download-stream.h" line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY"
                    c:identifier="GDATA_IS_ENTRY"
                    introspectable="0">
      <source-position filename="gdata/gdata-entry.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_CLASS"
                    c:identifier="GDATA_IS_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-entry.h" line="37"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FEED"
                    c:identifier="GDATA_IS_FEED"
                    introspectable="0">
      <source-position filename="gdata/gdata-feed.h" line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FEED_CLASS"
                    c:identifier="GDATA_IS_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-feed.h" line="37"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_CALENDAR"
                    c:identifier="GDATA_IS_GCONTACT_CALENDAR"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="69"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_CALENDAR_CLASS"
                    c:identifier="GDATA_IS_GCONTACT_CALENDAR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-calendar.h"
                       line="70"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_EVENT"
                    c:identifier="GDATA_IS_GCONTACT_EVENT"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="57"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_EVENT_CLASS"
                    c:identifier="GDATA_IS_GCONTACT_EVENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-event.h"
                       line="58"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_EXTERNAL_ID"
                    c:identifier="GDATA_IS_GCONTACT_EXTERNAL_ID"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="81"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_EXTERNAL_ID_CLASS"
                    c:identifier="GDATA_IS_GCONTACT_EXTERNAL_ID_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-external-id.h"
                       line="82"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_JOT"
                    c:identifier="GDATA_IS_GCONTACT_JOT"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="93"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_JOT_CLASS"
                    c:identifier="GDATA_IS_GCONTACT_JOT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-jot.h"
                       line="94"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_LANGUAGE"
                    c:identifier="GDATA_IS_GCONTACT_LANGUAGE"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_LANGUAGE_CLASS"
                    c:identifier="GDATA_IS_GCONTACT_LANGUAGE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-language.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_RELATION"
                    c:identifier="GDATA_IS_GCONTACT_RELATION"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="201"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_RELATION_CLASS"
                    c:identifier="GDATA_IS_GCONTACT_RELATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-relation.h"
                       line="202"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_WEBSITE"
                    c:identifier="GDATA_IS_GCONTACT_WEBSITE"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="117"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GCONTACT_WEBSITE_CLASS"
                    c:identifier="GDATA_IS_GCONTACT_WEBSITE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gcontact/gdata-gcontact-website.h"
                       line="118"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_EMAIL_ADDRESS"
                    c:identifier="GDATA_IS_GD_EMAIL_ADDRESS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="60"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_EMAIL_ADDRESS_CLASS"
                    c:identifier="GDATA_IS_GD_EMAIL_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-email-address.h" line="61"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_IM_ADDRESS"
                    c:identifier="GDATA_IS_GD_IM_ADDRESS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="141"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_IM_ADDRESS_CLASS"
                    c:identifier="GDATA_IS_GD_IM_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-im-address.h" line="142"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_NAME"
                    c:identifier="GDATA_IS_GD_NAME"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-name.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_NAME_CLASS"
                    c:identifier="GDATA_IS_GD_NAME_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-name.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_ORGANIZATION"
                    c:identifier="GDATA_IS_GD_ORGANIZATION"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="52"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_ORGANIZATION_CLASS"
                    c:identifier="GDATA_IS_GD_ORGANIZATION_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-organization.h" line="53"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_PHONE_NUMBER"
                    c:identifier="GDATA_IS_GD_PHONE_NUMBER"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="213"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_PHONE_NUMBER_CLASS"
                    c:identifier="GDATA_IS_GD_PHONE_NUMBER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-phone-number.h" line="214"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_POSTAL_ADDRESS"
                    c:identifier="GDATA_IS_GD_POSTAL_ADDRESS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="114"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_POSTAL_ADDRESS_CLASS"
                    c:identifier="GDATA_IS_GD_POSTAL_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-postal-address.h"
                       line="115"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_REMINDER"
                    c:identifier="GDATA_IS_GD_REMINDER"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="60"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_REMINDER_CLASS"
                    c:identifier="GDATA_IS_GD_REMINDER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-reminder.h" line="61"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_WHEN"
                    c:identifier="GDATA_IS_GD_WHEN"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-when.h" line="115"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_WHEN_CLASS"
                    c:identifier="GDATA_IS_GD_WHEN_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-when.h" line="116"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_WHERE"
                    c:identifier="GDATA_IS_GD_WHERE"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-where.h" line="60"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_WHERE_CLASS"
                    c:identifier="GDATA_IS_GD_WHERE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-where.h" line="61"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_WHO"
                    c:identifier="GDATA_IS_GD_WHO"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-who.h" line="71"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GD_WHO_CLASS"
                    c:identifier="GDATA_IS_GD_WHO_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gd/gdata-gd-who.h" line="72"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GENERATOR"
                    c:identifier="GDATA_IS_GENERATOR"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-generator.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GENERATOR_CLASS"
                    c:identifier="GDATA_IS_GENERATOR_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-generator.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GOA_AUTHORIZER"
                    c:identifier="GDATA_IS_GOA_AUTHORIZER"
                    introspectable="0">
      <source-position filename="gdata/gdata-goa-authorizer.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GOA_AUTHORIZER_CLASS"
                    c:identifier="GDATA_IS_GOA_AUTHORIZER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-goa-authorizer.h" line="34"/>
      <parameters>
        <parameter name="cls">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LINK"
                    c:identifier="GDATA_IS_LINK"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-link.h" line="133"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LINK_CLASS"
                    c:identifier="GDATA_IS_LINK_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-link.h" line="134"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_CATEGORY"
                    c:identifier="GDATA_IS_MEDIA_CATEGORY"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_CATEGORY_CLASS"
                    c:identifier="GDATA_IS_MEDIA_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_CONTENT"
                    c:identifier="GDATA_IS_MEDIA_CONTENT"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-content.h" line="71"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_CONTENT_CLASS"
                    c:identifier="GDATA_IS_MEDIA_CONTENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-content.h" line="72"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_CREDIT"
                    c:identifier="GDATA_IS_MEDIA_CREDIT"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-credit.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_CREDIT_CLASS"
                    c:identifier="GDATA_IS_MEDIA_CREDIT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-credit.h" line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_THUMBNAIL"
                    c:identifier="GDATA_IS_MEDIA_THUMBNAIL"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA_THUMBNAIL_CLASS"
                    c:identifier="GDATA_IS_MEDIA_THUMBNAIL_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="36"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OAUTH2_AUTHORIZER"
                    c:identifier="GDATA_IS_OAUTH2_AUTHORIZER"
                    introspectable="0">
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="61"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OAUTH2_AUTHORIZER_CLASS"
                    c:identifier="GDATA_IS_OAUTH2_AUTHORIZER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="62"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PARSABLE"
                    c:identifier="GDATA_IS_PARSABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-parsable.h" line="48"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PARSABLE_CLASS"
                    c:identifier="GDATA_IS_PARSABLE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-parsable.h" line="49"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_ALBUM"
                    c:identifier="GDATA_IS_PICASAWEB_ALBUM"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="49"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_ALBUM_CLASS"
                    c:identifier="GDATA_IS_PICASAWEB_ALBUM_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="50"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_COMMENT"
                    c:identifier="GDATA_IS_PICASAWEB_COMMENT"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_COMMENT_CLASS"
                    c:identifier="GDATA_IS_PICASAWEB_COMMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_FEED"
                    c:identifier="GDATA_IS_PICASAWEB_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_FEED_CLASS"
                    c:identifier="GDATA_IS_PICASAWEB_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_FILE"
                    c:identifier="GDATA_IS_PICASAWEB_FILE"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="71"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_FILE_CLASS"
                    c:identifier="GDATA_IS_PICASAWEB_FILE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="72"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_QUERY"
                    c:identifier="GDATA_IS_PICASAWEB_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_QUERY_CLASS"
                    c:identifier="GDATA_IS_PICASAWEB_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="36"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_SERVICE"
                    c:identifier="GDATA_IS_PICASAWEB_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_SERVICE_CLASS"
                    c:identifier="GDATA_IS_PICASAWEB_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                       line="38"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_USER"
                    c:identifier="GDATA_IS_PICASAWEB_USER"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICASAWEB_USER_CLASS"
                    c:identifier="GDATA_IS_PICASAWEB_USER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="36"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUERY"
                    c:identifier="GDATA_IS_QUERY"
                    introspectable="0">
      <source-position filename="gdata/gdata-query.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUERY_CLASS"
                    c:identifier="GDATA_IS_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-query.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SERVICE"
                    c:identifier="GDATA_IS_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/gdata-service.h" line="113"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SERVICE_CLASS"
                    c:identifier="GDATA_IS_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-service.h" line="114"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_QUERY"
                    c:identifier="GDATA_IS_TASKS_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_QUERY_CLASS"
                    c:identifier="GDATA_IS_TASKS_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_SERVICE"
                    c:identifier="GDATA_IS_TASKS_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_SERVICE_CLASS"
                    c:identifier="GDATA_IS_TASKS_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                       line="37"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_TASK"
                    c:identifier="GDATA_IS_TASKS_TASK"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="61"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_TASKLIST"
                    c:identifier="GDATA_IS_TASKS_TASKLIST"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_TASKLIST_CLASS"
                    c:identifier="GDATA_IS_TASKS_TASKLIST_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TASKS_TASK_CLASS"
                    c:identifier="GDATA_IS_TASKS_TASK_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="62"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_UPLOAD_STREAM"
                    c:identifier="GDATA_IS_UPLOAD_STREAM"
                    introspectable="0">
      <source-position filename="gdata/gdata-upload-stream.h" line="61"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_UPLOAD_STREAM_CLASS"
                    c:identifier="GDATA_IS_UPLOAD_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-upload-stream.h" line="62"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_CATEGORY"
                    c:identifier="GDATA_IS_YOUTUBE_CATEGORY"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_CATEGORY_CLASS"
                    c:identifier="GDATA_IS_YOUTUBE_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_COMMENT"
                    c:identifier="GDATA_IS_YOUTUBE_COMMENT"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_COMMENT_CLASS"
                    c:identifier="GDATA_IS_YOUTUBE_COMMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_FEED"
                    c:identifier="GDATA_IS_YOUTUBE_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_FEED_CLASS"
                    c:identifier="GDATA_IS_YOUTUBE_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_QUERY"
                    c:identifier="GDATA_IS_YOUTUBE_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="91"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_QUERY_CLASS"
                    c:identifier="GDATA_IS_YOUTUBE_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="92"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_SERVICE"
                    c:identifier="GDATA_IS_YOUTUBE_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="69"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_SERVICE_CLASS"
                    c:identifier="GDATA_IS_YOUTUBE_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="70"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_STATE"
                    c:identifier="GDATA_IS_YOUTUBE_STATE"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_STATE_CLASS"
                    c:identifier="GDATA_IS_YOUTUBE_STATE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_VIDEO"
                    c:identifier="GDATA_IS_YOUTUBE_VIDEO"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="143"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_YOUTUBE_VIDEO_CLASS"
                    c:identifier="GDATA_IS_YOUTUBE_VIDEO_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="144"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LINK" c:identifier="GDATA_LINK" introspectable="0">
      <source-position filename="gdata/atom/gdata-link.h" line="131"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="LINK_ACCESS_CONTROL_LIST"
              value="http://schemas.google.com/acl/2007#accessControlList"
              c:type="GDATA_LINK_ACCESS_CONTROL_LIST"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-handler.h"
           line="33">The relation type URI of the access control list location for this resource.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/calendar/data/2.0/developers_guide_protocol.html#SharingACalendar"&gt;ACL specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gdata-access-handler.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_ALTERNATE"
              value="http://www.iana.org/assignments/relation/alternate"
              c:type="GDATA_LINK_ALTERNATE"
              version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="30">The relation type URI for alternate resources to the current one.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#rel_attribute"&gt;
Atom specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_BATCH"
              value="http://schemas.google.com/g/2005#batch"
              c:type="GDATA_LINK_BATCH"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-batch-operation.h"
           line="32">The relation type URI for the batch operation URI for a given #GDataFeed.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/batch.html#Submit_HTTP"&gt;GData specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gdata-batch-operation.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="LINK_CLASS"
                    c:identifier="GDATA_LINK_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-link.h" line="132"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="LINK_EDIT"
              value="http://www.iana.org/assignments/relation/edit"
              c:type="GDATA_LINK_EDIT"
              version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="90">The relation type URI of the edit location for this resource.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/atom-protocol-spec.php#new-link-relation"&gt;
Atom Publishing Protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_EDIT_MEDIA"
              value="http://www.iana.org/assignments/relation/edit-media"
              c:type="GDATA_LINK_EDIT_MEDIA"
              version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="102">The relation type URI of the edit location for media resources attached to this resource.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/atom-protocol-spec.php#new-media-link-relation"&gt;
Atom Publishing Protocol specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="113"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_ENCLOSURE"
              value="http://www.iana.org/assignments/relation/enclosure"
              c:type="GDATA_LINK_ENCLOSURE"
              version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="66">The relation type URI for attached objects which may be large in size.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#rel_attribute"&gt;
Atom specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="LINK_GET_CLASS"
                    c:identifier="GDATA_LINK_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/atom/gdata-link.h" line="135"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="LINK_PARENT"
              value="http://schemas.google.com/docs/2007#parent"
              c:type="GDATA_LINK_PARENT"
              version="0.15.1">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="115">The relation type URI of the of the location of the parent resource in a
hierarchy of entries.

This is an undocumented GData-specific addition to the Atom specification,
and is not included in the GData documentation except in examples and in the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/v2/schema/document_list_atom.rnc"&gt;
RelaxNG schema&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="128"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_RELATED"
              value="http://www.iana.org/assignments/relation/related"
              c:type="GDATA_LINK_RELATED"
              version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="42">The relation type URI for resources related to the current one.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#rel_attribute"&gt;
Atom specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_RESUMABLE_CREATE_MEDIA"
              value="http://schemas.google.com/g/2005#resumable-create-media"
              c:type="GDATA_LINK_RESUMABLE_CREATE_MEDIA"
              version="0.13.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-upload-stream.h"
           line="32">The relation type URI of the resumable upload location for resources attached to this resource.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/resumable_upload.html#ResumableUploadInitiate"&gt;GData resumable upload protocol
specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gdata-upload-stream.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_RESUMABLE_EDIT_MEDIA"
              value="http://schemas.google.com/g/2005#resumable-edit-media"
              c:type="GDATA_LINK_RESUMABLE_EDIT_MEDIA"
              version="0.13.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-upload-stream.h"
           line="45">The relation type URI of the resumable update location for resources attached to this resource.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/resumable_upload.html#ResumableUploadInitiate"&gt;GData resumable upload protocol
specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/gdata-upload-stream.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_SELF"
              value="http://www.iana.org/assignments/relation/self"
              c:type="GDATA_LINK_SELF"
              version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="54">The relation type URI for the current resource.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#rel_attribute"&gt;
Atom specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="LINK_VIA"
              value="http://www.iana.org/assignments/relation/via"
              c:type="GDATA_LINK_VIA"
              version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="78">The relation type URI for the source document of the current resource.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#rel_attribute"&gt;
Atom specification&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="88"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Link"
           c:symbol-prefix="link"
           c:type="GDataLink"
           parent="Parsable"
           glib:type-name="GDataLink"
           glib:get-type="gdata_link_get_type"
           glib:type-struct="LinkClass">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="139">All the fields in the #GDataLink structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="164"/>
      <implements name="Comparable"/>
      <constructor name="new" c:identifier="gdata_link_new">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="359">Creates a new #GDataLink. More information is available in the &lt;ulink type="http"
url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.link"&gt;Atom specification&lt;/ulink&gt;.

@uri must be non-%NULL and non-empty. @relation_type must be %NULL or non-empty.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="168"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-link.c"
               line="369">a new #GDataLink, or %NULL; unref with g_object_unref()</doc>
          <type name="Link" c:type="GDataLink*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="361">the link's IRI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="362">the relationship of the link to the current document, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_content_type"
              c:identifier="gdata_link_get_content_type"
              glib:get-property="content-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="472">Gets the #GDataLink:content-type property. If the content type is non-%NULL, it will be non-empty.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="176"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-link.c"
               line="478">the link's content type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="474">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_language"
              c:identifier="gdata_link_get_language"
              glib:get-property="language"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="511">Gets the #GDataLink:language property. If the language is non-%NULL, it will be non-empty.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="179"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-link.c"
               line="517">the link's language, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="513">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="gdata_link_get_length"
              glib:get-property="length"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="588">Gets the #GDataLink:length property.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="185"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-link.c"
               line="594">the link's length, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="590">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_relation_type"
              c:identifier="gdata_link_get_relation_type"
              glib:get-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="422">Gets the #GDataLink:relation-type property. If the relation type is non-%NULL, it will be non-empty.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="173"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-link.c"
               line="428">the link's relation type</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="424">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gdata_link_get_title"
              glib:get-property="title"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="550">Gets the #GDataLink:title property.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-link.c"
               line="556">the link's title, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="552">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_link_get_uri"
              glib:get-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="380">Gets the #GDataLink:uri property. The return value is guaranteed to be a valid IRI, as
specified by the Atom protocol. Common relationship values such as &lt;literal&gt;alternate&lt;/literal&gt;
are returned as &lt;literal&gt;http://www.iana.org/assignments/relation/alternate&lt;/literal&gt;.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#rel_attribute"&gt;
Atom specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/atom/gdata-link.c"
               line="391">the link's URI</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="382">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_content_type"
              c:identifier="gdata_link_set_content_type"
              glib:set-property="content-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="489">Sets the #GDataLink:content-type property to @content_type. @content_type must be %NULL or non-empty.

Set @content_type to %NULL to unset the property in the link.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="491">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
          <parameter name="content_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="492">the new content type for the link, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_language"
              c:identifier="gdata_link_set_language"
              glib:set-property="language"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="528">Sets the #GDataLink:language property to @language. @language must be %NULL or non-empty.

Set @language to %NULL to unset the property in the link.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="530">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
          <parameter name="language"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="531">the new language for the link, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_length"
              c:identifier="gdata_link_set_length"
              glib:set-property="length"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="605">Sets the #GDataLink:length property to @length.

Set @length to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the link.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="186"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="607">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="608">the new length for the link, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relation_type"
              c:identifier="gdata_link_set_relation_type"
              glib:set-property="relation-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="439">Sets the #GDataLink:relation-type property to @relation_type. If @relation_type is one of the standard Atom relation types,
use one of the defined relation type values, instead of a static string. e.g. %GDATA_LINK_EDIT or %GDATA_LINK_SELF.

Set @relation_type to %NULL to unset the property in the link.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="441">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
          <parameter name="relation_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="442">the new relation type for the link, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gdata_link_set_title"
              glib:set-property="title"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="567">Sets the #GDataLink:title property to @title.

Set @title to %NULL to unset the property in the link.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="569">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="570">the new title for the link, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="gdata_link_set_uri"
              glib:set-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="402">Sets the #GDataLink:uri property to @uri. @uri must be non-%NULL and non-empty.</doc>
        <source-position filename="gdata/atom/gdata-link.h" line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="404">a #GDataLink</doc>
            <type name="Link" c:type="GDataLink*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/atom/gdata-link.c"
                 line="405">the new URI for the link</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="content-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_content_type"
                getter="get_content_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="116">An advisory media type: it is a hint about the type of the representation that is expected to be returned when the value
of the #GDataLink:uri property is dereferenced.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.link"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="language"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_language"
                getter="get_language"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="133">Describes the language of the resource pointed to by the #GDataLink:uri property.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.link"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="length"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_length"
                getter="get_length"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="165">Indicates an advisory length of the linked content in octets. &lt;code class="literal"&gt;-1&lt;/code&gt; means the length is unspecified.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.link"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="relation-type"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_relation_type"
                getter="get_relation_type"
                default-value="http://www.iana.org/assignments/relation/alternate">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="100">The link relation type.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.link"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="149">Conveys human-readable information about the link.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.link"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uri"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_uri"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/atom/gdata-link.c"
             line="84">The link's IRI.

For more information, see the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#element.link"&gt;Atom specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="LinkPrivate" c:type="GDataLinkPrivate*"/>
      </field>
    </class>
    <record name="LinkClass"
            c:type="GDataLinkClass"
            glib:is-gtype-struct-for="Link"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.h"
           line="149">All the fields in the #GDataLinkClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/atom/gdata-link.h" line="164"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/atom/gdata-link.h" line="162"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/atom/gdata-link.h" line="163"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="LinkPrivate"
            c:type="GDataLinkPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/atom/gdata-link.h" line="137"/>
    </record>
    <constant name="MAJOR_VERSION"
              value="0"
              c:type="GDATA_MAJOR_VERSION"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-version.h"
           line="33">Evaluates to the major version of the GData headers at compile time.
(e.g. in libgdata version 1.2.3 this is 1).</doc>
      <source-position filename="gdata/gdata-version.h" line="41"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="MEDIA_CATEGORY"
                    c:identifier="GDATA_MEDIA_CATEGORY"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CATEGORY_CLASS"
                    c:identifier="GDATA_MEDIA_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CATEGORY_GET_CLASS"
                    c:identifier="GDATA_MEDIA_CATEGORY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CONTENT"
                    c:identifier="GDATA_MEDIA_CONTENT"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-content.h" line="69"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CONTENT_CLASS"
                    c:identifier="GDATA_MEDIA_CONTENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-content.h" line="70"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CONTENT_GET_CLASS"
                    c:identifier="GDATA_MEDIA_CONTENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-content.h" line="73"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CREDIT"
                    c:identifier="GDATA_MEDIA_CREDIT"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-credit.h" line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CREDIT_CLASS"
                    c:identifier="GDATA_MEDIA_CREDIT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-credit.h" line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_CREDIT_GET_CLASS"
                    c:identifier="GDATA_MEDIA_CREDIT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-credit.h" line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_THUMBNAIL"
                    c:identifier="GDATA_MEDIA_THUMBNAIL"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_THUMBNAIL_CLASS"
                    c:identifier="GDATA_MEDIA_THUMBNAIL_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEDIA_THUMBNAIL_GET_CLASS"
                    c:identifier="GDATA_MEDIA_THUMBNAIL_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="MICRO_VERSION"
              value="0"
              c:type="GDATA_MICRO_VERSION"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-version.h"
           line="53">Evaluates to the micro version of the GData headers at compile time.
(e.g. in libgdata version 1.2.3 this is 3).</doc>
      <source-position filename="gdata/gdata-version.h" line="61"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION"
              value="19"
              c:type="GDATA_MINOR_VERSION"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-version.h"
           line="43">Evaluates to the minor version of the GData headers at compile time.
(e.g. in libgdata version 1.2.3 this is 2).</doc>
      <source-position filename="gdata/gdata-version.h" line="51"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="MediaCategory"
           c:symbol-prefix="media_category"
           c:type="GDataMediaCategory"
           parent="Parsable"
           glib:type-name="GDataMediaCategory"
           glib:get-type="gdata_media_category_get_type"
           glib:type-struct="MediaCategoryClass">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-category.h"
           line="39">All the fields in the #GDataMediaCategory structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="64"/>
      <constructor name="new" c:identifier="gdata_media_category_new">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="252">Creates a new #GDataMediaCategory. More information is available in the &lt;ulink type="http"
url="http://search.yahoo.com/mrss/"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/media/gdata-media-category.h"
                         line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-category.c"
               line="261">a new #GDataMediaCategory, or %NULL; unref with g_object_unref()</doc>
          <type name="MediaCategory" c:type="GDataMediaCategory*"/>
        </return-value>
        <parameters>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="254">a category describing the content</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="scheme"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="255">a URI identifying the categorisation scheme, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="256">a human-readable name for the category, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_category"
              c:identifier="gdata_media_category_get_category"
              glib:get-property="category"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="271">Gets the #GDataMediaCategory:category property.</doc>
        <source-position filename="gdata/media/gdata-media-category.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-category.c"
               line="277">the actual category</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="273">a #GDataMediaCategory</doc>
            <type name="MediaCategory" c:type="GDataMediaCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gdata_media_category_get_label"
              glib:get-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="350">Gets the #GDataMediaCategory:label property.</doc>
        <source-position filename="gdata/media/gdata-media-category.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-category.c"
               line="356">the category's label, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="352">a #GDataMediaCategory</doc>
            <type name="MediaCategory" c:type="GDataMediaCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scheme"
              c:identifier="gdata_media_category_get_scheme"
              glib:get-property="scheme"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="308">Gets the #GDataMediaCategory:scheme property.</doc>
        <source-position filename="gdata/media/gdata-media-category.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-category.c"
               line="314">the category's scheme, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="310">a #GDataMediaCategory</doc>
            <type name="MediaCategory" c:type="GDataMediaCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_category"
              c:identifier="gdata_media_category_set_category"
              glib:set-property="category"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="288">Sets the #GDataMediaCategory:category property to @category.</doc>
        <source-position filename="gdata/media/gdata-media-category.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="290">a #GDataMediaCategory</doc>
            <type name="MediaCategory" c:type="GDataMediaCategory*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="291">the new category</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gdata_media_category_set_label"
              glib:set-property="label"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="367">Sets the #GDataMediaCategory:label property to @label.

Set @label to %NULL to unset the property.</doc>
        <source-position filename="gdata/media/gdata-media-category.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="369">a #GDataMediaCategory</doc>
            <type name="MediaCategory" c:type="GDataMediaCategory*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="370">the category's new label, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scheme"
              c:identifier="gdata_media_category_set_scheme"
              glib:set-property="scheme"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="325">Sets the #GDataMediaCategory:scheme property to @scheme.

Set @scheme to %NULL to unset the property.</doc>
        <source-position filename="gdata/media/gdata-media-category.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="327">a #GDataMediaCategory</doc>
            <type name="MediaCategory" c:type="GDataMediaCategory*"/>
          </instance-parameter>
          <parameter name="scheme"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-category.c"
                 line="328">the category's new scheme, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="category"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_category"
                getter="get_category"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="81">The category name.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="111">A human-readable label that can be displayed in end-user applications.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="scheme"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_scheme"
                getter="get_scheme"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-category.c"
             line="96">A URI that identifies the categorization scheme.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="MediaCategoryPrivate" c:type="GDataMediaCategoryPrivate*"/>
      </field>
    </class>
    <record name="MediaCategoryClass"
            c:type="GDataMediaCategoryClass"
            glib:is-gtype-struct-for="MediaCategory"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-category.h"
           line="49">All the fields in the #GDataMediaCategoryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="64"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/media/gdata-media-category.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/media/gdata-media-category.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MediaCategoryPrivate"
            c:type="GDataMediaCategoryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/media/gdata-media-category.h"
                       line="37"/>
    </record>
    <class name="MediaContent"
           c:symbol-prefix="media_content"
           c:type="GDataMediaContent"
           parent="Parsable"
           glib:type-name="GDataMediaContent"
           glib:get-type="gdata_media_content_get_type"
           glib:type-struct="MediaContentClass">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-content.h"
           line="77">All the fields in the #GDataMediaContent structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-content.h"
                       line="102"/>
      <method name="download"
              c:identifier="gdata_media_content_download"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="535">Downloads and returns a #GDataDownloadStream allowing the content represented by @self to be read.

To get the content type of the downloaded data, gdata_download_stream_get_content_type() can be called on the returned #GDataDownloadStream.
Calling gdata_download_stream_get_content_length() on the stream will not return a meaningful result, however, as the stream is encoded in chunks,
rather than by content length.

In order to cancel the download, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GInputStream operations on the #GDataDownloadStream will not cancel the entire download; merely the read or close operation in question. See the
#GDataDownloadStream:cancellable for more details.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="116"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="552">a #GDataDownloadStream to download the content with, or %NULL; unref with g_object_unref()</doc>
          <type name="DownloadStream" c:type="GDataDownloadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="537">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="538">the #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="539">a #GCancellable for the entire download stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_content_type"
              c:identifier="gdata_media_content_get_content_type"
              glib:get-property="content-type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="416">Gets the #GDataMediaContent:content-type property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="422">the content's content (MIME) type, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="418">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_duration"
              c:identifier="gdata_media_content_get_duration"
              glib:get-property="duration"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="484">Gets the #GDataMediaContent:duration property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="490">the content's duration in seconds, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="486">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expression"
              c:identifier="gdata_media_content_get_expression"
              glib:get-property="expression"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="467">Gets the #GDataMediaContent:expression property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="473">the content's expression, or %GDATA_MEDIA_EXPRESSION_FULL</doc>
          <type name="MediaExpression" c:type="GDataMediaExpression"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="469">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filesize"
              c:identifier="gdata_media_content_get_filesize"
              glib:get-property="filesize"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="399">Gets the #GDataMediaContent:filesize property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="405">the number of bytes in the content, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="401">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gdata_media_content_get_height"
              glib:get-property="height"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="501">Gets the #GDataMediaContent:height property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="507">the content's height in pixels, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="503">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_medium"
              c:identifier="gdata_media_content_get_medium"
              glib:get-property="medium"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="433">Gets the #GDataMediaContent:medium property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="439">the type of the content, or %GDATA_MEDIA_UNKNOWN</doc>
          <type name="MediaMedium" c:type="GDataMediaMedium"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="435">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_media_content_get_uri"
              glib:get-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="382">Gets the #GDataMediaContent:uri property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="388">the content's URI</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="384">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gdata_media_content_get_width"
              glib:get-property="width"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="518">Gets the #GDataMediaContent:width property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="524">the content's width in pixels, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="520">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_default"
              c:identifier="gdata_media_content_is_default"
              glib:get-property="is-default"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="450">Gets the #GDataMediaContent:is-default property.</doc>
        <source-position filename="gdata/media/gdata-media-content.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-content.c"
               line="456">%TRUE if the #GDataMediaContent is the default content for the media group, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-content.c"
                 line="452">a #GDataMediaContent</doc>
            <type name="MediaContent" c:type="GDataMediaContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="content-type"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_content_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="120">The standard MIME type of the object.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="duration"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_duration"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="181">The number of seconds for which the media object plays.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="expression"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_expression"
                default-value="GDATA_MEDIA_EXPRESSION_FULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="166">Determines if the object is a sample or the full version of the object, or even if it is a continuous stream.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="MediaExpression"/>
      </property>
      <property name="filesize"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_filesize"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="105">The number of bytes of the media object.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="gulong" c:type="gulong"/>
      </property>
      <property name="height"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_height"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="196">The height of the media object.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="is-default"
                version="0.4.0"
                transfer-ownership="none"
                getter="is_default"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="151">Determines if this is the default content for the media group. There should only be one default object per media group.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="medium"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_medium"
                default-value="GDATA_MEDIA_UNKNOWN">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="135">The type of object, complementing #GDataMediaContent:content-type. It allows the consuming application to make simpler decisions between
different content objects, based on whether they're a video or audio stream, for example.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="MediaMedium"/>
      </property>
      <property name="uri"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="90">The direct URI to the media object.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_width"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.c"
             line="211">The width of the media object.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="MediaContentPrivate" c:type="GDataMediaContentPrivate*"/>
      </field>
    </class>
    <record name="MediaContentClass"
            c:type="GDataMediaContentClass"
            glib:is-gtype-struct-for="MediaContent"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-content.h"
           line="87">All the fields in the #GDataMediaContentClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-content.h"
                       line="102"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/media/gdata-media-content.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/media/gdata-media-content.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MediaContentPrivate"
            c:type="GDataMediaContentPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/media/gdata-media-content.h" line="75"/>
    </record>
    <class name="MediaCredit"
           c:symbol-prefix="media_credit"
           c:type="GDataMediaCredit"
           parent="Parsable"
           glib:type-name="GDataMediaCredit"
           glib:get-type="gdata_media_credit_get_type"
           glib:type-struct="MediaCreditClass">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-credit.h"
           line="39">All the fields in the #GDataMediaCredit structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-credit.h" line="64"/>
      <method name="get_credit"
              c:identifier="gdata_media_credit_get_credit"
              glib:get-property="credit"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-credit.c"
             line="217">Gets the #GDataMediaCredit:credit property.</doc>
        <source-position filename="gdata/media/gdata-media-credit.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-credit.c"
               line="223">the name of the credited entity</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-credit.c"
                 line="219">a #GDataMediaCredit</doc>
            <type name="MediaCredit" c:type="GDataMediaCredit*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_role"
              c:identifier="gdata_media_credit_get_role"
              glib:get-property="role"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-credit.c"
             line="251">Gets the #GDataMediaCredit:role property.</doc>
        <source-position filename="gdata/media/gdata-media-credit.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-credit.c"
               line="257">the credited entity's role, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-credit.c"
                 line="253">a #GDataMediaCredit</doc>
            <type name="MediaCredit" c:type="GDataMediaCredit*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scheme"
              c:identifier="gdata_media_credit_get_scheme"
              glib:get-property="scheme"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-credit.c"
             line="234">Gets the #GDataMediaCredit:scheme property.</doc>
        <source-position filename="gdata/media/gdata-media-credit.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-credit.c"
               line="240">the credit's role scheme, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-credit.c"
                 line="236">a #GDataMediaCredit</doc>
            <type name="MediaCredit" c:type="GDataMediaCredit*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="credit"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_credit"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-credit.c"
             line="77">The credited entity's name.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="role"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_role"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-credit.c"
             line="107">The role the credited entity played in the production of the media.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="scheme"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_scheme"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-credit.c"
             line="92">A URI that identifies the role scheme.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="MediaCreditPrivate" c:type="GDataMediaCreditPrivate*"/>
      </field>
    </class>
    <record name="MediaCreditClass"
            c:type="GDataMediaCreditClass"
            glib:is-gtype-struct-for="MediaCredit"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-credit.h"
           line="49">All the fields in the #GDataMediaCreditClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-credit.h" line="64"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/media/gdata-media-credit.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/media/gdata-media-credit.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MediaCreditPrivate"
            c:type="GDataMediaCreditPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/media/gdata-media-credit.h" line="37"/>
    </record>
    <enumeration name="MediaExpression"
                 glib:type-name="GDataMediaExpression"
                 glib:get-type="gdata_media_expression_get_type"
                 c:type="GDataMediaExpression">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-content.h"
           line="32">An enum representing the possible values of #GDataMediaContent:expression.</doc>
      <member name="sample"
              value="0"
              c:identifier="GDATA_MEDIA_EXPRESSION_SAMPLE"
              glib:nick="sample"
              glib:name="GDATA_MEDIA_EXPRESSION_SAMPLE">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="34">the media is a sample of a larger video</doc>
      </member>
      <member name="full"
              value="1"
              c:identifier="GDATA_MEDIA_EXPRESSION_FULL"
              glib:nick="full"
              glib:name="GDATA_MEDIA_EXPRESSION_FULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="35">the media is the full version</doc>
      </member>
      <member name="nonstop"
              value="2"
              c:identifier="GDATA_MEDIA_EXPRESSION_NONSTOP"
              glib:nick="nonstop"
              glib:name="GDATA_MEDIA_EXPRESSION_NONSTOP">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="36">the media is a continuous stream</doc>
      </member>
    </enumeration>
    <enumeration name="MediaMedium"
                 version="0.4.0"
                 glib:type-name="GDataMediaMedium"
                 glib:get-type="gdata_media_medium_get_type"
                 c:type="GDataMediaMedium">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-content.h"
           line="46">An enum representing the possible values of #GDataMediaContent:medium.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GDATA_MEDIA_UNKNOWN"
              glib:nick="unknown"
              glib:name="GDATA_MEDIA_UNKNOWN">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="48">the type of the media is unknown</doc>
      </member>
      <member name="image"
              value="1"
              c:identifier="GDATA_MEDIA_IMAGE"
              glib:nick="image"
              glib:name="GDATA_MEDIA_IMAGE">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="49">the media is an image</doc>
      </member>
      <member name="audio"
              value="2"
              c:identifier="GDATA_MEDIA_AUDIO"
              glib:nick="audio"
              glib:name="GDATA_MEDIA_AUDIO">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="50">the media is an audio stream</doc>
      </member>
      <member name="video"
              value="3"
              c:identifier="GDATA_MEDIA_VIDEO"
              glib:nick="video"
              glib:name="GDATA_MEDIA_VIDEO">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="51">the media is a video</doc>
      </member>
      <member name="document"
              value="4"
              c:identifier="GDATA_MEDIA_DOCUMENT"
              glib:nick="document"
              glib:name="GDATA_MEDIA_DOCUMENT">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="52">the media is another type of document</doc>
      </member>
      <member name="executable"
              value="5"
              c:identifier="GDATA_MEDIA_EXECUTABLE"
              glib:nick="executable"
              glib:name="GDATA_MEDIA_EXECUTABLE">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-content.h"
             line="53">the media is an executable file</doc>
      </member>
    </enumeration>
    <class name="MediaThumbnail"
           c:symbol-prefix="media_thumbnail"
           c:type="GDataMediaThumbnail"
           parent="Parsable"
           glib:type-name="GDataMediaThumbnail"
           glib:get-type="gdata_media_thumbnail_get_type"
           glib:type-struct="MediaThumbnailClass">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-thumbnail.h"
           line="41">All the fields in the #GDataMediaThumbnail structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="66"/>
      <method name="download"
              c:identifier="gdata_media_thumbnail_download"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="396">Downloads and returns a #GDataDownloadStream allowing the thumbnail data represented by @self to be read.

To get the content type of the downloaded data, gdata_download_stream_get_content_type() can be called on the returned #GDataDownloadStream.
Calling gdata_download_stream_get_content_length() on the stream will not return a meaningful result, however, as the stream is encoded in chunks,
rather than by content length.

In order to cancel the download, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GInputStream operations on the #GDataDownloadStream will not cancel the entire download; merely the read or close operation in question. See the
#GDataDownloadStream:cancellable for more details.</doc>
        <source-position filename="gdata/media/gdata-media-thumbnail.h"
                         line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-thumbnail.c"
               line="413">a #GDataDownloadStream to download the thumbnail with, or %NULL; unref with g_object_unref()</doc>
          <type name="DownloadStream" c:type="GDataDownloadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-thumbnail.c"
                 line="398">a #GDataMediaThumbnail</doc>
            <type name="MediaThumbnail" c:type="GDataMediaThumbnail*"/>
          </instance-parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-thumbnail.c"
                 line="399">the #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-thumbnail.c"
                 line="400">a #GCancellable for the entire download stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gdata_media_thumbnail_get_height"
              glib:get-property="height"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="345">Gets the #GDataMediaThumbnail:height property.</doc>
        <source-position filename="gdata/media/gdata-media-thumbnail.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-thumbnail.c"
               line="351">the thumbnail's height in pixels, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-thumbnail.c"
                 line="347">a #GDataMediaThumbnail</doc>
            <type name="MediaThumbnail" c:type="GDataMediaThumbnail*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_time"
              c:identifier="gdata_media_thumbnail_get_time"
              glib:get-property="time"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="379">Gets the #GDataMediaThumbnail:time property.</doc>
        <source-position filename="gdata/media/gdata-media-thumbnail.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-thumbnail.c"
               line="385">the thumbnail's time offset in the media, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-thumbnail.c"
                 line="381">a #GDataMediaThumbnail</doc>
            <type name="MediaThumbnail" c:type="GDataMediaThumbnail*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gdata_media_thumbnail_get_uri"
              glib:get-property="uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="328">Gets the #GDataMediaThumbnail:uri property.</doc>
        <source-position filename="gdata/media/gdata-media-thumbnail.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-thumbnail.c"
               line="334">the thumbnail's URI</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-thumbnail.c"
                 line="330">a #GDataMediaThumbnail</doc>
            <type name="MediaThumbnail" c:type="GDataMediaThumbnail*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gdata_media_thumbnail_get_width"
              glib:get-property="width"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="362">Gets the #GDataMediaThumbnail:width property.</doc>
        <source-position filename="gdata/media/gdata-media-thumbnail.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/media/gdata-media-thumbnail.c"
               line="368">the thumbnail's width in pixels, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/media/gdata-media-thumbnail.c"
                 line="364">a #GDataMediaThumbnail</doc>
            <type name="MediaThumbnail" c:type="GDataMediaThumbnail*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="height"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_height"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="96">The height of the thumbnail, in pixels.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="time"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_time"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="126">The time offset of the thumbnail in relation to the media object, in milliseconds.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="uri"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="81">The URI of the thumbnail.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_width"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/media/gdata-media-thumbnail.c"
             line="111">The width of the thumbnail, in pixels.

For more information, see the &lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="MediaThumbnailPrivate"
              c:type="GDataMediaThumbnailPrivate*"/>
      </field>
    </class>
    <record name="MediaThumbnailClass"
            c:type="GDataMediaThumbnailClass"
            glib:is-gtype-struct-for="MediaThumbnail"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-thumbnail.h"
           line="51">All the fields in the #GDataMediaThumbnailClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/media/gdata-media-thumbnail.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/media/gdata-media-thumbnail.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MediaThumbnailPrivate"
            c:type="GDataMediaThumbnailPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/media/gdata-media-thumbnail.h"
                       line="39"/>
    </record>
    <function-macro name="OAUTH2_AUTHORIZER"
                    c:identifier="GDATA_OAUTH2_AUTHORIZER"
                    introspectable="0">
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="59"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OAUTH2_AUTHORIZER_CLASS"
                    c:identifier="GDATA_OAUTH2_AUTHORIZER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="60"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OAUTH2_AUTHORIZER_GET_CLASS"
                    c:identifier="GDATA_OAUTH2_AUTHORIZER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="63"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="OAUTH2_REDIRECT_URI_OOB"
              value="urn:ietf:wg:oauth:2.0:oob"
              c:type="GDATA_OAUTH2_REDIRECT_URI_OOB"
              version="0.17.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-oauth2-authorizer.h"
           line="30">OAuth 2 redirect URI for out-of-band authorisation code transfer, where the
user is shown the authorisation code and asked to copy it.

See
&lt;ulink type="http" url="https://developers.google.com/accounts/docs/OAuth2InstalledApp#choosingredirecturi"&gt;reference
documentation&lt;/ulink&gt; for details.</doc>
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="OAUTH2_REDIRECT_URI_OOB_AUTO"
              value="urn:ietf:wg:oauth:2.0:oob:auto"
              c:type="GDATA_OAUTH2_REDIRECT_URI_OOB_AUTO"
              version="0.17.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-oauth2-authorizer.h"
           line="44">OAuth 2 redirect URI for out-of-band authorisation code transfer, where the
user is not shown the authorisation code or asked to copy it.

See
&lt;ulink type="http" url="https://developers.google.com/accounts/docs/OAuth2InstalledApp#choosingredirecturi"&gt;reference
documentation&lt;/ulink&gt; for details.</doc>
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="OAuth2Authorizer"
           c:symbol-prefix="oauth2_authorizer"
           c:type="GDataOAuth2Authorizer"
           version="0.17.0"
           parent="GObject.Object"
           glib:type-name="GDataOAuth2Authorizer"
           glib:get-type="gdata_oauth2_authorizer_get_type"
           glib:type-struct="OAuth2AuthorizerClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-oauth2-authorizer.h"
           line="67">All the fields in the #GDataOAuth2Authorizer structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="95"/>
      <implements name="Authorizer"/>
      <constructor name="new"
                   c:identifier="gdata_oauth2_authorizer_new"
                   version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="717">Creates a new #GDataOAuth2Authorizer. The @client_id must be unique for your
application, and as registered with Google, and the @client_secret must be
paired with it.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="100"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="729">a new #GDataOAuth2Authorizer; unref with
g_object_unref()</doc>
          <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
        </return-value>
        <parameters>
          <parameter name="client_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="719">your application’s client ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="client_secret" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="720">your application’s client secret</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="redirect_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="721">authorisation redirect URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="service_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="722">the #GType of a #GDataService subclass which the
#GDataOAuth2Authorizer will be used with</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_authorization_domains"
                   c:identifier="gdata_oauth2_authorizer_new_for_authorization_domains"
                   version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="760">Creates a new #GDataOAuth2Authorizer. The @client_id must be unique for your
application, and as registered with Google, and the @client_secret must be
paired with it.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="104"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="773">a new #GDataOAuth2Authorizer; unref with
g_object_unref()</doc>
          <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
        </return-value>
        <parameters>
          <parameter name="client_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="762">your application’s client ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="client_secret" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="763">your application’s client secret</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="redirect_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="764">authorisation redirect URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="authorization_domains" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="765">
a non-empty list of #GDataAuthorizationDomains to be authorized against by
the #GDataOAuth2Authorizer</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="AuthorizationDomain"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <method name="build_authentication_uri"
              c:identifier="gdata_oauth2_authorizer_build_authentication_uri"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="817">Build an authentication URI to open in the user’s web browser (or an embedded
browser widget). This will display an authentication page from Google,
including an authentication form and confirmation of the authorisation
domains being requested by this #GDataAuthorizer. The user will authenticate
in the browser, then an authorisation code will be returned via the
#GDataOAuth2Authorizer:redirect-uri, ready to be passed to
gdata_oauth2_authorizer_request_authorization().

If @login_hint is non-%NULL, it will be passed to the server as a hint of
which user is attempting to authenticate, which can be used to pre-fill the
e-mail address box in the authentication form.

If @include_granted_scopes is %TRUE, the authentication request will
automatically include all authorisation domains previously granted to this
user/application pair, allowing for incremental authentication — asking for
permissions as needed, rather than all in one large bundle at the first
opportunity. If @include_granted_scopes is %FALSE, incremental authentication
will not be enabled, and only the domains passed to the
#GDataOAuth2Authorizer constructor will eventually be authenticated.
See the
&lt;ulink type="http" url="https://developers.google.com/accounts/docs/OAuth2WebServer#incrementalAuth"&gt;reference
documentation&lt;/ulink&gt; for more details.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="847">the authentication URI to open in a web
browser; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="819">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="login_hint"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="820">optional e-mail address or sub identifier for the
user</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="include_granted_scopes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="822">%TRUE to enable incremental authorisation</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_refresh_token"
              c:identifier="gdata_oauth2_authorizer_dup_refresh_token"
              version="0.17.2">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1365">Returns the authorizer's refresh token, #GDataOAuth2Authorizer:refresh-token,
as set by client code previously on the #GDataOAuth2Authorizer, or as
returned by the most recent authentication operation.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="123"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1373">the authorizer's refresh token</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1367">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_client_id"
              c:identifier="gdata_oauth2_authorizer_get_client_id"
              glib:get-property="client-id"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1311">Returns the authorizer's client ID, #GDataOAuth2Authorizer:client-id, as
specified on constructing the #GDataOAuth2Authorizer.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1318">the authorizer's client ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1313">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_client_secret"
              c:identifier="gdata_oauth2_authorizer_get_client_secret"
              glib:get-property="client-secret"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1347">Returns the authorizer's client secret, #GDataOAuth2Authorizer:client-secret,
as specified on constructing the #GDataOAuth2Authorizer.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1354">the authorizer's client secret</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1349">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale"
              c:identifier="gdata_oauth2_authorizer_get_locale"
              glib:get-property="locale"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1438">Returns the locale currently being used for network requests, or %NULL if the
locale is the default.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="126"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1445">the current locale</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1440">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proxy_resolver"
              c:identifier="gdata_oauth2_authorizer_get_proxy_resolver"
              glib:get-property="proxy-resolver"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1545">Gets the #GProxyResolver on the #GDataOAuth2Authorizer's #SoupSession.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="132"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1551">a #GProxyResolver, or %NULL</doc>
          <type name="Gio.ProxyResolver" c:type="GProxyResolver*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1547">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_redirect_uri"
              c:identifier="gdata_oauth2_authorizer_get_redirect_uri"
              glib:get-property="redirect-uri"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1329">Returns the authorizer’s redirect URI, #GDataOAuth2Authorizer:redirect-uri,
as specified on constructing the #GDataOAuth2Authorizer.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1336">the authorizer’s redirect URI</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1331">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timeout"
              c:identifier="gdata_oauth2_authorizer_get_timeout"
              glib:get-property="timeout"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1495">Gets the #GDataOAuth2Authorizer:timeout property; the network timeout, in
seconds.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1502">the timeout, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1497">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="request_authorization"
              c:identifier="gdata_oauth2_authorizer_request_authorization"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1129">Request an authorisation code from the user’s web browser is converted to
authorisation (access and refresh) tokens. This is the final step in the
authentication process; once complete, the #GDataOAuth2Authorizer should be
fully authorised for its domains.

On failure, %GDATA_SERVICE_ERROR_FORBIDDEN will be returned if the user or
server denied the authorisation request. %GDATA_SERVICE_ERROR_PROTOCOL_ERROR
will be returned if the server didn’t follow the expected protocol.
%G_IO_ERROR_CANCELLED will be returned if the operation was cancelled using
@cancellable.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1147">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1131">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="authorization_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1132">code returned from the authentication page</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1133">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="request_authorization_async"
              c:identifier="gdata_oauth2_authorizer_request_authorization_async"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1250">Asynchronous version of gdata_oauth2_authorizer_request_authorization().</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1252">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="authorization_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1253">code returned from the authentication page</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1254">an optional #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1255">a #GAsyncReadyCallback to call when authorization is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1256">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="request_authorization_finish"
              c:identifier="gdata_oauth2_authorizer_request_authorization_finish"
              version="0.17.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1284">Finishes an asynchronous authorization operation started with
gdata_oauth2_authorizer_request_authorization_async().</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-oauth2-authorizer.c"
               line="1293">%TRUE if authorization was successful, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1286">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1287">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale"
              c:identifier="gdata_oauth2_authorizer_set_locale"
              glib:set-property="locale"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1456">Set the locale used for network requests to @locale, given in standard UNIX
locale format. See #GDataOAuth2Authorizer:locale for more details.

Note that while it’s possible to change the locale after sending network
requests (i.e. calling gdata_oauth2_authorizer_build_authentication_uri() for
the first time), it is unsupported, as the server-side software may behave
unexpectedly. The only supported use of this method is after creation of the
authorizer, but before any network requests are made.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1458">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1459">the new locale in UNIX locale format, or %NULL for the
default locale</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_proxy_resolver"
              c:identifier="gdata_oauth2_authorizer_set_proxy_resolver"
              glib:set-property="proxy-resolver"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1563">Sets the #GProxyResolver on the #SoupSession used internally by the given
#GDataOAuth2Authorizer.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1565">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="proxy_resolver"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1566">a #GProxyResolver, or %NULL</doc>
            <type name="Gio.ProxyResolver" c:type="GProxyResolver*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_refresh_token"
              c:identifier="gdata_oauth2_authorizer_set_refresh_token"
              glib:set-property="refresh-token"
              version="0.17.2">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1394">Sets the authorizer's refresh token, #GDataOAuth2Authorizer:refresh-token.
This is used to periodically refresh the access token. Set it to %NULL to
clear the current authentication from the authorizer.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1396">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="refresh_token"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1397">the new refresh token, or %NULL to clear
  authorization</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timeout"
              c:identifier="gdata_oauth2_authorizer_set_timeout"
              glib:set-property="timeout"
              version="0.17.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="1520">Sets the #GDataOAuth2Authorizer:timeout property; the network timeout, in
seconds.

If @timeout is &lt;code class="literal"&gt;0&lt;/code&gt;, network operations will never
time out.</doc>
        <source-position filename="gdata/gdata-oauth2-authorizer.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1522">a #GDataOAuth2Authorizer</doc>
            <type name="OAuth2Authorizer" c:type="GDataOAuth2Authorizer*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-oauth2-authorizer.c"
                 line="1523">the timeout, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="client-id"
                version="0.17.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_client_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="230">A client ID for your application (see the
&lt;ulink url="https://developers.google.com/accounts/docs/OAuth2InstalledApp#handlingtheresponse" type="http"&gt;reference documentation&lt;/ulink&gt;).

It is recommended that the ID is of the form
&lt;literal&gt;&lt;replaceable&gt;company name&lt;/replaceable&gt;-
&lt;replaceable&gt;application name&lt;/replaceable&gt;-
&lt;replaceable&gt;version ID&lt;/replaceable&gt;&lt;/literal&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="client-secret"
                version="0.17.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_client_secret"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="290">Client secret provided by Google. This is unique for each application
and is accessible from Google’s Developer Console when registering
an application. It must be paired with the
#GDataOAuth2Authorizer:client-id.

See the
&lt;ulink url="https://developers.google.com/accounts/docs/OAuth2InstalledApp#handlingtheresponse" type="http"&gt;reference
documentation&lt;/ulink&gt; for details.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="locale"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                setter="set_locale"
                getter="get_locale"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="311">The locale to use for network requests, in UNIX locale format.
(e.g. "en_GB", "cs", "de_DE".) Use %NULL for the default "C" locale
(typically "en_US").

This locale will be used by the server-side software to localise the
authentication and authorization pages at the URI returned by
gdata_oauth2_authorizer_build_authentication_uri().

The server-side behaviour is undefined if it doesn't support a given
locale.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="proxy-resolver"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                setter="set_proxy_resolver"
                getter="get_proxy_resolver">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="353">The #GProxyResolver used to determine a proxy URI.</doc>
        <type name="Gio.ProxyResolver"/>
      </property>
      <property name="redirect-uri"
                version="0.17.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_redirect_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="250">Redirect URI to send the response from the authorisation request to.
This must either be %GDATA_OAUTH2_REDIRECT_URI_OOB,
%GDATA_OAUTH2_REDIRECT_URI_OOB_AUTO, or a
&lt;code&gt;http://localhost&lt;/code&gt; URI with any port number (optionally)
specified.

This URI is where the authorisation server will redirect the user
after they have completed interacting with the authentication page
(gdata_oauth2_authorizer_build_authentication_uri()). If it is
%GDATA_OAUTH2_REDIRECT_URI_OOB, a page will be returned in the user’s
browser with the authorisation code in its title and also embedded in
the page for the user to copy if it is not possible to automatically
extract the code from the page title. If it is
%GDATA_OAUTH2_REDIRECT_URI_OOB_AUTO, a similar page will be returned
with the authorisation code in its title, but without displaying the
code to the user — the user will simply be asked to close the page.
If it is a localhost URI, the authentication page will redirect to
that URI with the authorisation code appended as a &lt;code&gt;code&lt;/code&gt;
query parameter. If the user denies the authentication request, the
authentication page will redirect to that URI with
&lt;code&gt;error=access_denied&lt;/code&gt; appended as a query parameter.

Note that the redirect URI used must match that registered in
Google’s Developer Console for your application.

See the &lt;ulink type="http" url="https://developers.google.com/accounts/docs/OAuth2InstalledApp#choosingredirecturi"&gt;reference
documentation&lt;/ulink&gt; for details about choosing a redirect URI.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="refresh-token"
                version="0.17.2"
                writable="1"
                transfer-ownership="none"
                setter="set_refresh_token"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="367">The server provided refresh token, which can be stored and passed in
to new #GDataOAuth2Authorizer instances before calling
gdata_authorizer_refresh_authorization_async() to create a new
short-lived access token.

The refresh token is opaque data and must not be parsed.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="timeout"
                version="0.17.0"
                writable="1"
                transfer-ownership="none"
                setter="set_timeout"
                getter="get_timeout"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gdata-oauth2-authorizer.c"
             line="334">A timeout, in seconds, for network operations. If the timeout is
exceeded, the operation will be cancelled and
%GDATA_SERVICE_ERROR_NETWORK_ERROR will be returned.

If the timeout is &lt;code class="literal"&gt;0&lt;/code&gt;, operations will
never time out.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="OAuth2AuthorizerPrivate"
              c:type="GDataOAuth2AuthorizerPrivate*"/>
      </field>
    </class>
    <record name="OAuth2AuthorizerClass"
            c:type="GDataOAuth2AuthorizerClass"
            glib:is-gtype-struct-for="OAuth2Authorizer"
            version="0.17.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-oauth2-authorizer.h"
           line="80">All the fields in the #GDataOAuth2AuthorizerClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="95"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-oauth2-authorizer.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-oauth2-authorizer.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="OAuth2AuthorizerPrivate"
            c:type="GDataOAuth2AuthorizerPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-oauth2-authorizer.h" line="65"/>
    </record>
    <enumeration name="OperationType"
                 version="0.6.0"
                 glib:type-name="GDataOperationType"
                 glib:get-type="gdata_operation_type_get_type"
                 c:type="GDataOperationType">
      <doc xml:space="preserve"
           filename="gdata/gdata-service.h"
           line="33">Representations of the different operations performed by the library.</doc>
      <member name="query"
              value="1"
              c:identifier="GDATA_OPERATION_QUERY"
              glib:nick="query"
              glib:name="GDATA_OPERATION_QUERY">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="35">a query</doc>
      </member>
      <member name="insertion"
              value="2"
              c:identifier="GDATA_OPERATION_INSERTION"
              glib:nick="insertion"
              glib:name="GDATA_OPERATION_INSERTION">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="36">an insertion of a #GDataEntry</doc>
      </member>
      <member name="update"
              value="3"
              c:identifier="GDATA_OPERATION_UPDATE"
              glib:nick="update"
              glib:name="GDATA_OPERATION_UPDATE">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="37">an update of a #GDataEntry</doc>
      </member>
      <member name="deletion"
              value="4"
              c:identifier="GDATA_OPERATION_DELETION"
              glib:nick="deletion"
              glib:name="GDATA_OPERATION_DELETION">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="38">a deletion of a #GDataEntry</doc>
      </member>
      <member name="download"
              value="5"
              c:identifier="GDATA_OPERATION_DOWNLOAD"
              glib:nick="download"
              glib:name="GDATA_OPERATION_DOWNLOAD">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="39">a download of a file</doc>
      </member>
      <member name="upload"
              value="6"
              c:identifier="GDATA_OPERATION_UPLOAD"
              glib:nick="upload"
              glib:name="GDATA_OPERATION_UPLOAD">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="40">an upload of a file</doc>
      </member>
      <member name="authentication"
              value="7"
              c:identifier="GDATA_OPERATION_AUTHENTICATION"
              glib:nick="authentication"
              glib:name="GDATA_OPERATION_AUTHENTICATION">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="41">authentication with the service</doc>
      </member>
      <member name="batch"
              value="8"
              c:identifier="GDATA_OPERATION_BATCH"
              glib:nick="batch"
              glib:name="GDATA_OPERATION_BATCH">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="42">a batch operation with #GDataBatchOperation</doc>
      </member>
    </enumeration>
    <function-macro name="PARSABLE"
                    c:identifier="GDATA_PARSABLE"
                    introspectable="0">
      <source-position filename="gdata/gdata-parsable.h" line="46"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PARSABLE_CLASS"
                    c:identifier="GDATA_PARSABLE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-parsable.h" line="47"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PARSABLE_GET_CLASS"
                    c:identifier="GDATA_PARSABLE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-parsable.h" line="50"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_ALBUM"
                    c:identifier="GDATA_PICASAWEB_ALBUM"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="47"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_ALBUM_CLASS"
                    c:identifier="GDATA_PICASAWEB_ALBUM_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="48"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_ALBUM_GET_CLASS"
                    c:identifier="GDATA_PICASAWEB_ALBUM_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="51"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_COMMENT"
                    c:identifier="GDATA_PICASAWEB_COMMENT"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_COMMENT_CLASS"
                    c:identifier="GDATA_PICASAWEB_COMMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_COMMENT_GET_CLASS"
                    c:identifier="GDATA_PICASAWEB_COMMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_FEED"
                    c:identifier="GDATA_PICASAWEB_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_FEED_CLASS"
                    c:identifier="GDATA_PICASAWEB_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_FEED_GET_CLASS"
                    c:identifier="GDATA_PICASAWEB_FEED_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_FILE"
                    c:identifier="GDATA_PICASAWEB_FILE"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="69"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_FILE_CLASS"
                    c:identifier="GDATA_PICASAWEB_FILE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="70"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_FILE_GET_CLASS"
                    c:identifier="GDATA_PICASAWEB_FILE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="73"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_QUERY"
                    c:identifier="GDATA_PICASAWEB_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_QUERY_CLASS"
                    c:identifier="GDATA_PICASAWEB_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_QUERY_GET_CLASS"
                    c:identifier="GDATA_PICASAWEB_QUERY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_SERVICE"
                    c:identifier="GDATA_PICASAWEB_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_SERVICE_CLASS"
                    c:identifier="GDATA_PICASAWEB_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                       line="36"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_SERVICE_GET_CLASS"
                    c:identifier="GDATA_PICASAWEB_SERVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                       line="39"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_USER"
                    c:identifier="GDATA_PICASAWEB_USER"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_USER_CLASS"
                    c:identifier="GDATA_PICASAWEB_USER_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICASAWEB_USER_GET_CLASS"
                    c:identifier="GDATA_PICASAWEB_USER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PICASAWEB_VIDEO_STATUS_FAILED"
              value="failed"
              c:type="GDATA_PICASAWEB_VIDEO_STATUS_FAILED"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
           line="59">There was an error while processing or thumbnailing the video and it should be deleted.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="66"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PICASAWEB_VIDEO_STATUS_FINAL"
              value="final"
              c:type="GDATA_PICASAWEB_VIDEO_STATUS_FINAL"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
           line="50">The video has been processed and thumbnailed.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PICASAWEB_VIDEO_STATUS_PENDING"
              value="pending"
              c:type="GDATA_PICASAWEB_VIDEO_STATUS_PENDING"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
           line="32">The video is still being processed.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PICASAWEB_VIDEO_STATUS_READY"
              value="ready"
              c:type="GDATA_PICASAWEB_VIDEO_STATUS_READY"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
           line="41">The video has been processed, but still needs thumbnailing.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Parsable"
           c:symbol-prefix="parsable"
           c:type="GDataParsable"
           version="0.3.0"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GDataParsable"
           glib:get-type="gdata_parsable_get_type"
           glib:type-struct="ParsableClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-parsable.h"
           line="54">All the fields in the #GDataParsable structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-parsable.h" line="119"/>
      <constructor name="new_from_json"
                   c:identifier="gdata_parsable_new_from_json"
                   version="0.15.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.c"
             line="428">Creates a new #GDataParsable subclass (of the given @parsable_type) from the given @json.

An object of the given @parsable_type is created, and its &lt;function&gt;parse_json&lt;/function&gt; and
&lt;function&gt;post_parse_json&lt;/function&gt; class functions called on the JSON node obtained from @json.
&lt;function&gt;post_parse_json&lt;/function&gt; is called once on the root node, while &lt;function&gt;parse_json&lt;/function&gt; is called for
each of the node's members.

If @length is -1, @json will be assumed to be nul-terminated.

If an error occurs during parsing, a suitable error from #GDataParserError will be returned.</doc>
        <source-position filename="gdata/gdata-parsable.h" line="129"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-parsable.c"
               line="446">a new #GDataParsable, or %NULL; unref with g_object_unref()</doc>
          <type name="Parsable" c:type="GDataParsable*"/>
        </return-value>
        <parameters>
          <parameter name="parsable_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="430">the type of the class represented by the JSON</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="json" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="431">the JSON for just the parsable object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="432">the length of @json, or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gdata_parsable_new_from_xml"
                   version="0.4.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.c"
             line="286">Creates a new #GDataParsable subclass (of the given @parsable_type) from the given @xml.

An object of the given @parsable_type is created, and its &lt;function&gt;pre_parse_xml&lt;/function&gt;, &lt;function&gt;parse_xml&lt;/function&gt; and
&lt;function&gt;post_parse_xml&lt;/function&gt; class functions called on the XML tree obtained from @xml. &lt;function&gt;pre_parse_xml&lt;/function&gt; and
&lt;function&gt;post_parse_xml&lt;/function&gt; are called once each on the root node of the tree, while &lt;function&gt;parse_xml&lt;/function&gt; is called for
each of the child nodes of the root node.

If @length is -1, @xml will be assumed to be null-terminated.

If an error occurs during parsing, a suitable error from #GDataParserError will be returned.</doc>
        <source-position filename="gdata/gdata-parsable.h" line="125"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-parsable.c"
               line="304">a new #GDataParsable, or %NULL; unref with g_object_unref()</doc>
          <type name="Parsable" c:type="GDataParsable*"/>
        </return-value>
        <parameters>
          <parameter name="parsable_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="288">the type of the class represented by the XML</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="xml" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="289">the XML for just the parsable object, with full namespace declarations</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="290">the length of @xml, or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_json">
        <source-position filename="gdata/gdata-parsable.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_namespaces">
        <source-position filename="gdata/gdata-parsable.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="namespaces" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_xml">
        <source-position filename="gdata/gdata-parsable.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="xml_string" transfer-ownership="none">
            <type name="GLib.String" c:type="GString*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parse_json" throws="1">
        <source-position filename="gdata/gdata-parsable.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="reader" transfer-ownership="none">
            <type name="Json.Reader" c:type="JsonReader*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parse_xml" throws="1">
        <source-position filename="gdata/gdata-parsable.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="doc" transfer-ownership="none">
            <type name="libxml2.Doc" c:type="xmlDoc*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="libxml2.Node" c:type="xmlNode*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="2">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="post_parse_json" throws="1">
        <source-position filename="gdata/gdata-parsable.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="0">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="post_parse_xml" throws="1">
        <source-position filename="gdata/gdata-parsable.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="0">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pre_get_xml">
        <source-position filename="gdata/gdata-parsable.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="xml_string" transfer-ownership="none">
            <type name="GLib.String" c:type="GString*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pre_parse_xml" throws="1">
        <source-position filename="gdata/gdata-parsable.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parsable" transfer-ownership="none">
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
          <parameter name="doc" transfer-ownership="none">
            <type name="libxml2.Doc" c:type="xmlDoc*"/>
          </parameter>
          <parameter name="root_node" transfer-ownership="none">
            <type name="libxml2.Node" c:type="xmlNode*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="2">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_content_type"
              c:identifier="gdata_parsable_get_content_type"
              version="0.17.7">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.c"
             line="548">Returns the content type upon which the #GDataParsable is built. For example, `application/atom+xml` or `application/json`.</doc>
        <source-position filename="gdata/gdata-parsable.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-parsable.c"
               line="554">the parsable's content type</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="550">a #GDataParsable</doc>
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_json"
              c:identifier="gdata_parsable_get_json"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.c"
             line="688">Builds a JSON representation of the #GDataParsable in its current state, such that it could be inserted on the server. The JSON
is valid for stand-alone use.</doc>
        <source-position filename="gdata/gdata-parsable.h" line="131"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-parsable.c"
               line="695">the object's JSON; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="690">a #GDataParsable</doc>
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml"
              c:identifier="gdata_parsable_get_xml"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.c"
             line="585">Builds an XML representation of the #GDataParsable in its current state, such that it could be inserted on the server. The XML is guaranteed
to have all its namespaces declared properly in a self-contained fashion, and is valid for stand-alone use.</doc>
        <source-position filename="gdata/gdata-parsable.h" line="127"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-parsable.c"
               line="592">the object's XML; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-parsable.c"
                 line="587">a #GDataParsable</doc>
            <type name="Parsable" c:type="GDataParsable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="constructed-from-xml"
                version="0.7.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.c"
             line="87">Specifies whether the object was constructed by parsing XML or manually.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ParsablePrivate" c:type="GDataParsablePrivate*"/>
      </field>
    </class>
    <record name="ParsableClass"
            c:type="GDataParsableClass"
            glib:is-gtype-struct-for="Parsable"
            version="0.3.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-parsable.h"
           line="66">The class structure for the #GDataParsable class. Note that JSON and XML functions are mutually exclusive:
a given implementation of #GDataParsable is represented as exactly one of JSON and XML.</doc>
      <source-position filename="gdata/gdata-parsable.h" line="119"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.h"
             line="68">the parent class</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="pre_parse_xml">
        <callback name="pre_parse_xml" throws="1">
          <source-position filename="gdata/gdata-parsable.h" line="92"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="doc" transfer-ownership="none">
              <type name="libxml2.Doc" c:type="xmlDoc*"/>
            </parameter>
            <parameter name="root_node" transfer-ownership="none">
              <type name="libxml2.Node" c:type="xmlNode*"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="3">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_xml">
        <callback name="parse_xml" throws="1">
          <source-position filename="gdata/gdata-parsable.h" line="93"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="doc" transfer-ownership="none">
              <type name="libxml2.Doc" c:type="xmlDoc*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="libxml2.Node" c:type="xmlNode*"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="3">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="post_parse_xml">
        <callback name="post_parse_xml" throws="1">
          <source-position filename="gdata/gdata-parsable.h" line="94"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pre_get_xml">
        <callback name="pre_get_xml">
          <source-position filename="gdata/gdata-parsable.h" line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="xml_string" transfer-ownership="none">
              <type name="GLib.String" c:type="GString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_xml">
        <callback name="get_xml">
          <source-position filename="gdata/gdata-parsable.h" line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="xml_string" transfer-ownership="none">
              <type name="GLib.String" c:type="GString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_namespaces">
        <callback name="get_namespaces">
          <source-position filename="gdata/gdata-parsable.h" line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="namespaces" transfer-ownership="none">
              <type name="GLib.HashTable" c:type="GHashTable*">
                <type name="gpointer" c:type="gpointer"/>
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_json">
        <callback name="parse_json" throws="1">
          <source-position filename="gdata/gdata-parsable.h" line="100"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="reader" transfer-ownership="none">
              <type name="Json.Reader" c:type="JsonReader*"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="2">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="post_parse_json">
        <callback name="post_parse_json" throws="1">
          <source-position filename="gdata/gdata-parsable.h" line="101"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_json">
        <callback name="get_json">
          <source-position filename="gdata/gdata-parsable.h" line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parsable" transfer-ownership="none">
              <type name="Parsable" c:type="GDataParsable*"/>
            </parameter>
            <parameter name="builder" transfer-ownership="none">
              <type name="Json.Builder" c:type="JsonBuilder*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_content_type">
        <callback name="get_content_type">
          <source-position filename="gdata/gdata-parsable.h" line="104"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
        </callback>
      </field>
      <field name="element_name">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.h"
             line="81">the name of the XML element which represents this parsable</doc>
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="element_namespace">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.h"
             line="82">the prefix of the XML namespace used for the parsable</doc>
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-parsable.h" line="111"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-parsable.h" line="112"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-parsable.h" line="113"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-parsable.h" line="114"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-parsable.h" line="115"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-parsable.h" line="116"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved6" introspectable="0">
        <callback name="_g_reserved6">
          <source-position filename="gdata/gdata-parsable.h" line="117"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved7" introspectable="0">
        <callback name="_g_reserved7">
          <source-position filename="gdata/gdata-parsable.h" line="118"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ParsablePrivate"
            c:type="GDataParsablePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-parsable.h" line="52"/>
    </record>
    <enumeration name="ParserError"
                 glib:type-name="GDataParserError"
                 glib:get-type="gdata_parser_error_get_type"
                 c:type="GDataParserError"
                 glib:error-domain="gdata-parser-error-quark">
      <doc xml:space="preserve"
           filename="gdata/gdata-parsable.h"
           line="30">Error codes for XML or JSON parsing operations.</doc>
      <member name="parsing_string"
              value="1"
              c:identifier="GDATA_PARSER_ERROR_PARSING_STRING"
              glib:nick="parsing-string"
              glib:name="GDATA_PARSER_ERROR_PARSING_STRING">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.h"
             line="32">Error parsing the XML or JSON syntax itself</doc>
      </member>
      <member name="empty_document"
              value="2"
              c:identifier="GDATA_PARSER_ERROR_EMPTY_DOCUMENT"
              glib:nick="empty-document"
              glib:name="GDATA_PARSER_ERROR_EMPTY_DOCUMENT">
        <doc xml:space="preserve"
             filename="gdata/gdata-parsable.h"
             line="33">Empty document</doc>
      </member>
      <function name="quark" c:identifier="gdata_parser_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="PicasaWebAlbum"
           c:symbol-prefix="picasaweb_album"
           c:type="GDataPicasaWebAlbum"
           version="0.4.0"
           parent="Entry"
           glib:type-name="GDataPicasaWebAlbum"
           glib:get-type="gdata_picasaweb_album_get_type"
           glib:type-struct="PicasaWebAlbumClass">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
           line="55">All the fields in the #GDataPicasaWebAlbum structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="82"/>
      <constructor name="new"
                   c:identifier="gdata_picasaweb_album_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="831">Creates a new #GDataPicasaWebAlbum with the given ID and default properties. @id is the ID which would be returned by gdata_entry_get_id(),
not gdata_picasaweb_album_get_id().

If @id is not %NULL and can't be parsed to extract an album ID, %NULL will be returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="840">a new #GDataPicasaWebAlbum, or %NULL; unref with g_object_unref()</doc>
          <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="833">the album's entry ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_bytes_used"
              c:identifier="gdata_picasaweb_album_get_bytes_used"
              glib:get-property="bytes-used"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1080">Gets the #GDataPicasaWebAlbum:bytes-used property. It will return &lt;code class="literal"&gt;-1&lt;/code&gt; if the current authenticated
user is not the owner of the album.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1087">the number of bytes used by the album and its contents, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="glong" c:type="glong"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1082">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_comment_count"
              c:identifier="gdata_picasaweb_album_get_comment_count"
              glib:get-property="comment-count"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1132">Gets the #GDataPicasaWebAlbum:comment-count property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1138">the number of comments on the album</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1134">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_contents"
              c:identifier="gdata_picasaweb_album_get_contents"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1186">Returns a list of media content, such as the cover image for the album.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1192">a #GList of #GDataMediaContent items</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MediaContent"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1188">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_coordinates"
              c:identifier="gdata_picasaweb_album_get_coordinates"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1220">Gets the #GDataPicasaWebAlbum:latitude and #GDataPicasaWebAlbum:longitude properties,
setting the out parameters to them. If either latitude or longitude is %NULL, that parameter will not be set.
If the coordinates are unset, @latitude and @longitude will be set to %G_MAXDOUBLE.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1222">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
          <parameter name="latitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1223">return location for the latitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="longitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1224">return location for the longitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_edited"
              c:identifier="gdata_picasaweb_album_get_edited"
              glib:get-property="edited"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="916">Gets the #GDataPicasaWebAlbum:edited property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="922">the UNIX timestamp for the time the album was last edited, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="918">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gdata_picasaweb_album_get_id"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="865">Gets the #GDataPicasaWebAlbum:album-id property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="871">the album's ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="867">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="gdata_picasaweb_album_get_location"
              glib:get-property="location"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="933">Gets the #GDataPicasaWebAlbum:location property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="939">the album's location, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="935">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nickname"
              c:identifier="gdata_picasaweb_album_get_nickname"
              glib:get-property="nickname"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="899">Gets the #GDataPicasaWebAlbum:nickname property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="905">the album owner's nickname</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="901">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_num_photos"
              c:identifier="gdata_picasaweb_album_get_num_photos"
              glib:get-property="num-photos"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1046">Gets the #GDataPicasaWebAlbum:num-photos property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1052">the number of photos currently in the album</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1048">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_num_photos_remaining"
              c:identifier="gdata_picasaweb_album_get_num_photos_remaining"
              glib:get-property="num-photos-remaining"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1063">Gets the #GDataPicasaWebAlbum:num-photos-remaining property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1069">the number of photos that can still be uploaded to the album</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1065">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tags"
              c:identifier="gdata_picasaweb_album_get_tags"
              glib:get-property="tags"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1149">Gets the #GDataPicasaWebAlbum:tags property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1155">a %NULL-terminated array of tags associated with all the photos in the album, or %NULL</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1151">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_thumbnails"
              c:identifier="gdata_picasaweb_album_get_thumbnails"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1203">Returns a list of thumbnails, often at different sizes, for this album.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1209">a #GList of #GDataMediaThumbnails, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MediaThumbnail"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1205">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp"
              c:identifier="gdata_picasaweb_album_get_timestamp"
              glib:get-property="timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1006">Gets the #GDataPicasaWebAlbum:timestamp property. This value usually holds either the date that best corresponds to the album of photos, or to the
day it was uploaded. It's a UNIX timestamp in milliseconds (not seconds) since the epoch. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt;
will be returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1014">the UNIX timestamp for the timestamp property in milliseconds, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1008">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user"
              c:identifier="gdata_picasaweb_album_get_user"
              glib:get-property="user"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="882">Gets the #GDataPicasaWebAlbum:user property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="888">the album owner's username</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="884">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visibility"
              c:identifier="gdata_picasaweb_album_get_visibility"
              glib:get-property="visibility"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="971">Gets the #GDataPicasaWebAlbum:visibility property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="977">the album's visibility level</doc>
          <type name="PicasaWebVisibility" c:type="GDataPicasaWebVisibility"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="973">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_commenting_enabled"
              c:identifier="gdata_picasaweb_album_is_commenting_enabled"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1098">Gets the #GDataPicasaWebAlbum:is-commenting-enabled property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
               line="1104">%TRUE if commenting is enabled for the album, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1100">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_coordinates"
              c:identifier="gdata_picasaweb_album_set_coordinates"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1243">Sets the #GDataPicasaWebAlbum:latitude and #GDataPicasaWebAlbum:longitude properties to
@latitude and @longitude respectively.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1245">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
          <parameter name="latitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1246">the album's new latitude coordinate, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="longitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1247">the album's new longitude coordinate, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_commenting_enabled"
              c:identifier="gdata_picasaweb_album_set_is_commenting_enabled"
              glib:set-property="is-commenting-enabled"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1115">Sets the #GDataPicasaWebAlbum:is-commenting-enabled property to @is_commenting_enabled.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1117">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
          <parameter name="is_commenting_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1118">%TRUE if commenting should be enabled for the album, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location"
              c:identifier="gdata_picasaweb_album_set_location"
              glib:set-property="location"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="950">Sets the #GDataPicasaWebAlbum:location property to @location.

Set @location to %NULL to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="952">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
          <parameter name="location"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="953">the new album location, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tags"
              c:identifier="gdata_picasaweb_album_set_tags"
              glib:set-property="tags"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1166">Sets the #GDataPicasaWebAlbum:tags property to @tags.

Set @tags to %NULL to unset the album's tag list.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1168">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
          <parameter name="tags"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1169">the new %NULL-terminated array of tags, or %NULL</doc>
            <array c:type="const gchar* const*">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp"
              c:identifier="gdata_picasaweb_album_set_timestamp"
              glib:set-property="timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="1025">Sets the #GDataPicasaWebAlbum:timestamp property from @timestamp. This should be a UNIX timestamp in milliseconds (not seconds) since the epoch.

Set @timestamp to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1027">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="1028">a UNIX timestamp, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visibility"
              c:identifier="gdata_picasaweb_album_set_visibility"
              glib:set-property="visibility"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="988">Sets the #GDataPicasaWebAlbum:visibility property to @visibility.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="990">a #GDataPicasaWebAlbum</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </instance-parameter>
          <parameter name="visibility" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
                 line="991">the new album visibility level</doc>
            <type name="PicasaWebVisibility"
                  c:type="GDataPicasaWebVisibility"/>
          </parameter>
        </parameters>
      </method>
      <property name="album-id"
                version="0.7.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="171">The ID of the album. This is a substring of the ID returned by gdata_entry_get_id() for #GDataPicasaWebAlbums; for example,
if gdata_entry_get_id() returned "http://picasaweb.google.com/data/entry/user/libgdata.picasaweb/albumid/5328889949261497249" for a
particular #GDataPicasaWebAlbum, the #GDataPicasaWebAlbum:album-id property would be "5328889949261497249".

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_id"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="bytes-used"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_bytes_used"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="320">The number of bytes consumed by this album and its contents. Note that this is only set if the authenticated user is the owner of the
album; it's otherwise &lt;code class="literal"&gt;-1&lt;/code&gt;.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_bytesUsed"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="glong" c:type="glong"/>
      </property>
      <property name="comment-count"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_comment_count"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="350">The number of comments on the album.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_commentCount"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="edited"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_edited"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="221">The time this album was last edited. If the album has not been edited yet, the content indicates the time it was created.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/#appEdited"&gt;
Atom Publishing Protocol specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="is-commenting-enabled"
                writable="1"
                transfer-ownership="none"
                setter="set_is_commenting_enabled"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="latitude"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="382">The location as a latitude coordinate associated with this album. Valid latitudes range from &lt;code class="literal"&gt;-90.0&lt;/code&gt;
to &lt;code class="literal"&gt;90.0&lt;/code&gt; inclusive.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/docs/2.0/reference.html#georss_where"&gt;
GeoRSS specification&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="location"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_location"
                getter="get_location"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="237">The user-specified location associated with the album. A place name.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_location"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="longitude"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="399">The location as a longitude coordinate associated with this album. Valid longitudes range from &lt;code class="literal"&gt;-180.0&lt;/code&gt;
to &lt;code class="literal"&gt;180.0&lt;/code&gt; inclusive.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/docs/2.0/reference.html#georss_where"&gt;
GeoRSS specification&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="nickname"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_nickname"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="205">The user's nickname. This is a user-specified value that should be used when referring to the user by name.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_nickname"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="num-photos"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_num_photos"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="286">The number of photos and videos in the album.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_numphotos"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="num-photos-remaining"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_num_photos_remaining"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="303">The number of photos and videos that can still be uploaded to this album.
This doesn't account for quota, just a hardcoded maximum number per album set by Google.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_numphotosremaining"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="tags"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_tags"
                getter="get_tags">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="366">A %NULL-terminated array of tags associated with the album; all the tags associated with the individual photos in the album.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#media_keywords"&gt;
Media RSS specification&lt;/ulink&gt;.</doc>
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="timestamp"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_timestamp"
                getter="get_timestamp"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="269">The timestamp of when the album occurred, settable by the user. This a UNIX timestamp in milliseconds (not seconds) since the epoch.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_timestamp"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="user"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_user"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="189">The username of the album owner.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_user"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="visibility"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_visibility"
                getter="get_visibility"
                default-value="GDATA_PICASAWEB_PRIVATE">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
             line="253">The visibility (or access rights) of the album.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_access"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="PicasaWebVisibility"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="PicasaWebAlbumPrivate"
              c:type="GDataPicasaWebAlbumPrivate*"/>
      </field>
    </class>
    <record name="PicasaWebAlbumClass"
            c:type="GDataPicasaWebAlbumClass"
            glib:is-gtype-struct-for="PicasaWebAlbum"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
           line="67">All the fields in the #GDataPicasaWebAlbumClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="82"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                           line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PicasaWebAlbumPrivate"
            c:type="GDataPicasaWebAlbumPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
                       line="53"/>
    </record>
    <class name="PicasaWebComment"
           c:symbol-prefix="picasaweb_comment"
           c:type="GDataPicasaWebComment"
           version="0.10.0"
           parent="Comment"
           glib:type-name="GDataPicasaWebComment"
           glib:get-type="gdata_picasaweb_comment_get_type"
           glib:type-struct="PicasaWebCommentClass">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
           line="39">All the fields in the #GDataPicasaWebComment structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="66"/>
      <constructor name="new"
                   c:identifier="gdata_picasaweb_comment_new"
                   version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-comment.c"
             line="98">Creates a new #GDataPicasaWebComment with the given ID and default properties.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-comment.c"
               line="104">a new #GDataPicasaWebComment; unref with g_object_unref()</doc>
          <type name="PicasaWebComment" c:type="GDataPicasaWebComment*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-comment.c"
                 line="100">the comment's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Comment" c:type="GDataComment"/>
      </field>
      <field name="priv">
        <type name="PicasaWebCommentPrivate"
              c:type="GDataPicasaWebCommentPrivate*"/>
      </field>
    </class>
    <record name="PicasaWebCommentClass"
            c:type="GDataPicasaWebCommentClass"
            glib:is-gtype-struct-for="PicasaWebComment"
            version="0.10.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
           line="51">All the fields in the #GDataPicasaWebCommentClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="CommentClass" c:type="GDataCommentClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PicasaWebCommentPrivate"
            c:type="GDataPicasaWebCommentPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-comment.h"
                       line="37"/>
    </record>
    <class name="PicasaWebFeed"
           c:symbol-prefix="picasaweb_feed"
           c:type="GDataPicasaWebFeed"
           version="0.6.0"
           parent="Feed"
           glib:type-name="GDataPicasaWebFeed"
           glib:get-type="gdata_picasaweb_feed_get_type"
           glib:type-struct="PicasaWebFeedClass">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
           line="38">All the fields in the #GDataPicasaWebFeed structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                       line="66"/>
      <field name="parent">
        <type name="Feed" c:type="GDataFeed"/>
      </field>
      <field name="padding1" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
    </class>
    <record name="PicasaWebFeedClass"
            c:type="GDataPicasaWebFeedClass"
            glib:is-gtype-struct-for="PicasaWebFeed"
            version="0.6.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
           line="51">All the fields in the #GDataPicasaWebFeedClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="FeedClass" c:type="GDataFeedClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-feed.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="PicasaWebFile"
           c:symbol-prefix="picasaweb_file"
           c:type="GDataPicasaWebFile"
           version="0.4.0"
           parent="Entry"
           glib:type-name="GDataPicasaWebFile"
           glib:get-type="gdata_picasaweb_file_get_type"
           glib:type-struct="PicasaWebFileClass">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
           line="77">All the fields in the #GDataPicasaWebFile structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="104"/>
      <implements name="Commentable"/>
      <constructor name="new"
                   c:identifier="gdata_picasaweb_file_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1110">Creates a new #GDataPicasaWebFile with the given ID and default properties.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1116">a new #GDataPicasaWebFile; unref with g_object_unref()</doc>
          <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1112">the file's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_album_id"
              c:identifier="gdata_picasaweb_file_get_album_id"
              glib:get-property="album-id"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1192">Gets the #GDataPicasaWebFile:album-id property. This is in the same form as returned by gdata_picasaweb_album_get_id().</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1198">the ID of the album containing the #GDataPicasaWebFile</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1194">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_caption"
              c:identifier="gdata_picasaweb_file_get_caption"
              glib:get-property="caption"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1525">Gets the #GDataPicasaWebFile:caption property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1531">the file's descriptive caption, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1527">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_checksum"
              c:identifier="gdata_picasaweb_file_get_checksum"
              glib:get-property="checksum"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1280">Gets the #GDataPicasaWebFile:checksum property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1286">the checksum assigned to this file, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1282">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_comment_count"
              c:identifier="gdata_picasaweb_file_get_comment_count"
              glib:get-property="comment-count"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1395">Gets the #GDataPicasaWebFile:comment-count property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1401">the number of comments on the file</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1397">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_contents"
              c:identifier="gdata_picasaweb_file_get_contents"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1563">Returns a list of media content, e.g. the actual photo or video.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1569">a #GList of #GDataMediaContent items</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MediaContent"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1565">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_coordinates"
              c:identifier="gdata_picasaweb_file_get_coordinates"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1754">Gets the #GDataPicasaWebFile:latitude and #GDataPicasaWebFile:longitude properties, setting the out parameters to them.
If either latitude or longitude is %NULL, that parameter will not be set. If the coordinates are unset,
@latitude and @longitude will be set to %G_MAXDOUBLE.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1756">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="latitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1757">return location for the latitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="longitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1758">return location for the longitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_credit"
              c:identifier="gdata_picasaweb_file_get_credit"
              glib:get-property="credit"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1504">Gets the #GDataPicasaWebFile:credit property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1510">the nickname of the user credited with this file</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1506">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distance"
              c:identifier="gdata_picasaweb_file_get_distance"
              glib:get-property="distance"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1601">Gets the #GDataPicasaWebFile:distance property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1607">the distance recorded in the photo's EXIF, or &lt;code class="literal"&gt;-1&lt;/code&gt; if unknown</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1603">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_edited"
              c:identifier="gdata_picasaweb_file_get_edited"
              glib:get-property="edited"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1158">Gets the #GDataPicasaWebFile:edited property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1164">the UNIX timestamp for the time the file was last edited, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1160">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exposure"
              c:identifier="gdata_picasaweb_file_get_exposure"
              glib:get-property="exposure"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1618">Gets the #GDataPicasaWebFile:exposure property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1624">the exposure value, or &lt;code class="literal"&gt;0&lt;/code&gt; if unknown</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1620">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flash"
              c:identifier="gdata_picasaweb_file_get_flash"
              glib:get-property="flash"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1635">Gets the #GDataPicasaWebFile:flash property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1641">%TRUE if flash was used, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1637">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_focal_length"
              c:identifier="gdata_picasaweb_file_get_focal_length"
              glib:get-property="focal-length"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1652">Gets the #GDataPicasaWebFile:focal-length property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1658">the focal-length value, or &lt;code class="literal"&gt;-1&lt;/code&gt; if unknown</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1654">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fstop"
              c:identifier="gdata_picasaweb_file_get_fstop"
              glib:get-property="fstop"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1669">Gets the #GDataPicasaWebFile:fstop property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1675">the F-stop value, or &lt;code class="literal"&gt;0&lt;/code&gt; if unknown</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1671">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gdata_picasaweb_file_get_height"
              glib:get-property="height"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1246">Gets the #GDataPicasaWebFile:height property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1252">the height of the image or video, in pixels</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1248">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gdata_picasaweb_file_get_id"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1141">Gets the #GDataPicasaWebFile:file-id property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1147">the file's ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1143">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_unique_id"
              c:identifier="gdata_picasaweb_file_get_image_unique_id"
              glib:get-property="image-unique-id"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1686">Gets the #GDataPicasaWebFile:image-unique-id property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1692">the photo's unique EXIF identifier, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1688">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_iso"
              c:identifier="gdata_picasaweb_file_get_iso"
              glib:get-property="iso"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1703">Gets the #GDataPicasaWebFile:iso property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1709">the ISO speed, or &lt;code class="literal"&gt;-1&lt;/code&gt; if unknown</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1705">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_make"
              c:identifier="gdata_picasaweb_file_get_make"
              glib:get-property="make"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1720">Gets the #GDataPicasaWebFile:make property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1726">the name of the manufacturer of the camera, or %NULL if unknown</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1722">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="gdata_picasaweb_file_get_model"
              glib:get-property="model"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1737">Gets the #GDataPicasaWebFile:model property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1743">the model name of the camera, or %NULL if unknown</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1739">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rotation"
              c:identifier="gdata_picasaweb_file_get_rotation"
              glib:get-property="rotation"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1412">Gets the #GDataPicasaWebFile:rotation property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1418">the image's rotation, in degrees</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1414">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="gdata_picasaweb_file_get_size"
              glib:get-property="size"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1263">Gets the #GDataPicasaWebFile:size property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1269">the size of the file, in bytes</doc>
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1265">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tags"
              c:identifier="gdata_picasaweb_file_get_tags"
              glib:get-property="tags"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1467">Gets the #GDataPicasaWebFile:tags property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1473">a %NULL-terminated array of tags associated with the file, or %NULL</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1469">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_thumbnails"
              c:identifier="gdata_picasaweb_file_get_thumbnails"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1580">Returns a list of thumbnails, often at different sizes, for this
file.  Currently, PicasaWeb usually returns three thumbnails, with
widths in pixels of 72, 144, and 288.  However, the thumbnail will
not be larger than the actual image, so thumbnails may be smaller
than the widths listed above.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1590">a #GList of #GDataMediaThumbnails, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MediaThumbnail"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1582">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp"
              c:identifier="gdata_picasaweb_file_get_timestamp"
              glib:get-property="timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1318">Gets the #GDataPicasaWebFile:timestamp property. It's a UNIX timestamp in milliseconds (not seconds) since the epoch. If the property is unset,
&lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1325">the UNIX timestamp for the timestamp property in milliseconds, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1320">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="gdata_picasaweb_file_get_version"
              glib:get-property="version"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1175">Gets the #GDataPicasaWebFile:version property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1181">the file's version number, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1177">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_video_status"
              c:identifier="gdata_picasaweb_file_get_video_status"
              glib:get-property="video-status"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1450">Gets the #GDataPicasaWebFile:video-status property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1456">the status of this video ("pending", "ready", "final" or "failed"), or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1452">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gdata_picasaweb_file_get_width"
              glib:get-property="width"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1229">Gets the #GDataPicasaWebFile:width property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1235">the width of the image or video, in pixels</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1231">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_commenting_enabled"
              c:identifier="gdata_picasaweb_file_is_commenting_enabled"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1361">Gets the #GDataPicasaWebFile:is-commenting-enabled property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
               line="1367">%TRUE if commenting is enabled, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1363">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_album_id"
              c:identifier="gdata_picasaweb_file_set_album_id"
              glib:set-property="album-id"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1209">Sets the #GDataPicasaWebFile:album-id property, effectively moving the file to the album.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1211">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="album_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1212">the ID of the new album for this file</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caption"
              c:identifier="gdata_picasaweb_file_set_caption"
              glib:set-property="caption"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1542">Sets the #GDataPicasaWebFile:caption property to @caption.

Set @caption to %NULL to unset the file's caption.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1544">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="caption"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1545">the file's new caption, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_checksum"
              c:identifier="gdata_picasaweb_file_set_checksum"
              glib:set-property="checksum"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1297">Sets the #GDataPicasaWebFile:checksum property to @checksum.

Set @checksum to %NULL to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1299">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="checksum"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1300">the new checksum for this file, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_coordinates"
              c:identifier="gdata_picasaweb_file_set_coordinates"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1777">Sets the #GDataPicasaWebFile:latitude and #GDataPicasaWebFile:longitude properties to
@latitude and @longitude respectively.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1779">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="latitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1780">the file's new latitude coordinate, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="longitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1781">the file's new longitude coordinate, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_commenting_enabled"
              c:identifier="gdata_picasaweb_file_set_is_commenting_enabled"
              glib:set-property="is-commenting-enabled"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1378">Sets the #GDataPicasaWebFile:is-commenting-enabled property to @is_commenting_enabled.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1380">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="is_commenting_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1381">%TRUE if commenting should be enabled for the file, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rotation"
              c:identifier="gdata_picasaweb_file_set_rotation"
              glib:set-property="rotation"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1429">Sets the #GDataPicasaWebFile:rotation property to @rotation.

The rotation is absolute, rather than cumulative, through successive calls to gdata_picasaweb_file_set_rotation(),
so calling it with 90° then 20° will result in a final rotation of 20°.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1431">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="rotation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1432">the new rotation for the image, in degrees</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tags"
              c:identifier="gdata_picasaweb_file_set_tags"
              glib:set-property="tags"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1484">Sets the #GDataPicasaWebFile:tags property to @tags.

Set @tags to %NULL to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1486">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="tags"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1487">a new %NULL-terminated array of tags, or %NULL</doc>
            <array c:type="const gchar* const*">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp"
              c:identifier="gdata_picasaweb_file_set_timestamp"
              glib:set-property="timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="1336">Sets the #GDataPicasaWebFile:timestamp property from @timestamp. This should be a UNIX timestamp in milliseconds (not seconds) since the epoch. If
@timestamp is &lt;code class="literal"&gt;-1&lt;/code&gt;, the property will be unset.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1338">a #GDataPicasaWebFile</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </instance-parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
                 line="1339">a UNIX timestamp, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="album-id"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_album_id"
                getter="get_album_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="241">The ID for the file's album. This is in the same form as returned by gdata_picasaweb_album_get_id().

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_albumid"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="caption"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_caption"
                getter="get_caption"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="431">The file's descriptive caption.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="checksum"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_checksum"
                getter="get_checksum"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="257">A checksum of the file, useful for duplicate detection.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_checksum"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="comment-count"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_comment_count"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="369">The number of comments on the file.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_commentCount"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="credit"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_credit"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="415">The nickname of the user credited with this file.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#media_credit"&gt;Media RSS
specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="distance"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_distance"
                default-value="-1.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="460">The distance to the subject reported in the image's EXIF.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="edited"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_edited"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="337">The time this file was last edited. If the file has not been edited yet, the content indicates the time it was created.

For more information, see the &lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/#appEdited"&gt;
Atom Publishing Protocol specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="exposure"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_exposure"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="476">The exposure time.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="file-id"
                version="0.7.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="206">The ID of the file. This is a substring of the ID returned by gdata_entry_get_id() for #GDataPicasaWebFiles; for example,
if gdata_entry_get_id() returned
"http://picasaweb.google.com/data/entry/user/libgdata.picasaweb/albumid/5328889949261497249/photoid/5328890138794566386" for a
particular #GDataPicasaWebFile, the #GDataPicasaWebFile:file-id property would be "5328890138794566386".

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_id"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="flash"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_flash"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="492">Indicates whether the flash was used.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="focal-length"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_focal_length"
                default-value="-1.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="508">The focal length for the shot.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="fstop"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_fstop"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="525">The F-stop value.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="height"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_height"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="305">The height of the photo or video, in pixels.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_height"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="image-unique-id"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_image_unique_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="541">An unique ID for the image found in the EXIF.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-commenting-enabled"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_commenting_enabled"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="402">Whether commenting is enabled for this file.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="iso"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_iso"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="557">The ISO speed.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt; and ISO 5800:1987.</doc>
        <type name="glong" c:type="glong"/>
      </property>
      <property name="latitude"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="605">The location as a latitude coordinate associated with this file. Valid latitudes range from &lt;code class="literal"&gt;-90.0&lt;/code&gt;
to &lt;code class="literal"&gt;90.0&lt;/code&gt; inclusive.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/docs/2.0/reference.html#georss_where"&gt;
GeoRSS specification&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="longitude"
                version="0.5.0"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="622">The location as a longitude coordinate associated with this file. Valid longitudes range from &lt;code class="literal"&gt;-180.0&lt;/code&gt;
to &lt;code class="literal"&gt;180.0&lt;/code&gt; inclusive.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/docs/2.0/reference.html#georss_where"&gt;
GeoRSS specification&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="make"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_make"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="573">The name of the manufacturer of the camera.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="model"
                version="0.5.0"
                transfer-ownership="none"
                getter="get_model"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="589">The model of the camera.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#exif_reference"&gt;
EXIF element reference&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="rotation"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_rotation"
                getter="get_rotation"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="385">The rotation of the photo, in degrees. This will only be non-zero for files which are pending rotation, and haven't yet been
permanently modified. For files which have already been rotated, this will be &lt;code class="literal"&gt;0&lt;/code&gt;.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_rotation"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="size"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_size"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="321">The size of the file, in bytes.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_size"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="gulong" c:type="gulong"/>
      </property>
      <property name="tags"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_tags"
                getter="get_tags">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="444">A %NULL-terminated array of tags associated with the file.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#media_keywords"&gt;
Media RSS specification&lt;/ulink&gt;.</doc>
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="timestamp"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_timestamp"
                getter="get_timestamp"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="353">The time the file was purportedly taken. This a UNIX timestamp in milliseconds (not seconds) since the epoch.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_timestamp"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="version"
                version="0.4.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_version"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="225">The version number of the file. Version numbers are based on modification time, so they don't increment linearly.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_version"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="video-status"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_video_status"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="273">The status of the file, if it is a video. For example: %GDATA_PICASAWEB_VIDEO_STATUS_PENDING or %GDATA_PICASAWEB_VIDEO_STATUS_FAILED.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_videostatus"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                version="0.4.0"
                transfer-ownership="none"
                getter="get_width"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
             line="289">The width of the photo or video, in pixels.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#gphoto_width"&gt;
gphoto specification&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="PicasaWebFilePrivate" c:type="GDataPicasaWebFilePrivate*"/>
      </field>
    </class>
    <record name="PicasaWebFileClass"
            c:type="GDataPicasaWebFileClass"
            glib:is-gtype-struct-for="PicasaWebFile"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
           line="89">All the fields in the #GDataPicasaWebFileClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="104"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                           line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                           line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PicasaWebFilePrivate"
            c:type="GDataPicasaWebFilePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-file.h"
                       line="75"/>
    </record>
    <class name="PicasaWebQuery"
           c:symbol-prefix="picasaweb_query"
           c:type="GDataPicasaWebQuery"
           version="0.4.0"
           parent="Query"
           glib:type-name="GDataPicasaWebQuery"
           glib:get-type="gdata_picasaweb_query_get_type"
           glib:type-struct="PicasaWebQueryClass">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
           line="41">All the fields in the #GDataPicasaWebQuery structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="68"/>
      <constructor name="new"
                   c:identifier="gdata_picasaweb_query_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="300">Creates a new #GDataPicasaWebQuery with its #GDataQuery:q property set to @q.

Note that when querying for albums with gdata_picasaweb_service_query_all_albums(), the @q parameter cannot be used.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
               line="308">a new #GDataPicasaWebQuery</doc>
          <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="302">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_limits"
                   c:identifier="gdata_picasaweb_query_new_with_limits"
                   version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="318">Creates a #GDataPicasaWebQuery with its #GDataQuery:q property set to @q, returning @max_results starting from the @start_index&lt;!-- --&gt;th result.

Note that when querying for albums with gdata_picasaweb_service_query_all_albums(), the @q parameter cannot be used.

This is useful for paging through results, but the result set between separate queries may change. So, if you use this to
request the next ten results after a previous query, it may include some of the previously returned results if their order changed, or
omit ones that would have otherwise been found in a earlier but larger query.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
               line="332">a new #GDataPicasaWebQuery</doc>
          <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="320">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="start_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="321">the index of the first result to include, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="max_results" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="322">the maximum number of results to include, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_bounding_box"
              c:identifier="gdata_picasaweb_query_get_bounding_box"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="508">Gets the latitudes and longitudes of a bounding box, inside which all the results must lie.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="510">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
          <parameter name="north"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="511">return location for the latitude of the top of the box, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="east"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="512">return location for the longitude of the right of the box, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="south"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="513">return location for the latitude of the south of the box, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="west"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="514">return location for the longitude of the left of the box, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_image_size"
              c:identifier="gdata_picasaweb_query_get_image_size"
              glib:get-property="image-size"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="424">Gets the #GDataPicasaWebQuery:image-size property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
               line="430">the currently set desired image size for retrieval, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="426">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="gdata_picasaweb_query_get_location"
              glib:get-property="location"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="567">Gets the #GDataPicasaWebQuery:location property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
               line="573">a location which returned objects must be near, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="569">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tag"
              c:identifier="gdata_picasaweb_query_get_tag"
              glib:get-property="tag"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="467">Gets the #GDataPicasaWebQuery:tag property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
               line="473">a tag which retrieved objects must have, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="469">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_thumbnail_size"
              c:identifier="gdata_picasaweb_query_get_thumbnail_size"
              glib:get-property="thumbnail-size"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="383">Gets the #GDataPicasaWebQuery:thumbnail-size property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
               line="389">a comma-separated list of thumbnail sizes to retrieve, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="385">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visibility"
              c:identifier="gdata_picasaweb_query_get_visibility"
              glib:get-property="visibility"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="346">Gets the #GDataPicasaWebQuery:visibility property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
               line="352">the visibility of the objects to retrieve, or &lt;code class="literal"&gt;0&lt;/code&gt; to retrieve all objects</doc>
          <type name="PicasaWebVisibility" c:type="GDataPicasaWebVisibility"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="348">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_bounding_box"
              c:identifier="gdata_picasaweb_query_set_bounding_box"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="535">Sets a bounding box, inside which all the returned results must lie.

Set @north, @east, @south and @west to &lt;code class="literal"&gt;0&lt;/code&gt; to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="537">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
          <parameter name="north" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="538">latitude of the top of the box</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="east" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="539">longitude of the right of the box</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="south" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="540">latitude of the bottom of the box</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="west" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="541">longitude of the left of the box</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image_size"
              c:identifier="gdata_picasaweb_query_set_image_size"
              glib:set-property="image-size"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="441">Sets the #GDataPicasaWebQuery:image-size property to @image_size.
Valid sizes are described in the
&lt;ulink type="http" url="http://code.google.com/apis/picasaweb/docs/2.0/reference.html#Parameters"&gt;online documentation&lt;/ulink&gt;.

Set @image_size to %NULL to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="443">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
          <parameter name="image_size"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="444">the desired size of the image to be retrieved, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location"
              c:identifier="gdata_picasaweb_query_set_location"
              glib:set-property="location"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="584">Sets the #GDataPicasaWebQuery:location property to @location.

Set @location to %NULL to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="586">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
          <parameter name="location"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="587">a location which returned objects must be near, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tag"
              c:identifier="gdata_picasaweb_query_set_tag"
              glib:set-property="tag"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="484">Sets the #GDataPicasaWebQuery:tag property to @tag.

Set @tag to %NULL to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="486">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
          <parameter name="tag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="487">a tag which retrieved objects must have, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_thumbnail_size"
              c:identifier="gdata_picasaweb_query_set_thumbnail_size"
              glib:set-property="thumbnail-size"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="400">Sets the #GDataPicasaWebQuery:thumbnail-size property to @thumbnail_size.

Set @thumbnail_size to %NULL to unset the property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="402">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
          <parameter name="thumbnail_size"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="403">a comma-separated list of thumbnail sizes to retrieve, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visibility"
              c:identifier="gdata_picasaweb_query_set_visibility"
              glib:set-property="visibility"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="363">Sets the #GDataPicasaWebQuery:visibility property to @visibility.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="365">a #GDataPicasaWebQuery</doc>
            <type name="PicasaWebQuery" c:type="GDataPicasaWebQuery*"/>
          </instance-parameter>
          <parameter name="visibility" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
                 line="366">the visibility of the objects to retrieve, or &lt;code class="literal"&gt;0&lt;/code&gt; to retrieve all objects</doc>
            <type name="PicasaWebVisibility"
                  c:type="GDataPicasaWebVisibility"/>
          </parameter>
        </parameters>
      </method>
      <property name="image-size"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_image_size"
                getter="get_image_size"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="122">A comma-separated list of image sizes (width in pixels) to return. Only certain sizes are allowed, and whether the image should be
cropped or scaled can be specified; for more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#Parameters"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="location"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_location"
                getter="get_location"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="150">A location to search for photos, e.g. "London".</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="tag"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_tag"
                getter="get_tag"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="137">A tag which returned results must contain.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="thumbnail-size"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_thumbnail_size"
                getter="get_thumbnail_size"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="107">A comma-separated list of thumbnail widths (in pixels) to return. Only certain sizes are allowed, and whether the thumbnail should be
cropped or scaled can be specified; for more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#Parameters"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="visibility"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_visibility"
                getter="get_visibility"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
             line="88">Specifies which albums should be listed, in terms of their visibility (#GDataPicasaWebAlbum:visibility).

Set the property to &lt;code class="literal"&gt;0&lt;/code&gt; to list all albums, regardless of their visibility. Otherwise, use values
from #GDataPicasaWebVisibility.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#Visibility"&gt;
online documentation&lt;/ulink&gt;.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent">
        <type name="Query" c:type="GDataQuery"/>
      </field>
      <field name="priv">
        <type name="PicasaWebQueryPrivate"
              c:type="GDataPicasaWebQueryPrivate*"/>
      </field>
    </class>
    <record name="PicasaWebQueryClass"
            c:type="GDataPicasaWebQueryClass"
            glib:is-gtype-struct-for="PicasaWebQuery"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
           line="53">All the fields in the #GDataPicasaWebQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="68"/>
      <field name="parent" readable="0" private="1">
        <type name="QueryClass" c:type="GDataQueryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PicasaWebQueryPrivate"
            c:type="GDataPicasaWebQueryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-query.h"
                       line="39"/>
    </record>
    <class name="PicasaWebService"
           c:symbol-prefix="picasaweb_service"
           c:type="GDataPicasaWebService"
           version="0.4.0"
           parent="Service"
           glib:type-name="GDataPicasaWebService"
           glib:get-type="gdata_picasaweb_service_get_type"
           glib:type-struct="PicasaWebServiceClass">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
           line="41">All the fields in the #GDataPicasaWebService structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                       line="71"/>
      <constructor name="new"
                   c:identifier="gdata_picasaweb_service_new"
                   version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="148">Creates a new #GDataPicasaWebService using the given #GDataAuthorizer. If @authorizer is %NULL, all requests are made as an unauthenticated user.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="154">a new #GDataPicasaWebService, or %NULL; unref with g_object_unref()</doc>
          <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
        </return-value>
        <parameters>
          <parameter name="authorizer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="150">a #GDataAuthorizer to authorize the service's requests, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_primary_authorization_domain"
                c:identifier="gdata_picasaweb_service_get_primary_authorization_domain"
                version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="168">The primary #GDataAuthorizationDomain for interacting with PicasaWeb. This will not normally need to be used, as it's used internally
by the #GDataPicasaWebService methods. However, if using the plain #GDataService methods to implement custom queries or requests which libgdata
does not support natively, then this domain may be needed to authorize the requests.

The domain never changes, and is interned so that pointer comparison can be used to differentiate it from other authorization domains.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="177">the service's authorization domain</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
      </function>
      <method name="finish_file_upload"
              c:identifier="gdata_picasaweb_service_finish_file_upload"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="634">Finish off a file upload operation started by gdata_picasaweb_service_upload_file(), parsing the result and returning the new #GDataPicasaWebFile.

If an error occurred during the upload operation, it will have been returned during the operation (e.g. by g_output_stream_splice() or one
of the other stream methods). In such a case, %NULL will be returned but @error will remain unset. @error is only set in the case that the server
indicates that the operation was successful, but an error is encountered in parsing the result sent by the server.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="110"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="646">the new #GDataPicasaWebFile, or %NULL; unref with g_object_unref()</doc>
          <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="636">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="upload_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="637">the #GDataUploadStream from the operation</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user"
              c:identifier="gdata_picasaweb_service_get_user"
              version="0.6.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="216">Queries the service to return the user specified by @username.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="225">a #GDataPicasaWebUser; unref with g_object_unref()</doc>
          <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="218">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="username"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="219">the username of the user whose information you wish to retrieve, or %NULL for the currently authenticated user.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="220">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user_async"
              c:identifier="gdata_picasaweb_service_get_user_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="277">Queries the service to return the user specified by @username.

For more details, see gdata_picasaweb_service_get_user() which is the synchronous version of this method.

When the operation is finished, @callback will be called. You can then call gdata_picasaweb_service_get_user_finish() to get the results of the
operation.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="279">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="username"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="280">the username of the user whose information you wish to retrieve, or %NULL for the currently authenticated user</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="281">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="282">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="283">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user_finish"
              c:identifier="gdata_picasaweb_service_get_user_finish"
              version="0.9.1"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="310">Finishes an asynchronous user retrieval operation started with gdata_picasaweb_service_get_user_async().</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="86"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="318">a #GDataPicasaWebUser; unref with g_object_unref()</doc>
          <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="312">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="313">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_album"
              c:identifier="gdata_picasaweb_service_insert_album"
              version="0.6.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="669">Inserts a new album described by @album. A user must be
authenticated to use this function.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="113"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="679">the inserted #GDataPicasaWebAlbum; unref with
g_object_unref()</doc>
          <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="671">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="album" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="672">a #GDataPicasaWebAlbum to create on the server</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="673">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_album_async"
              c:identifier="gdata_picasaweb_service_insert_album_async"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="710">Inserts a new album described by @album. The user must be authenticated to use this function. @self and @album are both reffed when this function
is called, so can safely be unreffed after this function returns.

@callback should call gdata_service_insert_entry_finish() to obtain a #GDataPicasaWebAlbum representing the inserted album and to check for
possible errors.

For more details, see gdata_picasaweb_service_insert_album(), which is the synchronous version of this function, and
gdata_service_insert_entry_async(), which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="712">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="album" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="713">a #GDataPicasaWebAlbum to create on the server</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="714">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="715">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="716">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_all_albums"
              c:identifier="gdata_picasaweb_service_query_all_albums"
              version="0.4.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="334">Queries the service to return a list of all albums belonging to the specified @username which match the given
@query. If a user is authenticated with the service, @username can be set as %NULL to return a list of albums belonging
to the currently-authenticated user.

Note that the #GDataQuery:q query parameter cannot be set on @query for album queries.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="352">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="336">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="337">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="username"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="338">the username of the user whose albums you wish to retrieve, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="339">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="340">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="341">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_all_albums_async"
              c:identifier="gdata_picasaweb_service_query_all_albums_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="390">Queries the service to return a list of all albums belonging to the specified @username which match the given
@query. @self, @query and @username are all reffed/copied when this function is called, so can safely be unreffed/freed after
this function returns.

For more details, see gdata_picasaweb_service_query_all_albums(), which is the synchronous version of
this function, and gdata_service_query_async(), which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="392">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="393">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="username"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="394">the username of the user whose albums you wish to retrieve, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="395">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="396">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="397">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="398">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="400">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="401">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_files"
              c:identifier="gdata_picasaweb_service_query_files"
              version="0.4.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="473">Queries the specified @album for a list of the files which match the given @query. If @album is %NULL and a user is
authenticated with the service, the user's default album will be queried.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="488">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="475">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="album"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="476">a #GDataPicasaWebAlbum from which to retrieve the files, or %NULL</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="477">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="478">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="479">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="480">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_files_async"
              c:identifier="gdata_picasaweb_service_query_files_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="513">Queries the specified @album for a list of the files which match the given @query. If @album is %NULL and a user is authenticated with the service,
the user's default album will be queried. @self, @album and @query are all reffed when this function is called, so can safely be unreffed after
this function returns.

For more details, see gdata_picasaweb_service_query_files(), which is the synchronous version of this function, and gdata_service_query_async(),
which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="515">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="album"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="516">a #GDataPicasaWebAlbum from which to retrieve the files, or %NULL</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="517">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="518">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="519">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="520">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="521">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="523">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="524">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_file"
              c:identifier="gdata_picasaweb_service_upload_file"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
             line="560">Uploads a file (photo or video) to the given PicasaWeb @album, using the metadata from @file and the file data written to the resulting
#GDataUploadStream. If @album is %NULL, the file will be uploaded to the currently-authenticated user's "Drop Box" album. A user must be
authenticated to use this function.

If @file has already been inserted, a %GDATA_SERVICE_ERROR_ENTRY_ALREADY_INSERTED error will be returned.

If no user is authenticated with the service, %GDATA_SERVICE_ERROR_AUTHENTICATION_REQUIRED will be returned. It is recommended to retry the
upload after refreshing the authorization tokens held by the associated #GDataAuthorizer using gdata_authorizer_refresh_authorization().

The stream returned by this function should be written to using the standard #GOutputStream methods, asynchronously or synchronously. Once the stream
is closed (using g_output_stream_close()), gdata_picasaweb_service_finish_file_upload() should be called on it to parse and return the updated
#GDataPicasaWebFile for the uploaded file. This must be done, as @file_entry isn't updated in-place.

In order to cancel the upload, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GOutputStream operations on the #GDataUploadStream will not cancel the entire upload; merely the write or close operation in question. See the
#GDataUploadStream:cancellable for more details.

Any upload errors will be thrown by the stream methods, and may come from the #GDataServiceError domain.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                         line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
               line="589">a #GDataUploadStream to write the file data to, or %NULL; unref with g_object_unref()</doc>
          <type name="UploadStream" c:type="GDataUploadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="562">a #GDataPicasaWebService</doc>
            <type name="PicasaWebService" c:type="GDataPicasaWebService*"/>
          </instance-parameter>
          <parameter name="album"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="563">a #GDataPicasaWebAlbum into which to insert the file, or %NULL</doc>
            <type name="PicasaWebAlbum" c:type="GDataPicasaWebAlbum*"/>
          </parameter>
          <parameter name="file_entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="564">a #GDataPicasaWebFile to insert</doc>
            <type name="PicasaWebFile" c:type="GDataPicasaWebFile*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="565">the filename to give to the uploaded file</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="566">the content type of the uploaded data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
                 line="567">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Service" c:type="GDataService"/>
      </field>
    </class>
    <record name="PicasaWebServiceClass"
            c:type="GDataPicasaWebServiceClass"
            glib:is-gtype-struct-for="PicasaWebService"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
           line="52">All the fields in the #GDataPicasaWebServiceClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                       line="71"/>
      <field name="parent" readable="0" private="1">
        <type name="ServiceClass" c:type="GDataServiceClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-service.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="PicasaWebUser"
           c:symbol-prefix="picasaweb_user"
           c:type="GDataPicasaWebUser"
           version="0.6.0"
           parent="Entry"
           glib:type-name="GDataPicasaWebUser"
           glib:get-type="gdata_picasaweb_user_get_type"
           glib:type-struct="PicasaWebUserClass">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
           line="41">All the fields in the #GDataPicasaWebUser structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="68"/>
      <method name="get_max_photos_per_album"
              c:identifier="gdata_picasaweb_user_get_max_photos_per_album"
              glib:get-property="max-photos-per-album"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="338">Gets the #GDataPicasaWebUser:max-photos-per-album property.  Note that
this information is not available when accessing feeds which we
haven't authenticated, and &lt;code class="literal"&gt;0&lt;/code&gt; is returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
               line="346">the maximum number of photos an album for this account can hold, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
                 line="340">a #GDataPicasaWebUser</doc>
            <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nickname"
              c:identifier="gdata_picasaweb_user_get_nickname"
              glib:get-property="nickname"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="283">Gets the #GDataPicasaWebUser:nickname property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
               line="289">the nickname of the feed's user's nickname, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
                 line="285">a #GDataPicasaWebUser</doc>
            <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_quota_current"
              c:identifier="gdata_picasaweb_user_get_quota_current"
              glib:get-property="quota-current"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="319">Gets the #GDataPicasaWebUser:quota-current property.  Note that
this information is not available when accessing feeds which we
haven't authenticated, and &lt;code class="literal"&gt;0&lt;/code&gt; is returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
               line="327">the current number of bytes in use by this feed's account, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
                 line="321">a #GDataPicasaWebUser</doc>
            <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_quota_limit"
              c:identifier="gdata_picasaweb_user_get_quota_limit"
              glib:get-property="quota-limit"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="300">Gets the #GDataPicasaWebUser:quota-limit property. Note that
this information is not available when accessing feeds which we
haven't authenticated, and &lt;code class="literal"&gt;0&lt;/code&gt; is returned.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
               line="308">the maximum capacity in bytes for this feed's account, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
                 line="302">a #GDataPicasaWebUser</doc>
            <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_thumbnail_uri"
              c:identifier="gdata_picasaweb_user_get_thumbnail_uri"
              glib:get-property="thumbnail-uri"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="357">Gets the #GDataPicasaWebUser:thumbnail-uri property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
               line="363">the URI for the thumbnail of the account, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
                 line="359">a #GDataPicasaWebUser</doc>
            <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user"
              c:identifier="gdata_picasaweb_user_get_user"
              glib:get-property="user"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="266">Gets the #GDataPicasaWebUser:user property.</doc>
        <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
               line="272">the feed's user, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
                 line="268">a #GDataPicasaWebUser</doc>
            <type name="PicasaWebUser" c:type="GDataPicasaWebUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="max-photos-per-album"
                version="0.6.0"
                transfer-ownership="none"
                getter="get_max_photos_per_album"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="140">The maximum number of photos allowed in an album.
http://code.google.com/apis/picasaweb/docs/2.0/reference.html#gphoto_maxPhotosPerAlbum

If the #GDataPicasaWebUser does not represent the currently authenticated user, this will be &lt;code class="literal"&gt;-1&lt;/code&gt;.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="nickname"
                version="0.6.0"
                transfer-ownership="none"
                getter="get_nickname"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="94">The user's nickname. This is a user-specified value that should be used when referring to the user by name.
http://code.google.com/apis/picasaweb/docs/2.0/reference.html#gphoto_nickname</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="quota-current"
                version="0.6.0"
                transfer-ownership="none"
                getter="get_quota_current"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="124">The current amount of space, in bytes, already used by the user.
http://code.google.com/apis/picasaweb/docs/2.0/reference.html#gphoto_quotacurrent

If the #GDataPicasaWebUser does not represent the currently authenticated user, this will be &lt;code class="literal"&gt;-1&lt;/code&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="quota-limit"
                version="0.6.0"
                transfer-ownership="none"
                getter="get_quota_limit"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="108">The total amount of space, in bytes, available to the user.
http://code.google.com/apis/picasaweb/docs/2.0/reference.html#gphoto_quotalimit

If the #GDataPicasaWebUser does not represent the currently authenticated user, this will be &lt;code class="literal"&gt;-1&lt;/code&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="thumbnail-uri"
                version="0.6.0"
                transfer-ownership="none"
                getter="get_thumbnail_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="156">The URI of a thumbnail-sized portrait of the user.
http://code.google.com/apis/picasaweb/docs/2.0/reference.html#gphoto_thumbnail</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="user"
                version="0.6.0"
                transfer-ownership="none"
                getter="get_user"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
             line="80">The username of the user, as seen in feed URLs.
http://code.google.com/apis/picasaweb/docs/2.0/reference.html#gphoto_user</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="PicasaWebUserPrivate" c:type="GDataPicasaWebUserPrivate*"/>
      </field>
    </class>
    <record name="PicasaWebUserClass"
            c:type="GDataPicasaWebUserClass"
            glib:is-gtype-struct-for="PicasaWebUser"
            version="0.6.0">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
           line="53">All the fields in the #GDataPicasaWebUserClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="68"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PicasaWebUserPrivate"
            c:type="GDataPicasaWebUserPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/picasaweb/gdata-picasaweb-user.h"
                       line="39"/>
    </record>
    <enumeration name="PicasaWebVisibility"
                 version="0.4.0"
                 glib:type-name="GDataPicasaWebVisibility"
                 glib:get-type="gdata_picasaweb_visibility_get_type"
                 c:type="GDataPicasaWebVisibility">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
           line="31">Visibility statuses available for albums on PicasaWeb. For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html#Visibility"&gt;online documentation&lt;/ulink&gt;.</doc>
      <member name="public"
              value="1"
              c:identifier="GDATA_PICASAWEB_PUBLIC"
              glib:nick="public"
              glib:name="GDATA_PICASAWEB_PUBLIC">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
             line="33">the album is visible to everyone, regardless of whether they're authenticated</doc>
      </member>
      <member name="private"
              value="2"
              c:identifier="GDATA_PICASAWEB_PRIVATE"
              glib:nick="private"
              glib:name="GDATA_PICASAWEB_PRIVATE">
        <doc xml:space="preserve"
             filename="gdata/services/picasaweb/gdata-picasaweb-album.h"
             line="34">the album is visible only to authenticated users in an allowlist</doc>
      </member>
    </enumeration>
    <function-macro name="QUERY" c:identifier="GDATA_QUERY" introspectable="0">
      <source-position filename="gdata/gdata-query.h" line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUERY_CLASS"
                    c:identifier="GDATA_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-query.h" line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUERY_GET_CLASS"
                    c:identifier="GDATA_QUERY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-query.h" line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Query"
           c:symbol-prefix="query"
           c:type="GDataQuery"
           parent="GObject.Object"
           glib:type-name="GDataQuery"
           glib:get-type="gdata_query_get_type"
           glib:type-struct="QueryClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-query.h"
           line="37">All the fields in the #GDataQuery structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-query.h" line="66"/>
      <constructor name="new" c:identifier="gdata_query_new">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="521">Creates a new #GDataQuery with its #GDataQuery:q property set to @q.</doc>
        <source-position filename="gdata/gdata-query.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="527">a new #GDataQuery</doc>
          <type name="Query" c:type="GDataQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="523">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_limits"
                   c:identifier="gdata_query_new_with_limits">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="535">Creates a new #GDataQuery with its #GDataQuery:q property set to @q, and the limits @start_index and @max_results
applied.</doc>
        <source-position filename="gdata/gdata-query.h" line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="544">a new #GDataQuery</doc>
          <type name="Query" c:type="GDataQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="537">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="start_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="538">a one-based start index for the results, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="max_results" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="539">the maximum number of results to return, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_query_uri">
        <source-position filename="gdata/gdata-query.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="feed_uri" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="query_uri" transfer-ownership="none">
            <type name="GLib.String" c:type="GString*"/>
          </parameter>
          <parameter name="params_started" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_author"
              c:identifier="gdata_query_get_author"
              glib:get-property="author">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="711">Gets the #GDataQuery:author property.</doc>
        <source-position filename="gdata/gdata-query.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="717">the author property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="713">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_categories"
              c:identifier="gdata_query_get_categories"
              glib:get-property="categories">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="674">Gets the #GDataQuery:categories property.</doc>
        <source-position filename="gdata/gdata-query.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="680">the categories property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="676">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_etag"
              c:identifier="gdata_query_get_etag"
              glib:get-property="etag"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="1006">Gets the #GDataQuery:etag property.</doc>
        <source-position filename="gdata/gdata-query.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="1012">the ETag property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="1008">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_results"
              c:identifier="gdata_query_get_max_results"
              glib:get-property="max-results">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="970">Gets the #GDataQuery:max-results property.</doc>
        <source-position filename="gdata/gdata-query.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="976">the maximum results property, or &lt;code class="literal"&gt;0&lt;/code&gt; if it is unset</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="972">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_published_max"
              c:identifier="gdata_query_get_published_max"
              glib:get-property="published-max">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="859">Gets the #GDataQuery:published-max property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gdata-query.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="865">the published-max property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="861">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_published_min"
              c:identifier="gdata_query_get_published_min"
              glib:get-property="published-min">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="822">Gets the #GDataQuery:published-min property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gdata-query.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="828">the published-min property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="824">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_q"
              c:identifier="gdata_query_get_q"
              glib:get-property="q">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="637">Gets the #GDataQuery:q property.</doc>
        <source-position filename="gdata/gdata-query.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="643">the q property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="639">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_query_uri" c:identifier="gdata_query_get_query_uri">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="556">Builds a query URI from the given base feed URI, using the properties of the #GDataQuery. This function will take care
of all necessary URI escaping, so it should &lt;emphasis&gt;not&lt;/emphasis&gt; be done beforehand.

The query URI is what functions like gdata_service_query() use to query the online service.</doc>
        <source-position filename="gdata/gdata-query.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="566">a query URI; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="558">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="feed_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="559">the feed URI on which to build the query URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_start_index"
              c:identifier="gdata_query_get_start_index"
              glib:get-property="start-index">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="896">Gets the #GDataQuery:start-index property.</doc>
        <source-position filename="gdata/gdata-query.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="902">the start index property, or &lt;code class="literal"&gt;0&lt;/code&gt; if it is unset</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="898">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_updated_max"
              c:identifier="gdata_query_get_updated_max"
              glib:get-property="updated-max">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="785">Gets the #GDataQuery:updated-max property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gdata-query.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="791">the updated-max property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="787">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_updated_min"
              c:identifier="gdata_query_get_updated_min"
              glib:get-property="updated-min">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="748">Gets the #GDataQuery:updated-min property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/gdata-query.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="754">the updated-min property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="750">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_strict"
              c:identifier="gdata_query_is_strict"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="932">Gets the #GDataQuery:is-strict property.</doc>
        <source-position filename="gdata/gdata-query.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="938">the strict property</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="934">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next_page" c:identifier="gdata_query_next_page">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="1129">Changes the state of the #GDataQuery such that when gdata_query_get_query_uri() is next called, it will build the
query URI for the next page in the result set.

Ideally, the URI of the next page is retrieved from a feed automatically when gdata_service_query() is called, but
gdata_query_next_page() will fall back to using #GDataQuery:start-index to emulate true pagination if this fails.

You &lt;emphasis&gt;should not&lt;/emphasis&gt; implement pagination manually using #GDataQuery:start-index.</doc>
        <source-position filename="gdata/gdata-query.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="1131">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="previous_page" c:identifier="gdata_query_previous_page">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="1167">Changes the state of the #GDataQuery such that when gdata_query_get_query_uri() is next called, it will build the
query URI for the previous page in the result set.

See the documentation for gdata_query_next_page() for an explanation of how query URIs from the feeds are used to this end.</doc>
        <source-position filename="gdata/gdata-query.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-query.c"
               line="1176">%TRUE if there is a previous page and it has been switched to, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="1169">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_author"
              c:identifier="gdata_query_set_author"
              glib:set-property="author">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="726">Sets the #GDataQuery:author property of the #GDataQuery to the new author string, @author.

Set @author to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="728">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="author"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="729">the new author string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_categories"
              c:identifier="gdata_query_set_categories"
              glib:set-property="categories">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="689">Sets the #GDataQuery:categories property of the #GDataQuery to the new category string, @categories.

Set @categories to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="691">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="categories"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="692">the new category string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_etag"
              c:identifier="gdata_query_set_etag"
              glib:set-property="etag"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="1023">Sets the #GDataQuery:etag property of the #GDataQuery to the new ETag, @etag.

Set @etag to %NULL to not check against the server-side ETag.</doc>
        <source-position filename="gdata/gdata-query.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="1025">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="etag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="1026">the new ETag, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_strict"
              c:identifier="gdata_query_set_is_strict"
              glib:set-property="is-strict"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="949">Sets the #GDataQuery:is-strict property of the #GDataQuery to the new strict value, @is_strict.</doc>
        <source-position filename="gdata/gdata-query.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="951">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="is_strict" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="952">the new strict value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_results"
              c:identifier="gdata_query_set_max_results"
              glib:set-property="max-results">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="985">Sets the #GDataQuery:max-results property of the #GDataQuery to the new maximum results value, @max_results.

Set @max_results to &lt;code class="literal"&gt;0&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="987">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="max_results" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="988">the new maximum results value, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_published_max"
              c:identifier="gdata_query_set_published_max"
              glib:set-property="published-max">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="874">Sets the #GDataQuery:published-max property of the #GDataQuery to the new maximum publish time, @published_max.

Set @published_max to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="876">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="published_max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="877">the new maximum publish time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_published_min"
              c:identifier="gdata_query_set_published_min"
              glib:set-property="published-min">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="837">Sets the #GDataQuery:published-min property of the #GDataQuery to the new minimum publish time, @published_min.

Set @published_min to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="839">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="published_min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="840">the new minimum publish time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_q"
              c:identifier="gdata_query_set_q"
              glib:set-property="q">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="652">Sets the #GDataQuery:q property of the #GDataQuery to the new query string, @q.

Set @q to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="654">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="655">a new query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_index"
              c:identifier="gdata_query_set_start_index"
              glib:set-property="start-index">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="911">Sets the #GDataQuery:start-index property of the #GDataQuery to the new one-based start index, @start_index.

Set @start_index to &lt;code class="literal"&gt;0&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="913">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="start_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="914">the new start index, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_updated_max"
              c:identifier="gdata_query_set_updated_max"
              glib:set-property="updated-max">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="800">Sets the #GDataQuery:updated-max property of the #GDataQuery to the new maximum update time, @updated_max.

Set @updated_max to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="802">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="updated_max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="803">the new maximum update time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_updated_min"
              c:identifier="gdata_query_set_updated_min"
              glib:set-property="updated-min">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="763">Sets the #GDataQuery:updated-min property of the #GDataQuery to the new minimum update time, @updated_min.

Set @updated_min to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/gdata-query.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="765">a #GDataQuery</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </instance-parameter>
          <parameter name="updated_min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-query.c"
                 line="766">the new minimum update time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="author"
                writable="1"
                transfer-ownership="none"
                setter="set_author"
                getter="get_author"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="188">An entry author. The service returns entries where the author name and/or e-mail address match your query string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="categories"
                writable="1"
                transfer-ownership="none"
                setter="set_categories"
                getter="get_categories"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="158">A category filter.

You can query on multiple categories by listing multiple categories separated by slashes. The service returns all entries that match all
of the categories (like using AND between terms). For example: &lt;userinput&gt;Fritz/Laurie&lt;/userinput&gt; returns
entries that match both categories ("Fritz" and "Laurie").

To do an OR between terms, use a pipe character (&lt;literal&gt;|&lt;/literal&gt;). For example: &lt;userinput&gt;Fritz\%7CLaurie&lt;/userinput&gt; returns
entries that match either category.

An entry matches a specified category if the entry is in a category that has a matching term or label, as defined in the Atom
specification. (Roughly, the "term" is the internal string used by the software to identify the category, while the "label" is the
human-readable string presented to a user in a user interface.)

To exclude entries that match a given category, use the form &lt;userinput&gt;-categoryname&lt;/userinput&gt;.

To query for a category that has a scheme – such as &lt;literal&gt;&amp;lt;category scheme="urn:google.com" term="public"/&amp;gt;&lt;/literal&gt; – you must
place the scheme in curly braces before the category name. For example: &lt;userinput&gt;{urn:google.com}public&lt;/userinput&gt;. To match a category
that has no scheme, use an empty pair of curly braces. If you don't specify curly braces, then categories in any scheme will match.

The above features can be combined. For example: &lt;userinput&gt;A|-{urn:google.com}B/-C&lt;/userinput&gt; means (A OR (NOT B)) AND (NOT C).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="etag"
                version="0.2.0"
                writable="1"
                transfer-ownership="none"
                setter="set_etag"
                getter="get_etag"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="285">The ETag against which to check for updates. If the server-side ETag matches this one, the requested feed hasn't changed, and is not
returned unnecessarily.

Setting any of the other query properties will unset the ETag, as ETags match against entire queries. If the ETag should be used in a
query, it must be set again using gdata_query_set_etag() after setting any other properties.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-strict"
                version="0.2.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_strict"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="257">Strict query parameter checking. If this is enabled, an error will be returned by the online service if a parameter is
not recognised.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="max-results"
                writable="1"
                transfer-ownership="none"
                setter="set_max_results"
                getter="get_max_results"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="271">Maximum number of results to be retrieved. Most services have a default #GDataQuery:max-results size imposed by the server; if you wish
to receive the entire feed, specify a large number such as %G_MAXUINT for this property.

Use &lt;code class="literal"&gt;0&lt;/code&gt; to not specify a maximum number of results.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="published-max"
                writable="1"
                transfer-ownership="none"
                setter="set_published_max"
                getter="get_published_max"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="232">Upper bound on the entry publish date, exclusive.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="published-min"
                writable="1"
                transfer-ownership="none"
                setter="set_published_min"
                getter="get_published_min"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="221">Lower bound on the entry publish date, inclusive.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="q"
                writable="1"
                transfer-ownership="none"
                setter="set_q"
                getter="get_q"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="133">A full-text query string.

When creating a query, list search terms separated by spaces, in the form &lt;userinput&gt;term1 term2 term3&lt;/userinput&gt;.
(As with all of the query parameter values, the spaces must be URL encoded.) The service returns all entries that match all of the
search terms (like using AND between terms). Like Google's web search, a service searches on complete words (and related words with
the same stem), not substrings.

To search for an exact phrase, enclose the phrase in quotation marks: &lt;userinput&gt;"exact phrase"&lt;/userinput&gt;.

To exclude entries that match a given term, use the form &lt;userinput&gt;-term&lt;/userinput&gt;.

The search is case-insensitive.

Example: to search for all entries that contain the exact phrase "Elizabeth Bennet" and the word "Darcy" but don't contain the
word "Austen", use the following query: &lt;userinput&gt;"Elizabeth Bennet" Darcy -Austen&lt;/userinput&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="start-index"
                writable="1"
                transfer-ownership="none"
                setter="set_start_index"
                getter="get_start_index"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="243">The one-based index of the first result to be retrieved. Use gdata_query_next_page() and gdata_query_previous_page() to
implement pagination, rather than manually changing #GDataQuery:start-index.

Use &lt;code class="literal"&gt;0&lt;/code&gt; to not specify a start index.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="updated-max"
                writable="1"
                transfer-ownership="none"
                setter="set_updated_max"
                getter="get_updated_max"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="210">Upper bound on the entry update date, exclusive.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="updated-min"
                writable="1"
                transfer-ownership="none"
                setter="set_updated_min"
                getter="get_updated_min"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-query.c"
             line="199">Lower bound on the entry update date, inclusive.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="QueryPrivate" c:type="GDataQueryPrivate*"/>
      </field>
    </class>
    <record name="QueryClass"
            c:type="GDataQueryClass"
            glib:is-gtype-struct-for="Query">
      <doc xml:space="preserve"
           filename="gdata/gdata-query.h"
           line="47">All the fields in the #GDataQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-query.h" line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_query_uri">
        <callback name="get_query_uri">
          <source-position filename="gdata/gdata-query.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Query" c:type="GDataQuery*"/>
            </parameter>
            <parameter name="feed_uri" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="query_uri" transfer-ownership="none">
              <type name="GLib.String" c:type="GString*"/>
            </parameter>
            <parameter name="params_started" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-query.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-query.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-query.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-query.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-query.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-query.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="QueryPrivate"
            c:type="GDataQueryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-query.h" line="35"/>
    </record>
    <callback name="QueryProgressCallback" c:type="GDataQueryProgressCallback">
      <doc xml:space="preserve"
           filename="gdata/gdata-service.h"
           line="95">Callback function called for each #GDataEntry parsed in a #GDataFeed when loading the results of a query.

It is called in the main thread, so there is no guarantee on the order in which the callbacks are executed,
or whether they will be called in a timely manner. It is, however, guaranteed that they will all be called before
the #GAsyncReadyCallback which signals the completion of the query is called.</doc>
      <source-position filename="gdata/gdata-service.h" line="108"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="entry" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.h"
               line="97">a new #GDataEntry</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </parameter>
        <parameter name="entry_key" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.h"
               line="98">the key of the entry (zero-based index of its position in the feed)</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="entry_count" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.h"
               line="99">the total number of entries in the feed</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="3">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.h"
               line="100">user data passed to the callback</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function-macro name="SERVICE"
                    c:identifier="GDATA_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/gdata-service.h" line="111"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SERVICE_CLASS"
                    c:identifier="GDATA_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-service.h" line="112"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SERVICE_GET_CLASS"
                    c:identifier="GDATA_SERVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-service.h" line="115"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Service"
           c:symbol-prefix="service"
           c:type="GDataService"
           parent="GObject.Object"
           glib:type-name="GDataService"
           glib:get-type="gdata_service_get_type"
           glib:type-struct="ServiceClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-service.h"
           line="121">All the fields in the #GDataService structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-service.h" line="179"/>
      <function name="get_authorization_domains"
                c:identifier="gdata_service_get_authorization_domains"
                version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="513">Retrieves the full list of #GDataAuthorizationDomains which relate to the specified @service_type. All the
#GDataAuthorizationDomains are unique and interned, so can be compared with other domains by simple pointer comparison.

Note that in addition to this method, #GDataService subclasses may expose some or all of their authorization domains individually by means of
individual accessor functions.</doc>
        <source-position filename="gdata/gdata-service.h" line="186"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="523">an unordered list of #GDataAuthorizationDomains; free with
g_list_free()</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="AuthorizationDomain"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="service_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="515">the #GType of the #GDataService subclass to retrieve the authorization domains for</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="append_query_headers">
        <source-position filename="gdata/gdata-service.h" line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="Soup.Message" c:type="SoupMessage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parse_error_response" throws="1">
        <source-position filename="gdata/gdata-service.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="operation_type" transfer-ownership="none">
            <type name="OperationType" c:type="GDataOperationType"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="reason_phrase" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_body" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parse_feed" introspectable="0" throws="1">
        <source-position filename="gdata/gdata-service.h" line="160"/>
        <return-value>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="Soup.Message" c:type="SoupMessage*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     closure="6">
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="delete_entry"
              c:identifier="gdata_service_delete_entry"
              version="0.9.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1732">Deletes @entry from the server. For more information about the concept of deleting entries, see the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/basics.html#DeletingEntry"&gt;online documentation&lt;/ulink&gt; for the GData
protocol.

If @cancellable is not %NULL, then the operation can be cancelled by triggering the @cancellable object from another thread.
If the operation was cancelled before or during network activity, the error %G_IO_ERROR_CANCELLED will be returned. Cancellation has no effect
after network activity has finished, however, and the deletion will return successfully (or return an error sent by the server) if it is first
cancelled after network activity has finished. See the &lt;link linkend="cancellable-support"&gt;overview of cancellation&lt;/link&gt; for
more details.

If there is an error deleting the entry, a %GDATA_SERVICE_ERROR_PROTOCOL_ERROR error will be returned. Currently, subclasses
&lt;emphasis&gt;cannot&lt;/emphasis&gt; cannot override this or provide more specific errors.</doc>
        <source-position filename="gdata/gdata-service.h" line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1753">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1734">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1735">the #GDataAuthorizationDomain the deletion falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1736">the #GDataEntry to delete</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1737">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_entry_async"
              c:identifier="gdata_service_delete_entry_async"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1667">Deletes @entry from the server. @self and @entry are both reffed when this function is called,
so can safely be unreffed after this function returns.

For more details, see gdata_service_delete_entry(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_delete_entry_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/gdata-service.h" line="227"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1669">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1670">the #GDataAuthorizationDomain the deletion falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1671">the #GDataEntry to delete</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1672">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1673">a #GAsyncReadyCallback to call when deletion is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1674">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_entry_finish"
              c:identifier="gdata_service_delete_entry_finish"
              version="0.3.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1708">Finishes an asynchronous entry deletion operation started with gdata_service_delete_entry_async().</doc>
        <source-position filename="gdata/gdata-service.h" line="229"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1716">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1710">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1711">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_authorizer"
              c:identifier="gdata_service_get_authorizer"
              glib:get-property="authorizer"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="464">Gets the #GDataAuthorizer object currently in use by the service. See the documentation for #GDataService:authorizer for more details.</doc>
        <source-position filename="gdata/gdata-service.h" line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="470">the authorizer object for this service, or %NULL</doc>
          <type name="Authorizer" c:type="GDataAuthorizer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="466">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale"
              c:identifier="gdata_service_get_locale"
              glib:get-property="locale"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="2279">Returns the locale currently being used for network requests, or %NULL if the locale is the default.</doc>
        <source-position filename="gdata/gdata-service.h" line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="2285">the current locale</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="2281">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proxy_resolver"
              c:identifier="gdata_service_get_proxy_resolver"
              glib:get-property="proxy-resolver"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1808">Gets the #GProxyResolver on the #GDataService's #SoupSession.</doc>
        <source-position filename="gdata/gdata-service.h" line="231"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1814">a #GProxyResolver, or %NULL</doc>
          <type name="Gio.ProxyResolver" c:type="GProxyResolver*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1810">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timeout"
              c:identifier="gdata_service_get_timeout"
              glib:get-property="timeout"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1857">Gets the #GDataService:timeout property; the network timeout, in seconds.</doc>
        <source-position filename="gdata/gdata-service.h" line="234"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1863">the timeout, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1859">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_entry"
              c:identifier="gdata_service_insert_entry"
              version="0.9.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1348">Inserts @entry by uploading it to the online service at @upload_uri. For more information about the concept of inserting entries, see
the &lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/basics.html#InsertingEntry"&gt;online documentation&lt;/ulink&gt; for the GData
protocol.

The service will return an updated version of the entry, which is the return value of this function on success.

If @cancellable is not %NULL, then the operation can be cancelled by triggering the @cancellable object from another thread.
If the operation was cancelled before or during network activity, the error %G_IO_ERROR_CANCELLED will be returned. Cancellation has no effect
after network activity has finished, however, and the insertion will return successfully (or return an error sent by the server) if it is first
cancelled after network activity has finished. See the &lt;link linkend="cancellable-support"&gt;overview of cancellation&lt;/link&gt; for
more details.

If the entry is marked as already having been inserted a %GDATA_SERVICE_ERROR_ENTRY_ALREADY_INSERTED error will be returned immediately
(there will be no network requests).

If there is an error inserting the entry, a %GDATA_SERVICE_ERROR_PROTOCOL_ERROR error will be returned. Currently, subclasses
&lt;emphasis&gt;cannot&lt;/emphasis&gt; cannot override this or provide more specific errors.</doc>
        <source-position filename="gdata/gdata-service.h" line="211"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1375">an updated #GDataEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1350">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1351">the #GDataAuthorizationDomain the insertion operation falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="upload_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1352">the URI to which the upload should be sent</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1353">the #GDataEntry to insert</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1354">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_entry_async"
              c:identifier="gdata_service_insert_entry_async"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1280">Inserts @entry by uploading it to the online service at @upload_uri. @self, @upload_uri and
@entry are all reffed/copied when this function is called, so can safely be freed after this function returns.

For more details, see gdata_service_insert_entry(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_insert_entry_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/gdata-service.h" line="213"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1282">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1283">the #GDataAuthorizationDomain the insertion operation falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="upload_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1284">the URI to which the upload should be sent</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1285">the #GDataEntry to insert</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1286">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1287">a #GAsyncReadyCallback to call when insertion is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1288">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_entry_finish"
              c:identifier="gdata_service_insert_entry_finish"
              version="0.3.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1324">Finishes an asynchronous entry insertion operation started with gdata_service_insert_entry_async().</doc>
        <source-position filename="gdata/gdata-service.h" line="215"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1332">an updated #GDataEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1326">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1327">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_authorized"
              c:identifier="gdata_service_is_authorized"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="422">Determines whether the service is authorized for all the #GDataAuthorizationDomains it belongs to (as returned by
gdata_service_get_authorization_domains()). If the service's #GDataService:authorizer is %NULL, %FALSE is always returned.

This is basically a convenience method for checking that the service's #GDataAuthorizer is authorized for all the service's
#GDataAuthorizationDomains.</doc>
        <source-position filename="gdata/gdata-service.h" line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="432">%TRUE if the service is authorized for all its domains, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="424">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="query"
              c:identifier="gdata_service_query"
              version="0.9.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1015">Queries the service's @feed_uri feed to build a #GDataFeed.

If @cancellable is not %NULL, then the operation can be cancelled by triggering the @cancellable object from another thread.
If the operation was cancelled before or during network activity, the error %G_IO_ERROR_CANCELLED will be returned. Cancellation has no effect
after network activity has finished, however, and the query will return successfully (or return an error sent by the server) if it is first
cancelled after network activity has finished. See the &lt;link linkend="cancellable-support"&gt;overview of cancellation&lt;/link&gt; for
more details.

A %GDATA_SERVICE_ERROR_PROTOCOL_ERROR will be returned if the server indicates there is a problem with the query, but subclasses may override
this and return their own errors. See their documentation for more details.

For each entry in the response feed, @progress_callback will be called in the main thread. If there was an error parsing the XML response,
a #GDataParserError will be returned.

If the query is successful and the feed supports pagination, @query will be updated with the pagination URIs, and the next or previous page
can then be loaded by calling gdata_query_next_page() or gdata_query_previous_page() before running the query again.

If the #GDataQuery's ETag is set and it finds a match on the server, %NULL will be returned, but @error will remain unset. Otherwise,
@query's ETag will be updated with the ETag from the returned feed, if available.</doc>
        <source-position filename="gdata/gdata-service.h" line="194"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1047">a #GDataFeed of query results, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1017">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1018">the #GDataAuthorizationDomain the query falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="feed_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1019">the feed URI to query, including the host name and protocol</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1020">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1021">a #GType for the #GDataEntrys to build from the XML</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1022">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1023">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1024">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_async"
              c:identifier="gdata_service_query_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="798">Queries the service's @feed_uri feed to build a #GDataFeed. @self, @feed_uri and
@query are all reffed/copied when this function is called, so can safely be freed after this function returns.

For more details, see gdata_service_query(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_query_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/gdata-service.h" line="198"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="800">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="801">the #GDataAuthorizationDomain the query falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="feed_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="802">the feed URI to query, including the host name and protocol</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="803">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="804">a #GType for the #GDataEntrys to build from the XML</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="805">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="6"
                     destroy="7">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="806">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="807">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="808">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="9">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="810">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="811">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_finish"
              c:identifier="gdata_service_query_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="853">Finishes an asynchronous query operation started with gdata_service_query_async().</doc>
        <source-position filename="gdata/gdata-service.h" line="202"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="861">a #GDataFeed of query results, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="855">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="856">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_single_entry"
              c:identifier="gdata_service_query_single_entry"
              version="0.9.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1065">Retrieves information about the single entry with the given @entry_id. @entry_id should be as returned by
gdata_entry_get_id().

Parameters and errors are as for gdata_service_query(). Most of the properties of @query aren't relevant, and
will cause a server-side error if used. The most useful property to use is #GDataQuery:etag, which will cause the
server to not return anything if the entry hasn't been modified since it was given the specified ETag; thus saving
bandwidth. If the server does not return anything for this reason, gdata_service_query_single_entry() will return
%NULL, but will not set an error in @error.</doc>
        <source-position filename="gdata/gdata-service.h" line="204"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1084">a #GDataEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1067">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1068">the #GDataAuthorizationDomain the query falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="entry_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1069">the entry ID of the desired entry</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1070">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1071">a #GType for the #GDataEntry to build from the XML</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1072">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_single_entry_async"
              c:identifier="gdata_service_query_single_entry_async"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1172">Retrieves information about the single entry with the given @entry_id. @entry_id should be as returned by
gdata_entry_get_id(). @self, @query and @entry_id are reffed/copied when this
function is called, so can safely be freed after this function returns.

For more details, see gdata_service_query_single_entry(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_query_single_entry_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/gdata-service.h" line="206"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1174">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1175">the #GDataAuthorizationDomain the query falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="entry_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1176">the entry ID of the desired entry</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1177">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1178">a #GType for the #GDataEntry to build from the XML</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1179">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1180">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1181">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_single_entry_finish"
              c:identifier="gdata_service_query_single_entry_finish"
              version="0.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1221">Finishes an asynchronous query operation for a single entry, as started with gdata_service_query_single_entry_async().</doc>
        <source-position filename="gdata/gdata-service.h" line="208"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1229">a #GDataEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1223">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1224">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_authorizer"
              c:identifier="gdata_service_set_authorizer"
              glib:set-property="authorizer"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="482">Sets #GDataService:authorizer to @authorizer. This may be %NULL if the service will only make requests in future which don't require authorization.
See the documentation for #GDataService:authorizer for more information.</doc>
        <source-position filename="gdata/gdata-service.h" line="190"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="484">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="authorizer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="485">a new authorizer object for the service, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale"
              c:identifier="gdata_service_set_locale"
              glib:set-property="locale"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="2296">Set the locale used for network requests to @locale, given in standard Unix locale format. See #GDataService:locale for more details.

Note that while it's possible to change the locale after sending network requests, it is unsupported, as the server-side software may behave
unexpectedly. The only supported use of this function is after creation of a service, but before any network requests are made.</doc>
        <source-position filename="gdata/gdata-service.h" line="238"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="2298">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="2299">the new locale in Unix locale format, or %NULL for the default locale</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_proxy_resolver"
              c:identifier="gdata_service_set_proxy_resolver"
              glib:set-property="proxy-resolver"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1826">Sets the #GProxyResolver on the #SoupSession used internally by the given #GDataService.</doc>
        <source-position filename="gdata/gdata-service.h" line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1828">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="proxy_resolver"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1829">a #GProxyResolver, or %NULL</doc>
            <type name="Gio.ProxyResolver" c:type="GProxyResolver*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timeout"
              c:identifier="gdata_service_set_timeout"
              glib:set-property="timeout"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1879">Sets the #GDataService:timeout property; the network timeout, in seconds.

If @timeout is &lt;code class="literal"&gt;0&lt;/code&gt;, network operations will never time out.

Note that if a #GDataAuthorizer is being used with this #GDataService, the authorizer might also need its timeout setting.</doc>
        <source-position filename="gdata/gdata-service.h" line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1881">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1882">the timeout, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_entry"
              c:identifier="gdata_service_update_entry"
              version="0.9.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1544">Updates @entry by PUTting it to its &lt;literal&gt;edit&lt;/literal&gt; link's URI. For more information about the concept of updating entries, see
the &lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/basics.html#UpdatingEntry"&gt;online documentation&lt;/ulink&gt; for the GData
protocol.

The service will return an updated version of the entry, which is the return value of this function on success.

If @cancellable is not %NULL, then the operation can be cancelled by triggering the @cancellable object from another thread.
If the operation was cancelled before or during network activity, the error %G_IO_ERROR_CANCELLED will be returned. Cancellation has no effect
after network activity has finished, however, and the update will return successfully (or return an error sent by the server) if it is first
cancelled after network activity has finished. See the &lt;link linkend="cancellable-support"&gt;overview of cancellation&lt;/link&gt; for
more details.

If there is an error updating the entry, a %GDATA_SERVICE_ERROR_PROTOCOL_ERROR error will be returned. Currently, subclasses
&lt;emphasis&gt;cannot&lt;/emphasis&gt; cannot override this or provide more specific errors.</doc>
        <source-position filename="gdata/gdata-service.h" line="218"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1567">an updated #GDataEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1546">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1547">the #GDataAuthorizationDomain the update operation falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1548">the #GDataEntry to update</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1549">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_entry_async"
              c:identifier="gdata_service_update_entry_async"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1479">Updates @entry by PUTting it to its &lt;literal&gt;edit&lt;/literal&gt; link's URI. @self and
@entry are both reffed when this function is called, so can safely be unreffed after this function returns.

For more details, see gdata_service_update_entry(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_update_entry_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/gdata-service.h" line="220"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1481">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1482">the #GDataAuthorizationDomain the update operation falls under, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1483">the #GDataEntry to update</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1484">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1485">a #GAsyncReadyCallback to call when the update is finished, or %NULL</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1486">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_entry_finish"
              c:identifier="gdata_service_update_entry_finish"
              version="0.3.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="1520">Finishes an asynchronous entry update operation started with gdata_service_update_entry_async().</doc>
        <source-position filename="gdata/gdata-service.h" line="222"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-service.c"
               line="1528">an updated #GDataEntry, or %NULL; unref with g_object_unref()</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1522">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-service.c"
                 line="1523">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="authorizer"
                version="0.9.0"
                writable="1"
                transfer-ownership="none"
                setter="set_authorizer"
                getter="get_authorizer">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="158">An object which implements #GDataAuthorizer. This should have previously been authenticated authorized against this service type (and
potentially other service types). The service will use the authorizer to add an authorization token to each request it performs.

Your application should call methods on the #GDataAuthorizer object itself in order to authenticate with the Google accounts service and
authorize against this service type. See the documentation for the particular #GDataAuthorizer implementation being used for more details.

The authorizer for a service can be changed at runtime for a different #GDataAuthorizer object or %NULL without affecting ongoing requests
and operations.

Note that it's only necessary to set an authorizer on the service if your application is going to make requests of the service which
require authorization. For example, listing the current most popular videos on YouTube does not require authorization, but uploading a
video to YouTube does. It's an unnecessary overhead to require the user to authorize against a service when not strictly required.</doc>
        <type name="Authorizer"/>
      </property>
      <property name="locale"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_locale"
                getter="get_locale"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="139">The locale to use for network requests, in Unix locale format. (e.g. "en_GB", "cs", "de_DE".) Use %NULL for the default "C" locale
(typically "en_US").

Typically, this locale will be used by the server-side software to localise results, such as by translating category names, or by choosing
geographically relevant search results. This will vary from service to service.

The server-side behaviour is undefined if it doesn't support a given locale.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="proxy-resolver"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_proxy_resolver"
                getter="get_proxy_resolver">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="182">The #GProxyResolver used to determine a proxy URI.</doc>
        <type name="Gio.ProxyResolver"/>
      </property>
      <property name="timeout"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                setter="set_timeout"
                getter="get_timeout"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.c"
             line="121">A timeout, in seconds, for network operations. If the timeout is exceeded, the operation will be cancelled and
%GDATA_SERVICE_ERROR_NETWORK_ERROR will be returned.

If the timeout is &lt;code class="literal"&gt;0&lt;/code&gt;, operations will never time out.

Note that if a #GDataAuthorizer is being used with this #GDataService, the authorizer might also need its timeout setting.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ServicePrivate" c:type="GDataServicePrivate*"/>
      </field>
    </class>
    <record name="ServiceClass"
            c:type="GDataServiceClass"
            glib:is-gtype-struct-for="Service"
            version="0.9.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-service.h"
           line="131">The class structure for the #GDataService type.</doc>
      <source-position filename="gdata/gdata-service.h" line="179"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="133">the parent class</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="api_version">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="134">the version of the GData API used by the service (typically &lt;code class="literal"&gt;2&lt;/code&gt;)</doc>
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="feed_type">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="135">the #GType of the feed class (subclass of #GDataFeed) to use for query results from this service</doc>
        <type name="GType" c:type="GType"/>
      </field>
      <field name="append_query_headers">
        <callback name="append_query_headers">
          <source-position filename="gdata/gdata-service.h" line="156"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Service" c:type="GDataService*"/>
            </parameter>
            <parameter name="domain" transfer-ownership="none">
              <type name="AuthorizationDomain"
                    c:type="GDataAuthorizationDomain*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="Soup.Message" c:type="SoupMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_error_response">
        <callback name="parse_error_response" throws="1">
          <source-position filename="gdata/gdata-service.h" line="157"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Service" c:type="GDataService*"/>
            </parameter>
            <parameter name="operation_type" transfer-ownership="none">
              <type name="OperationType" c:type="GDataOperationType"/>
            </parameter>
            <parameter name="status" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="reason_phrase" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="response_body" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_authorization_domains" introspectable="0">
        <callback name="get_authorization_domains" introspectable="0">
          <source-position filename="gdata/gdata-service.h" line="159"/>
          <return-value>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </return-value>
        </callback>
      </field>
      <field name="parse_feed" introspectable="0">
        <callback name="parse_feed" introspectable="0" throws="1">
          <source-position filename="gdata/gdata-service.h" line="160"/>
          <return-value>
            <type name="Feed" c:type="GDataFeed*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Service" c:type="GDataService*"/>
            </parameter>
            <parameter name="domain" transfer-ownership="none">
              <type name="AuthorizationDomain"
                    c:type="GDataAuthorizationDomain*"/>
            </parameter>
            <parameter name="query" transfer-ownership="none">
              <type name="Query" c:type="GDataQuery*"/>
            </parameter>
            <parameter name="entry_type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="Soup.Message" c:type="SoupMessage*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback"
                       transfer-ownership="none"
                       closure="7">
              <type name="QueryProgressCallback"
                    c:type="GDataQueryProgressCallback"/>
            </parameter>
            <parameter name="progress_user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-service.h" line="172"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-service.h" line="173"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-service.h" line="174"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-service.h" line="175"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-service.h" line="176"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved6" introspectable="0">
        <callback name="_g_reserved6">
          <source-position filename="gdata/gdata-service.h" line="177"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved7" introspectable="0">
        <callback name="_g_reserved7">
          <source-position filename="gdata/gdata-service.h" line="178"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ServiceError"
                 glib:type-name="GDataServiceError"
                 glib:get-type="gdata_service_error_get_type"
                 c:type="GDataServiceError"
                 glib:error-domain="gdata-service-error-quark">
      <doc xml:space="preserve"
           filename="gdata/gdata-service.h"
           line="59">Error codes for #GDataService operations.</doc>
      <member name="unavailable"
              value="1"
              c:identifier="GDATA_SERVICE_ERROR_UNAVAILABLE"
              glib:nick="unavailable"
              glib:name="GDATA_SERVICE_ERROR_UNAVAILABLE">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="61">The service is unavailable due to maintenance or other reasons (e.g. network errors at the server end)</doc>
      </member>
      <member name="protocol_error"
              value="2"
              c:identifier="GDATA_SERVICE_ERROR_PROTOCOL_ERROR"
              glib:nick="protocol-error"
              glib:name="GDATA_SERVICE_ERROR_PROTOCOL_ERROR">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="62">The client or server unexpectedly strayed from the protocol (fatal error)</doc>
      </member>
      <member name="entry_alreadyserted"
              value="3"
              c:identifier="GDATA_SERVICE_ERROR_ENTRY_ALREADY_INSERTED"
              glib:nick="entry-alreadyserted"
              glib:name="GDATA_SERVICE_ERROR_ENTRY_ALREADY_INSERTED">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="63">An entry has already been inserted, and cannot be re-inserted</doc>
      </member>
      <member name="authentication_required"
              value="4"
              c:identifier="GDATA_SERVICE_ERROR_AUTHENTICATION_REQUIRED"
              glib:nick="authentication-required"
              glib:name="GDATA_SERVICE_ERROR_AUTHENTICATION_REQUIRED">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="64">The user attempted to do something which required authentication, and they weren't authenticated or
didn't have authorization for the operation</doc>
      </member>
      <member name="not_found"
              value="5"
              c:identifier="GDATA_SERVICE_ERROR_NOT_FOUND"
              glib:nick="not-found"
              glib:name="GDATA_SERVICE_ERROR_NOT_FOUND">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="66">A requested resource (feed or entry) was not found on the server</doc>
      </member>
      <member name="conflict"
              value="6"
              c:identifier="GDATA_SERVICE_ERROR_CONFLICT"
              glib:nick="conflict"
              glib:name="GDATA_SERVICE_ERROR_CONFLICT">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="67">There was a conflict when updating an entry on the server; the server-side copy was modified between downloading
and uploading the modified entry</doc>
      </member>
      <member name="forbidden"
              value="7"
              c:identifier="GDATA_SERVICE_ERROR_FORBIDDEN"
              glib:nick="forbidden"
              glib:name="GDATA_SERVICE_ERROR_FORBIDDEN">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="69">Generic error for a forbidden action (not due to having insufficient permissions)</doc>
      </member>
      <member name="bad_query_parameter"
              value="8"
              c:identifier="GDATA_SERVICE_ERROR_BAD_QUERY_PARAMETER"
              glib:nick="bad-query-parameter"
              glib:name="GDATA_SERVICE_ERROR_BAD_QUERY_PARAMETER">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="70">A given query parameter was invalid for the query type</doc>
      </member>
      <member name="network_error"
              value="9"
              c:identifier="GDATA_SERVICE_ERROR_NETWORK_ERROR"
              glib:nick="network-error"
              glib:name="GDATA_SERVICE_ERROR_NETWORK_ERROR">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="71">The service is unavailable due to local network errors (e.g. no Internet connection)</doc>
      </member>
      <member name="proxy_error"
              value="10"
              c:identifier="GDATA_SERVICE_ERROR_PROXY_ERROR"
              glib:nick="proxy-error"
              glib:name="GDATA_SERVICE_ERROR_PROXY_ERROR">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="72">The service is unavailable due to proxy network errors (e.g. proxy unreachable)</doc>
      </member>
      <member name="with_batch_operation"
              value="11"
              c:identifier="GDATA_SERVICE_ERROR_WITH_BATCH_OPERATION"
              glib:nick="with-batch-operation"
              glib:name="GDATA_SERVICE_ERROR_WITH_BATCH_OPERATION">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="73">Generic error when running a batch operation and the whole operation fails</doc>
      </member>
      <member name="api_quota_exceeded"
              value="12"
              c:identifier="GDATA_SERVICE_ERROR_API_QUOTA_EXCEEDED"
              glib:nick="api-quota-exceeded"
              glib:name="GDATA_SERVICE_ERROR_API_QUOTA_EXCEEDED">
        <doc xml:space="preserve"
             filename="gdata/gdata-service.h"
             line="74">The API request quota for this
developer account has been exceeded for the current time period (e.g. day).
Try again later. (Since: 0.16.0.)</doc>
      </member>
      <function name="quark" c:identifier="gdata_service_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="ServicePrivate"
            c:type="GDataServicePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-service.h" line="119"/>
    </record>
    <function-macro name="TASKS_QUERY"
                    c:identifier="GDATA_TASKS_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_QUERY_CLASS"
                    c:identifier="GDATA_TASKS_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_QUERY_GET_CLASS"
                    c:identifier="GDATA_TASKS_QUERY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_SERVICE"
                    c:identifier="GDATA_TASKS_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_SERVICE_CLASS"
                    c:identifier="GDATA_TASKS_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                       line="35"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_SERVICE_GET_CLASS"
                    c:identifier="GDATA_TASKS_SERVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                       line="38"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="TASKS_STATUS_COMPLETED"
              value="completed"
              c:type="GDATA_TASKS_STATUS_COMPLETED"
              version="0.16.0">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-task.h"
           line="45">A value for #GDataTasksTask:status indicating the task has been completed.

Reference:
&lt;ulink type="http" url="https://developers.google.com/google-apps/tasks/v1/reference/tasks#status"&gt;
Google Tasks documentation&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TASKS_STATUS_NEEDS_ACTION"
              value="needsAction"
              c:type="GDATA_TASKS_STATUS_NEEDS_ACTION"
              version="0.16.0">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-task.h"
           line="31">A value for #GDataTasksTask:status indicating the task still needs action
before it is complete.

Reference:
&lt;ulink type="http" url="https://developers.google.com/google-apps/tasks/v1/reference/tasks#status"&gt;
Google Tasks documentation&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="TASKS_TASK"
                    c:identifier="GDATA_TASKS_TASK"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="59"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_TASKLIST"
                    c:identifier="GDATA_TASKS_TASKLIST"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_TASKLIST_CLASS"
                    c:identifier="GDATA_TASKS_TASKLIST_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_TASKLIST_GET_CLASS"
                    c:identifier="GDATA_TASKS_TASKLIST_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_TASK_CLASS"
                    c:identifier="GDATA_TASKS_TASK_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="60"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TASKS_TASK_GET_CLASS"
                    c:identifier="GDATA_TASKS_TASK_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="63"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="TasksQuery"
           c:symbol-prefix="tasks_query"
           c:type="GDataTasksQuery"
           version="0.15.0"
           parent="Query"
           glib:type-name="GDataTasksQuery"
           glib:get-type="gdata_tasks_query_get_type"
           glib:type-struct="TasksQueryClass">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-query.h"
           line="40">All the fields in the #GDataTasksQuery structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="67"/>
      <constructor name="new"
                   c:identifier="gdata_tasks_query_new"
                   version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="358">Creates a new #GDataTasksQuery. @q is unused and must be set to %NULL.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="364">a new #GDataTasksQuery</doc>
          <type name="TasksQuery" c:type="GDataTasksQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="360">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_completed_max"
              c:identifier="gdata_tasks_query_get_completed_max"
              glib:get-property="completed-max"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="376">Gets the #GDataTasksQuery:completed-max property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="382">the UNIX timestamp for the completed-max property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="378">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_completed_min"
              c:identifier="gdata_tasks_query_get_completed_min"
              glib:get-property="completed-min"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="418">Gets the #GDataTasksQuery:completed-min property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="424">the UNIX timestamp for the completed-min property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="420">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_due_max"
              c:identifier="gdata_tasks_query_get_due_max"
              glib:get-property="due-max"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="460">Gets the #GDataTasksQuery:due-max property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="466">the UNIX timestamp for the due-max property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="462">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_due_min"
              c:identifier="gdata_tasks_query_get_due_min"
              glib:get-property="due-min"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="503">Gets the #GDataTasksQuery:due-min property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="509">the UNIX timestamp for the due-min property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="505">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_completed"
              c:identifier="gdata_tasks_query_get_show_completed"
              glib:get-property="show-completed"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="545">Gets the #GDataTasksQuery:show-completed property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="551">the show-completed property</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="547">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_deleted"
              c:identifier="gdata_tasks_query_get_show_deleted"
              glib:get-property="show-deleted"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="583">Gets the #GDataTasksQuery:show-deleted property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="589">the show-deleted property</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="585">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_hidden"
              c:identifier="gdata_tasks_query_get_show_hidden"
              glib:get-property="show-hidden"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="621">Gets the #GDataTasksQuery:show-hidden property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-query.c"
               line="627">the show-hidden property</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="623">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_completed_max"
              c:identifier="gdata_tasks_query_set_completed_max"
              glib:set-property="completed-max"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="393">Sets the #GDataTasksQuery:completed-max property of the #GDataTasksQuery
to the new time/date, @completed_max.

Set @completed_max to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="395">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
          <parameter name="completed_max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="396">upper bound for a task's completion date by UNIX timestamp, or  &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_completed_min"
              c:identifier="gdata_tasks_query_set_completed_min"
              glib:set-property="completed-min"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="435">Sets the #GDataTasksQuery:completed-min property of the #GDataTasksQuery
to the new time/date, @completed_min.

Set @completed_min to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="437">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
          <parameter name="completed_min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="438">lower bound for a task's completion date by UNIX timestamp, or  &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_due_max"
              c:identifier="gdata_tasks_query_set_due_max"
              glib:set-property="due-max"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="477">Sets the #GDataTasksQuery:due-max property of the #GDataTasksQuery
to the new time/date, @due_max.

Set @due_max to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="479">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
          <parameter name="due_max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="480">upper bound for a task's due date by UNIX timestamp, or  &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_due_min"
              c:identifier="gdata_tasks_query_set_due_min"
              glib:set-property="due-min"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="520">Sets the #GDataTasksQuery:due-min property of the #GDataTasksQuery
to the new time/date, @due_min.

Set @due_min to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="522">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
          <parameter name="due_min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="523">lower bound for a task's due date by UNIX timestamp, or  &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_completed"
              c:identifier="gdata_tasks_query_set_show_completed"
              glib:set-property="show-completed"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="562">Sets the #GDataTasksQuery:show-completed property of the #GDataTasksQuery.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="564">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
          <parameter name="show_completed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="565">%TRUE to show completed tasks, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_deleted"
              c:identifier="gdata_tasks_query_set_show_deleted"
              glib:set-property="show-deleted"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="600">Sets the #GDataTasksQuery:show-deleted property of the #GDataTasksQuery.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="602">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
          <parameter name="show_deleted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="603">%TRUE to show deleted tasks, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_hidden"
              c:identifier="gdata_tasks_query_set_show_hidden"
              glib:set-property="show-hidden"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="638">Sets the #GDataTasksQuery:show-hidden property of the #GDataTasksQuery.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="640">a #GDataTasksQuery</doc>
            <type name="TasksQuery" c:type="GDataTasksQuery*"/>
          </instance-parameter>
          <parameter name="show_hidden" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-query.c"
                 line="641">%TRUE to show hidden tasks, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="completed-max"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_completed_max"
                getter="get_completed_max"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="84">Upper bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional.
The default is not to filter by completion date.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="completed-min"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_completed_min"
                getter="get_completed_min"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="98">Lower bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional.
The default is not to filter by completion date.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="due-max"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_due_max"
                getter="get_due_max"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="112">Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional.
The default is not to filter by completion date.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="due-min"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_due_min"
                getter="get_due_min"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="126">Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional.
The default is not to filter by completion date.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="show-completed"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_completed"
                getter="get_show_completed"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="139">Flag indicating whether completed tasks are returned in the result. Optional. The default is %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-deleted"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_deleted"
                getter="get_show_deleted"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="152">Flag indicating whether deleted tasks are returned in the result. Optional. The default is %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-hidden"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_hidden"
                getter="get_show_hidden"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-query.c"
             line="165">Flag indicating whether hidden tasks are returned in the result. Optional. The default is %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Query" c:type="GDataQuery"/>
      </field>
      <field name="priv">
        <type name="TasksQueryPrivate" c:type="GDataTasksQueryPrivate*"/>
      </field>
    </class>
    <record name="TasksQueryClass"
            c:type="GDataTasksQueryClass"
            glib:is-gtype-struct-for="TasksQuery"
            version="0.15.0">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-query.h"
           line="52">All the fields in the #GDataTasksQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="QueryClass" c:type="GDataQueryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="TasksQueryPrivate"
            c:type="GDataTasksQueryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/tasks/gdata-tasks-query.h"
                       line="38"/>
    </record>
    <class name="TasksService"
           c:symbol-prefix="tasks_service"
           c:type="GDataTasksService"
           version="0.15.0"
           parent="Service"
           glib:type-name="GDataTasksService"
           glib:get-type="gdata_tasks_service_get_type"
           glib:type-struct="TasksServiceClass">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-service.h"
           line="40">All the fields in the #GDataTasksService structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                       line="66"/>
      <constructor name="new"
                   c:identifier="gdata_tasks_service_new"
                   version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="257">Creates a new #GDataTasksService using the given #GDataAuthorizer. If @authorizer is %NULL, all requests are made as an unauthenticated user.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="263">a new #GDataTasksService, or %NULL; unref with g_object_unref()</doc>
          <type name="TasksService" c:type="GDataTasksService*"/>
        </return-value>
        <parameters>
          <parameter name="authorizer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="259">a #GDataAuthorizer to authorize the service's requests, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_primary_authorization_domain"
                c:identifier="gdata_tasks_service_get_primary_authorization_domain"
                version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="277">The primary #GDataAuthorizationDomain for interacting with Google Tasks. This will not normally need to be used, as it's used internally
by the #GDataTasksService methods. However, if using the plain #GDataService methods to implement custom queries or requests which libgdata
does not support natively, then this domain may be needed to authorize the requests.

The domain never changes, and is interned so that pointer comparison can be used to differentiate it from other authorization domains.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="286">the service's authorization domain</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
      </function>
      <method name="delete_task"
              c:identifier="gdata_tasks_service_delete_task"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="646">Delete @task from online tasks service.

For more details, see gdata_service_delete_entry().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="657">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="648">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="649">the #GDataTasksTask to delete</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="650">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_task_async"
              c:identifier="gdata_tasks_service_delete_task_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="672">Deletes @task from online tasks service. @self and @task are both reffed when this function is called, so can safely be
unreffed after this function returns.

@callback should call gdata_service_delete_entry_finish() to finish deleting task and to check for possible
errors.

For more details, see gdata_tasks_service_delete_task(), which is the synchronous version of this function, and
gdata_service_delete_entry_async(), which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="674">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="675">#GDataTasksTask to delete</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="676">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="677">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="678">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_tasklist"
              c:identifier="gdata_tasks_service_delete_tasklist"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="703">Delete @tasklist from online tasks service.

For more details, see gdata_service_delete_entry().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="714">%TRUE on success, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="705">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="706">the #GDataTasksTasklist to delete</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="707">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_tasklist_async"
              c:identifier="gdata_tasks_service_delete_tasklist_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="729">Deletes @tasklist from online tasks service. @self and @tasklist are both reffed when this function is called, so can safely be
unreffed after this function returns.

@callback should call gdata_service_delete_entry_finish() to finish deleting tasklist and to check for possible
errors.

For more details, see gdata_tasks_service_delete_tasklist(), which is the synchronous version of this function, and
gdata_service_delete_entry_async(), which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="731">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="732">#GDataTasksTasklist to delete</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="733">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="734">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="735">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_task"
              c:identifier="gdata_tasks_service_insert_task"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="504">Inserts @task by uploading it to the online tasks service into tasklist @tasklist. It is safe to unref @tasklist after function returns.

For more details, see gdata_service_insert_entry().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="88"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="516">an updated #GDataTasksTask, or %NULL; unref with g_object_unref()</doc>
          <type name="TasksTask" c:type="GDataTasksTask*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="506">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="507">the #GDataTasksTask to insert</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="508">#GDataTasksTasklist to insert into</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="509">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_task_async"
              c:identifier="gdata_tasks_service_insert_task_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="540">Inserts @task by uploading it to the online tasks service into tasklist @tasklist. @self, @task and @tasklist are all reffed when this function is called, so can safely be
unreffed after this function returns.

@callback should call gdata_service_insert_entry_finish() to obtain a #GDataTasksTask representing the inserted task and to check for possible
errors.

For more details, see gdata_tasks_service_insert_task(), which is the synchronous version of this function, and
gdata_service_insert_entry_async(), which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="542">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="543">the #GDataTasksTask to insert</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="544">#GDataTasksTasklist to insert into</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="545">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="546">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="547">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_tasklist"
              c:identifier="gdata_tasks_service_insert_tasklist"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="578">Inserts @tasklist by uploading it to the online tasks service.

For more details, see gdata_service_insert_entry().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="589">an updated #GDataTasksTasklist, or %NULL; unref with g_object_unref()</doc>
          <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="580">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="581">#GDataTasksTasklist to insert</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="582">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_tasklist_async"
              c:identifier="gdata_tasks_service_insert_tasklist_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="611">Inserts @tasklist by uploading it to the online tasks service. @self and @tasklist are both reffed when this function is called, so can safely be
unreffed after this function returns.

@callback should call gdata_service_insert_entry_finish() to obtain a #GDataTasksTasklist representing the inserted tasklist and to check for possible
errors.

For more details, see gdata_tasks_service_insert_tasklist(), which is the synchronous version of this function, and
gdata_service_insert_entry_async(), which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="613">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="614">#GDataTasksTasklist to insert</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="615">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="616">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="617">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_all_tasklists"
              c:identifier="gdata_tasks_service_query_all_tasklists"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="296">Queries the service to return a list of all tasklists from the authenticated account which match the given
@query. It will return all tasklists the user has read access to.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="310">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="298">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="299">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="300">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="301">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="302">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_all_tasklists_async"
              c:identifier="gdata_tasks_service_query_all_tasklists_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="342">Queries the service to return a list of all tasklists from the authenticated account which match the given
@query. @self and @query are all reffed when this function is called, so can safely be unreffed after
this function returns.

For more details, see gdata_tasks_service_query_all_tasklists(), which is the synchronous version of
this function, and gdata_service_query_async(), which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="344">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="345">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="346">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="347">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="348">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="349">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="351">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="352">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_tasks"
              c:identifier="gdata_tasks_service_query_tasks"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="395">Queries the service to return a list of tasks in the given @tasklist, which match @query.

For more details, see gdata_service_query().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="409">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="397">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="398">a #GDataTasksTasklist</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="399">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="400">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="401">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="402">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_tasks_async"
              c:identifier="gdata_tasks_service_query_tasks_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="445">Queries the service to return a list of tasks in the given @tasklist, which match @query. @self, @tasklist and @query are all reffed when this
function is called, so can safely be unreffed after this function returns.

Get the results of the query using gdata_service_query_finish() in the @callback.

For more details, see gdata_tasks_service_query_tasks(), which is the synchronous version of this function, and gdata_service_query_async(),
which is the base asynchronous query function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="447">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="448">a #GDataTasksTasklist</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="449">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="450">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="451">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="452">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="453">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="455">a #GAsyncReadyCallback to call when the query is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="456">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_task"
              c:identifier="gdata_tasks_service_update_task"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="760">Update @task in online tasks service.

For more details, see gdata_service_update_entry().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="104"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="771">an updated #GDataTasksTask, or %NULL; unref with g_object_unref()</doc>
          <type name="TasksTask" c:type="GDataTasksTask*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="762">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="763">the #GDataTasksTask to update</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="764">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_task_async"
              c:identifier="gdata_tasks_service_update_task_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="786">Updates @task to online tasks service. @self and @task are both reffed when this function is called, so can safely be
unreffed after this function returns.

@callback should call gdata_service_update_entry_finish() to obtain a #GDataTasksTask representing the updated task and to check for possible
errors.

For more details, see gdata_tasks_service_update_task(), which is the synchronous version of this function, and
gdata_service_update_entry_async(), which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="788">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="789">#GDataTasksTask to update</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="790">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="791">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="792">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_tasklist"
              c:identifier="gdata_tasks_service_update_tasklist"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="817">Update @tasklist in online tasks service.

For more details, see gdata_service_update_entry().</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-service.c"
               line="828">an updated #GDataTasksTasklist, or %NULL; unref with g_object_unref()</doc>
          <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="819">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="820">the #GDataTasksTasklist to update</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="821">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_tasklist_async"
              c:identifier="gdata_tasks_service_update_tasklist_async"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-service.c"
             line="843">Updates @tasklist from online tasks service. @self and @tasklist are both reffed when this function is called, so can safely be
unreffed after this function returns.

@callback should call gdata_service_update_entry_finish() to obtain a #GDataTasksTasklist representing the updated task and to check for possible
errors.

For more details, see gdata_tasks_service_update_tasklist(), which is the synchronous version of this function, and
gdata_service_update_entry_async(), which is the base asynchronous insertion function.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="845">a #GDataTasksService</doc>
            <type name="TasksService" c:type="GDataTasksService*"/>
          </instance-parameter>
          <parameter name="tasklist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="846">#GDataTasksTasklist to update</doc>
            <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="847">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="848">a #GAsyncReadyCallback to call when insertion is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-service.c"
                 line="849">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Service" c:type="GDataService"/>
      </field>
    </class>
    <record name="TasksServiceClass"
            c:type="GDataTasksServiceClass"
            glib:is-gtype-struct-for="TasksService"
            version="0.15.0">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-service.h"
           line="51">All the fields in the #GDataTasksServiceClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="ServiceClass" c:type="GDataServiceClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/tasks/gdata-tasks-service.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="TasksTask"
           c:symbol-prefix="tasks_task"
           c:type="GDataTasksTask"
           version="0.15.0"
           parent="Entry"
           glib:type-name="GDataTasksTask"
           glib:get-type="gdata_tasks_task_get_type"
           glib:type-struct="TasksTaskClass">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-task.h"
           line="67">All the fields in the #GDataTasksTask structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="94"/>
      <constructor name="new"
                   c:identifier="gdata_tasks_task_new"
                   version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="392">Creates a new #GDataTasksTask with the given ID and default properties.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="98"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="398">a new #GDataTasksTask; unref with g_object_unref()</doc>
          <type name="TasksTask" c:type="GDataTasksTask*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="394">the task's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_completed"
              c:identifier="gdata_tasks_task_get_completed"
              glib:get-property="completed"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="608">Gets the #GDataTasksTask:completed property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="614">the completed property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="610">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_due"
              c:identifier="gdata_tasks_task_get_due"
              glib:get-property="due"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="570">Gets the #GDataTasksTask:due property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="576">the due property, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="572">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_notes"
              c:identifier="gdata_tasks_task_get_notes"
              glib:get-property="notes"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="490">Gets the #GDataTasksTask:notes property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="104"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="496">notes of the task, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="492">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="gdata_tasks_task_get_parent"
              glib:get-property="parent"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="408">Gets the #GDataTasksTask:parent property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="100"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="414">the parent of the task, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="410">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="gdata_tasks_task_get_position"
              glib:get-property="position"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="449">Gets the #GDataTasksTask:position property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="102"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="455">the position of the task, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="451">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="gdata_tasks_task_get_status"
              glib:get-property="status"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="530">Gets the #GDataTasksTask:status property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="106"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="536">the status of the task, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="532">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_deleted"
              c:identifier="gdata_tasks_task_is_deleted"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="646">Gets the #GDataTasksTask:is-deleted property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="652">%TRUE if task is deleted, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="648">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_hidden"
              c:identifier="gdata_tasks_task_is_hidden"
              glib:get-property="is-hidden"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="680">Gets the #GDataTasksTask:is-hidden property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-task.c"
               line="686">%TRUE if task is hidden, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="682">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_completed"
              c:identifier="gdata_tasks_task_set_completed"
              glib:set-property="completed"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="625">Sets the #GDataTasksTask:completed property of the #GDataTasksTask to the new completion time of the task, @completed.

Set @completed to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the completion time of the task</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="627">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
          <parameter name="completed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="628">completion time of the task, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_due"
              c:identifier="gdata_tasks_task_set_due"
              glib:set-property="due"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="587">Sets the #GDataTasksTask:due property of the #GDataTasksTask to the new due time of the task, @due.

Set @due to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the property in the due time of the task</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="589">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
          <parameter name="due" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="590">due time of the task, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_deleted"
              c:identifier="gdata_tasks_task_set_is_deleted"
              glib:set-property="is-deleted"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="663">Sets the #GDataTasksTask:is-deleted property to @deleted.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="665">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
          <parameter name="deleted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="666">%TRUE if task is deleted, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_notes"
              c:identifier="gdata_tasks_task_set_notes"
              glib:set-property="notes"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="507">Sets the #GDataTasksTask:notes property to the new notes, @notes.

Set @notes to %NULL to unset the property in the task.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="509">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
          <parameter name="notes"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="510">a new notes of the task, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent"
              c:identifier="gdata_tasks_task_set_parent"
              glib:set-property="parent"
              version="0.17.10">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="425">Sets the #GDataTasksTask:parent property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="427">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="428">parent of the task</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_position"
              c:identifier="gdata_tasks_task_set_position"
              glib:set-property="position"
              version="0.17.10">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="466">Sets the #GDataTasksTask:position property.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="468">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="469">position of the task in the list</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_status"
              c:identifier="gdata_tasks_task_set_status"
              glib:set-property="status"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="547">Sets the #GDataTasksTask:status property to the new status, @status.

Set @status to %NULL to unset the property in the task.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="549">a #GDataTasksTask</doc>
            <type name="TasksTask" c:type="GDataTasksTask*"/>
          </instance-parameter>
          <parameter name="status"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-task.c"
                 line="550">a new status of the task, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="completed"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_completed"
                getter="get_completed"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="174">Completion date of the task (as a RFC 3339 timestamp; seconds since
the UNIX epoch).

This field is &lt;code class="literal"&gt;-1&lt;/code&gt; if the task has not
been completed.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="due"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_due"
                getter="get_due"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="157">Due date of the task (as a RFC 3339 timestamp; seconds since the UNIX
epoch).

This field is &lt;code class="literal"&gt;-1&lt;/code&gt; if the task has no due
date assigned.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="is-deleted"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_is_deleted"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="191">Flag indicating whether the task has been deleted. The default is %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="is-hidden"
                version="0.15.0"
                transfer-ownership="none"
                getter="is_hidden"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="204">Flag indicating whether the task is hidden. This is the case if the task
had been marked completed when the task list was last cleared.
The default is %FALSE. This field is read-only.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="notes"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_notes"
                getter="get_notes"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="130">This is where the description of what needs to be done in the task is stored.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="parent"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_parent"
                getter="get_parent"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="97">Parent task identifier. This field is omitted if it is a top-level task.

Since 0.17.10, this property is writable.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="position"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_position"
                getter="get_position"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="112">String indicating the position of the task among its sibling tasks under the same parent task
or at the top level. If this string is greater than another task's corresponding position string
according to lexicographical ordering, the task is positioned after the other task under the same
parent task (or at the top level).

Since 0.17.10, this property is writable.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="status"
                version="0.15.0"
                writable="1"
                transfer-ownership="none"
                setter="set_status"
                getter="get_status"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-task.c"
             line="143">Status of the task. This is either %GDATA_TASKS_STATUS_NEEDS_ACTION
or %GDATA_TASKS_STATUS_COMPLETED.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="TasksTaskPrivate" c:type="GDataTasksTaskPrivate*"/>
      </field>
    </class>
    <record name="TasksTaskClass"
            c:type="GDataTasksTaskClass"
            glib:is-gtype-struct-for="TasksTask"
            version="0.15.0">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-task.h"
           line="79">All the fields in the #GDataTasksTaskClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="94"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="TasksTaskPrivate"
            c:type="GDataTasksTaskPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/tasks/gdata-tasks-task.h"
                       line="65"/>
    </record>
    <class name="TasksTasklist"
           c:symbol-prefix="tasks_tasklist"
           c:type="GDataTasksTasklist"
           version="0.15.0"
           parent="Entry"
           glib:type-name="GDataTasksTasklist"
           glib:get-type="gdata_tasks_tasklist_get_type"
           glib:type-struct="TasksTasklistClass">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-tasklist.h"
           line="38">All the fields in the #GDataTasksTasklist structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                       line="65"/>
      <constructor name="new"
                   c:identifier="gdata_tasks_tasklist_new"
                   version="0.15.0">
        <doc xml:space="preserve"
             filename="gdata/services/tasks/gdata-tasks-tasklist.c"
             line="70">Creates a new #GDataTasksTasklist with the given ID and default properties.</doc>
        <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/tasks/gdata-tasks-tasklist.c"
               line="76">a new #GDataTasksTasklist; unref with g_object_unref()</doc>
          <type name="TasksTasklist" c:type="GDataTasksTasklist*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/tasks/gdata-tasks-tasklist.c"
                 line="72">the tasklist's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
    </class>
    <record name="TasksTasklistClass"
            c:type="GDataTasksTasklistClass"
            glib:is-gtype-struct-for="TasksTasklist"
            version="0.15.0">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-tasklist.h"
           line="49">All the fields in the #GDataTasksTasklistClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                       line="65"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/tasks/gdata-tasks-tasklist.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <function-macro name="UPLOAD_STREAM"
                    c:identifier="GDATA_UPLOAD_STREAM"
                    introspectable="0">
      <source-position filename="gdata/gdata-upload-stream.h" line="59"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UPLOAD_STREAM_CLASS"
                    c:identifier="GDATA_UPLOAD_STREAM_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-upload-stream.h" line="60"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UPLOAD_STREAM_GET_CLASS"
                    c:identifier="GDATA_UPLOAD_STREAM_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/gdata-upload-stream.h" line="63"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="UploadStream"
           c:symbol-prefix="upload_stream"
           c:type="GDataUploadStream"
           version="0.5.0"
           parent="Gio.OutputStream"
           glib:type-name="GDataUploadStream"
           glib:get-type="gdata_upload_stream_get_type"
           glib:type-struct="UploadStreamClass">
      <doc xml:space="preserve"
           filename="gdata/gdata-upload-stream.h"
           line="67">All the fields in the #GDataUploadStream structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-upload-stream.h" line="98"/>
      <constructor name="new"
                   c:identifier="gdata_upload_stream_new"
                   version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1316">Creates a new #GDataUploadStream, allowing a file to be uploaded from a GData service using standard #GOutputStream API.

The HTTP method to use should be specified in @method, and will typically be either %SOUP_METHOD_POST (for insertions) or %SOUP_METHOD_PUT
(for updates), according to the server and the @upload_uri.

If @entry is specified, it will be attached to the upload as the entry to which the file being uploaded belongs. Otherwise, just the file
written to the stream will be uploaded, and given a default entry as determined by the server.

@slug and @content_type must be specified before the upload begins, as they describe the file being streamed. @slug is the filename given to the
file, which will typically be stored on the server and made available when downloading the file again. @content_type must be the correct
content type for the file, and should be in the service's list of acceptable content types.

As well as the standard GIO errors, calls to the #GOutputStream API on a #GDataUploadStream can also return any relevant specific error from
#GDataServiceError, or %GDATA_SERVICE_ERROR_PROTOCOL_ERROR in the general case.

If a #GCancellable is provided in @cancellable, the upload operation may be cancelled at any time from another thread using g_cancellable_cancel().
In this case, any ongoing network activity will be stopped, and any pending or future calls to #GOutputStream API on the #GDataUploadStream will
return %G_IO_ERROR_CANCELLED. Note that the #GCancellable objects which can be passed to individual #GOutputStream operations will not cancel the
upload operation proper if cancelled — they will merely cancel that API call. The only way to cancel the upload operation completely is using this
@cancellable.

Note that network communication won't begin until the first call to g_output_stream_write() on the #GDataUploadStream.</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1350">a new #GOutputStream, or %NULL; unref with g_object_unref()</doc>
          <type name="Gio.OutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1318">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1319">the #GDataAuthorizationDomain to authorize the upload, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="method" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1320">the HTTP method to use</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="upload_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1321">the URI to upload, which must be HTTPS</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="entry"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1322">the entry to upload as metadata, or %NULL</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1323">the file's slug (filename)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1324">the content type of the file being uploaded</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1325">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_resumable"
                   c:identifier="gdata_upload_stream_new_resumable"
                   version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1380">Creates a new resumable #GDataUploadStream, allowing a file to be uploaded from a GData service using standard #GOutputStream API. The upload will
use GData's resumable upload API, so should be more reliable than a normal upload (especially if the file is large). See the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/resumable_upload.html"&gt;GData documentation on resumable uploads&lt;/ulink&gt; for more
information.

The HTTP method to use should be specified in @method, and will typically be either %SOUP_METHOD_POST (for insertions) or %SOUP_METHOD_PUT
(for updates), according to the server and the @upload_uri.

If @entry is specified, it will be attached to the upload as the entry to which the file being uploaded belongs. Otherwise, just the file
written to the stream will be uploaded, and given a default entry as determined by the server.

@slug, @content_type and @content_length must be specified before the upload begins, as they describe the file being streamed. @slug is the filename
given to the file, which will typically be stored on the server and made available when downloading the file again. @content_type must be the
correct content type for the file, and should be in the service's list of acceptable content types. @content_length must be the size of the file
being uploaded (not including the XML for any associated #GDataEntry) in bytes. Zero is accepted if a metadata-only upload is being performed.

As well as the standard GIO errors, calls to the #GOutputStream API on a #GDataUploadStream can also return any relevant specific error from
#GDataServiceError, or %GDATA_SERVICE_ERROR_PROTOCOL_ERROR in the general case.

If a #GCancellable is provided in @cancellable, the upload operation may be cancelled at any time from another thread using g_cancellable_cancel().
In this case, any ongoing network activity will be stopped, and any pending or future calls to #GOutputStream API on the #GDataUploadStream will
return %G_IO_ERROR_CANCELLED. Note that the #GCancellable objects which can be passed to individual #GOutputStream operations will not cancel the
upload operation proper if cancelled — they will merely cancel that API call. The only way to cancel the upload operation completely is using this
@cancellable.

Note that network communication won't begin until the first call to g_output_stream_write() on the #GDataUploadStream.</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1419">a new #GOutputStream, or %NULL; unref with g_object_unref()</doc>
          <type name="Gio.OutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1382">a #GDataService</doc>
            <type name="Service" c:type="GDataService*"/>
          </parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1383">the #GDataAuthorizationDomain to authorize the upload, or %NULL</doc>
            <type name="AuthorizationDomain"
                  c:type="GDataAuthorizationDomain*"/>
          </parameter>
          <parameter name="method" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1384">the HTTP method to use</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="upload_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1385">the URI to upload</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="entry"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1386">the entry to upload as metadata, or %NULL</doc>
            <type name="Entry" c:type="GDataEntry*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1387">the file's slug (filename)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1388">the content type of the file being uploaded</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1389">the size (in bytes) of the file being uploaded</doc>
            <type name="gint64" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1390">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_authorization_domain"
              c:identifier="gdata_upload_stream_get_authorization_domain"
              glib:get-property="authorization-domain"
              version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1521">Gets the authorization domain used to authorize the upload, as passed to gdata_upload_stream_new(). It may be %NULL if authorization is not
needed for the upload.</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="113"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1528">the #GDataAuthorizationDomain used to authorize the upload, or %NULL</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1523">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cancellable"
              c:identifier="gdata_upload_stream_get_cancellable"
              glib:get-property="cancellable"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1642">Gets the #GCancellable for the entire upload operation, #GDataUploadStream:cancellable.</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1648">the #GCancellable for the entire upload operation</doc>
          <type name="Gio.Cancellable" c:type="GCancellable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1644">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_length"
              c:identifier="gdata_upload_stream_get_content_length"
              glib:get-property="content-length"
              version="0.13.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1624">Gets the size (in bytes) of the file being uploaded. This will be &lt;code class="literal"&gt;-1&lt;/code&gt; for a non-resumable upload, and zero or greater
for a resumable upload.</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1631">the size of the file being uploaded</doc>
          <type name="gint64" c:type="goffset"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1626">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_type"
              c:identifier="gdata_upload_stream_get_content_type"
              glib:get-property="content-type"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1607">Gets the content type of the file being uploaded.</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1613">the content type of the file being uploaded</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1609">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry"
              c:identifier="gdata_upload_stream_get_entry"
              glib:get-property="entry"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1573">Gets the entry being used to upload metadata, if one was passed to gdata_upload_stream_new().</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1579">the entry used for metadata, or %NULL</doc>
          <type name="Entry" c:type="GDataEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1575">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_method"
              c:identifier="gdata_upload_stream_get_method"
              glib:get-property="method"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1539">Gets the HTTP request method being used to upload the file, as passed to gdata_upload_stream_new().</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1545">the HTTP request method in use</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1541">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_response"
              c:identifier="gdata_upload_stream_get_response"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1451">Returns the server's response to the upload operation performed by the #GDataUploadStream. If the operation
is still underway, or the server's response hasn't been received yet, %NULL is returned and @length is set to &lt;code class="literal"&gt;-1&lt;/code&gt;.

If there was an error during the upload operation (but it is complete), %NULL is returned, and @length is set to &lt;code class="literal"&gt;0&lt;/code&gt;.

While it is safe to call this function from any thread at any time during the network operation, the only way to guarantee that the response has
been set before calling this function is to have closed the #GDataUploadStream by calling g_output_stream_close() on it, without cancelling
the close operation. Once the stream has been closed, all network communication is guaranteed to have finished. Note that if a call to
g_output_stream_close() is cancelled, g_output_stream_is_closed() will immediately start to return %TRUE, even if the #GDataUploadStream is still
attempting to flush the network buffers asynchronously — consequently, gdata_upload_stream_get_response() may still return %NULL and a @length of
&lt;code class="literal"&gt;-1&lt;/code&gt;. The only reliable way to determine if the stream has been fully closed in this situation is to check the results
of gdata_upload_stream_get_response(), rather than g_output_stream_is_closed().</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1469">the server's response to the upload, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1453">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1454">return location for the length of the response, or %NULL</doc>
            <type name="gssize" c:type="gssize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_service"
              c:identifier="gdata_upload_stream_get_service"
              glib:get-property="service"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1504">Gets the service used to authorize the upload, as passed to gdata_upload_stream_new().</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1510">the #GDataService used to authorize the upload</doc>
          <type name="Service" c:type="GDataService*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1506">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_slug"
              c:identifier="gdata_upload_stream_get_slug"
              glib:get-property="slug"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1590">Gets the slug (filename) of the file being uploaded.</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1596">the slug of the file being uploaded</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1592">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_upload_uri"
              c:identifier="gdata_upload_stream_get_upload_uri"
              glib:get-property="upload-uri"
              version="0.5.0">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="1556">Gets the URI the file is being uploaded to, as passed to gdata_upload_stream_new().</doc>
        <source-position filename="gdata/gdata-upload-stream.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-upload-stream.c"
               line="1562">the URI which the file is being uploaded to</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/gdata-upload-stream.c"
                 line="1558">a #GDataUploadStream</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="authorization-domain"
                version="0.9.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_authorization_domain">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="278">The authorization domain for the upload, against which the #GDataService:authorizer for the #GDataDownloadStream:service should be
authorized. This may be %NULL if authorization is not needed for the upload.</doc>
        <type name="AuthorizationDomain"/>
      </property>
      <property name="cancellable"
                version="0.8.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_cancellable">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="373">An optional cancellable used to cancel the entire upload operation. If a #GCancellable instance isn't provided for this property at
construction time (i.e. to gdata_upload_stream_new()), one will be created internally and can be retrieved using
gdata_upload_stream_get_cancellable() and used to cancel the upload operation with g_cancellable_cancel() just as if it was passed to
gdata_upload_stream_new().

If the upload operation is cancelled using this #GCancellable, any ongoing network activity will be stopped, and any pending or future calls
to #GOutputStream API on the #GDataUploadStream will return %G_IO_ERROR_CANCELLED. Note that the #GCancellable objects which can be passed
to individual #GOutputStream operations will not cancel the upload operation proper if cancelled — they will merely cancel that API call.
The only way to cancel the upload operation completely is using #GDataUploadStream:cancellable.</doc>
        <type name="Gio.Cancellable"/>
      </property>
      <property name="content-length"
                version="0.13.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_content_length"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="344">The content length (in bytes) of the file being uploaded (i.e. as returned by g_file_info_get_size()). Note that this does not include the
length of the XML serialisation of #GDataUploadStream:entry, if set.

If this is &lt;code class="literal"&gt;-1&lt;/code&gt; the upload will be non-resumable; if it is non-negative, the upload will be resumable.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="content-type"
                version="0.5.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_content_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="360">The content type of the file being uploaded (i.e. as returned by g_file_info_get_content_type()).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="entry"
                version="0.5.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_entry">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="318">The entry used for metadata to upload.</doc>
        <type name="Entry"/>
      </property>
      <property name="method"
                version="0.7.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_method"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="292">The HTTP request method to use when uploading the file.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="service"
                version="0.5.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_service">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="265">The service which is used to authorize the upload, and to which the upload relates.</doc>
        <type name="Service"/>
      </property>
      <property name="slug"
                version="0.5.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_slug"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="331">The slug of the file being uploaded. This is usually the display name of the file (i.e. as returned by g_file_info_get_display_name()).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="upload-uri"
                version="0.5.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_upload_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/gdata-upload-stream.c"
             line="305">The URI to upload the data and metadata to. This must be HTTPS.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Gio.OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv">
        <type name="UploadStreamPrivate" c:type="GDataUploadStreamPrivate*"/>
      </field>
    </class>
    <record name="UploadStreamClass"
            c:type="GDataUploadStreamClass"
            glib:is-gtype-struct-for="UploadStream"
            version="0.5.0">
      <doc xml:space="preserve"
           filename="gdata/gdata-upload-stream.h"
           line="79">All the fields in the #GDataUploadStreamClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/gdata-upload-stream.h" line="98"/>
      <field name="parent" readable="0" private="1">
        <type name="Gio.OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/gdata-upload-stream.h" line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/gdata-upload-stream.h" line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/gdata-upload-stream.h" line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/gdata-upload-stream.h" line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/gdata-upload-stream.h" line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/gdata-upload-stream.h" line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UploadStreamPrivate"
            c:type="GDataUploadStreamPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/gdata-upload-stream.h" line="65"/>
    </record>
    <constant name="YOUTUBE_ACTION_COMMENT"
              value="comment"
              c:type="GDATA_YOUTUBE_ACTION_COMMENT"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="53">An action to comment on a video, for use with gdata_youtube_video_set_access_control().</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_ACTION_COMMENT_VOTE"
              value="commentVote"
              c:type="GDATA_YOUTUBE_ACTION_COMMENT_VOTE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="62">An action to rate other users' comments on a video, for use with gdata_youtube_video_set_access_control().</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_ACTION_EMBED"
              value="embed"
              c:type="GDATA_YOUTUBE_ACTION_EMBED"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="80">An action to embed a video on third-party websites, for use with gdata_youtube_video_set_access_control().</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="87"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_ACTION_RATE"
              value="rate"
              c:type="GDATA_YOUTUBE_ACTION_RATE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="44">An action to rate a video, for use with gdata_youtube_video_set_access_control().</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="51"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_ACTION_SYNDICATE"
              value="syndicate"
              c:type="GDATA_YOUTUBE_ACTION_SYNDICATE"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="89">An action allowing YouTube to show the video on mobile phones and televisions, for use with gdata_youtube_video_set_access_control().</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="96"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_ACTION_VIDEO_RESPOND"
              value="videoRespond"
              c:type="GDATA_YOUTUBE_ACTION_VIDEO_RESPOND"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="71">An action to add a video response to a video, for use with gdata_youtube_video_set_access_control().</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="78"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_ASPECT_RATIO_WIDESCREEN"
              value="widescreen"
              c:type="GDATA_YOUTUBE_ASPECT_RATIO_WIDESCREEN"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="32">The aspect ratio for widescreen (16:9) videos.

For more information, see the &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_yt:aspectratio"&gt;
online documentation&lt;/ulink&gt;.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="YOUTUBE_CATEGORY"
                    c:identifier="GDATA_YOUTUBE_CATEGORY"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_CATEGORY_CLASS"
                    c:identifier="GDATA_YOUTUBE_CATEGORY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_CATEGORY_GET_CLASS"
                    c:identifier="GDATA_YOUTUBE_CATEGORY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="36"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_COMMENT"
                    c:identifier="GDATA_YOUTUBE_COMMENT"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_COMMENT_CLASS"
                    c:identifier="GDATA_YOUTUBE_COMMENT_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_COMMENT_GET_CLASS"
                    c:identifier="GDATA_YOUTUBE_COMMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_FEED"
                    c:identifier="GDATA_YOUTUBE_FEED"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_FEED_CLASS"
                    c:identifier="GDATA_YOUTUBE_FEED_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_FEED_GET_CLASS"
                    c:identifier="GDATA_YOUTUBE_FEED_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="YOUTUBE_LICENSE_CC"
              value="cc"
              c:type="GDATA_YOUTUBE_LICENSE_CC"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-query.h"
           line="68">Value for #GDataYouTubeQuery:license to restrict search results to only videos which are Creative Commons licensed. Specifically, the license
is the Creative Commons Attribution 3.0 Unported license; see the
&lt;ulink type="http" url="http://www.google.com/support/youtube/bin/answer.py?hl=en&amp;answer=1284989"&gt;YouTube Help&lt;/ulink&gt; for more information.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="77"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_LICENSE_STANDARD"
              value="youtube"
              c:type="GDATA_YOUTUBE_LICENSE_STANDARD"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-query.h"
           line="79">Value for #GDataYouTubeQuery:license to restrict search results to only videos which are under the standard YouTube license.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="86"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="YOUTUBE_QUERY"
                    c:identifier="GDATA_YOUTUBE_QUERY"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="89"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_QUERY_CLASS"
                    c:identifier="GDATA_YOUTUBE_QUERY_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="90"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_QUERY_GET_CLASS"
                    c:identifier="GDATA_YOUTUBE_QUERY_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="93"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="YOUTUBE_RATING_TYPE_MPAA"
              value="mpaa"
              c:type="GDATA_YOUTUBE_RATING_TYPE_MPAA"
              version="0.10.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="98">A rating type to pass to gdata_youtube_video_get_media_rating() for ratings by the &lt;ulink type="http" url="http://www.mpaa.org/"&gt;MPAA&lt;/ulink&gt;. The
values which can be returned for such ratings are: &lt;code class="literal"&gt;g&lt;/code&gt;, &lt;code class="literal"&gt;pg&lt;/code&gt;,
&lt;code class="literal"&gt;pg-13&lt;/code&gt;, &lt;code class="literal"&gt;r&lt;/code&gt; and &lt;code class="literal"&gt;nc-17&lt;/code&gt;.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="107"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="YOUTUBE_RATING_TYPE_V_CHIP"
              value="v-chip"
              c:type="GDATA_YOUTUBE_RATING_TYPE_V_CHIP"
              version="0.10.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="109">A rating type to pass to gdata_youtube_video_get_media_rating() for ratings following the FCC
&lt;ulink type="http" url="http://www.fcc.gov/vchip/"&gt;V-Chip&lt;/ulink&gt; system. The values which can be returned for such ratings are:
&lt;code class="literal"&gt;tv-y&lt;/code&gt;, &lt;code class="literal"&gt;tv-y7&lt;/code&gt;, &lt;code class="literal"&gt;tv-y7-fv&lt;/code&gt;, &lt;code class="literal"&gt;tv-g&lt;/code&gt;,
&lt;code class="literal"&gt;tv-pg&lt;/code&gt;, &lt;code class="literal"&gt;tv-14&lt;/code&gt; and &lt;code class="literal"&gt;tv-ma&lt;/code&gt;.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="119"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="YOUTUBE_SERVICE"
                    c:identifier="GDATA_YOUTUBE_SERVICE"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="67"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_SERVICE_CLASS"
                    c:identifier="GDATA_YOUTUBE_SERVICE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="68"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_SERVICE_GET_CLASS"
                    c:identifier="GDATA_YOUTUBE_SERVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="71"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_STATE"
                    c:identifier="GDATA_YOUTUBE_STATE"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_STATE_CLASS"
                    c:identifier="GDATA_YOUTUBE_STATE_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_STATE_GET_CLASS"
                    c:identifier="GDATA_YOUTUBE_STATE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_VIDEO"
                    c:identifier="GDATA_YOUTUBE_VIDEO"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="141"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_VIDEO_CLASS"
                    c:identifier="GDATA_YOUTUBE_VIDEO_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="142"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="YOUTUBE_VIDEO_GET_CLASS"
                    c:identifier="GDATA_YOUTUBE_VIDEO_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="145"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="YouTubeAge"
                 version="0.3.0"
                 glib:type-name="GDataYouTubeAge"
                 glib:get-type="gdata_youtube_age_get_type"
                 c:type="GDataYouTubeAge">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-query.h"
           line="50">Video ages, allowing queries to be limited to videos uploaded in a recent time period.</doc>
      <member name="all_time"
              value="0"
              c:identifier="GDATA_YOUTUBE_AGE_ALL_TIME"
              glib:nick="all-time"
              glib:name="GDATA_YOUTUBE_AGE_ALL_TIME">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.h"
             line="52">retrieve all videos, regardless of the date they were uploaded</doc>
      </member>
      <member name="today"
              value="1"
              c:identifier="GDATA_YOUTUBE_AGE_TODAY"
              glib:nick="today"
              glib:name="GDATA_YOUTUBE_AGE_TODAY">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.h"
             line="53">retrieve only videos uploaded in the past day</doc>
      </member>
      <member name="this_week"
              value="2"
              c:identifier="GDATA_YOUTUBE_AGE_THIS_WEEK"
              glib:nick="this-week"
              glib:name="GDATA_YOUTUBE_AGE_THIS_WEEK">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.h"
             line="54">retrieve only videos uploaded in the past week</doc>
      </member>
      <member name="this_month"
              value="3"
              c:identifier="GDATA_YOUTUBE_AGE_THIS_MONTH"
              glib:nick="this-month"
              glib:name="GDATA_YOUTUBE_AGE_THIS_MONTH">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.h"
             line="55">retrieve only videos uploaded in the past month</doc>
      </member>
    </enumeration>
    <class name="YouTubeCategory"
           c:symbol-prefix="youtube_category"
           c:type="GDataYouTubeCategory"
           version="0.7.0"
           parent="Category"
           glib:type-name="GDataYouTubeCategory"
           glib:get-type="gdata_youtube_category_get_type"
           glib:type-struct="YouTubeCategoryClass">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-category.h"
           line="40">All the fields in the #GDataYouTubeCategory structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="67"/>
      <implements name="Comparable"/>
      <method name="is_assignable"
              c:identifier="gdata_youtube_category_is_assignable"
              glib:get-property="is-assignable"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-category.c"
             line="178">Gets the #GDataYouTubeCategory:is-assignable property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-category.c"
               line="184">whether new videos can be assigned to the category</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-category.c"
                 line="180">a #GDataYouTubeCategory</doc>
            <type name="YouTubeCategory" c:type="GDataYouTubeCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_browsable"
              c:identifier="gdata_youtube_category_is_browsable"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-category.c"
             line="195">Returns whether the category is browsable in the given @region. The list of supported region IDs is
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#Region_specific_feeds"&gt;available online&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-category.c"
               line="203">whether the category is browsable in @region</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-category.c"
                 line="197">a #GDataYouTubeCategory</doc>
            <type name="YouTubeCategory" c:type="GDataYouTubeCategory*"/>
          </instance-parameter>
          <parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-category.c"
                 line="198">a two-letter region ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_deprecated"
              c:identifier="gdata_youtube_category_is_deprecated"
              glib:get-property="is-deprecated"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-category.c"
             line="225">Gets the #GDataYouTubeCategory:is-deprecated property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-category.c"
               line="231">whether the category is deprecated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-category.c"
                 line="227">a #GDataYouTubeCategory</doc>
            <type name="YouTubeCategory" c:type="GDataYouTubeCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="is-assignable"
                version="0.7.0"
                transfer-ownership="none"
                getter="is_assignable"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-category.c"
             line="72">Whether new videos can be added to the category.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="is-deprecated"
                version="0.7.0"
                transfer-ownership="none"
                getter="is_deprecated"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-category.c"
             line="85">Whether the category is deprecated.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Category" c:type="GDataCategory"/>
      </field>
      <field name="priv">
        <type name="YouTubeCategoryPrivate"
              c:type="GDataYouTubeCategoryPrivate*"/>
      </field>
    </class>
    <record name="YouTubeCategoryClass"
            c:type="GDataYouTubeCategoryClass"
            glib:is-gtype-struct-for="YouTubeCategory"
            version="0.7.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-category.h"
           line="52">All the fields in the #GDataYouTubeCategoryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="67"/>
      <field name="parent" readable="0" private="1">
        <type name="CategoryClass" c:type="GDataCategoryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="YouTubeCategoryPrivate"
            c:type="GDataYouTubeCategoryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/youtube/gdata-youtube-category.h"
                       line="38"/>
    </record>
    <class name="YouTubeComment"
           c:symbol-prefix="youtube_comment"
           c:type="GDataYouTubeComment"
           version="0.10.0"
           parent="Comment"
           glib:type-name="GDataYouTubeComment"
           glib:get-type="gdata_youtube_comment_get_type"
           glib:type-struct="YouTubeCommentClass">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-comment.h"
           line="39">All the fields in the #GDataYouTubeComment structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="66"/>
      <constructor name="new"
                   c:identifier="gdata_youtube_comment_new"
                   version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-comment.c"
             line="430">Creates a new #GDataYouTubeComment with the given ID and default properties.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-comment.c"
               line="436">a new #GDataYouTubeComment; unref with g_object_unref()</doc>
          <type name="YouTubeComment" c:type="GDataYouTubeComment*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-comment.c"
                 line="432">the comment's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_parent_comment_uri"
              c:identifier="gdata_youtube_comment_get_parent_comment_uri"
              glib:get-property="parent-comment-uri"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-comment.c"
             line="448">Gets the #GDataYouTubeComment:parent-comment-uri property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-comment.c"
               line="454">the parent comment URI, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-comment.c"
                 line="450">a #GDataYouTubeComment</doc>
            <type name="YouTubeComment" c:type="GDataYouTubeComment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_parent_comment_uri"
              c:identifier="gdata_youtube_comment_set_parent_comment_uri"
              glib:set-property="parent-comment-uri"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-comment.c"
             line="473">Sets the #GDataYouTubeComment:parent-comment-uri property to @parent_comment_uri.

Set @parent_comment_uri to %NULL to unset the #GDataYouTubeComment:parent-comment-uri property in the comment (i.e. make the comment a top-level
comment).

See the &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/developers_guide_protocol_comments.html#Retrieve_comments"&gt;online
documentation&lt;/ulink&gt; for more information.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-comment.c"
                 line="475">a #GDataYouTubeComment</doc>
            <type name="YouTubeComment" c:type="GDataYouTubeComment*"/>
          </instance-parameter>
          <parameter name="parent_comment_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-comment.c"
                 line="476">a new parent comment URI, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="parent-comment-uri"
                version="0.10.0"
                writable="1"
                transfer-ownership="none"
                setter="set_parent_comment_uri"
                getter="get_parent_comment_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-comment.c"
             line="85">The URI of the parent comment to this one, or %NULL if this comment is a top-level comment.

See the documentation for #GDataYouTubeComment for an explanation of the semantics of parent comment URIs.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Comment" c:type="GDataComment"/>
      </field>
      <field name="priv">
        <type name="YouTubeCommentPrivate"
              c:type="GDataYouTubeCommentPrivate*"/>
      </field>
    </class>
    <record name="YouTubeCommentClass"
            c:type="GDataYouTubeCommentClass"
            glib:is-gtype-struct-for="YouTubeComment"
            version="0.10.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-comment.h"
           line="51">All the fields in the #GDataYouTubeCommentClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="66"/>
      <field name="parent" readable="0" private="1">
        <type name="CommentClass" c:type="GDataCommentClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="YouTubeCommentPrivate"
            c:type="GDataYouTubeCommentPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/youtube/gdata-youtube-comment.h"
                       line="37"/>
    </record>
    <class name="YouTubeFeed"
           c:symbol-prefix="youtube_feed"
           c:type="GDataYouTubeFeed"
           version="0.17.0"
           parent="Feed"
           glib:type-name="GDataYouTubeFeed"
           glib:get-type="gdata_youtube_feed_get_type"
           glib:type-struct="YouTubeFeedClass">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-feed.h"
           line="38">All the fields in the #GDataYouTubeFeed structure are private and should
never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="68"/>
      <field name="parent" readable="0" private="1">
        <type name="Feed" c:type="GDataFeed"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="YouTubeFeedPrivate" c:type="GDataYouTubeFeedPrivate*"/>
      </field>
    </class>
    <record name="YouTubeFeedClass"
            c:type="GDataYouTubeFeedClass"
            glib:is-gtype-struct-for="YouTubeFeed"
            version="0.17.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-feed.h"
           line="52">All the fields in the #GDataYouTubeFeedClass structure are private and should
never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="68"/>
      <field name="parent" readable="0" private="1">
        <type name="FeedClass" c:type="GDataFeedClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="YouTubeFeedPrivate"
            c:type="GDataYouTubeFeedPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/youtube/gdata-youtube-feed.h"
                       line="36"/>
    </record>
    <enumeration name="YouTubePermission"
                 version="0.7.0"
                 glib:type-name="GDataYouTubePermission"
                 glib:get-type="gdata_youtube_permission_get_type"
                 c:type="GDataYouTubePermission">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="121">Permissions for actions which can be set on a #GDataYouTubeVideo using gdata_youtube_video_set_access_control().

The only actions which can have the %GDATA_YOUTUBE_PERMISSION_MODERATED permission are
%GDATA_YOUTUBE_ACTION_RATE and %GDATA_YOUTUBE_ACTION_COMMENT.</doc>
      <member name="allowed"
              value="0"
              c:identifier="GDATA_YOUTUBE_PERMISSION_ALLOWED"
              glib:nick="allowed"
              glib:name="GDATA_YOUTUBE_PERMISSION_ALLOWED">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.h"
             line="123">the action is allowed for everyone</doc>
      </member>
      <member name="denied"
              value="1"
              c:identifier="GDATA_YOUTUBE_PERMISSION_DENIED"
              glib:nick="denied"
              glib:name="GDATA_YOUTUBE_PERMISSION_DENIED">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.h"
             line="124">the action is denied for everyone</doc>
      </member>
      <member name="moderated"
              value="2"
              c:identifier="GDATA_YOUTUBE_PERMISSION_MODERATED"
              glib:nick="moderated"
              glib:name="GDATA_YOUTUBE_PERMISSION_MODERATED">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.h"
             line="125">the action is moderated by the video owner</doc>
      </member>
    </enumeration>
    <class name="YouTubeQuery"
           c:symbol-prefix="youtube_query"
           c:type="GDataYouTubeQuery"
           version="0.3.0"
           parent="Query"
           glib:type-name="GDataYouTubeQuery"
           glib:get-type="gdata_youtube_query_get_type"
           glib:type-struct="YouTubeQueryClass">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-query.h"
           line="97">All the fields in the #GDataYouTubeQuery structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="124"/>
      <constructor name="new"
                   c:identifier="gdata_youtube_query_new"
                   version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="526">Creates a new #GDataYouTubeQuery with its #GDataQuery:q property set to @q.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="128"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-query.c"
               line="532">a new #GDataYouTubeQuery</doc>
          <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
        </return-value>
        <parameters>
          <parameter name="q"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="528">a query string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_age"
              c:identifier="gdata_youtube_query_get_age"
              glib:get-property="age"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="717">Gets the #GDataYouTubeQuery:age property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-query.c"
               line="723">the age property</doc>
          <type name="YouTubeAge" c:type="GDataYouTubeAge"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="719">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_license"
              c:identifier="gdata_youtube_query_get_license"
              glib:get-property="license"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="754">Gets the #GDataYouTubeQuery:license property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-query.c"
               line="760">the license property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="756">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="gdata_youtube_query_get_location"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="542">Gets the location-based properties of the #GDataYouTubeQuery&lt;!-- --&gt;: #GDataYouTubeQuery:latitude, #GDataYouTubeQuery:longitude,
#GDataYouTubeQuery:location-radius and #GDataYouTubeQuery:has-location.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="544">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
          <parameter name="latitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="545">a location in which to return the latitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="longitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="546">a location in which to return the longitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="radius"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="547">a location in which to return the location radius, or %NULL
location, %FALSE otherwise, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_order_by"
              c:identifier="gdata_youtube_query_get_order_by"
              glib:get-property="order-by"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="599">Gets the #GDataYouTubeQuery:order-by property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-query.c"
               line="605">the order by property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="601">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_restriction"
              c:identifier="gdata_youtube_query_get_restriction"
              glib:get-property="restriction"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="640">Gets the #GDataYouTubeQuery:restriction property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-query.c"
               line="646">the restriction property, or %NULL if it is unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="642">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_safe_search"
              c:identifier="gdata_youtube_query_get_safe_search"
              glib:get-property="safe-search"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="680">Gets the #GDataYouTubeQuery:safe-search property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-query.c"
               line="686">the safe search property</doc>
          <type name="YouTubeSafeSearch" c:type="GDataYouTubeSafeSearch"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="682">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_age"
              c:identifier="gdata_youtube_query_set_age"
              glib:set-property="age"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="734">Sets the #GDataYouTubeQuery:age property of the #GDataYouTubeQuery to @age.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="736">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
          <parameter name="age" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="737">the new age</doc>
            <type name="YouTubeAge" c:type="GDataYouTubeAge"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_license"
              c:identifier="gdata_youtube_query_set_license"
              glib:set-property="license"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="771">Sets the #GDataYouTubeQuery:license property of the #GDataYouTubeQuery to the new license value, @license.

Set @license to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="773">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
          <parameter name="license"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="774">a new license value, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location"
              c:identifier="gdata_youtube_query_set_location"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="568">Sets the location-based properties of the #GDataYouTubeQuery&lt;!-- --&gt;: #GDataYouTubeQuery:latitude, #GDataYouTubeQuery:longitude,
#GDataYouTubeQuery:location-radius and #GDataYouTubeQuery:has-location.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="570">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
          <parameter name="latitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="571">the new latitude, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="longitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="572">the new longitude, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="radius" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="573">the new location radius, or &lt;code class="literal"&gt;0&lt;/code&gt;</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_order_by"
              c:identifier="gdata_youtube_query_set_order_by"
              glib:set-property="order-by"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="616">Sets the #GDataYouTubeQuery:order-by property of the #GDataYouTubeQuery to the new order by string, @order_by.

Set @order_by to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="618">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
          <parameter name="order_by"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="619">a new order by string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_restriction"
              c:identifier="gdata_youtube_query_set_restriction"
              glib:set-property="restriction"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="657">Sets the #GDataYouTubeQuery:restriction property of the #GDataYouTubeQuery to the new restriction string, @restriction.

Set @restriction to %NULL to unset the property in the query URI.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="659">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
          <parameter name="restriction"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="660">a new restriction string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_safe_search"
              c:identifier="gdata_youtube_query_set_safe_search"
              glib:set-property="safe-search"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="697">Sets the #GDataYouTubeQuery:safe-search property of the #GDataYouTubeQuery to @safe_search.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="699">a #GDataYouTubeQuery</doc>
            <type name="YouTubeQuery" c:type="GDataYouTubeQuery*"/>
          </instance-parameter>
          <parameter name="safe_search" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-query.c"
                 line="700">a new safe search level</doc>
            <type name="YouTubeSafeSearch" c:type="GDataYouTubeSafeSearch"/>
          </parameter>
        </parameters>
      </method>
      <property name="age"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                setter="set_age"
                getter="get_age"
                default-value="GDATA_YOUTUBE_AGE_ALL_TIME">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="208">Restricts the search to videos uploaded within the specified time period. To retrieve videos irrespective of their
age, set the property to %GDATA_YOUTUBE_AGE_ALL_TIME.</doc>
        <type name="YouTubeAge"/>
      </property>
      <property name="latitude"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                default-value="179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="91">The latitude of a particular location of which videos should be found. This should be used in conjunction with
#GDataYouTubeQuery:longitude; if either property is outside the valid range, neither will be used. Valid latitudes
are between &lt;code class="literal"&gt;-90&lt;/code&gt; and &lt;code class="literal"&gt;90&lt;/code&gt;0 degrees; any values of this property outside that range
will unset the property in the query URI.

If #GDataYouTubeQuery:location-radius is a non-&lt;code class="literal"&gt;0&lt;/code&gt; value, this will define a circle from which videos should be
found.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/search/list#location"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="license"
                version="0.11.0"
                writable="1"
                transfer-ownership="none"
                setter="set_license"
                getter="get_license"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="222">The content license which should be used to filter search results. If set to, for example, %GDATA_YOUTUBE_LICENSE_CC, only videos which
are Creative Commons licensed will be returned in search results. Set this to %NULL to return videos under any license.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/search/list#videoLicense"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="location-radius"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="131">The radius, in metres, of a circle from within which videos should be returned. The circle is centred on the latitude and
longitude given in #GDataYouTubeQuery:latitude and #GDataYouTubeQuery:longitude.

Set this property to &lt;code class="literal"&gt;0&lt;/code&gt; to search for specific coordinates, rather than within a given radius.

For more information, see the documentation for #GDataYouTubeQuery:latitude.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="longitude"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                default-value="179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="113">The longitude of a particular location of which videos should be found. This should be used in conjunction with
#GDataYouTubeQuery:latitude; if either property is outside the valid range, neither will be used. Valid longitudes
are between &lt;code class="literal"&gt;-180&lt;/code&gt; and &lt;code class="literal"&gt;180&lt;/code&gt; degrees; any values of this property outside that
range will unset the property in the query URI.

For more information, see the documentation for #GDataYouTubeQuery:latitude.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="order-by"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                setter="set_order_by"
                getter="get_order_by"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="149">Specifies the order of entries in a feed. Supported values are &lt;literal&gt;relevance&lt;/literal&gt;,
&lt;literal&gt;published&lt;/literal&gt;, &lt;literal&gt;viewCount&lt;/literal&gt; and &lt;literal&gt;rating&lt;/literal&gt;.

Additionally, results most relevant to a specific language can be returned by setting the property
to &lt;literal&gt;relevance_lang_&lt;replaceable&gt;languageCode&lt;/replaceable&gt;&lt;/literal&gt;, where
&lt;replaceable&gt;languageCode&lt;/replaceable&gt; is an ISO 639-1 language code, as used in #GDataYouTubeQuery:language.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/search/list#order"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="restriction"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                setter="set_restriction"
                getter="get_restriction"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="170">An ISO 3166 two-letter country code that should be used to filter
videos playable only in specific countries.

Previously, this property could also accept the client’s IP address
for country lookup. This feature is no longer supported by Google,
and will result in an error from the server if used. Use a country
code instead.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/search/list#regionCode"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="safe-search"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                setter="set_safe_search"
                getter="get_safe_search"
                default-value="GDATA_YOUTUBE_SAFE_SEARCH_MODERATE">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.c"
             line="192">Whether the search results should include restricted content as well as standard content.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/search/list#safeSearch"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="YouTubeSafeSearch"/>
      </property>
      <field name="parent">
        <type name="Query" c:type="GDataQuery"/>
      </field>
      <field name="priv">
        <type name="YouTubeQueryPrivate" c:type="GDataYouTubeQueryPrivate*"/>
      </field>
    </class>
    <record name="YouTubeQueryClass"
            c:type="GDataYouTubeQueryClass"
            glib:is-gtype-struct-for="YouTubeQuery"
            version="0.3.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-query.h"
           line="109">All the fields in the #GDataYouTubeQueryClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="124"/>
      <field name="parent" readable="0" private="1">
        <type name="QueryClass" c:type="GDataQueryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                           line="122"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                           line="123"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="YouTubeQueryPrivate"
            c:type="GDataYouTubeQueryPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/youtube/gdata-youtube-query.h"
                       line="95"/>
    </record>
    <enumeration name="YouTubeSafeSearch"
                 version="0.3.0"
                 glib:type-name="GDataYouTubeSafeSearch"
                 glib:get-type="gdata_youtube_safe_search_get_type"
                 c:type="GDataYouTubeSafeSearch">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-query.h"
           line="32">Safe search levels for removing restricted entries from query results. For more information, see the
&lt;ulink type="http" url="https://developers.google.com/youtube/v3/docs/search/list#safeSearch"&gt;online documentation&lt;/ulink&gt;.</doc>
      <member name="none"
              value="0"
              c:identifier="GDATA_YOUTUBE_SAFE_SEARCH_NONE"
              glib:nick="none"
              glib:name="GDATA_YOUTUBE_SAFE_SEARCH_NONE">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.h"
             line="34">YouTube will not perform any filtering on the search result set</doc>
      </member>
      <member name="moderate"
              value="1"
              c:identifier="GDATA_YOUTUBE_SAFE_SEARCH_MODERATE"
              glib:nick="moderate"
              glib:name="GDATA_YOUTUBE_SAFE_SEARCH_MODERATE">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.h"
             line="35">YouTube will filter some content from search results and, at the least,
will filter content that is restricted in your locale</doc>
      </member>
      <member name="strict"
              value="2"
              c:identifier="GDATA_YOUTUBE_SAFE_SEARCH_STRICT"
              glib:nick="strict"
              glib:name="GDATA_YOUTUBE_SAFE_SEARCH_STRICT">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-query.h"
             line="37">YouTube will try to exclude all restricted content from the search result set</doc>
      </member>
    </enumeration>
    <class name="YouTubeService"
           c:symbol-prefix="youtube_service"
           c:type="GDataYouTubeService"
           parent="Service"
           glib:type-name="GDataYouTubeService"
           glib:get-type="gdata_youtube_service_get_type"
           glib:type-struct="YouTubeServiceClass">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-service.h"
           line="77">All the fields in the #GDataYouTubeService structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="104"/>
      <implements name="Batchable"/>
      <constructor name="new"
                   c:identifier="gdata_youtube_service_new"
                   version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="625">Creates a new #GDataYouTubeService using the given #GDataAuthorizer. If @authorizer is %NULL, all requests are made as an unauthenticated user.
The @developer_key must be unique for your application, and as
&lt;ulink type="http" url="https://developers.google.com/youtube/registering_an_application"&gt;registered with Google&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="634">a new #GDataYouTubeService, or %NULL; unref with g_object_unref()</doc>
          <type name="YouTubeService" c:type="GDataYouTubeService*"/>
        </return-value>
        <parameters>
          <parameter name="developer_key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="627">your application's developer API key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="authorizer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="628">a #GDataAuthorizer to authorize the service's requests, or %NULL</doc>
            <type name="Authorizer" c:type="GDataAuthorizer*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_primary_authorization_domain"
                c:identifier="gdata_youtube_service_get_primary_authorization_domain"
                version="0.9.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="650">The primary #GDataAuthorizationDomain for interacting with YouTube. This will not normally need to be used, as it's used internally
by the #GDataYouTubeService methods. However, if using the plain #GDataService methods to implement custom queries or requests which libgdata
does not support natively, then this domain may be needed to authorize the requests.

The domain never changes, and is interned so that pointer comparison can be used to differentiate it from other authorization domains.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="659">the service's authorization domain</doc>
          <type name="AuthorizationDomain" c:type="GDataAuthorizationDomain*"/>
        </return-value>
      </function>
      <method name="finish_video_upload"
              c:identifier="gdata_youtube_service_finish_video_upload"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="1024">Finish off a video upload operation started by gdata_youtube_service_upload_video(), parsing the result and returning the new #GDataYouTubeVideo.

If an error occurred during the upload operation, it will have been returned during the operation (e.g. by g_output_stream_splice() or one
of the other stream methods). In such a case, %NULL will be returned but @error will remain unset. @error is only set in the case that the server
indicates that the operation was successful, but an error is encountered in parsing the result sent by the server.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="142"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="1036">the new #GDataYouTubeVideo, or %NULL; unref with g_object_unref()</doc>
          <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1026">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="upload_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1027">the #GDataUploadStream from the operation</doc>
            <type name="UploadStream" c:type="GDataUploadStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_categories"
              c:identifier="gdata_youtube_service_get_categories"
              version="0.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="1077">Gets a list of the categories currently in use on YouTube. The returned #GDataAPPCategories contains a list of #GDataYouTubeCategorys which
enumerate the current YouTube categories.

The category labels (#GDataCategory:label) are localised based on the value of #GDataService:locale.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="147"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="1088">a #GDataAPPCategories, or %NULL; unref with g_object_unref()</doc>
          <type name="APPCategories" c:type="GDataAPPCategories*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1079">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1080">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_categories_async"
              c:identifier="gdata_youtube_service_get_categories_async"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="1149">Gets a list of the categories currently in use on YouTube. @self is reffed when this function is called, so can safely be unreffed after this
function returns.

For more details, see gdata_youtube_service_get_categories(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_youtube_service_get_categories_finish() to get the results of the
operation.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1151">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1152">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1153">a #GAsyncReadyCallback to call when the request is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1154">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_categories_finish"
              c:identifier="gdata_youtube_service_get_categories_finish"
              version="0.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="1180">Finishes an asynchronous request for a list of categories on YouTube, as started with gdata_youtube_service_get_categories_async().</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="151"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="1188">a #GDataAPPCategories, or %NULL; unref with g_object_unref()</doc>
          <type name="APPCategories" c:type="GDataAPPCategories*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1182">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1183">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_developer_key"
              c:identifier="gdata_youtube_service_get_developer_key"
              glib:get-property="developer-key">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="1062">Gets the #GDataYouTubeService:developer-key property from the #GDataYouTubeService.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="1068">the developer key property</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="1064">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="query_related"
              c:identifier="gdata_youtube_service_query_related"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="855">Queries the service for videos related to @video. The algorithm determining which videos are related is on the server side.

Parameters and other errors are as for gdata_service_query().</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="131"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="869">a #GDataFeed of query results; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="857">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="858">a #GDataYouTubeVideo for which to find related videos</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="859">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="860">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="861">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="862">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_related_async"
              c:identifier="gdata_youtube_service_query_related_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="901">Queries the service for videos related to @video. The algorithm determining which videos are related is on the server side.
@self and @query are both reffed when this function is called, so can safely be freed after this function returns.

For more details, see gdata_youtube_service_query_related(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_query_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="903">a #GDataService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="904">a #GDataYouTubeVideo for which to find related videos</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="905">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="906">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="907">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="908">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="909">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="911">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="912">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_standard_feed"
              c:identifier="gdata_youtube_service_query_standard_feed"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="682">Queries the service's standard @feed_type feed to build a #GDataFeed.

Note that with the port from v2 to v3 of the YouTube API in libgdata
0.17.0, all feed types except %GDATA_YOUTUBE_MOST_POPULAR_FEED have been
deprecated. Other feed types will now transparently return
%GDATA_YOUTUBE_MOST_POPULAR_FEED, limited to the past 24 hours.

Parameters and errors are as for gdata_service_query().</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="113"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="701">a #GDataFeed of query results, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="684">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="feed_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="685">the feed type to query, from #GDataYouTubeStandardFeedType</doc>
            <type name="YouTubeStandardFeedType"
                  c:type="GDataYouTubeStandardFeedType"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="686">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="687">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="688">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="689">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_standard_feed_async"
              c:identifier="gdata_youtube_service_query_standard_feed_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="728">Queries the service's standard @feed_type feed to build a #GDataFeed. @self and
@query are both reffed when this function is called, so can safely be freed after this function returns.

For more details, see gdata_youtube_service_query_standard_feed(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_query_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="730">a #GDataService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="feed_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="731">the feed type to query, from #GDataYouTubeStandardFeedType</doc>
            <type name="YouTubeStandardFeedType"
                  c:type="GDataYouTubeStandardFeedType"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="732">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="733">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="734">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="735">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="736">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="738">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="739">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_videos"
              c:identifier="gdata_youtube_service_query_videos"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="775">Queries the service for videos matching the parameters set on the #GDataQuery. This searches site-wide, and imposes no other restrictions or
parameters on the query.

Parameters and errors are as for gdata_service_query().</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="123"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="789">a #GDataFeed of query results, or %NULL; unref with g_object_unref()</doc>
          <type name="Feed" c:type="GDataFeed*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="777">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="778">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="779">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="780">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="781">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_videos_async"
              c:identifier="gdata_youtube_service_query_videos_async"
              version="0.9.1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="811">Queries the service for videos matching the parameters set on the #GDataQuery. This searches site-wide, and imposes no other restrictions or
parameters on the query. @self and @query are both reffed when this function is called, so can safely be freed after this function returns.

For more details, see gdata_youtube_service_query_videos(), which is the synchronous version of this function.

When the operation is finished, @callback will be called. You can then call gdata_service_query_finish()
to get the results of the operation.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="813">a #GDataService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="814">a #GDataQuery with the query parameters, or %NULL</doc>
            <type name="Query" c:type="GDataQuery*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="815">optional #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="816">a #GDataQueryProgressCallback to call when an entry is loaded, or %NULL</doc>
            <type name="QueryProgressCallback"
                  c:type="GDataQueryProgressCallback"/>
          </parameter>
          <parameter name="progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="817">data to pass to the @progress_callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_progress_user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="818">the function to call when @progress_callback will not be called any more, or %NULL. This function will be
called with @progress_user_data as a parameter and can be used to free any memory allocated for it.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="820">a #GAsyncReadyCallback to call when authentication is finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="821">data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_video"
              c:identifier="gdata_youtube_service_upload_video"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="952">Uploads a video to YouTube, using the properties from @video and the file data written to the resulting #GDataUploadStream.

If @video has already been inserted, a %GDATA_SERVICE_ERROR_ENTRY_ALREADY_INSERTED error will be returned. If no user is authenticated
with the service, %GDATA_SERVICE_ERROR_AUTHENTICATION_REQUIRED will be returned.

The stream returned by this function should be written to using the standard #GOutputStream methods, asynchronously or synchronously. Once the stream
is closed (using g_output_stream_close()), gdata_youtube_service_finish_video_upload() should be called on it to parse and return the updated
#GDataYouTubeVideo for the uploaded video. This must be done, as @video isn't updated in-place.

In order to cancel the upload, a #GCancellable passed in to @cancellable must be cancelled using g_cancellable_cancel(). Cancelling the individual
#GOutputStream operations on the #GDataUploadStream will not cancel the entire upload; merely the write or close operation in question. See the
#GDataUploadStream:cancellable for more details.

Any upload errors will be thrown by the stream methods, and may come from the #GDataServiceError domain.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                         line="139"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-service.c"
               line="976">a #GDataUploadStream to write the video data to, or %NULL; unref with g_object_unref()</doc>
          <type name="UploadStream" c:type="GDataUploadStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="954">a #GDataYouTubeService</doc>
            <type name="YouTubeService" c:type="GDataYouTubeService*"/>
          </instance-parameter>
          <parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="955">a #GDataYouTubeVideo to insert</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </parameter>
          <parameter name="slug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="956">the filename to give to the uploaded file</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="957">the content type of the uploaded data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-service.c"
                 line="958">a #GCancellable for the entire upload stream, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="developer-key"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_developer_key"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.c"
             line="314">The developer key your application has registered with the YouTube API. For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/registering_an_application"&gt;online documentation&lt;/ulink&gt;.

With the port from v2 to v3 of the YouTube API in libgdata
0.17.0, it might be necessary to update your application’s
developer key.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Service" c:type="GDataService"/>
      </field>
      <field name="priv">
        <type name="YouTubeServicePrivate"
              c:type="GDataYouTubeServicePrivate*"/>
      </field>
    </class>
    <record name="YouTubeServiceClass"
            c:type="GDataYouTubeServiceClass"
            glib:is-gtype-struct-for="YouTubeService">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-service.h"
           line="87">All the fields in the #GDataYouTubeServiceClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="104"/>
      <field name="parent" readable="0" private="1">
        <type name="ServiceClass" c:type="GDataServiceClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                           line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                           line="99"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved2" introspectable="0">
        <callback name="_g_reserved2">
          <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved3" introspectable="0">
        <callback name="_g_reserved3">
          <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved4" introspectable="0">
        <callback name="_g_reserved4">
          <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                           line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved5" introspectable="0">
        <callback name="_g_reserved5">
          <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                           line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="YouTubeServiceError"
                 glib:type-name="GDataYouTubeServiceError"
                 glib:get-type="gdata_youtube_service_error_get_type"
                 c:type="GDataYouTubeServiceError"
                 glib:error-domain="gdata-youtube-service-error-quark">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-service.h"
           line="50">Error codes for #GDataYouTubeService operations.</doc>
      <member name="api_quota_exceeded"
              value="0"
              c:identifier="GDATA_YOUTUBE_SERVICE_ERROR_API_QUOTA_EXCEEDED"
              glib:nick="api-quota-exceeded"
              glib:name="GDATA_YOUTUBE_SERVICE_ERROR_API_QUOTA_EXCEEDED">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.h"
             line="52">the API request quota for this developer account has been exceeded</doc>
      </member>
      <member name="entry_quota_exceeded"
              value="1"
              c:identifier="GDATA_YOUTUBE_SERVICE_ERROR_ENTRY_QUOTA_EXCEEDED"
              glib:nick="entry-quota-exceeded"
              glib:name="GDATA_YOUTUBE_SERVICE_ERROR_ENTRY_QUOTA_EXCEEDED">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.h"
             line="53">the entry (e.g. video) quota for this user account has been exceeded</doc>
      </member>
      <member name="channel_required"
              value="2"
              c:identifier="GDATA_YOUTUBE_SERVICE_ERROR_CHANNEL_REQUIRED"
              glib:nick="channel-required"
              glib:name="GDATA_YOUTUBE_SERVICE_ERROR_CHANNEL_REQUIRED">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.h"
             line="54">the currently authenticated user doesn't have a YouTube channel, but the current action requires one;
if this error is received, inform the user that they need a YouTube channel, and provide a link to
&lt;ulink type="http" url="https://www.youtube.com/create_channel"&gt;https://www.youtube.com/create_channel&lt;/ulink&gt;</doc>
      </member>
      <function name="quark" c:identifier="gdata_youtube_service_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="YouTubeServicePrivate"
            c:type="GDataYouTubeServicePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/youtube/gdata-youtube-service.h"
                       line="75"/>
    </record>
    <enumeration name="YouTubeStandardFeedType"
                 glib:type-name="GDataYouTubeStandardFeedType"
                 glib:get-type="gdata_youtube_standard_feed_type_get_type"
                 c:type="GDataYouTubeStandardFeedType">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-service.h"
           line="34">Standard feed types for standard feed queries with
gdata_youtube_service_query_standard_feed(). For more information, see the
&lt;ulink type="http" url="https://developers.google.com/youtube/2.0/developers_guide_protocol_video_feeds#Standard_feeds"&gt;online
documentation&lt;/ulink&gt;.</doc>
      <member name="feed"
              value="0"
              c:identifier="GDATA_YOUTUBE_MOST_POPULAR_FEED"
              glib:nick="feed"
              glib:name="GDATA_YOUTUBE_MOST_POPULAR_FEED">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-service.h"
             line="36">This feed contains the most popular YouTube
  videos, selected using an algorithm that combines many different signals to
  determine overall popularity. As of version 0.17.0, this is the only
  supported feed type.</doc>
      </member>
    </enumeration>
    <class name="YouTubeState"
           c:symbol-prefix="youtube_state"
           c:type="GDataYouTubeState"
           parent="Parsable"
           glib:type-name="GDataYouTubeState"
           glib:get-type="gdata_youtube_state_get_type"
           glib:type-struct="YouTubeStateClass">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-state.h"
           line="39">All the fields in the #GDataYouTubeState structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="64"/>
      <method name="get_help_uri"
              c:identifier="gdata_youtube_state_get_help_uri"
              glib:get-property="help-uri"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="251">Gets the #GDataYouTubeState:help-uri property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-state.c"
               line="257">the help URI, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-state.c"
                 line="253">a #GDataYouTubeState</doc>
            <type name="YouTubeState" c:type="GDataYouTubeState*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_message"
              c:identifier="gdata_youtube_state_get_message"
              glib:get-property="message"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="268">Gets the #GDataYouTubeState:message property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-state.c"
               line="274">the status message, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-state.c"
                 line="270">a #GDataYouTubeState</doc>
            <type name="YouTubeState" c:type="GDataYouTubeState*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gdata_youtube_state_get_name"
              glib:get-property="name"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="217">Gets the #GDataYouTubeState:name property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-state.c"
               line="223">the status name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-state.c"
                 line="219">a #GDataYouTubeState</doc>
            <type name="YouTubeState" c:type="GDataYouTubeState*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reason_code"
              c:identifier="gdata_youtube_state_get_reason_code"
              glib:get-property="reason-code"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="234">Gets the #GDataYouTubeState:reason-code property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-state.c"
               line="240">the status reason code, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-state.c"
                 line="236">a #GDataYouTubeState</doc>
            <type name="YouTubeState" c:type="GDataYouTubeState*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="help-uri"
                version="0.4.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_help_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="106">A URI for a YouTube Help Center page that may help the developer or the video owner to diagnose
the reason that an upload failed or was rejected.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_yt:state"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="message"
                version="0.4.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_message"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="125">A human-readable description of why the video failed to upload.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_yt:state"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                version="0.4.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="70">The name of the status of the unpublished video. Valid values are: "processing", "restricted", "deleted", "rejected" and "failed".

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_yt:state"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="reason-code"
                version="0.4.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_reason_code"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-state.c"
             line="88">The reason code explaining why the video failed to upload.

For more information, see the
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_yt:state"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Parsable" c:type="GDataParsable"/>
      </field>
      <field name="priv">
        <type name="YouTubeStatePrivate" c:type="GDataYouTubeStatePrivate*"/>
      </field>
    </class>
    <record name="YouTubeStateClass"
            c:type="GDataYouTubeStateClass"
            glib:is-gtype-struct-for="YouTubeState"
            version="0.4.0">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-state.h"
           line="49">All the fields in the #GDataYouTubeStateClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="64"/>
      <field name="parent" readable="0" private="1">
        <type name="ParsableClass" c:type="GDataParsableClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="YouTubeStatePrivate"
            c:type="GDataYouTubeStatePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/youtube/gdata-youtube-state.h"
                       line="37"/>
    </record>
    <class name="YouTubeVideo"
           c:symbol-prefix="youtube_video"
           c:type="GDataYouTubeVideo"
           parent="Entry"
           glib:type-name="GDataYouTubeVideo"
           glib:get-type="gdata_youtube_video_get_type"
           glib:type-struct="YouTubeVideoClass">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="149">All the fields in the #GDataYouTubeVideo structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="172"/>
      <implements name="Commentable"/>
      <constructor name="new" c:identifier="gdata_youtube_video_new">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1495">Creates a new #GDataYouTubeVideo with the given ID and default properties.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="176"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1501">a new #GDataYouTubeVideo; unref with g_object_unref()</doc>
          <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1497">the video's ID, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_video_id_from_uri"
                c:identifier="gdata_youtube_video_get_video_id_from_uri"
                version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2158">Extracts a video ID from a YouTube video player URI. The video ID is in the same form as returned by
gdata_youtube_video_get_video_id(), and the @video_uri should be in the same form as returned by
gdata_youtube_video_get_player_uri().

The function will validate whether the URI actually points to a hostname containing &lt;literal&gt;youtube&lt;/literal&gt;
(e.g. &lt;literal&gt;youtube.com&lt;/literal&gt;), and will return %NULL if it doesn't.

For example:
&lt;informalexample&gt;&lt;programlisting&gt;
video_id = gdata_youtube_video_get_video_id_from_uri ("http://www.youtube.com/watch?v=BH_vwsyCrTc&amp;feature=featured");
g_message ("Video ID: %s", video_id); /&lt;!-- --&gt;* Should print: BH_vwsyCrTc *&lt;!-- --&gt;/
g_free (video_id);
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="207"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="2178">the video ID, or %NULL; free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="video_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2160">a YouTube video player URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_access_control"
              c:identifier="gdata_youtube_video_get_access_control"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1573">Gets the permission associated with the given @action on the #GDataYouTubeVideo. If the given @action
doesn't have a permission set on the video, %GDATA_YOUTUBE_PERMISSION_DENIED is returned.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1581">the permission associated with @action, or %GDATA_YOUTUBE_PERMISSION_DENIED</doc>
          <type name="YouTubePermission" c:type="GDataYouTubePermission"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1575">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1576">the action whose permission should be returned</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_aspect_ratio"
              c:identifier="gdata_youtube_video_get_aspect_ratio"
              glib:get-property="aspect-ratio"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2225">Gets the #GDataYouTubeVideo:aspect-ratio property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="202"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="2231">the aspect ratio property, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2227">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_category"
              c:identifier="gdata_youtube_video_get_category"
              glib:get-property="category">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1856">Gets the #GDataYouTubeVideo:category property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1862">a #GDataMediaCategory giving the video's single and mandatory category</doc>
          <type name="MediaCategory" c:type="GDataMediaCategory*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1858">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_coordinates"
              c:identifier="gdata_youtube_video_get_coordinates"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2264">Gets the #GDataYouTubeVideo:latitude and #GDataYouTubeVideo:longitude properties, setting the out parameters to them. If either latitude or
longitude is %NULL, that parameter will not be set. If the coordinates are unset, @latitude and @longitude will be set to %G_MAXDOUBLE.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="204"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2266">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="latitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2267">return location for the latitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="longitude"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2268">return location for the longitude, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gdata_youtube_video_get_description"
              glib:get-property="description">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1893">Gets the #GDataYouTubeVideo:description property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1899">the video's long text description, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1895">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_duration"
              c:identifier="gdata_youtube_video_get_duration"
              glib:get-property="duration">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1940">Gets the #GDataYouTubeVideo:duration property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="195"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1946">the video duration in seconds, or &lt;code class="literal"&gt;0&lt;/code&gt; if unknown</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1942">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_favorite_count"
              c:identifier="gdata_youtube_video_get_favorite_count"
              glib:get-property="favorite-count">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1524">Gets the #GDataYouTubeVideo:favorite-count property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1530">the number of users who have added the video to their favorites list</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1526">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_keywords"
              c:identifier="gdata_youtube_video_get_keywords"
              glib:get-property="keywords">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1648">Gets the #GDataYouTubeVideo:keywords property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="185"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1654">a %NULL-terminated array of words associated with the video</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1650">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="gdata_youtube_video_get_location"
              glib:get-property="location">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1539">Gets the #GDataYouTubeVideo:location property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1545">a string describing the video's location, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1541">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_rating"
              c:identifier="gdata_youtube_video_get_media_rating"
              version="0.10.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1808">Returns the rating of the given type for the video, if one exists. For example, this could be a film rating awarded by the MPAA; or a simple
rating specifying whether the video contains adult content.

The valid values for @rating_type are: %GDATA_YOUTUBE_RATING_TYPE_MPAA and %GDATA_YOUTUBE_RATING_TYPE_V_CHIP.
Further values may be added in future; if an unknown rating type is passed to the function, %NULL will be returned.

The possible return values depend on what's passed to @rating_type. Valid values for each rating type are listed in the documentation for the
rating types.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1822">the rating of the video for the given @rating_type, or %NULL if the video isn't rated with that type (or the type is unknown)</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1810">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="rating_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1811">the type of rating to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_player_uri"
              c:identifier="gdata_youtube_video_get_player_uri"
              glib:get-property="player-uri">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1684">Gets the #GDataYouTubeVideo:player-uri property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1690">a URI where the video is playable in a web browser, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1686">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rating" c:identifier="gdata_youtube_video_get_rating">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1620">Gets various properties of the ratings on the video.

Note that this property may not be retrieved when querying for multiple
videos at once, but is guaranteed to be retrieved when querying with
gdata_service_query_single_entry_async().</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1622">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1623">return location for the minimum rating value, or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1624">return location for the maximum rating value, or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="count"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1625">return location for the number of ratings, or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="average"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1626">return location for the average rating value, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_recorded"
              c:identifier="gdata_youtube_video_get_recorded"
              glib:get-property="recorded"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2120">Gets the #GDataYouTubeVideo:recorded property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="200"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="2126">the UNIX timestamp for the time the video was recorded, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2122">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state"
              c:identifier="gdata_youtube_video_get_state"
              glib:get-property="state">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2079">Gets the #GDataYouTubeVideo:state property.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#status.uploadStatus"&gt;online documentation&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="2088">a #GDataYouTubeState showing the state of the video, or %NULL</doc>
          <type name="YouTubeState" c:type="GDataYouTubeState*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2081">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_thumbnails"
              c:identifier="gdata_youtube_video_get_thumbnails">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1925">Gets a list of the thumbnails available for the video.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="194"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1931">a #GList of #GDataMediaThumbnails, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MediaThumbnail"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1927">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uploaded"
              c:identifier="gdata_youtube_video_get_uploaded"
              glib:get-property="uploaded">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1985">Gets the #GDataYouTubeVideo:uploaded property. If the property is unset, &lt;code class="literal"&gt;-1&lt;/code&gt; will be returned.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1991">the UNIX timestamp for the time the video was uploaded, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1987">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view_count"
              c:identifier="gdata_youtube_video_get_view_count"
              glib:get-property="view-count">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1509">Gets the #GDataYouTubeVideo:view-count property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1515">the number of times the video has been viewed</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1511">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_private" c:identifier="gdata_youtube_video_is_private">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1955">Gets the #GDataYouTubeVideo:is-private property.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="196"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1961">%TRUE if the video is private, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1957">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_restricted_in_country"
              c:identifier="gdata_youtube_video_is_restricted_in_country"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1724">Checks whether viewing of the video is restricted in @country, either by its content rating, or by the request of the producer.
The return value from this function is purely informational, and no obligation is assumed.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/services/youtube/gdata-youtube-video.c"
               line="1732">%TRUE if the video is restricted in @country, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1726">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="country" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1727">an ISO 3166 two-letter country code to check</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_access_control"
              c:identifier="gdata_youtube_video_set_access_control"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1598">Sets the permission associated with @action on the #GDataYouTubeVideo, allowing restriction or derestriction of various
operations on YouTube videos.

Note that only %GDATA_YOUTUBE_ACTION_RATE and %GDATA_YOUTUBE_ACTION_COMMENT actions can have the %GDATA_YOUTUBE_PERMISSION_MODERATED permission.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1600">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1601">the action whose permission is being set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="permission" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1602">the permission to give to the action</doc>
            <type name="YouTubePermission" c:type="GDataYouTubePermission"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_aspect_ratio"
              c:identifier="gdata_youtube_video_set_aspect_ratio"
              glib:set-property="aspect-ratio"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2245">Sets the #GDataYouTubeVideo:aspect-ratio property to specify the video's aspect ratio.
If @aspect_ratio is %NULL, the property will be unset.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="203"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2247">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="aspect_ratio"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2248">the aspect ratio property, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_category"
              c:identifier="gdata_youtube_video_set_category"
              glib:set-property="category">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1871">Sets the #GDataYouTubeVideo:category property to the new category, @category, and increments its reference count.

@category must not be %NULL. For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#snippet.categoryId"&gt;online documentation&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1873">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1874">a new #GDataMediaCategory</doc>
            <type name="MediaCategory" c:type="GDataMediaCategory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_coordinates"
              c:identifier="gdata_youtube_video_set_coordinates"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2288">Sets the #GDataYouTubeVideo:latitude and #GDataYouTubeVideo:longitude properties to @latitude and @longitude respectively.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2290">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="latitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2291">the video's new latitude coordinate, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="longitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2292">the video's new longitude coordinate, or %G_MAXDOUBLE</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gdata_youtube_video_set_description"
              glib:set-property="description">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1908">Sets the #GDataYouTubeVideo:description property to the new description, @description.

Set @description to %NULL to unset the video's description.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="193"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1910">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1911">the video's new description, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_private"
              c:identifier="gdata_youtube_video_set_is_private"
              glib:set-property="is-private">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1970">Sets the #GDataYouTubeVideo:is-private property to decide whether the video is publicly viewable.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="197"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1972">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="is_private" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1973">whether the video is private</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keywords"
              c:identifier="gdata_youtube_video_set_keywords"
              glib:set-property="keywords">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1663">Sets the #GDataYouTubeVideo:keywords property to the new keyword list, @keywords.

@keywords must not be %NULL. For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#snippet.tags[]"&gt;online documentation&lt;/ulink&gt;.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="186"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1665">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="keywords" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1666">a new %NULL-terminated array of keywords</doc>
            <array c:type="const gchar* const*">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_location"
              c:identifier="gdata_youtube_video_set_location"
              glib:set-property="location">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="1554">Sets the #GDataYouTubeVideo:location property to the new location string, @location.

Set @location to %NULL to unset the property in the video.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="181"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1556">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="location"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="1557">a new location, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_recorded"
              c:identifier="gdata_youtube_video_set_recorded"
              glib:set-property="recorded"
              version="0.3.0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="2137">Sets the #GDataYouTubeVideo:recorded property to the new recorded time, @recorded.

Set @recorded to &lt;code class="literal"&gt;-1&lt;/code&gt; to unset the video's recorded time.</doc>
        <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                         line="201"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2139">a #GDataYouTubeVideo</doc>
            <type name="YouTubeVideo" c:type="GDataYouTubeVideo*"/>
          </instance-parameter>
          <parameter name="recorded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdata/services/youtube/gdata-youtube-video.c"
                 line="2140">the video's new recorded time, or &lt;code class="literal"&gt;-1&lt;/code&gt;</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="aspect-ratio"
                version="0.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_aspect_ratio"
                getter="get_aspect_ratio"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="407">The aspect ratio of the video. A %NULL value means the aspect ratio is unknown (it could still be a widescreen video). A value of
%GDATA_YOUTUBE_ASPECT_RATIO_WIDESCREEN means the video is definitely widescreen.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="average-rating"
                transfer-ownership="none"
                default-value="0.000000">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="267">The average rating of the video, over all the ratings it's received.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#statistics.likeCount"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="category"
                writable="1"
                transfer-ownership="none"
                setter="set_category"
                getter="get_category">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="306">Specifies a genre or developer tag that describes the video.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#snippet.categoryId"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="MediaCategory"/>
      </property>
      <property name="description"
                writable="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="320">A summary or description of the video.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#snippet.description"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="duration"
                transfer-ownership="none"
                getter="get_duration"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="334">The duration of the video in seconds.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#contentDetails.duration"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="favorite-count"
                transfer-ownership="none"
                getter="get_favorite_count"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="197">The number of users who have added the video to their favorites.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#statistics.favoriteCount"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="is-private"
                writable="1"
                transfer-ownership="none"
                setter="set_is_private"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="keywords"
                writable="1"
                transfer-ownership="none"
                setter="set_keywords"
                getter="get_keywords">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="281">A %NULL-terminated array of words associated with the video.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#snippet.tags[]"&gt;online documentation&lt;/ulink&gt;.</doc>
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="latitude"
                version="0.8.0"
                writable="1"
                transfer-ownership="none"
                default-value="179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="421">The location as a latitude coordinate associated with this video. Valid latitudes range from &lt;code class="literal"&gt;-90.0&lt;/code&gt;
to &lt;code class="literal"&gt;90.0&lt;/code&gt; inclusive. Set to a value
outside this range to unset the location.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/youtube/v3/docs/videos#recordingDetails.location.latitude"&gt;
online documentation&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="location"
                writable="1"
                transfer-ownership="none"
                setter="set_location"
                getter="get_location"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="211">Descriptive text about the location where the video was taken.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#recordingDetails.locationDescription"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="longitude"
                version="0.8.0"
                writable="1"
                transfer-ownership="none"
                default-value="179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="440">The location as a longitude coordinate associated with this video. Valid longitudes range from &lt;code class="literal"&gt;-180.0&lt;/code&gt;
to &lt;code class="literal"&gt;180.0&lt;/code&gt; inclusive. Set to a value
outside this range to unset the location.

For more information, see the
&lt;ulink type="http" url="https://developers.google.com/youtube/v3/docs/videos#recordingDetails.location.longitude"&gt;
online documentation&lt;/ulink&gt;.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="max-rating" transfer-ownership="none" default-value="5">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="239">The maximum allowed rating for the video.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#statistics.likeCount"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="min-rating" transfer-ownership="none" default-value="1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="225">The minimum allowed rating for the video.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#statistics.likeCount"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="player-uri"
                transfer-ownership="none"
                getter="get_player_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="295">A URI for a browser-based media player for the full-length video (i.e. the video's page on YouTube).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="rating-count"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="253">The number of times the video has been rated.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#statistics.likeCount"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="recorded"
                version="0.3.0"
                writable="1"
                transfer-ownership="none"
                setter="set_recorded"
                getter="get_recorded"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="391">Specifies the time the video was originally recorded.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#recordingDetails.recordingDate"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="state" transfer-ownership="none" getter="get_state">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="376">Information describing the state of the video. If this is non-%NULL, the video is not playable.
It points to a #GDataYouTubeState.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#status.uploadStatus"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="YouTubeState"/>
      </property>
      <property name="uploaded"
                transfer-ownership="none"
                getter="get_uploaded"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="362">Specifies the time the video was originally uploaded to YouTube.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#snippet.publishedAt"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="view-count"
                transfer-ownership="none"
                getter="get_view_count"
                default-value="0">
        <doc xml:space="preserve"
             filename="gdata/services/youtube/gdata-youtube-video.c"
             line="183">The number of times the video has been viewed.

For more information, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/videos#statistics.viewCount"&gt;online documentation&lt;/ulink&gt;.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="Entry" c:type="GDataEntry"/>
      </field>
      <field name="priv">
        <type name="YouTubeVideoPrivate" c:type="GDataYouTubeVideoPrivate*"/>
      </field>
    </class>
    <record name="YouTubeVideoClass"
            c:type="GDataYouTubeVideoClass"
            glib:is-gtype-struct-for="YouTubeVideo">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.h"
           line="159">All the fields in the #GDataYouTubeVideoClass structure are private and should never be accessed directly.</doc>
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="172"/>
      <field name="parent" readable="0" private="1">
        <type name="EntryClass" c:type="GDataEntryClass"/>
      </field>
      <field name="_g_reserved0" introspectable="0">
        <callback name="_g_reserved0">
          <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                           line="170"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_g_reserved1" introspectable="0">
        <callback name="_g_reserved1">
          <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                           line="171"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="YouTubeVideoPrivate"
            c:type="GDataYouTubeVideoPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gdata/services/youtube/gdata-youtube-video.h"
                       line="147"/>
    </record>
    <function name="color_from_hexadecimal"
              c:identifier="gdata_color_from_hexadecimal"
              moved-to="Color.from_hexadecimal">
      <doc xml:space="preserve"
           filename="gdata/gdata-types.c"
           line="62">Parses @hexadecimal and returns a #GDataColor describing it in @color.

@hexadecimal should be in the form &lt;literal&gt;#&lt;replaceable&gt;rr&lt;/replaceable&gt;&lt;replaceable&gt;gg&lt;/replaceable&gt;&lt;replaceable&gt;bb&lt;/replaceable&gt;&lt;/literal&gt;,
where &lt;replaceable&gt;rr&lt;/replaceable&gt; is a two-digit hexadecimal red intensity value, &lt;replaceable&gt;gg&lt;/replaceable&gt; is green
and &lt;replaceable&gt;bb&lt;/replaceable&gt; is blue. The hash is optional.</doc>
      <source-position filename="gdata/gdata-types.h" line="45"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdata/gdata-types.c"
             line="73">%TRUE on success, %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="hexadecimal" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-types.c"
               line="64">a hexadecimal color string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="color"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdata/gdata-types.c"
               line="65">a #GDataColor</doc>
          <type name="Color" c:type="GDataColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="documents_service_error_quark"
              c:identifier="gdata_documents_service_error_quark"
              moved-to="DocumentsServiceError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <docsection name="gdata-access-handler">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-handler.c"
           line="21">#GDataAccessHandler is an interface which can be implemented by #GDataEntrys which can have their permissions controlled by an
access control list (ACL). It has a set of methods which allow the #GDataAccessRules for the access handler/entry to be retrieved,
added, modified and deleted, with immediate effect.

For an example of inserting an access rule into an ACL, see the documentation for #GDataAccessRule.

When implementing the interface, classes must implement an &lt;function&gt;is_owner_rule&lt;/function&gt; function. It's optional to implement a
&lt;function&gt;get_authorization_domain&lt;/function&gt; function, but if it's not implemented, any operations on the access handler's
#GDataAccessRules will be performed unauthorized (i.e. as if by a non-logged-in user). This will not usually work.</doc>
    </docsection>
    <docsection name="gdata-access-rule">
      <doc xml:space="preserve"
           filename="gdata/gdata-access-rule.c"
           line="22">#GDataAccessRule is a subclass of #GDataEntry to represent a generic access rule from an access control list (ACL).
It is returned by the ACL methods implemented in the #GDataAccessHandler interface.

Access rules should be inserted to the %GDATA_LINK_ACCESS_CONTROL_LIST URI of the feed or entry they should be applied to. This will return a
%GDATA_SERVICE_ERROR_CONFLICT error if a rule already exists on that feed or entry for that scope type and value.

&lt;example&gt;
	&lt;title&gt;Adding a Rule to the Access Control List for an Entry&lt;/title&gt;
	&lt;programlisting&gt;
	GDataAuthorizationDomain *domain;
GDataService *service;
GDataEntry *entry;
GDataFeed *acl_feed;
GDataAccessRule *rule, *new_rule;
GError *error = NULL;

domain = gdata_documents_service_get_primary_authorization_domain ();

/&lt;!-- --&gt;* Retrieve a GDataEntry which will have a new rule inserted into its ACL. *&lt;!-- --&gt;/
service = build_my_service ();
entry = get_the_entry (service);

/&lt;!-- --&gt;* Create and insert a new access rule for example@gmail.com which grants them _no_ permissions on the entry.
 * In a real application, the GDataEntry subclass would define its own access roles which are more useful. For example,
 * GDataDocumentsEntry defines access roles for users who can read (but not write) a Google Document, and users who
 * can also write to the document. *&lt;!-- --&gt;/
rule = gdata_access_rule_new (NULL);
gdata_access_rule_set_role (rule, GDATA_ACCESS_ROLE_NONE); /&lt;!-- --&gt;* or, for example, GDATA_DOCUMENTS_ACCESS_ROLE_READER *&lt;!-- --&gt;/
gdata_access_rule_set_scope (rule, GDATA_ACCESS_SCOPE_USER, "example@gmail.com"); /&lt;!-- --&gt;* e-mail address of the user the ACL applies to *&lt;!-- --&gt;/

acl_link = gdata_entry_look_up_link (entry, GDATA_LINK_ACCESS_CONTROL_LIST);
new_rule = GDATA_ACCESS_RULE (gdata_service_insert_entry (GDATA_SERVICE (service), domain, gdata_link_get_uri (acl_link),
                                                          GDATA_ENTRY (rule), NULL, &amp;error));

g_object_unref (rule);
g_object_unref (entry);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error inserting access rule: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Potentially do something with the new_rule here, such as store its ID for later use. *&lt;!-- --&gt;/

g_object_unref (new_rule);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-app-categories">
      <doc xml:space="preserve"
           filename="gdata/app/gdata-app-categories.c"
           line="20">#GDataAPPCategories is a list of categories (#GDataCategory) returned as the result of querying an
&lt;ulink type="http" url="http://www.atomenabled.org/developers/protocol/#category"&gt;Atom Publishing Protocol Category Document&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-author">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-author.c"
           line="20">#GDataAuthor represents a "author" element from the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php"&gt;Atom specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-authorization-domain">
      <doc xml:space="preserve"
           filename="gdata/gdata-authorization-domain.c"
           line="20">A #GDataAuthorizationDomain represents a single data domain which a user can authorize libgdata to access. This might be a domain covering the
whole of the user's Google Contacts account, for example. Typically, #GDataServices map to #GDataAuthorizationDomains in a one-to-one
fashion, though some services (such as #GDataDocumentsService) use multiple authorization domains.

The #GDataAuthorizationDomainss used by a service can be retrieved using gdata_service_get_authorization_domains(). The set of domains
used by a given service is static and will never change at runtime.

#GDataAuthorizationDomains are used by a #GDataAuthorizer instance to request authorization to interact with data in those domains when
first authenticating and authorizing with the online service. Typically, a given #GDataAuthorizer will be passed a set of domains (or a service
type, from which it can retrieve the service's set of domains) at construction time, and will use those domains when initially asking the user for
authorization and whenever the authorization is refreshed afterwards. It's not expected that the set of domains used by a #GDataAuthorizer will
change after construction time.

Note that it's not expected that #GDataAuthorizationDomains will have to be constructed manually. All #GDataServices should provide
accessor functions to return instances of all the authorization domains they support.</doc>
    </docsection>
    <docsection name="gdata-authorizer">
      <doc xml:space="preserve"
           filename="gdata/gdata-authorizer.c"
           line="20">The #GDataAuthorizer interface provides a uniform way to implement authentication and authorization processes for use by #GDataServices.
Client code will construct a new #GDataAuthorizer instance of their choosing, such as #GDataOAuth2Authorizer, for
the #GDataServices which will be used by the client, then authenticates and authorizes with the #GDataAuthorizer instead of the
#GDataService. The #GDataService then uses the #GDataAuthorizer to authorize individual network requests using whatever authorization token was
returned to the #GDataAuthorizer by the Google Accounts service.

All #GDataAuthorizer implementations are expected to operate against a set of #GDataAuthorizationDomains which are provided to the
authorizer at construction time. These domains specify which data domains the client expects to access using the #GDataServices they
have using the #GDataAuthorizer instance. Following the principle of least privilege, the set of domains should be the minimum such set of domains
which still allows the client to operate normally. Note that implementations of #GDataAuthorizationDomain may display the list of requested
authorization domains to the user for verification before authorization is granted.

#GDataAuthorizer implementations are provided for some of the standard authorization processes supported by Google for installed applications, as
listed in their &lt;ulink type="http" url="http://code.google.com/apis/accounts/docs/GettingStarted.html"&gt;online documentation&lt;/ulink&gt;:
&lt;itemizedlist&gt;
 &lt;listitem&gt;#GDataOAuth2Authorizer for
   &lt;ulink type="http" url="https://developers.google.com/accounts/docs/OAuth2InstalledApp"&gt;OAuth 2.0&lt;/ulink&gt; (preferred)&lt;/listitem&gt;
&lt;/itemizedlist&gt;

It is quite possible for clients to write their own #GDataAuthorizer implementation. For example, if a client already uses OAuth 2.0 and handles
authentication itself, it may want to use its own #GDataAuthorizer implementation which simply exposes the client's existing access token to
libgdata and does nothing more.

It must be noted that all #GDataAuthorizer implementations must be thread safe, as methods such as gdata_authorizer_refresh_authorization() may be
called from any thread (such as the thread performing an asynchronous query operation) at any time.

Examples of code using #GDataAuthorizer can be found in the documentation for the various implementations of the #GDataAuthorizer interface.</doc>
    </docsection>
    <docsection name="gdata-batch-operation">
      <doc xml:space="preserve"
           filename="gdata/gdata-batch-operation.c"
           line="20">#GDataBatchOperation is a transient standalone class which represents and handles a single batch operation request to a service. To make a batch
operation request: create a new #GDataBatchOperation; add the required queries, insertions, updates and deletions to the operation using
gdata_batch_operation_add_query(), gdata_batch_operation_add_insertion(), gdata_batch_operation_add_update() and
gdata_batch_operation_add_deletion(), respectively; run the request with gdata_batch_operation_run() or gdata_batch_operation_run_async(); and
handle the results in the callback functions which are invoked by the operation as the results are received and parsed.

If authorization is required for any of the requests in the batch operation, the #GDataService set in #GDataBatchOperation:service must have
a #GDataAuthorizer set as its #GDataService:authorizer property, and that authorizer must be authorized for the #GDataAuthorizationDomain set
in #GDataBatchOperation:authorization-domain. It's not possible for requests in a single batch operation to be authorized under multiple domains;
in that case, the requests must be split up across several batch operations using different authorization domains.

If all of the requests in the batch operation don't require authorization (i.e. they all operate on public data; see the documentation for the
#GDataService subclass in question's operations for details of which require authorization), #GDataBatchOperation:authorization-domain can be set
to %NULL to save the overhead of sending authorization data to the online service.

&lt;example&gt;
	&lt;title&gt;Running a Synchronous Operation&lt;/title&gt;
	&lt;programlisting&gt;
guint op_id, op_id2;
GDataBatchOperation *operation;
GDataContactsContact *contact;
GDataService *service;
GDataAuthorizationDomain *domain;

service = create_contacts_service ();
domain = get_authorization_domain_from_service (service);
contact = create_new_contact ();
batch_link = gdata_feed_look_up_link (contacts_feed, GDATA_LINK_BATCH);

operation = gdata_batchable_create_operation (GDATA_BATCHABLE (service), domain, gdata_link_get_uri (batch_link));

/&lt;!-- --&gt;* Add to the operation to insert a new contact and query for another one *&lt;!-- --&gt;/
op_id = gdata_batch_operation_add_insertion (operation, GDATA_ENTRY (contact), insertion_cb, user_data);
op_id2 = gdata_batch_operation_add_query (operation, gdata_entry_get_id (other_contact), GDATA_TYPE_CONTACTS_CONTACT, query_cb, user_data);

g_object_unref (contact);
g_object_unref (domain);
g_object_unref (service);

/&lt;!-- --&gt;* Run the operations in a blocking fashion. Ideally, check and free the error as appropriate after running the operation. *&lt;!-- --&gt;/
gdata_batch_operation_run (operation, NULL, &amp;error);

g_object_unref (operation);

static void
insertion_cb (guint operation_id, GDataBatchOperationType operation_type, GDataEntry *entry, GError *error, gpointer user_data)
{
	/&lt;!-- --&gt;* operation_id == op_id, operation_type == GDATA_BATCH_OPERATION_INSERTION *&lt;!-- --&gt;/

	/&lt;!-- --&gt;* Process the new inserted entry, ideally after checking for errors. Note that the entry should be reffed if it needs to stay
	 * alive after execution of the callback finishes. *&lt;!-- --&gt;/
	process_inserted_entry (entry, user_data);
}

static void
query_cb (guint operation_id, GDataBatchOperationType operation_type, GDataEntry *entry, GError *error, gpointer user_data)
{
	/&lt;!-- --&gt;* operation_id == op_id2, operation_type == GDATA_BATCH_OPERATION_QUERY *&lt;!-- --&gt;/

	/&lt;!-- --&gt;* Process the results of the query, ideally after checking for errors. Note that the entry should be reffed if it needs to
	 * stay alive after execution of the callback finishes. *&lt;!-- --&gt;/
	process_queried_entry (entry, user_data);
}
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-batchable">
      <doc xml:space="preserve"
           filename="gdata/gdata-batchable.c"
           line="20">#GDataBatchable is an interface which can be implemented by #GDataServices which support batch operations on their entries. It allows the
creation of a #GDataBatchOperation for the service, which allows a set of batch operations to be run.</doc>
    </docsection>
    <docsection name="gdata-calendar-access-rule">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-access-rule.c"
           line="20">#GDataCalendarAccessRule is a subclass of #GDataAccessRule to represent an
access rule affecting users of a shared calendar in Google Calendar.</doc>
    </docsection>
    <docsection name="gdata-calendar-calendar">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-calendar.c"
           line="20">#GDataCalendarCalendar is a subclass of #GDataEntry to represent a calendar from Google Calendar.

#GDataCalendarCalendar implements #GDataAccessHandler, meaning the access rules to it can be modified using that interface. As well as the
access roles defined for the base #GDataAccessRule (e.g. %GDATA_ACCESS_ROLE_NONE), #GDataCalendarCalendar has its own, such as
%GDATA_CALENDAR_ACCESS_ROLE_EDITOR and %GDATA_CALENDAR_ACCESS_ROLE_FREE_BUSY.

For more details of Google Calendar's GData API, see the &lt;ulink type="http" url="https://developers.google.com/google-apps/calendar/v3/reference/"&gt;
online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Listing Calendars&lt;/title&gt;
	&lt;programlisting&gt;
GDataCalendarService *service;
GDataFeed *feed;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_calendar_service ();

/&lt;!-- --&gt;* Query for all of the calendars the currently authenticated user has access to, including those which they have read-only
 * access to. *&lt;!-- --&gt;/
feed = gdata_calendar_service_query_all_calendars (service, NULL, NULL, NULL, NULL, &amp;error);

g_object_unref (service);

if (error != NULL) {
	g_error ("Error querying for calendars: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Iterate through the returned calendars and do something with them *&lt;!-- --&gt;/
for (i = gdata_feed_get_entries (feed); i != NULL; i = i-&gt;next) {
	const gchar *access_level;
	gboolean has_write_access;
	GDataCalendarCalendar *calendar = GDATA_CALENDAR_CALENDAR (i-&gt;data);

	/&lt;!-- --&gt;* Determine whether we have write access to the calendar, or just read-only or free/busy access. Note that the access levels
	 * are more detailed than this; see the documentation for gdata_calendar_calendar_get_access_level() for more information. *&lt;!-- --&gt;/
	access_level = gdata_calendar_calendar_get_access_level (calendar);
	has_write_access = (access_level != NULL &amp;&amp; strcmp (access_level, GDATA_CALENDAR_ACCESS_ROLE_EDITOR) == 0) ? TRUE : FALSE;

	/&lt;!-- --&gt;* Do something with the calendar here, such as insert it into a UI *&lt;!-- --&gt;/
}

g_object_unref (feed);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-calendar-event">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-event.c"
           line="20">#GDataCalendarEvent is a subclass of #GDataEntry to represent an event on a calendar from Google Calendar.

For more details of Google Calendar's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/calendar/v3/reference/"&gt;
online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Adding a New Event to the Default Calendar&lt;/title&gt;
	&lt;programlisting&gt;
GDataCalendarService *service;
GDataCalendarEvent *event, *new_event;
GDataGDWhere *where;
GDataGDWho *who;
GDataGDWhen *when;
gint64 current_time;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_calendar_service ();

/&lt;!-- --&gt;* Create the new event *&lt;!-- --&gt;/
event = gdata_calendar_event_new (NULL);

gdata_entry_set_title (GDATA_ENTRY (event), "Event Title");
gdata_entry_set_content (GDATA_ENTRY (event), "Event description. This should be a few sentences long.");
gdata_calendar_event_set_status (event, GDATA_GD_EVENT_STATUS_CONFIRMED);

where = gdata_gd_where_new (NULL, "Description of the location", NULL);
gdata_calendar_event_add_place (event, where);
g_object_unref (where);

who = gdata_gd_who_new (GDATA_GD_WHO_EVENT_ORGANIZER, "John Smith", "john.smith@gmail.com");
gdata_calendar_event_add_person (event, who);
g_object_unref (who);

current_time = g_get_real_time () / G_USEC_PER_SEC;
when = gdata_gd_when_new (current_time, current_time + 3600, FALSE);
gdata_calendar_event_add_time (event, when);
g_object_unref (when);

/&lt;!-- --&gt;* Insert the event in the calendar *&lt;!-- --&gt;/
new_event = gdata_calendar_service_insert_event (service, event, NULL, &amp;error);

g_object_unref (event);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error inserting event: %s", error-&gt;message);
	g_error_free (error);
	return NULL;
}

/&lt;!-- --&gt;* Do something with the new_event here, such as return it to the user or store its ID for later usage *&lt;!-- --&gt;/

g_object_unref (new_event);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-calendar-feed">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-feed.c"
           line="20">#GDataCalendarFeed is a subclass of #GDataFeed to represent a results feed from Google Calendar. It adds a couple of
properties which are specific to the Google Calendar API.</doc>
    </docsection>
    <docsection name="gdata-calendar-query">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-query.c"
           line="20">#GDataCalendarQuery represents a collection of query parameters specific to the Google Calendar service, which go above and beyond
those catered for by #GDataQuery.

For more information on the custom GData query parameters supported by #GDataCalendarQuery, see the &lt;ulink type="http"
url="https://developers.google.com/google-apps/calendar/v3/reference/events/list"&gt;online
documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Querying for Events&lt;/title&gt;
	&lt;programlisting&gt;
GDataCalendarService *service;
GDataCalendarCalendar *calendar;
GDataCalendarQuery *query;
GDataFeed *feed;
gint64 current_time;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service and find a calendar to query in *&lt;!-- --&gt;/
service = create_calendar_service ();
calendar = get_calendar (service);

/&lt;!-- --&gt;* Create the query to use. We're going to query for events within the next week which match the search term "party",
 * ordered by last modification time (descending). *&lt;!-- --&gt;/
current_time = g_get_real_time () / G_USEC_PER_SEC;
query = gdata_calendar_query_new_with_limits ("party", current_time, current_time + 7 * 24 * 60 * 60);
gdata_calendar_query_set_order_by (query, "lastmodified");

/&lt;!-- --&gt;* Execute the query *&lt;!-- --&gt;/
feed = gdata_calendar_service_query_events (service, calendar, query, NULL, NULL, NULL, &amp;error);

g_object_unref (query);
g_object_unref (calendar);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error querying for events: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Iterate through the returned events and do something with them *&lt;!-- --&gt;/
for (i = gdata_feed_get_entries (feed); i != NULL; i = i-&gt;next) {
	GDataCalendarEvent *event = GDATA_CALENDAR_EVENT (i-&gt;data);

	/&lt;!-- --&gt;* Do something with the event here, such as insert it into a UI *&lt;!-- --&gt;/
}

g_object_unref (feed);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-calendar-service">
      <doc xml:space="preserve"
           filename="gdata/services/calendar/gdata-calendar-service.c"
           line="20">#GDataCalendarService is a subclass of #GDataService for communicating with the GData API of Google Calendar. It supports querying
for, inserting, editing and deleting events from calendars, as well as operations on the calendars themselves.

For more details of Google Calendar's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/calendar/v3/reference/"&gt;
online documentation&lt;/ulink&gt;.

Each calendar accessible through the service has an access control list (ACL) which defines the level of access to the calendar to each user, and
which users the calendar is shared with. For more information about ACLs for calendars, see the
&lt;ulink type="http" url="https://developers.google.com/google-apps/calendar/v3/reference/acl"&gt;online documentation on
sharing calendars&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Retrieving the Access Control List for a Calendar&lt;/title&gt;
	&lt;programlisting&gt;
GDataCalendarService *service;
GDataCalendarCalendar *calendar;
GDataFeed *acl_feed;
GDataAccessRule *rule, *new_rule;
GDataLink *acl_link;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service and retrieve a calendar to work on *&lt;!-- --&gt;/
service = create_calendar_service ();
calendar = get_calendar (service);

/&lt;!-- --&gt;* Query the service for the ACL for the given calendar *&lt;!-- --&gt;/
acl_feed = gdata_access_handler_get_rules (GDATA_ACCESS_HANDLER (calendar), GDATA_SERVICE (service), NULL, NULL, NULL, &amp;error);

if (error != NULL) {
	g_error ("Error getting ACL feed for calendar: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (calendar);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Iterate through the ACL *&lt;!-- --&gt;/
for (i = gdata_feed_get_entries (acl_feed); i != NULL; i = i-&gt;next) {
	const gchar *scope_value;

	rule = GDATA_ACCESS_RULE (i-&gt;data);

	/&lt;!-- --&gt;* Do something with the access rule here. As an example, we update the rule applying to test@gmail.com and delete all
	 * the other rules. We then insert another rule for example@gmail.com below. *&lt;!-- --&gt;/
	gdata_access_rule_get_scope (rule, NULL, &amp;scope_value);
	if (scope_value != NULL &amp;&amp; strcmp (scope_value, "test@gmail.com") == 0) {
		GDataAccessRule *updated_rule;

		/&lt;!-- --&gt;* Update the rule to make test@gmail.com an editor (full read/write access to the calendar, but they can't change
		 * the ACL). *&lt;!-- --&gt;/
		gdata_access_rule_set_role (rule, GDATA_CALENDAR_ACCESS_ROLE_EDITOR);
		updated_rule = GDATA_ACCESS_RULE (gdata_service_update_entry (GDATA_SERVICE (service), GDATA_ENTRY (rule), NULL, &amp;error));

		if (error != NULL) {
			g_error ("Error updating access rule for %s: %s", scope_value, error-&gt;message);
			g_error_free (error);
			g_object_unref (acl_feed);
			g_object_unref (calendar);
			g_object_unref (service);
			return;
		}

		g_object_unref (updated_rule);
	} else {
		/&lt;!-- --&gt;* Delete any rule which doesn't apply to test@gmail.com *&lt;!-- --&gt;/
		gdata_service_delete_entry (GDATA_SERVICE (service), GDATA_ENTRY (rule), NULL, &amp;error);

		if (error != NULL) {
			g_error ("Error deleting access rule for %s: %s", scope_value, error-&gt;message);
			g_error_free (error);
			g_object_unref (acl_feed);
			g_object_unref (calendar);
			g_object_unref (service);
			return;
		}
	}
}

g_object_unref (acl_feed);

/&lt;!-- --&gt;* Create and insert a new access rule for example@gmail.com which allows them to view free/busy information for events in the
 * calendar, but doesn't allow them to view the full event details. *&lt;!-- --&gt;/
rule = gdata_access_rule_new (NULL);
gdata_access_rule_set_role (rule, GDATA_CALENDAR_ACCESS_ROLE_FREE_BUSY);
gdata_access_rule_set_scope (rule, GDATA_ACCESS_SCOPE_USER, "example@gmail.com");

acl_link = gdata_entry_look_up_link (GDATA_ENTRY (calendar), GDATA_LINK_ACCESS_CONTROL_LIST);
new_rule = GDATA_ACCESS_RULE (gdata_service_insert_entry (GDATA_SERVICE (service), gdata_link_get_uri (acl_link), GDATA_ENTRY (rule),
                                                          NULL, &amp;error));

g_object_unref (rule);
g_object_unref (calendar);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error inserting access rule: %s", error-&gt;message);
	g_error_free (error);
	return;
}

g_object_unref (acl_link);
	&lt;/programlisting&gt;
&lt;/example&gt;

Before version 0.17.2, the Calendar service could be manipulated using
batch operations. That is no longer supported, and any batch operations
created on the calendar will fail.</doc>
    </docsection>
    <docsection name="gdata-category">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-category.c"
           line="20">#GDataCategory represents a "category" element from the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php"&gt;Atom specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-comment">
      <doc xml:space="preserve"
           filename="gdata/gdata-comment.c"
           line="20">#GDataComment is a subclass of #GDataEntry to represent a generic comment on an entry. It is returned by the methods implemented in the
#GDataCommentable interface.

Any class which implements #GDataCommentable should have its own concrete subclass of #GDataComment which provides service-specific functionality.

All subclasses of #GDataComment should ensure that the body of a comment is accessible using gdata_entry_get_content(), and that each comment has
at least one #GDataAuthor object representing the person who wrote the comment, accessible using gdata_entry_get_authors().</doc>
    </docsection>
    <docsection name="gdata-commentable">
      <doc xml:space="preserve"
           filename="gdata/gdata-commentable.c"
           line="21">#GDataCommentable is an interface which can be implemented by commentable objects: objects which support having comments added to them by users,
such as videos and photos.

Comments may be queried, added and deleted. Note that they may not be edited.

#GDataCommentable objects may not support all operations on comments, on an instance-by-instance basis (i.e. it's an invalid assumption that if,
for example, one #GDataYouTubeVideo doesn't support adding comments all other #GDataYouTubeVideos don't support adding comments either).
Specific documentation for a particular type of #GDataCommentable may state otherwise, though.

&lt;example&gt;
	&lt;title&gt;Querying for Comments&lt;/title&gt;
	&lt;programlisting&gt;
GDataService *service;
GDataCommentable *commentable;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_service ();

/&lt;!-- --&gt;* Retrieve the GDataCommentable which is going to be queried. This may be, for example, a GDataYouTubeVideo. *&lt;!-- --&gt;/
commentable = get_commentable ();

/&lt;!-- --&gt;* Start the async. query for the comments. *&lt;!-- --&gt;/
gdata_commentable_query_comments_async (commentable, service, NULL, NULL, NULL, NULL, NULL, (GAsyncReadyCallback) query_comments_cb, NULL);

g_object_unref (service);
g_object_unref (commentable);

static void
query_comments_cb (GDataCommentable *commentable, GAsyncResult *result, gpointer user_data)
{
	GDataFeed *comment_feed;
	GList *comments, *i;
	GError *error = NULL;

	comment_feed = gdata_commentable_query_comments_finish (commentable, result, &amp;error);

	if (error != NULL) {
		/&lt;!-- --&gt;* Error! *&lt;!-- --&gt;/
		g_error ("Error querying comments: %s", error-&gt;message);
		g_error_free (error);
		return;
	}

	/&lt;!-- --&gt;* Examine the comments. *&lt;!-- --&gt;/
	comments = gdata_feed_get_entries (comment_feed);
	for (i = comments; i != NULL; i = i-&gt;next) {
		/&lt;!-- --&gt;* Note that this will actually be a subclass of GDataComment,
		 * such as GDataYouTubeComment or GDataPicasaWebComment. *&lt;!-- --&gt;/
		GDataComment *comment = GDATA_COMMENT (i-&gt;data);
		GDataAuthor *author;

		/&lt;!-- --&gt;* Note that in practice it might not always be safe to assume that a comment always has an author. *&lt;!-- --&gt;/
		author = GDATA_AUTHOR (gdata_entry_get_authors (GDATA_ENTRY (comment))-&gt;data);

		g_message ("Comment by %s (%s): %s",
		           gdata_author_get_name (author),
		           gdata_author_get_uri (author),
		           gdata_entry_get_content (GDATA_ENTRY (comment)));
	}

	g_object_unref (comment_feed);
}
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-comparable">
      <doc xml:space="preserve"
           filename="gdata/gdata-comparable.c"
           line="20">#GDataComparable is an interface which can be implemented by any object which needs to be compared to another object of the same type or of a
derived type.

When implementing the interface, classes must implement the &lt;function&gt;compare_with&lt;/function&gt; function, and the implementation must be
&lt;ulink type="http" url="http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#index-g_t_0040code_007bpure_007d-function-attribute-2413"&gt;pure
&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-documents-access-rule">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-access-rule.c"
           line="20">#GDataDocumentsAccessRule is a subclass of #GDataAccessRule to represent an
access rule affecting users of a Google Documents entry.</doc>
    </docsection>
    <docsection name="gdata-documents-document">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-document.c"
           line="21">#GDataDocumentsDocument is a subclass of #GDataDocumentsEntry to represent an arbitrary Google Drive document (i.e. an arbitrary file which
isn't a Google Documents presentation, text document, PDF, drawing or spreadsheet). It is subclassed by #GDataDocumentsPresentation, #GDataDocumentsText,
#GDataDocumentsPdf,  #GDataDocumentsDrawing and #GDataDocumentsSpreadsheet, which represent those specific types of Google Document, respectively.

#GDataDocumentsDocument used to be abstract, but was made instantiable in version 0.13.0 to allow for arbitrary file uploads. This can be achieved
by setting #GDataDocumentsUploadQuery:convert to %FALSE when making an upload using gdata_documents_service_upload_document_resumable(). See the
documentation for #GDataDocumentsUploadQuery for an example.

It should be noted that #GDataDocumentsDocument should only be used to represent arbitrary files; its subclasses should be used any time a standard
Google Document (spreadsheet, text document, presentation, etc.) is to be represented.

For more details of Google Drive’s GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Downloading a Document&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsDocument *document;
GFile *destination_file;
const gchar *download_format;
GDataDownloadStream *download_stream;
GFileOutputStream *output_stream;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service and retrieve the document to download and the file and format to save the download in *&lt;!-- --&gt;/
service = create_youtube_service ();
document = get_document_to_download (service);
destination_file = query_user_for_destination_file (document);
download_format = query_user_for_download_format (document);

/&lt;!-- --&gt;* Create the download stream *&lt;!-- --&gt;/
download_stream = gdata_documents_document_download (document, service, download_format, NULL, &amp;error);

g_object_unref (document);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error creating download stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (destination_file);
	return;
}

/&lt;!-- --&gt;* Create the file output stream *&lt;!-- --&gt;/
output_stream = g_file_replace (destination_file, NULL, FALSE, G_FILE_CREATE_REPLACE_DESTINATION, NULL, &amp;error);

g_object_unref (destination_file);

if (error != NULL) {
	g_error ("Error creating destination file: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (download_stream);
	return;
}

/&lt;!-- --&gt;* Download the document. This should almost always be done asynchronously. *&lt;!-- --&gt;/
g_output_stream_splice (G_OUTPUT_STREAM (output_stream), G_INPUT_STREAM (download_stream),
                        G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET, NULL, &amp;error);

g_object_unref (output_stream);
g_object_unref (download_stream);

if (error != NULL) {
	g_error ("Error downloading document: %s", error-&gt;message);
	g_error_free (error);
	return;
}
	&lt;/programlisting&gt;
&lt;/example&gt;

Each document accessible through the service has an access control list (ACL) which defines the level of access to the document to each user, and
which users the document is shared with. For more information about ACLs for documents, see the &lt;ulink type="http"
url="https://developers.google.com/google-apps/documents-list/#managing_sharing_permissions_of_resources_via_access_control_lists_acls"&gt;online
documentation on sharing documents&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Retrieving the Access Control List for a Document&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsDocument *document;
GDataFeed *acl_feed;
GDataAccessRule *rule, *new_rule;
GDataLink *acl_link;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service and retrieve a document to work on *&lt;!-- --&gt;/
service = create_documents_service ();
document = get_document (service);

/&lt;!-- --&gt;* Query the service for the ACL for the given document *&lt;!-- --&gt;/
acl_feed = gdata_access_handler_get_rules (GDATA_ACCESS_HANDLER (document), GDATA_SERVICE (service), NULL, NULL, NULL, &amp;error);

if (error != NULL) {
	g_error ("Error getting ACL feed for document: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (document);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Iterate through the ACL *&lt;!-- --&gt;/
for (i = gdata_feed_get_entries (acl_feed); i != NULL; i = i-&gt;next) {
	const gchar *scope_value;

	rule = GDATA_ACCESS_RULE (i-&gt;data);

	/&lt;!-- --&gt;* Do something with the access rule here. As an example, we update the rule applying to test@gmail.com and delete all
	 * the other rules. We then insert another rule for example@gmail.com below. *&lt;!-- --&gt;/
	gdata_access_rule_get_scope (rule, NULL, &amp;scope_value);
	if (scope_value != NULL &amp;&amp; strcmp (scope_value, "test@gmail.com") == 0) {
		GDataAccessRule *updated_rule;

		/&lt;!-- --&gt;* Update the rule to make test@gmail.com a writer (full read/write access to the document, but they can't change
		 * the ACL or delete the document). *&lt;!-- --&gt;/
		gdata_access_rule_set_role (rule, GDATA_DOCUMENTS_ACCESS_ROLE_WRITER);
		updated_rule = GDATA_ACCESS_RULE (gdata_service_update_entry (GDATA_SERVICE (service), GDATA_ENTRY (rule), NULL, &amp;error));

		if (error != NULL) {
			g_error ("Error updating access rule for %s: %s", scope_value, error-&gt;message);
			g_error_free (error);
			g_object_unref (acl_feed);
			g_object_unref (document);
			g_object_unref (service);
			return;
		}

		g_object_unref (updated_rule);
	} else {
		/&lt;!-- --&gt;* Delete any rule which doesn't apply to test@gmail.com *&lt;!-- --&gt;/
		gdata_service_delete_entry (GDATA_SERVICE (service), GDATA_ENTRY (rule), NULL, &amp;error);

		if (error != NULL) {
			g_error ("Error deleting access rule for %s: %s", scope_value, error-&gt;message);
			g_error_free (error);
			g_object_unref (acl_feed);
			g_object_unref (document);
			g_object_unref (service);
			return;
		}
	}
}

g_object_unref (acl_feed);

/&lt;!-- --&gt;* Create and insert a new access rule for example@gmail.com which allows them read-only access to the document. *&lt;!-- --&gt;/
rule = gdata_access_rule_new (NULL);
gdata_access_rule_set_role (rule, GDATA_DOCUMENTS_ACCESS_ROLE_READER);
gdata_access_rule_set_scope (rule, GDATA_ACCESS_SCOPE_USER, "example@gmail.com");

acl_link = gdata_entry_look_up_link (GDATA_ENTRY (document), GDATA_LINK_ACCESS_CONTROL_LIST);
new_rule = GDATA_ACCESS_RULE (gdata_service_insert_entry (GDATA_SERVICE (service), gdata_link_get_uri (acl_link), GDATA_ENTRY (rule),
                                                          NULL, &amp;error));

g_object_unref (rule);
g_object_unref (document);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error inserting access rule: %s", error-&gt;message);
	g_error_free (error);
	return;
}

g_object_unref (acl_link);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-documents-drawing">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drawing.c"
           line="23">#GDataDocumentsDrawing is a subclass of #GDataDocumentsDocument to represent a drawing document from Google Documents.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-documents-drive">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drive.c"
           line="20">#GDataDocumentsDrive is a subclass of #GDataEntry to represent an arbitrary Google Drive shared drive.

For more details of Google Drive’s GData API, see the [online documentation](https://developers.google.com/drive/v2/web/about-sdk).</doc>
    </docsection>
    <docsection name="gdata-documents-drive-query">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-drive-query.c"
           line="20">#GDataDocumentsDriveQuery represents a collection of query parameters specific to shared drives, which go above and beyond
those catered for by #GDataQuery.

For more information on the custom GData query parameters supported by #GDataDocumentsDriveQuery, see the
[online documentation](https://developers.google.com/drive/api/v2/ref-search-terms#drive_properties).</doc>
    </docsection>
    <docsection name="gdata-documents-entry">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-entry.c"
           line="21">#GDataDocumentsEntry is a subclass of #GDataEntry to represent a Google Drive entry, which is then further subclassed
to give specific document types.

#GDataDocumentsEntry implements #GDataAccessHandler, meaning the access rules to it can be modified using that interface. As well as the
access roles defined for the base #GDataAccessRule (e.g. %GDATA_ACCESS_ROLE_NONE), #GDataDocumentsEntry has its own, such as
%GDATA_DOCUMENTS_ACCESS_ROLE_OWNER and %GDATA_DOCUMENTS_ACCESS_ROLE_READER.

Documents can (confusingly) be referenced by three different types of IDs: their entry ID, their resource ID and their document ID (untyped resource
ID). Each is a substring of the previous ones (i.e. the entry ID contains the resource ID, which in turn contains the document ID). The resource ID
and document ID should almost always be considered as internal, and thus entry IDs (#GDataEntry:id) should normally be used to uniquely identify
documents. For more information, see #GDataDocumentsEntry:resource-id.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Moving an Entry Between Folders&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsEntry *entry, *intermediate_entry, *updated_entry;
GDataDocumentsFolder *old_folder, *new_folder;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_documents_service ();

/&lt;!-- --&gt;* Get the entry, the folder it's being moved out of, and the folder it's being moved into. The entry can either be a document or
 * another folder, allowing hierarchies of folders to be constructed. *&lt;!-- --&gt;/
entry = query_user_for_entry (service);
old_folder = query_user_for_old_folder (service);
new_folder = query_user_for_new_folder (service);

/&lt;!-- --&gt;* Add the entry to the new folder *&lt;!-- --&gt;/
intermediate_entry = gdata_documents_service_add_entry_to_folder (service, entry, new_folder, NULL, &amp;error);

g_object_unref (entry);
g_object_unref (new_folder);

if (error != NULL) {
	g_error ("Error adding entry to new folder: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (old_folder);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Remove the entry from the old folder *&lt;!-- --&gt;/
updated_entry = gdata_documents_service_remove_entry_from_folder (service, intermediate_entry, old_folder, NULL, &amp;error);

g_object_unref (intermediate_entry);
g_object_unref (old_folder);
g_object_unref (service);

if (error != NULL) {
	/&lt;!-- --&gt;* Note that you might want to attempt to remove the intermediate_entry from the new_folder in this error case, so that
	 * the operation is aborted cleanly. *&lt;!-- --&gt;/
	g_error ("Error removing entry from previous folder: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Do something with the updated entry *&lt;!-- --&gt;/

g_object_unref (updated_entry);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-documents-feed">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-feed.c"
           line="22">#GDataDocumentsFeed is a list of entries (#GDataDocumentsEntry subclasses) returned as the result of a query to a #GDataDocumentsService,
or given as the input to another operation on the online service.

Each #GDataDocumentsEntry represents a single object on the Google Documents online service, such as a text document, presentation document,
spreadsheet document or a folder, and the #GDataDocumentsFeed represents a collection of those objects.</doc>
    </docsection>
    <docsection name="gdata-documents-folder">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-folder.c"
           line="22">#GDataDocumentsFolder is a subclass of #GDataDocumentsEntry to represent a folder from Google Documents.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Adding a Folder&lt;/title&gt;
	&lt;programlisting&gt;
	GDataAuthorizationDomain *domain;
GDataDocumentsService *service;
GDataDocumentsFolder *folder, *new_folder, *parent_folder;
GError *error = NULL;

domain = gdata_documents_service_get_primary_authorization_domain ();

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_documents_service ();

parent_folder = GDATA_DOCUMENTS_FOLDER (gdata_service_query_single_entry (GDATA_SERVICE (service), domain, "root", NULL,
                                                                          GDATA_TYPE_DOCUMENTS_FOLDER, NULL, &amp;error));
if (error != NULL) {
	g_error ("Error getting root folder");
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Create the new folder *&lt;!-- --&gt;/
folder = gdata_documents_folder_new (NULL);
gdata_entry_set_title (GDATA_ENTRY (folder), "Folder Name");

/&lt;!-- --&gt;* Insert the folder *&lt;!-- --&gt;/
new_folder = GDATA_DOCUMENTS_FOLDER (gdata_documents_service_add_entry_to_folder (GDATA_SERVICE (service), GDATA_DOCUMENTS_ENTRY (folder),
parent_folder, NULL, &amp;error));

g_object_unref (folder);
g_object_unref (parent_folder);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error inserting new folder: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Do something with the new folder, such as store its ID for future use *&lt;!-- --&gt;/

g_object_unref (new_folder);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-documents-metadata">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-metadata.c"
           line="20">#GDataDocumentsMetadata is a subclass of #GDataParsable to represent Google Drive service metadata.

For more details of Google Documents' GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-documents-pdf">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-pdf.c"
           line="23">#GDataDocumentsPdf is a subclass of #GDataDocumentsDocument to represent a PDF document from Google Documents.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-documents-presentation">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-presentation.c"
           line="22">#GDataDocumentsPresentation is a subclass of #GDataDocumentsDocument to represent a Google Documents presentation.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-documents-property">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-property.c"
           line="20">#GDataDocumentsProperty is a subclass of #GDataParsable and represents a Google Drive Property Resource on a file object.

It allows applications to store additional metadata on a file, such as tags, IDs from other data stores, viewing preferences etc. Properties can be used to share metadata between applications, for example, in a workflow application.

Each #GDataDocumentsProperty is characterized by a key-value pair (where value is optional, and takes empty string "" by default) and a visibility parameter. The visibility can take values "PUBLIC" for public properties and "PRIVATE" for private properties (default). Private properties are accessible only by the application which set them, but public properties can be read/written by other applications as well.</doc>
    </docsection>
    <docsection name="gdata-documents-query">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-query.c"
           line="22">#GDataDocumentsQuery represents a collection of query parameters specific to the Google Documents service, which go above and beyond
those catered for by #GDataQuery.

For more information on the custom GData query parameters supported by #GDataDocumentsQuery, see the &lt;ulink type="http"
url="https://developers.google.com/google-apps/documents-list/#searching_for_documents_and_files"&gt;online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Querying for Documents&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsQuery *query;
GDataFeed *feed;
gint64 current_time;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_documents_service ();

/&lt;!-- --&gt;* Create the query to use. We're going to query for the last 10 documents modified by example@gmail.com in the past week, including
 * deleted documents. *&lt;!-- --&gt;/
query = gdata_documents_query_new_with_limits (NULL, 0, 10);

gdata_documents_query_add_collaborator (query, "example@gmail.com");
gdata_documents_query_set_show_deleted (query, TRUE);

current_time = g_get_real_time () / G_USEC_PER_SEC;
gdata_query_set_updated_min (GDATA_QUERY (query), current_time - 7 * 24 * 60 * 60);
gdata_query_set_updated_max (GDATA_QUERY (query), current_time);

/&lt;!-- --&gt;* Execute the query *&lt;!-- --&gt;/
feed = gdata_documents_service_query_documents (service, query, NULL, NULL, NULL, &amp;error);

g_object_unref (query);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error querying for documents: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Iterate through the returned documents and do something with them *&lt;!-- --&gt;/
for (i = gdata_feed_get_entries (feed); i != NULL; i = i-&gt;next) {
	GDataDocumentsDocument *document = GDATA_DOCUMENTS_DOCUMENT (i-&gt;data);

	/&lt;!-- --&gt;* Do something with the document here, such as insert it into a UI *&lt;!-- --&gt;/
}

g_object_unref (feed);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-documents-service">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-service.c"
           line="22">#GDataDocumentsService is a subclass of #GDataService for communicating with the GData API of Google Drive. It supports querying
for, inserting, editing and deleting documents, as well as a folder hierarchy.
The API is named ‘documents’ rather than ‘drive’ as it used to use the Google
Documents API, which has since been deprecated.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;
online documentation&lt;/ulink&gt;.

Fore more details about the spreadsheet downloads handling, see the
&lt;ulink type="http" url="http://groups.google.com/group/Google-Docs-Data-APIs/browse_thread/thread/bfc50e94e303a29a?pli=1"&gt;
online explanation about the problem&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Uploading a Document from Disk&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsDocument *document, *uploaded_document;
GFile *document_file;
GDataDocumentsFolder *destination_folder;
GFileInfo *file_info;
const gchar *slug, *content_type;
GFileInputStream *file_stream;
GDataUploadStream *upload_stream;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_documents_service ();

/&lt;!-- --&gt;* Get the document file to upload and the folder to upload it into *&lt;!-- --&gt;/
document_file = g_file_new_for_path ("document.odt");
destination_folder = query_user_for_destination_folder (service);

/&lt;!-- --&gt;* Get the file's display name and content type *&lt;!-- --&gt;/
file_info = g_file_query_info (document_file, G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "," G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE,
                               G_FILE_QUERY_INFO_NONE, NULL, &amp;error);

if (error != NULL) {
	g_error ("Error getting document file information: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (destination_folder);
	g_object_unref (document_file);
	g_object_unref (service);
	return;
}

slug = g_file_info_get_display_name (file_info);
content_type = g_file_info_get_content_type (file_info);

/&lt;!-- --&gt;* Get an input stream for the file *&lt;!-- --&gt;/
file_stream = g_file_read (document_file, NULL, &amp;error);

g_object_unref (document_file);

if (error != NULL) {
	g_error ("Error getting document file stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file_info);
	g_object_unref (destination_folder);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Create the document metadata to upload *&lt;!-- --&gt;/
document = gdata_documents_text_new (NULL);
gdata_entry_set_title (GDATA_ENTRY (document), "Document Title");

/&lt;!-- --&gt;* Get an upload stream for the document *&lt;!-- --&gt;/
upload_stream = gdata_documents_service_upload_document (service, document, slug, content_type, destination_folder, NULL, &amp;error);

g_object_unref (document);
g_object_unref (file_info);
g_object_unref (destination_folder);

if (error != NULL) {
	g_error ("Error getting upload stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file_stream);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Upload the document. This is a blocking operation, and should normally be done asynchronously. *&lt;!-- --&gt;/
g_output_stream_splice (G_OUTPUT_STREAM (upload_stream), G_INPUT_STREAM (file_stream),
                        G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET, NULL, &amp;error);

g_object_unref (file_stream);

if (error != NULL) {
	g_error ("Error splicing streams: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (upload_stream);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Finish off the upload by parsing the returned updated document metadata entry *&lt;!-- --&gt;/
uploaded_document = gdata_documents_service_finish_upload (service, upload_stream, &amp;error);

g_object_unref (upload_stream);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error uploading document: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Do something with the uploaded document *&lt;!-- --&gt;/

g_object_unref (uploaded_document);
	&lt;/programlisting&gt;
&lt;/example&gt;

The Drive service can be manipulated using batch operations, too. See the
&lt;ulink type="http" url="https://developers.google.com/google-apps/documents-list/#batching_acl_requests"&gt;online documentation on batch
operations&lt;/ulink&gt; for more information.

&lt;example&gt;
	&lt;title&gt;Performing a Batch Operation on Documents&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataBatchOperation *operation;
GDataFeed *feed;
GDataLink *batch_link;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_documents_service ();

/&lt;!-- --&gt;* Create the batch operation; this requires that we have done a query first so that we can get the batch link *&lt;!-- --&gt;/
feed = do_some_query (service);
batch_link = gdata_feed_look_up_link (feed, GDATA_LINK_BATCH);
operation = gdata_batchable_create_operation (GDATA_BATCHABLE (service), gdata_link_get_uri (batch_link));
g_object_unref (feed);

gdata_batch_operation_add_query (operation, presentation_entry_id_to_query, GDATA_TYPE_DOCUMENTS_PRESENTATION,
                                 (GDataBatchOperationCallback) batch_query_cb, user_data);
gdata_batch_operation_add_insertion (operation, new_entry, (GDataBatchOperationCallback) batch_insertion_cb, user_data);
gdata_batch_operation_add_update (operation, old_entry, (GDataBatchOperationCallback) batch_update_cb, user_data);
gdata_batch_operation_add_deletion (operation, entry_to_delete, (GDataBatchOperationCallback) batch_deletion_cb, user_data);

/&lt;!-- --&gt;* Run the batch operation and handle the results in the various callbacks *&lt;!-- --&gt;/
gdata_test_batch_operation_run (operation, NULL, &amp;error);

g_object_unref (operation);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error running batch operation: %s", error-&gt;message);
	g_error_free (error);
	return;
}

static void
batch_query_cb (guint operation_id, GDataBatchOperationType operation_type, GDataEntry *entry, GError *error, gpointer user_data)
{
	/&lt;!-- --&gt;* operation_type == GDATA_BATCH_OPERATION_QUERY *&lt;!-- --&gt;/
	/&lt;!-- --&gt;* Reference and do something with the returned entry. *&lt;!-- --&gt;/
}

static void
batch_insertion_cb (guint operation_id, GDataBatchOperationType operation_type, GDataEntry *entry, GError *error, gpointer user_data)
{
	/&lt;!-- --&gt;* operation_type == GDATA_BATCH_OPERATION_INSERTION *&lt;!-- --&gt;/
	/&lt;!-- --&gt;* Reference and do something with the returned entry. *&lt;!-- --&gt;/
}

static void
batch_update_cb (guint operation_id, GDataBatchOperationType operation_type, GDataEntry *entry, GError *error, gpointer user_data)
{
	/&lt;!-- --&gt;* operation_type == GDATA_BATCH_OPERATION_UPDATE *&lt;!-- --&gt;/
	/&lt;!-- --&gt;* Reference and do something with the returned entry. *&lt;!-- --&gt;/
}

static void
batch_deletion_cb (guint operation_id, GDataBatchOperationType operation_type, GDataEntry *entry, GError *error, gpointer user_data)
{
	/&lt;!-- --&gt;* operation_type == GDATA_BATCH_OPERATION_DELETION, entry == NULL *&lt;!-- --&gt;/
}
	&lt;/programlisting&gt;
&lt;/example&gt;

Starred documents are denoted by being in the %GDATA_CATEGORY_SCHEMA_LABELS_STARRED category of the %GDATA_CATEGORY_SCHEMA_LABELS schema. Documents
can be starred or unstarred simply by adding or removing this category from them and updating the document:

&lt;example&gt;
	&lt;title&gt;Starring a Document&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsEntry *document, *updated_document;
GDataCategory *starred_category;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service and retrieve the document to be starred *&lt;!-- --&gt;/
service = create_documents_service ();
document = get_document_to_be_starred (service);

/&lt;!-- --&gt;* Add the “starred” category to the document *&lt;!-- --&gt;/
starred_category = gdata_category_new (GDATA_CATEGORY_SCHEMA_LABELS_STARRED, GDATA_CATEGORY_SCHEMA_LABELS, "starred");
gdata_entry_add_category (GDATA_ENTRY (document), starred_category);
g_object_unref (starred_category);

/&lt;!-- --&gt;* Propagate the updated document to the server *&lt;!-- --&gt;/
updated_document = GDATA_DOCUMENTS_ENTRY (gdata_service_update_entry (GDATA_SERVICE (service),
                                                                      gdata_documents_service_get_primary_authorization_domain (),
                                                                      GDATA_ENTRY (document), NULL, &amp;error));

g_object_unref (document);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error starring document: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Do something with the newly-starred document, like update it in the UI *&lt;!-- --&gt;/

g_object_unref (updated_document);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-documents-spreadsheet">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-spreadsheet.c"
           line="22">#GDataDocumentsSpreadsheet is a subclass of #GDataDocumentsDocument to represent a spreadsheet from Google Documents.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Downloading a Specific Sheet of a Spreadsheet&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsSpreadsheet *spreadsheet;
GFile *destination_file;
guint gid;
gchar *download_uri;
GDataDownloadStream *download_stream;
GFileOutputStream *output_stream;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service and retrieve the spreadsheet and sheet index (GID) to download and the file to save the download in *&lt;!-- --&gt;/
service = create_youtube_service ();
spreadsheet = get_document_to_download (service);
destination_file = query_user_for_destination_file (spreadsheet);
gid = query_user_for_gid (spreadsheet);

/&lt;!-- --&gt;* Create the download stream *&lt;!-- --&gt;/
download_uri = gdata_documents_spreadsheet_get_download_uri (spreadsheet, GDATA_DOCUMENTS_SPREADSHEET_CSV, gid);
download_stream = GDATA_DOWNLOAD_STREAM (gdata_download_stream_new (service, gdata_documents_service_get_spreadsheet_authorization_domain (),
                                                                    download_uri, NULL));
g_free (download_uri);

g_object_unref (spreadsheet);
g_object_unref (service);

/&lt;!-- --&gt;* Create the file output stream *&lt;!-- --&gt;/
output_stream = g_file_replace (destination_file, NULL, FALSE, G_FILE_CREATE_REPLACE_DESTINATION, NULL, &amp;error);

g_object_unref (destination_file);

if (error != NULL) {
	g_error ("Error creating destination file: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (download_stream);
	return;
}

/&lt;!-- --&gt;* Download the document. This should almost always be done asynchronously. *&lt;!-- --&gt;/
g_output_stream_splice (G_OUTPUT_STREAM (output_stream), G_INPUT_STREAM (download_stream),
                        G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET, NULL, &amp;error);

g_object_unref (output_stream);
g_object_unref (download_stream);

if (error != NULL) {
	g_error ("Error downloading spreadsheet: %s", error-&gt;message);
	g_error_free (error);
	return;
}
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-documents-text">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-text.c"
           line="22">#GDataDocumentsText is a subclass of #GDataDocumentsDocument to represent a text document from Google Documents.

For more details of Google Drive's GData API, see the
&lt;ulink type="http" url="https://developers.google.com/drive/v2/web/about-sdk"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-documents-upload-query">
      <doc xml:space="preserve"
           filename="gdata/services/documents/gdata-documents-upload-query.c"
           line="20">#GDataDocumentsUploadQuery is a collection of parameters for document uploads to Google Documents, allowing various options to be set when uploading
a document for the first time. For example, the destination folder for the uploaded document may be specified; or whether to automatically convert
the document to a common format.

#GDataDocumentsUploadQuery is designed as an object (rather than a fixed struct or set of function arguments) to allow for easy additions of new
Google Documents features in the future.

&lt;example&gt;
	&lt;title&gt;Uploading an Arbitrary File from Disk&lt;/title&gt;
	&lt;programlisting&gt;
GDataDocumentsService *service;
GDataDocumentsDocument *document, *uploaded_document;
GFile *arbitrary_file;
GFileInfo *file_info;
const gchar *slug, *content_type;
goffset file_size;
GDataDocumentsUploadQuery *upload_query;
GFileInputStream *file_stream;
GDataUploadStream *upload_stream;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service. *&lt;!-- --&gt;/
service = create_documents_service ();

/&lt;!-- --&gt;* Get the file to upload. *&lt;!-- --&gt;/
arbitrary_file = g_file_new_for_path ("arbitrary-file.bin");

/&lt;!-- --&gt;* Get the file's display name, content type and size. *&lt;!-- --&gt;/
file_info = g_file_query_info (arbitrary_file, G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "," G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE ","
                               G_FILE_ATTRIBUTE_STANDARD_SIZE, G_FILE_QUERY_INFO_NONE, NULL, &amp;error);

if (error != NULL) {
	g_error ("Error getting arbitrary file information: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (arbitrary_file);
	g_object_unref (service);
	return;
}

slug = g_file_info_get_display_name (file_info);
content_type = g_file_info_get_content_type (file_info);
file_size = g_file_info_get_size (file_info);

/&lt;!-- --&gt;* Get an input stream for the file. *&lt;!-- --&gt;/
file_stream = g_file_read (arbitrary_file, NULL, &amp;error);

g_object_unref (arbitrary_file);

if (error != NULL) {
	g_error ("Error getting arbitrary file stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file_info);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Create the file metadata to upload. *&lt;!-- --&gt;/
document = gdata_documents_document_new (NULL);
gdata_entry_set_title (GDATA_ENTRY (document), "Title for My Arbitrary File");

/&lt;!-- --&gt;* Build the upload query and set the upload to not be converted to a standard format. *&lt;!-- --&gt;/
upload_query = gdata_documents_upload_query_new ();
gdata_documents_upload_query_set_convert (upload_query, FALSE);

/&lt;!-- --&gt;* Get an upload stream for the file. *&lt;!-- --&gt;/
upload_stream = gdata_documents_service_upload_document_resumable (service, document, slug, content_type, file_size, upload_query, NULL, &amp;error);

g_object_unref (upload_query);
g_object_unref (document);
g_object_unref (file_info);

if (error != NULL) {
	g_error ("Error getting upload stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file_stream);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Upload the document. This is a blocking operation, and should normally be done asynchronously. *&lt;!-- --&gt;/
g_output_stream_splice (G_OUTPUT_STREAM (upload_stream), G_INPUT_STREAM (file_stream),
                        G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET, NULL, &amp;error);

g_object_unref (file_stream);

if (error != NULL) {
	g_error ("Error splicing streams: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (upload_stream);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Finish off the upload by parsing the returned updated document metadata entry. *&lt;!-- --&gt;/
uploaded_document = gdata_documents_service_finish_upload (service, upload_stream, &amp;error);

g_object_unref (upload_stream);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error uploading file: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Do something with the uploaded document. *&lt;!-- --&gt;/

g_object_unref (uploaded_document);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-download-stream">
      <doc xml:space="preserve"
           filename="gdata/gdata-download-stream.c"
           line="20">#GDataDownloadStream is a #GInputStream subclass to allow downloading of files from GData services with authorization from a #GDataService under
the given #GDataAuthorizationDomain. If authorization is not required to perform the download, a #GDataAuthorizationDomain doesn't have to be
specified.

Once a #GDataDownloadStream is instantiated with gdata_download_stream_new(), the standard #GInputStream API can be used on the stream to download
the file. Network communication may not actually begin until the first call to g_input_stream_read(), so having a #GDataDownloadStream around is no
guarantee that the file is being downloaded.

The content type and length of the file being downloaded are made available through #GDataDownloadStream:content-type and
#GDataDownloadStream:content-length as soon as the appropriate data is received from the server. Connect to the
#GObject::notify &lt;code type="literal"&gt;content-type&lt;/code&gt; and &lt;code type="literal"&gt;content-length&lt;/code&gt; details to be notified as
soon as the data is available.

The entire download operation can be cancelled using the #GCancellable instance provided to gdata_download_stream_new(), or returned by
gdata_download_stream_get_cancellable(). Cancelling this at any time will cause all future #GInputStream method calls to return
%G_IO_ERROR_CANCELLED. If any #GInputStream methods are in the process of being called, they will be cancelled and return %G_IO_ERROR_CANCELLED as
soon as possible.

Note that cancelling an individual method call (such as a call to g_input_stream_read()) using the #GCancellable parameter of the method will not
cancel the download as a whole — just that particular method call. In the case of g_input_stream_read(), this will cause it to successfully return
any data that it has in memory at the moment (up to the requested number of bytes), or return a %G_IO_ERROR_CANCELLED if it was blocking on receiving
data from the network. This is also the behaviour of g_input_stream_read() when the download operation as a whole is cancelled.

In the case of g_input_stream_close(), the call will return immediately if network activity hasn't yet started. If it has, the network activity will
be cancelled, regardless of whether the call to g_input_stream_close() is cancelled. Cancelling a pending call to g_input_stream_close() (either
using the method's #GCancellable, or by cancelling the download stream as a whole) will cause it to stop waiting for the network activity to finish,
and return %G_IO_ERROR_CANCELLED immediately. Network activity will continue to be shut down in the background.

If the server returns an error message (for example, if the user is not correctly authenticated/authorized or doesn't have suitable permissions to
download from the given URI), it will be returned as a #GDataServiceError by the first call to g_input_stream_read().

&lt;example&gt;
	&lt;title&gt;Downloading to a File&lt;/title&gt;
	&lt;programlisting&gt;
GDataService *service;
GDataAuthorizationDomain *domain;
GCancellable *cancellable;
GInputStream *download_stream;
GOutputStream *output_stream;

/&lt;!-- --&gt;* Create the download stream *&lt;!-- --&gt;/
service = create_my_service ();
domain = get_my_authorization_domain_from_service (service);
cancellable = g_cancellable_new (); /&lt;!-- --&gt;* cancel this to cancel the entire download operation *&lt;!-- --&gt;/
download_stream = gdata_download_stream_new (service, domain, download_uri, cancellable);
output_stream = create_file_and_return_output_stream ();

/&lt;!-- --&gt;* Perform the download asynchronously *&lt;!-- --&gt;/
g_output_stream_splice_async (output_stream, download_stream, G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET,
                              G_PRIORITY_DEFAULT, NULL, (GAsyncReadyCallback) download_splice_cb, NULL);

g_object_unref (output_stream);
g_object_unref (download_stream);
g_object_unref (cancellable);
g_object_unref (domain);
g_object_unref (service);

static void
download_splice_cb (GOutputStream *output_stream, GAsyncResult *result, gpointer user_data)
{
	GError *error = NULL;

	g_output_stream_splice_finish (output_stream, result, &amp;error);

	if (error != NULL &amp;&amp; g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED) == FALSE)) {
		/&lt;!-- --&gt;* Error downloading the file; potentially an I/O error (GIOError), or an error response from the server
		 * (GDataServiceError). You might want to delete the newly created file because of the error. *&lt;!-- --&gt;/
		g_error ("Error downloading file: %s", error-&gt;message);
		g_error_free (error);
	}
}
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-entry">
      <doc xml:space="preserve"
           filename="gdata/gdata-entry.c"
           line="20">#GDataEntry represents a single object on the online service, such as a playlist, video or calendar event. It is a snapshot of the
state of that object at the time of querying the service, so modifications made to a #GDataEntry will not be automatically or
magically propagated to the server.</doc>
    </docsection>
    <docsection name="gdata-feed">
      <doc xml:space="preserve"
           filename="gdata/gdata-feed.c"
           line="21">#GDataFeed is a list of entries (#GDataEntry) returned as the result of a query to a #GDataService, or given as the input to another
operation on the online service. It also has pieces of data associated with the query on the #GDataService, such as the query title
or timestamp when it was last updated.

Each #GDataEntry represents a single object on the online service, such as a playlist, video or calendar entry, and the #GDataFeed
represents a collection of similar objects.</doc>
    </docsection>
    <docsection name="gdata-gcontact-calendar">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-calendar.c"
           line="20">#GDataGContactCalendar represents a "calendarLink" element from the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcCalendarLink"&gt;gContact specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gcontact-event">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-event.c"
           line="20">#GDataGContactEvent represents a "event" element from the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcEvent"&gt;gContact specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gcontact-external-id">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-external-id.c"
           line="20">#GDataGContactExternalID represents an "externalId" element from the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcExternalId"&gt;gContact specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gcontact-jot">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-jot.c"
           line="20">#GDataGContactJot represents a "jot" element from the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;gContact specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gcontact-language">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-language.c"
           line="20">#GDataGContactLanguage represents a "language" element from the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcLanguage"&gt;gContact specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gcontact-relation">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-relation.c"
           line="20">#GDataGContactRelation represents a "relation" element from the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcJot"&gt;gContact specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gcontact-website">
      <doc xml:space="preserve"
           filename="gdata/gcontact/gdata-gcontact-website.c"
           line="20">#GDataGContactWebsite represents a "website" element from the
&lt;ulink type="http" url="http://code.google.com/apis/contacts/docs/3.0/reference.html#gcWebsite"&gt;gContact specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-email-address">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-email-address.c"
           line="20">#GDataGDEmailAddress represents an "email" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdEmail"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-im-address">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-im-address.c"
           line="20">#GDataGDIMAddress represents an "im" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdIm"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-name">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-name.c"
           line="20">#GDataGDName represents a "name" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdName"&gt;GData specification&lt;/ulink&gt;.

Given a name such as &lt;literal&gt;Sir Winston Leonard Spencer-Churchill, KG&lt;/literal&gt;, the properties of the #GDataGDName should be
set as follows:
&lt;variablelist&gt;
	&lt;varlistentry&gt;&lt;term&gt;#GDataGDName:given-name&lt;/term&gt;&lt;listitem&gt;&lt;para&gt;Winston&lt;/para&gt;&lt;/listitem&gt;&lt;/varlistentry&gt;
	&lt;varlistentry&gt;&lt;term&gt;#GDataGDName:additional-name&lt;/term&gt;&lt;listitem&gt;&lt;para&gt;Leonard&lt;/para&gt;&lt;/listitem&gt;&lt;/varlistentry&gt;
	&lt;varlistentry&gt;&lt;term&gt;#GDataGDName:family-name&lt;/term&gt;&lt;listitem&gt;&lt;para&gt;Spencer-Churchill&lt;/para&gt;&lt;/listitem&gt;&lt;/varlistentry&gt;
	&lt;varlistentry&gt;&lt;term&gt;#GDataGDName:prefix&lt;/term&gt;&lt;listitem&gt;&lt;para&gt;Sir&lt;/para&gt;&lt;/listitem&gt;&lt;/varlistentry&gt;
	&lt;varlistentry&gt;&lt;term&gt;#GDataGDName:suffix&lt;/term&gt;&lt;listitem&gt;&lt;para&gt;KG&lt;/para&gt;&lt;/listitem&gt;&lt;/varlistentry&gt;
&lt;/variablelist&gt;</doc>
    </docsection>
    <docsection name="gdata-gd-organization">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-organization.c"
           line="20">#GDataGDOrganization represents an "organization" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdOrganization"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-phone-number">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-phone-number.c"
           line="20">#GDataGDPhoneNumber represents a "phoneNumber" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdPhoneNumber"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-postal-address">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-postal-address.c"
           line="20">#GDataGDPostalAddress represents a "structuredPostalAddress" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdStructuredPostalAddress"&gt;GData specification&lt;/ulink&gt;.
Note that it does not represent a simple "postalAddress" element, as "structuredPostalAddress" is now used wherever possible in the GData API.</doc>
    </docsection>
    <docsection name="gdata-gd-reminder">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-reminder.c"
           line="20">#GDataGDReminder represents a "reminder" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdReminder"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-when">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-when.c"
           line="20">#GDataGDWhen represents a "when" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhen"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-where">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-where.c"
           line="20">#GDataGDWhere represents a "where" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWhere"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-gd-who">
      <doc xml:space="preserve"
           filename="gdata/gd/gdata-gd-who.c"
           line="20">#GDataGDWho represents an "who" element from the
&lt;ulink type="http" url="http://code.google.com/apis/gdata/docs/2.0/elements.html#gdWho"&gt;GData specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-generator">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-generator.c"
           line="20">#GDataGenerator represents a "generator" element from the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php"&gt;Atom specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-goa-authorizer">
      <doc xml:space="preserve"
           filename="gdata/gdata-goa-authorizer.c"
           line="20">#GDataGoaAuthorizer provides an implementation of the #GDataAuthorizer interface for authentication and authorization using GNOME Online Accounts
(GOA) over D-Bus. This allows a single login session (managed by the GOA daemon) to be used by multiple applications simultaneously, without each
of those applications having to go through the authentication process themselves. Applications making use of #GDataGoaAuthorizer don't get access
to the user's password (it's handled solely by the GOA daemon).

Internally, GOA authenticates with the Google servers using the
&lt;ulink type="http" url="http://code.google.com/apis/accounts/docs/OAuthForInstalledApps.html"&gt;OAuth 1.0&lt;/ulink&gt; or
&lt;ulink type="http" url="https://developers.google.com/identity/protocols/OAuth2"&gt;OAuth 2.0&lt;/ulink&gt; processes.

#GDataGoaAuthorizer natively supports authorization against multiple services, depending entirely on which
services the user has enabled for their Google account in GOA. #GDataGoaAuthorizer cannot authenticate for more services than are enabled in GOA.

&lt;example&gt;
&lt;title&gt;Authenticating Using GOA&lt;/title&gt;
&lt;programlisting&gt;
GDataSomeService *service;
GoaObject *goa_object;
GDataGoaAuthorizer *authorizer;

/&lt;!-- --&gt;* Create an authorizer and pass it an existing #GoaObject. *&lt;!-- --&gt;/
goa_object = get_goa_object ();
authorizer = gdata_goa_authorizer_new (goa_object);

/&lt;!-- --&gt;* Create a service object and link it with the authorizer *&lt;!-- --&gt;/
service = gdata_some_service_new (GDATA_AUTHORIZER (authorizer));

/&lt;!-- --&gt;* Use the service! *&lt;!-- --&gt;/

g_object_unref (service);
g_object_unref (authorizer);
g_object_unref (goa_object);
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-link">
      <doc xml:space="preserve"
           filename="gdata/atom/gdata-link.c"
           line="20">#GDataLink represents a "link" element from the
&lt;ulink type="http" url="http://www.atomenabled.org/developers/syndication/atom-format-spec.php"&gt;Atom specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-media-category">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-category.c"
           line="20">#GDataMediaCategory represents a "category" element from the
&lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-media-content">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-content.c"
           line="20">#GDataMediaContent represents a "content" element from the
&lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.

The class only implements parsing, not XML output, at the moment.</doc>
    </docsection>
    <docsection name="gdata-media-credit">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-credit.c"
           line="20">#GDataMediaCredit represents a "credit" element from the
&lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.

The class only implements parsing, not XML output, at the moment.</doc>
    </docsection>
    <docsection name="gdata-media-thumbnail">
      <doc xml:space="preserve"
           filename="gdata/media/gdata-media-thumbnail.c"
           line="20">#GDataMediaThumbnail represents a "thumbnail" element from the
&lt;ulink type="http" url="http://video.search.yahoo.com/mrss"&gt;Media RSS specification&lt;/ulink&gt;.

The class only implements parsing, not XML output, at the moment.</doc>
    </docsection>
    <docsection name="gdata-oauth2-authorizer">
      <doc xml:space="preserve"
           filename="gdata/gdata-oauth2-authorizer.c"
           line="20">#GDataOAuth2Authorizer provides an implementation of the #GDataAuthorizer
interface for authentication and authorization using the
&lt;ulink type="http" url="https://developers.google.com/accounts/docs/OAuth2InstalledApp"&gt;OAuth 2.0&lt;/ulink&gt;
process, which is Google’s currently preferred authentication and
authorization process.

OAuth 2.0 replaces the deprecated OAuth 1.0 and ClientLogin processes. One of
the main reasons for this is to allow two-factor authentication to be
supported, by moving the authentication interface to a web page under
Google’s control.

The OAuth 2.0 process as implemented by Google follows the
&lt;ulink type="http" url="http://tools.ietf.org/html/rfc6749"&gt;OAuth 2.0
protocol as specified by IETF in RFC 6749&lt;/ulink&gt;, with a few additions to
support scopes (implemented in libgdata by #GDataAuthorizationDomains),
locales and custom domains. Briefly, the process is initiated by building an
authentication URI (using gdata_oauth2_authorizer_build_authentication_uri())
and opening it in the user’s web browser. The user authenticates and
authorizes the requested scopes on Google’s website, then an authorization
code is returned (via #GDataOAuth2Authorizer:redirect-uri) to the
application, which then converts the code into an access and refresh token
(using gdata_oauth2_authorizer_request_authorization()). The access token is
then attached to all future requests to the online service, and the refresh
token can be used in future (with gdata_authorizer_refresh_authorization())
to refresh authorization after the access token expires.

The refresh token may also be accessed as
#GDataOAuth2Authorizer:refresh-token and saved by the application. It may
later be set on a new instance of #GDataOAuth2Authorizer, and
gdata_authorizer_refresh_authorization_async() called to establish a new
access token without requiring the user to re-authenticate unless they have
explicitly revoked the refresh token.

For an overview of the standard OAuth 2.0 flow, see
&lt;ulink type="http" url="http://tools.ietf.org/html/rfc6749#section-1.2"&gt;RFC 6749&lt;/ulink&gt;.

Before an application can be authorized using OAuth 2.0, it must be
registered with
&lt;ulink type="http" url="https://console.developers.google.com/project"&gt;Google’s
Developer Console&lt;/ulink&gt;, and a client ID, client secret and redirect URI
retrieved. These must be built into your application, and knowledge of them
will allow any application to impersonate yours, so it is recommended that
they are kept secret (e.g. as a configure-time option).

libgdata supports
&lt;ulink type="http" url="https://developers.google.com/accounts/docs/OAuth2InstalledApp#incrementalAuth"&gt;incremental
authorization&lt;/ulink&gt;, where multiple #GDataOAuth2Authorizers can be used to
incrementally build up authorizations against multiple scopes. Typically,
you should use one #GDataOAuth2Authorizer per #GDataService your application
uses, limit the scope of each authorizer, and enable incremental
authorization when calling
gdata_oauth2_authorizer_build_authentication_uri().

Each access token is long lived, so reauthorization is rarely necessary with
#GDataOAuth2Authorizer. It is supported using
gdata_authorizer_refresh_authorization().

&lt;example&gt;
&lt;title&gt;Authenticating Asynchronously Using OAuth 2.0&lt;/title&gt;
&lt;programlisting&gt;
GDataSomeService *service;
GDataOAuth2Authorizer *authorizer;
gchar *authentication_uri, *authorization_code;

/&lt;!-- --&gt;* Create an authorizer and authenticate and authorize the service we're using, asynchronously. *&lt;!-- --&gt;/
authorizer = gdata_oauth2_authorizer_new ("some-client-id", "some-client-secret",
                                          GDATA_OAUTH2_REDIRECT_URI_OOB, GDATA_TYPE_SOME_SERVICE);
authentication_uri = gdata_oauth2_authorizer_build_authentication_uri (authorizer, NULL, FALSE);

/&lt;!-- --&gt;* (Present the page at the authentication URI to the user, either in an embedded or stand-alone web browser, and
 * ask them to grant access to the application and return the code Google gives them.) *&lt;!-- --&gt;/
authorization_code = ask_user_for_code (authentication_uri);

gdata_oauth2_authorizer_request_authorization_async (authorizer, authorization_code, cancellable,
                                                     (GAsyncReadyCallback) request_authorization_cb, user_data);

g_free (authentication_uri);

/&lt;!-- --&gt;* Zero out the code before freeing. *&lt;!-- --&gt;/
if (token_secret != NULL) {
	memset (authorization_code, 0, strlen (authorization_code));
}

g_free (authorization_code);

/&lt;!-- --&gt;* Create a service object and link it with the authorizer *&lt;!-- --&gt;/
service = gdata_some_service_new (GDATA_AUTHORIZER (authorizer));

static void
request_authorization_cb (GDataOAuth2Authorizer *authorizer, GAsyncResult *async_result, gpointer user_data)
{
	GError *error = NULL;

	if (gdata_oauth2_authorizer_request_authorization_finish (authorizer, async_result, &amp;error) == FALSE) {
		/&lt;!-- --&gt;* Notify the user of all errors except cancellation errors *&lt;!-- --&gt;/
		if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
			g_error ("Authorization failed: %s", error-&gt;message);
		}

		g_error_free (error);
		return;
	}

	/&lt;!-- --&gt;* (The client is now authenticated and authorized against the service.
	 * It can now proceed to execute queries on the service object which require the user to be authenticated.) *&lt;!-- --&gt;/
}

g_object_unref (service);
g_object_unref (authorizer);
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-parsable">
      <doc xml:space="preserve"
           filename="gdata/gdata-parsable.c"
           line="20">#GDataParsable is an abstract class allowing easy implementation of an extensible parser. It is primarily extended by #GDataFeed and #GDataEntry,
both of which require XML parsing which can be extended by subclassing.

It allows methods to be defined for handling the root XML node, each of its child nodes, and a method to be called after parsing is complete.</doc>
    </docsection>
    <docsection name="gdata-picasaweb-album">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-album.c"
           line="21">#GDataPicasaWebAlbum is a subclass of #GDataEntry to represent an album from Google PicasaWeb.

For more details of Google PicasaWeb's GData API, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/reference.html"&gt;
online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Getting Basic Album Data&lt;/title&gt;
	&lt;programlisting&gt;
GDataFeed *album_feed;
GList *album_entries;

/&lt;!-- --&gt;* Query for a feed of GDataPicasaWebAlbums owned by user "libgdata.picasaweb" *&lt;!-- --&gt;/
album_feed = gdata_picasaweb_service_query_all_albums (service, NULL, "libgdata.picasaweb", NULL, NULL, NULL, NULL);

/&lt;!-- --&gt;* Get a list of GDataPicasaWebAlbums from the query's feed *&lt;!-- --&gt;/
for (album_entries = gdata_feed_get_entries (album_feed); album_entries != NULL; album_entries = album_entries-&gt;next) {
	GDataPicasaWebAlbum *album;
	guint num_photos;
	const gchar *owner_nickname, *title, *summary;
	gint64 timestamp;
	GList *thumbnails;

	album = GDATA_PICASAWEB_ALBUM (album_entries-&gt;data);

	/&lt;!-- --&gt;* Get various bits of information about the album *&lt;!-- --&gt;/
	num_photos = gdata_picasaweb_album_get_num_photos (album);
	owner_nickname = gdata_picasaweb_album_get_nickname (album);
	title = gdata_entry_get_title (GDATA_ENTRY (album));
	summary = gdata_entry_get_summary (GDATA_ENTRY (album));
	/&lt;!-- --&gt;* Get the day the album was shot on or, if not set, when it was uploaded. This is in milliseconds since the epoch. *&lt;!-- --&gt;/
	timestamp = gdata_picasaweb_album_get_timestamp (album);

	for (thumbnails = gdata_picasaweb_album_get_thumbnails (album); thumbnails != NULL; thumbnails = thumbnails-&gt;next) {
		GDataMediaThumbnail *thumbnail;
		GDataDownloadStream *download_stream;
		GdkPixbuf *pixbuf;

		thumbnail = GDATA_MEDIA_THUMBNAIL (thumbnails-&gt;data);
		/&lt;!-- --&gt;* Do something fun with the thumbnails, like download and display them. We could just as easily download them into
		 * files using g_file_create() and g_output_stream_splice(), rather than create GdkPixbufs directly from them.
		 * Note that this is a blocking operation. *&lt;!-- --&gt;/
		download_stream = gdata_media_thumbnail_download (thumbnail, GDATA_SERVICE (service), NULL, NULL);
		pixbuf = gdk_pixbuf_new_from_stream (G_INPUT_STREAM (download_stream), NULL, NULL);
		g_object_unref (download_stream);
		/&lt;!-- --&gt;* ... *&lt;!-- --&gt;/
		g_object_unref (pixbuf);
	}

	/&lt;!-- --&gt;* Do something worthwhile with your album data *&lt;!-- --&gt;/
}

g_object_unref (album_feed);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-picasaweb-comment">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-comment.c"
           line="20">#GDataPicasaWebComment is a subclass of #GDataComment to represent a comment on a #GDataPicasaWebFile. It is returned by the #GDataCommentable
interface implementation on #GDataPicasaWebFile.

It's possible to query for, add and delete #GDataPicasaWebComments from #GDataPicasaWebFiles.</doc>
    </docsection>
    <docsection name="gdata-picasaweb-feed">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-feed.c"
           line="21">#GDataPicasaWebFeed is a subclass of #GDataFeed to represent properties for a PicasaWeb feed. It adds a couple of
properties which are specific to the Google PicasaWeb API.</doc>
    </docsection>
    <docsection name="gdata-picasaweb-file">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-file.c"
           line="21">#GDataPicasaWebFile is a subclass of #GDataEntry to represent a file (photo or video) in an album on Google PicasaWeb.

#GDataPicasaWebFile implements #GDataCommentable, allowing comments on files to be queried using gdata_commentable_query_comments(), new
comments to be added to files using gdata_commentable_insert_comment() and existing comments to be deleted from files using
gdata_commentable_delete_comment().

For more details of Google PicasaWeb's GData API, see the
&lt;ulink type="http" url="http://code.google.com/apis/picasaweb/developers_guide_protocol.html"&gt;online documentation&lt;/ulink&gt;.

&lt;example&gt;
&lt;title&gt;Getting Basic Photo Data&lt;/title&gt;
&lt;programlisting&gt;
GDataFeed *photo_feed;
GList *photo_entries;

/&lt;!-- --&gt;* Query for a feed of GDataPicasaWebFiles belonging to the given GDataPicasaWebAlbum album *&lt;!-- --&gt;/
photo_feed = gdata_picasaweb_service_query_files (service, album, NULL, NULL, NULL, NULL, NULL);

/&lt;!-- --&gt;* Get a list of GDataPicasaWebFiles from the query's feed *&lt;!-- --&gt;/
for (photo_entries = gdata_feed_get_entries (photo_feed); photo_entries != NULL; photo_entries = photo_entries-&gt;next) {
	GDataPicasaWebFile *photo;
	guint height, width;
	gsize file_size;
	gint64 timestamp;
	const gchar *title, *summary;
	GList *contents;

	photo = GDATA_PICASAWEB_FILE (photo_entries-&gt;data);

	/&lt;!-- --&gt;* Get various bits of information about the photo *&lt;!-- --&gt;/
	height = gdata_picasaweb_file_get_height (photo);
	width = gdata_picasaweb_file_get_width (photo);
	file_size = gdata_picasaweb_file_get_size (photo);
	timestamp = gdata_picasaweb_file_get_timestamp (photo);
	title = gdata_entry_get_title (GDATA_ENTRY (photo));
	summary = gdata_entry_get_summary (GDATA_ENTRY (photo));

	/&lt;!-- --&gt;* Obtain the image data at various sizes *&lt;!-- --&gt;/
	for (contents = gdata_picasaweb_file_get_contents (photo); contents != NULL; contents = contents-&gt;next) {
		GDataMediaContent *content;
		GDataDownloadStream *download_stream;
		GFileOutputStream *file_stream;
		GFile *new_file;

		content = GDATA_MEDIA_CONTENT (contents-&gt;data);
		/&lt;!-- --&gt;* Do something fun with the actual images, like download them to a file.
		 * Note that this is a blocking operation. *&lt;!-- --&gt;/
		download_stream = gdata_media_content_download (content, GDATA_SERVICE (service), NULL, NULL);
		new_file = g_file_new_for_path (file_path);
		file_stream = g_file_create (new_file, G_FILE_CREATE_NONE, NULL, NULL);
		g_output_stream_splice (G_OUTPUT_STREAM (file_stream), G_INPUT_STREAM (download_stream),
		                        G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET, NULL, NULL);
		g_object_unref (file_stream);
		g_object_unref (download_stream);
		/&lt;!-- --&gt;* ... *&lt;!-- --&gt;/
		g_object_unref (new_file);
	}

	/&lt;!-- --&gt;* Do something worthwhile with your image data *&lt;!-- --&gt;/
}

g_object_unref (photo_feed);
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-picasaweb-query">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-query.c"
           line="21">#GDataPicasaWebQuery represents a collection of query parameters specific to the Google PicasaWeb service, which go above and beyond
those catered for by #GDataQuery.

For more information on the custom GData query parameters supported by #GDataPicasaWebQuery, see the &lt;ulink type="http"
url="http://code.google.com/apis/picasaweb/reference.html#Parameters"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-picasaweb-service">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-service.c"
           line="21">#GDataPicasaWebService is a subclass of #GDataService for communicating with the GData API of Google PicasaWeb. It supports querying for files
and albums, and uploading files.

For more details of PicasaWeb's GData API, see the &lt;ulink type="http" url="http://code.google.com/apis/picasaweb/developers_guide_protocol.html"&gt;
online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Authenticating and Creating a New Album&lt;/title&gt;
	&lt;programlisting&gt;
GDataAuthorizer *authorizer;
GDataPicasaWebService *service;
GDataPicasaWebAlbum *album, *inserted_album;

/&lt;!-- --&gt;* Create a service object and authorize against the PicasaWeb service *&lt;!-- --&gt;/
authorizer = create_authorizer (…, gdata_picasaweb_service_get_primary_authorization_domain ());
service = gdata_picasaweb_service_new (authorizer);

/&lt;!-- --&gt;* Create a GDataPicasaWebAlbum entry for the new album, setting some information about it *&lt;!-- --&gt;/
album = gdata_picasaweb_album_new (NULL);
gdata_entry_set_title (GDATA_ENTRY (album), "Photos from the Rhine");
gdata_entry_set_summary (GDATA_ENTRY (album), "An album of our adventures on the great river.");
gdata_picasaweb_album_set_location (album, "The Rhine, Germany");

/&lt;!-- --&gt;* Insert the new album on the server. Note that this is a blocking operation. *&lt;!-- --&gt;/
inserted_album = gdata_picasaweb_service_insert_album (service, album, NULL, NULL);

g_object_unref (album);
g_object_unref (inserted_album);
g_object_unref (service);
g_object_unref (authorizer);
&lt;/programlisting&gt;
&lt;/example&gt;

&lt;example&gt;
	&lt;title&gt;Uploading a Photo or Video&lt;/title&gt;
	&lt;programlisting&gt;
GDataPicasaWebFile *file_entry, *uploaded_file_entry;
GDataUploadStream *upload_stream;
GFile *file_data;
GFileInfo *file_info;
GFileInputStream *file_stream;

/&lt;!-- --&gt;* Specify the GFile image on disk to upload *&lt;!-- --&gt;/
file_data = g_file_new_for_path (path);

/&lt;!-- --&gt;* Get the file information for the file being uploaded. If another data source was being used for the upload, it would have to
 * provide an appropriate slug and content type. Note that this is a blocking operation. *&lt;!-- --&gt;/
file_info = g_file_query_info (file_data, G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "," G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE,
                               G_FILE_QUERY_INFO_NONE, NULL, NULL);

/&lt;!-- --&gt;* Create a GDataPicasaWebFile entry for the image, setting a title and caption/summary *&lt;!-- --&gt;/
file_entry = gdata_picasaweb_file_new (NULL);
gdata_entry_set_title (GDATA_ENTRY (file_entry), "Black Cat");
gdata_entry_set_summary (GDATA_ENTRY (file_entry), "Photo of the world's most beautiful cat.");

/&lt;!-- --&gt;* Create an upload stream for the file. This is non-blocking. *&lt;!-- --&gt;/
upload_stream = gdata_picasaweb_service_upload_file (service, album, file_entry, g_file_info_get_display_name (file_info),
                                                     g_file_info_get_content_type (file_info), NULL, NULL);
g_object_unref (file_info);
g_object_unref (file_entry);

/&lt;!-- --&gt;* Prepare a file stream for the file to be uploaded. This is a blocking operation. *&lt;!-- --&gt;/
file_stream = g_file_read (file_data, NULL, NULL);
g_object_unref (file_data);

/&lt;!-- --&gt;* Upload the file to the server. Note that this is a blocking operation. *&lt;!-- --&gt;/
g_output_stream_splice (G_OUTPUT_STREAM (upload_stream), G_INPUT_STREAM (file_stream),
                        G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET, NULL, NULL);

/&lt;!-- --&gt;* Parse the resulting updated entry. This is a non-blocking operation. *&lt;!-- --&gt;/
uploaded_file_entry = gdata_picasaweb_service_finish_file_upload (service, upload_stream, NULL);
g_object_unref (file_stream);
g_object_unref (upload_stream);

/&lt;!-- --&gt;* ... *&lt;!-- --&gt;/

g_object_unref (uploaded_file_entry);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-picasaweb-user">
      <doc xml:space="preserve"
           filename="gdata/services/picasaweb/gdata-picasaweb-user.c"
           line="21">#GDataPicasaWebUser is a subclass of #GDataEntry to represent properties for a PicasaWeb user. It adds a couple of
properties which are specific to the Google PicasaWeb API.</doc>
    </docsection>
    <docsection name="gdata-query">
      <doc xml:space="preserve"
           filename="gdata/gdata-query.c"
           line="21">#GDataQuery represents a collection of query parameters used in a series of queries on a #GDataService. It allows the query parameters to be
set, with the aim of building a query URI using gdata_query_get_query_uri(). Pagination is supported using gdata_query_next_page() and
gdata_query_previous_page().

Each query can have an ETag associated with it, which is a unique identifier for the set of query results produced by the query.
Each time a query is made, gdata_service_query() will set the #GDataQuery:etag property of the accompanying query to a value returned by the
server. If the same query is made again (using the same #GDataQuery instance), the server can skip returning the resulting #GDataFeed if its
contents haven't changed (in this case, gdata_service_query() will return %NULL with an empty error).

For this reason, code using #GDataQuery should be careful when reusing #GDataQuery instances: the code should either unset #GDataQuery:etag after
every query or (preferably) gracefully handle the case where gdata_service_query() returns %NULL to signify unchanged results.

Every time a property of a #GDataQuery instance is changed, the instance's ETag will be unset.

For more information on the standard GData query parameters supported by #GDataQuery, see the &lt;ulink type="http"
url="http://code.google.com/apis/gdata/docs/2.0/reference.html#Queries"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-service">
      <doc xml:space="preserve"
           filename="gdata/gdata-service.c"
           line="20">#GDataService represents a GData API service, typically a website using the GData API, such as YouTube or Google Calendar. One
#GDataService instance is required to issue queries to the service, handle insertions, updates and deletions, and generally
communicate with the online service.

If operations performed on a #GDataService need authorization (such as uploading a video to YouTube or querying the user's personal calendar on
Google Calendar), the service needs a #GDataAuthorizer instance set as #GDataService:authorizer. Once the user is appropriately authenticated and
authorized by the #GDataAuthorizer implementation (see the documentation for #GDataAuthorizer for details on how this is achieved for specific
implementations), all operations will be automatically authorized.

Note that it's not always necessary to supply a #GDataAuthorizer instance to a #GDataService. If the only operations to be performed on the
#GDataService don't need authorization (e.g. they only query public information), setting up a #GDataAuthorizer is just extra overhead. See the
documentation for the operations on individual #GDataService subclasses to see which need authorization and which don't.</doc>
    </docsection>
    <docsection name="gdata-tasks-query">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-query.c"
           line="20">#GDataTasksQuery represents a collection of query parameters specific to the Google Tasks service, which go above and beyond
those catered for by #GDataQuery.

For more details of Google Tasks API, see the &lt;ulink type="http" url="https://developers.google.com/google-apps/tasks/v1/reference/"&gt;
online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-tasks-service">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-service.c"
           line="20">#GDataTasksService is a subclass of #GDataService for communicating with the API of Google Tasks. It supports querying
for, inserting, editing and deleting tasks from tasklists, as well as operations on the tasklists themselves.

For more details of Google Tasks API, see the &lt;ulink type="http" url="https://developers.google.com/google-apps/tasks/v1/reference/"&gt;
online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-tasks-task">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-task.c"
           line="20">#GDataTasksTask is a subclass of #GDataEntry to represent a task in a tasklist from Google Tasks.

All functionality of Tasks is currently supported except
&lt;ulink type="http" url="https://developers.google.com/google-apps/tasks/v1/reference/tasks#links"&gt;links&lt;/ulink&gt;.

For more details of Google Tasks API, see the &lt;ulink type="http" url="https://developers.google.com/google-apps/tasks/v1/reference/"&gt;
online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-tasks-tasklist">
      <doc xml:space="preserve"
           filename="gdata/services/tasks/gdata-tasks-tasklist.c"
           line="20">#GDataTasksTasklist is a subclass of #GDataEntry to represent a tasklist from Google Tasks.

For more details of Google Tasks API, see the &lt;ulink type="http" url="https://developers.google.com/google-apps/tasks/v1/reference/"&gt;
online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-types">
      <doc xml:space="preserve"
           filename="gdata/gdata-types.c"
           line="20">The structures here are used haphazardly across the library, describing
various small data types.</doc>
    </docsection>
    <docsection name="gdata-upload-stream">
      <doc xml:space="preserve"
           filename="gdata/gdata-upload-stream.c"
           line="20">#GDataUploadStream is a #GOutputStream subclass to allow uploading of files from GData services with authorization from a #GDataService under
the given #GDataAuthorizationDomain. If authorization is not required to perform the upload, a #GDataAuthorizationDomain doesn't have to be
specified.

Once a #GDataUploadStream is instantiated with gdata_upload_stream_new(), the standard #GOutputStream API can be used on the stream to upload
the file. Network communication may not actually begin until the first call to g_output_stream_write(), so having a #GDataUploadStream around is no
guarantee that data is being uploaded.

Uploads of a file, or a file with associated metadata (a #GDataEntry) should use #GDataUploadStream, but if you want to simply upload a single
#GDataEntry, use gdata_service_insert_entry() instead. #GDataUploadStream is for large streaming uploads.

Once an upload is complete, the server's response can be retrieved from the #GDataUploadStream using gdata_upload_stream_get_response(). In order
for network communication to be guaranteed to have stopped (and thus the response definitely available), g_output_stream_close() must be called
on the #GDataUploadStream first. Otherwise, gdata_upload_stream_get_response() may return saying that the operation is still in progress.

If the server returns an error instead of a success response, the error will be returned by g_output_stream_close() as a #GDataServiceError.

The entire upload operation can be cancelled using the #GCancellable instance provided to gdata_upload_stream_new(), or returned by
gdata_upload_stream_get_cancellable(). Cancelling this at any time will cause all future #GOutputStream method calls to return
%G_IO_ERROR_CANCELLED. If any #GOutputStream methods are in the process of being called, they will be cancelled and return %G_IO_ERROR_CANCELLED as
soon as possible.

Note that cancelling an individual method call (such as a call to g_output_stream_write()) using the #GCancellable parameter of the method will not
cancel the upload as a whole — just that particular method call. In the case of g_output_stream_write(), this will cause it to return the number of
bytes it has successfully written up to the point of cancellation (up to the requested number of bytes), or return a %G_IO_ERROR_CANCELLED if it
had not managed to write any bytes to the network by that point. This is also the behaviour of g_output_stream_write() when the upload operation as
a whole is cancelled.

In the case of g_output_stream_close(), the call will return immediately if network activity hasn't yet started. If it has, the network activity
will be cancelled, regardless of whether the call to g_output_stream_close() is cancelled. Cancelling a pending call to g_output_stream_close()
(either using the method's #GCancellable, or by cancelling the upload stream as a whole) will cause it to stop waiting for the network activity to
finish, and return %G_IO_ERROR_CANCELLED immediately. Network activity will continue to be shut down in the background.

Any outstanding data is guaranteed to be written to the network successfully even if a call to g_output_stream_close() is cancelled. However, if
the upload stream as a whole is cancelled using #GDataUploadStream:cancellable, no more data will be sent over the network, and the network
connection will be closed immediately. i.e. #GDataUploadStream will do its best to instruct the server to cancel the upload and any associated
server-side changes of state.

If the server returns an error message (for example, if the user is not correctly authenticated/authorized or doesn't have suitable permissions
to upload from the given URI), it will be returned as a #GDataServiceError by g_output_stream_close().

&lt;example&gt;
	&lt;title&gt;Uploading from a File&lt;/title&gt;
	&lt;programlisting&gt;
GDataService *service;
GDataAuthorizationDomain *domain;
GCancellable *cancellable;
GInputStream *input_stream;
GOutputStream *upload_stream;
GFile *file;
GFileInfo *file_info;
GError *error = NULL;

/&lt;!-- --&gt;* Get the file to upload *&lt;!-- --&gt;/
file = get_file_to_upload ();
file_info = g_file_query_info (file, G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "," G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE ","
                               G_FILE_ATTRIBUTE_STANDARD_SIZE,
                               G_FILE_QUERY_INFO_NONE, NULL, &amp;error);

if (file_info == NULL) {
	g_error ("Error getting file info: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file);
	return;
}

input_stream = g_file_read (file, NULL, &amp;error);
g_object_unref (file);

if (input_stream == NULL) {
	g_error ("Error getting file input stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file_info);
	return;
}

/&lt;!-- --&gt;* Create the upload stream *&lt;!-- --&gt;/
service = create_my_service ();
domain = get_my_authorization_domain_from_service (service);
cancellable = g_cancellable_new (); /&lt;!-- --&gt;* cancel this to cancel the entire upload operation *&lt;!-- --&gt;/
upload_stream = gdata_upload_stream_new_resumable (service, domain, SOUP_METHOD_POST, upload_uri, NULL,
                                                   g_file_info_get_display_name (file_info), g_file_info_get_content_type (file_info),
                                                   g_file_info_get_size (file_info), cancellable);
g_object_unref (file_info);

/&lt;!-- --&gt;* Perform the upload asynchronously *&lt;!-- --&gt;/
g_output_stream_splice_async (upload_stream, input_stream, G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET,
                              G_PRIORITY_DEFAULT, NULL, (GAsyncReadyCallback) upload_splice_cb, NULL);

g_object_unref (upload_stream);
g_object_unref (input_stream);
g_object_unref (cancellable);
g_object_unref (domain);
g_object_unref (service);

static void
upload_splice_cb (GOutputStream *upload_stream, GAsyncResult *result, gpointer user_data)
{
	gssize length;
	GError *error = NULL;

	g_output_stream_splice_finish (upload_stream, result, &amp;error);

	if (error != NULL &amp;&amp; g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED) == FALSE)) {
		/&lt;!-- --&gt;* Error upload the file; potentially an I/O error (GIOError), or an error response from the server
		 * (GDataServiceError). *&lt;!-- --&gt;/
		g_error ("Error uploading file: %s", error-&gt;message);
		g_error_free (error);
	}

	/&lt;!-- --&gt;* If the upload was successful, carry on to parse the result. Note that this will normally be handled by methods like
	 * gdata_youtube_service_finish_video_upload(), gdata_picasaweb_service_finish_file_upload() and
	 * gdata_documents_service_finish_upload() *&lt;!-- --&gt;/
	parse_server_result (gdata_upload_stream_get_response (GDATA_UPLOAD_STREAM (upload_stream), &amp;length), length);
}
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-version">
      <doc xml:space="preserve"
           filename="gdata/gdata-version.h"
           line="23">libgdata provides compile-time version information.</doc>
    </docsection>
    <docsection name="gdata-youtube-category">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-category.c"
           line="20">#GDataYouTubeCategory represents the YouTube-specific customizations to #GDataCategory. For more information,
see the &lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#YouTube_Category_List"&gt;
online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-youtube-comment">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-comment.c"
           line="20">#GDataYouTubeComment is a subclass of #GDataComment to represent a comment on a #GDataYouTubeVideo. It is returned by the #GDataCommentable
interface implementation on #GDataYouTubeVideo.

It's possible to query for and add #GDataYouTubeComments, but it is not possible to delete #GDataYouTubeComments from any video
using the GData API.

Comments on YouTube videos can be arranged in a hierarchy by their #GDataYouTubeComment:parent-comment-uris. If a
#GDataYouTubeComment&lt;!-- --&gt;'s parent comment URI is non-%NULL, it should match the %GDATA_LINK_SELF #GDataLink of another #GDataYouTubeComment on
the same video (as retrieved using gdata_entry_look_up_link() on the comments). Comments with #GDataYouTubeComment:parent-comment-uri set to %NULL
are top-level comments.</doc>
    </docsection>
    <docsection name="gdata-youtube-feed">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-feed.c"
           line="20">#GDataYouTubeFeed is a list of entries (#GDataYouTubeVideo subclasses)
returned as the result of a query to a #GDataYouTubeService, or given as the
input to another operation on the online service.

Each #GDataYouTubeVideo represents a single video on YouTube, and the
#GDataYouTubeFeed represents a collection of those objects.</doc>
    </docsection>
    <docsection name="gdata-youtube-query">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-query.c"
           line="20">#GDataYouTubeQuery represents a collection of query parameters specific to the YouTube service, which go above and beyond
those catered for by #GDataQuery.

With the transition to version 3 of the YouTube, the #GDataQuery:author and
#GDataQuery:start-index properties are no longer supported, and their values
will be ignored. Use gdata_query_next_page() instead of the
#GDataQuery:start-index API.

For more information on the custom GData query parameters supported by #GDataYouTubeQuery, see the &lt;ulink type="http"
url="https://developers.google.com/youtube/v3/docs/search/list#parameters"&gt;online documentation&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-youtube-service">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-service.c"
           line="20">#GDataYouTubeService is a subclass of #GDataService for communicating with the GData API of YouTube. It supports querying for and
uploading videos using version 3 of the API.

The YouTube API supports returning different sets of properties for
#GDataYouTubeVideos depending on the specific query. For search results, only
‘snippet’ properties are returned (including #GDataEntry:title,
#GDataEntry:summary and the set of thumbnails). For querying single videos,
a more complete set of properties are returned — so use
gdata_service_query_single_entry_async() to get further details on a video.

For more details of YouTube's GData API, see the &lt;ulink type="http" url="https://developers.google.com/youtube/v3/docs/"&gt;
online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Getting a Localized List of YouTube Categories&lt;/title&gt;
	&lt;programlisting&gt;
GDataYouTubeService *service;
GDataAPPCategories *app_categories;
GList *categories, *i;

/&lt;!-- --&gt;* Create a service and set its locale to Italian, which localizes the categories to Italian *&lt;!-- --&gt;/
service = create_youtube_service ();
gdata_service_set_locale (GDATA_SERVICE (service), "it");

/&lt;!-- --&gt;* Query the server for the current list of YouTube categories (in Italian) *&lt;!-- --&gt;/
app_categories = gdata_youtube_service_get_categories (service, NULL, NULL);
categories = gdata_app_categories_get_categories (app_categories);

/&lt;!-- --&gt;* Iterate through the categories *&lt;!-- --&gt;/
for (i = categories; i != NULL; i = i-&gt;next) {
	GDataYouTubeCategory *category = GDATA_YOUTUBE_CATEGORY (i-&gt;data);

	if (gdata_youtube_category_is_deprecated (category) == FALSE &amp;&amp; gdata_youtube_category_is_browsable (category, "IT") == TRUE) {
		/&lt;!-- --&gt;* Do something with the category here, as it's not deprecated, and is browsable in the given region *&lt;!-- --&gt;/
		add_to_ui (gdata_category_get_term (GDATA_CATEGORY (category)), gdata_category_get_label (GDATA_CATEGORY (category)));
	}
}

g_object_unref (app_categories);
g_object_unref (service);
	&lt;/programlisting&gt;
&lt;/example&gt;

&lt;example&gt;
	&lt;title&gt;Uploading a Video from Disk&lt;/title&gt;
	&lt;programlisting&gt;
GDataYouTubeService *service;
GDataYouTubeVideo *video, *uploaded_video;
GDataMediaCategory *category;
const gchar * const tags[] = { "tag1", "tag2", NULL };
GFile *video_file;
GFileInfo *file_info;
const gchar *slug, *content_type;
GFileInputStream *file_stream;
GDataUploadStream *upload_stream;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_youtube_service ();

/&lt;!-- --&gt;* Get the video file to upload *&lt;!-- --&gt;/
video_file = g_file_new_for_path ("sample.ogg");

/&lt;!-- --&gt;* Get the file's display name and content type *&lt;!-- --&gt;/
file_info = g_file_query_info (video_file, G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "," G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE,
                               G_FILE_QUERY_INFO_NONE, NULL, &amp;error);

if (error != NULL) {
	g_error ("Error getting video file information: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (video_file);
	g_object_unref (service);
	return;
}

slug = g_file_info_get_display_name (file_info);
content_type = g_file_info_get_content_type (file_info);

/&lt;!-- --&gt;* Get an input stream for the file *&lt;!-- --&gt;/
file_stream = g_file_read (video_file, NULL, &amp;error);

g_object_unref (video_file);

if (error != NULL) {
	g_error ("Error getting video file stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file_info);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Create the video to upload *&lt;!-- --&gt;/
video = gdata_youtube_video_new (NULL);

gdata_entry_set_title (GDATA_ENTRY (video), "Video Title");
gdata_youtube_video_set_description (video, "Video description.");
gdata_youtube_video_set_keywords (video, video_tags);

category = gdata_media_category_new ("People", "http://gdata.youtube.com/schemas/2007/categories.cat", NULL);
gdata_youtube_video_set_category (video, category);
g_object_unref (category);

/&lt;!-- --&gt;* Get an upload stream for the video *&lt;!-- --&gt;/
upload_stream = gdata_youtube_service_upload_video (service, video, slug, content_type, NULL, &amp;error);

g_object_unref (video);
g_object_unref (file_info);

if (error != NULL) {
	g_error ("Error getting upload stream: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (file_stream);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Upload the video. This is a blocking operation, and should normally be done asynchronously. *&lt;!-- --&gt;/
g_output_stream_splice (G_OUTPUT_STREAM (upload_stream), G_INPUT_STREAM (file_stream),
                        G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE | G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET, NULL, &amp;error);

g_object_unref (file_stream);

if (error != NULL) {
	g_error ("Error splicing streams: %s", error-&gt;message);
	g_error_free (error);
	g_object_unref (upload_stream);
	g_object_unref (service);
	return;
}

/&lt;!-- --&gt;* Finish off the upload by parsing the returned updated video entry *&lt;!-- --&gt;/
uploaded_video = gdata_youtube_service_finish_video_upload (service, upload_stream, &amp;error);

g_object_unref (upload_stream);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error uploading video: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Do something with the uploaded video *&lt;!-- --&gt;/

g_object_unref (uploaded_video);
	&lt;/programlisting&gt;
&lt;/example&gt;

&lt;example&gt;
	&lt;title&gt;Querying for Videos from a Standard Feed&lt;/title&gt;
	&lt;programlisting&gt;
GDataYouTubeService *service;
GDataFeed *feed;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_youtube_service ();

/&lt;!-- --&gt;* Query for the top page of videos in the most popular feed *&lt;!-- --&gt;/
feed = gdata_youtube_service_query_standard_feed (service, GDATA_YOUTUBE_MOST_POPULAR_FEED, NULL, NULL, NULL, NULL, &amp;error);

g_object_unref (service);

if (error != NULL) {
	g_error ("Error querying for most popular videos: %s", error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Iterate through the videos *&lt;!-- --&gt;/
for (i = gdata_feed_get_entries (feed); i != NULL; i = i-&gt;next) {
	GDataYouTubeVideo *video = GDATA_YOUTUBE_VIDEO (i-&gt;data);

	/&lt;!-- --&gt;* Do something with the video, like insert it into the UI *&lt;!-- --&gt;/
}

g_object_unref (feed);
	&lt;/programlisting&gt;
&lt;/example&gt;

&lt;example&gt;
	&lt;title&gt;Querying for Videos using Search Terms&lt;/title&gt;
	&lt;programlisting&gt;
GDataYouTubeService *service;
GDataYouTubeQuery *query;
GDataFeed *feed;
GList *i;
GError *error = NULL;

/&lt;!-- --&gt;* Create a service *&lt;!-- --&gt;/
service = create_youtube_service ();

/&lt;!-- --&gt;* Build a query with the given search terms, also matching only videos which are CC-licensed *&lt;!-- --&gt;/
query = gdata_youtube_query_new (my_space_separated_search_terms);
gdata_youtube_query_set_license (query, GDATA_YOUTUBE_LICENSE_CC);

/&lt;!-- --&gt;* Query for the videos matching the query parameters *&lt;!-- --&gt;/
feed = gdata_youtube_service_query_videos (service, query, NULL, NULL, NULL, &amp;error);

g_object_unref (query);
g_object_unref (service);

if (error != NULL) {
	g_error ("Error querying for videos matching search terms ‘%s’: %s", my_space_separated_search_terms, error-&gt;message);
	g_error_free (error);
	return;
}

/&lt;!-- --&gt;* Iterate through the videos *&lt;!-- --&gt;/
for (i = gdata_feed_get_entries (feed); i != NULL; i = i-&gt;next) {
	GDataYouTubeVideo *video = GDATA_YOUTUBE_VIDEO (i-&gt;data);

	/&lt;!-- --&gt;* Do something with the video, like insert it into the UI *&lt;!-- --&gt;/
}

g_object_unref (feed);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdata-youtube-state">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-state.c"
           line="20">#GDataYouTubeState represents a "state" element from the
&lt;ulink type="http" url="http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_yt:state"&gt;YouTube namespace&lt;/ulink&gt;.</doc>
    </docsection>
    <docsection name="gdata-youtube-video">
      <doc xml:space="preserve"
           filename="gdata/services/youtube/gdata-youtube-video.c"
           line="20">#GDataYouTubeVideo is a subclass of #GDataEntry to represent a single video on YouTube, either when uploading or querying.

#GDataYouTubeVideo implements #GDataCommentable, allowing comments on videos
to be queried and added.

For more details of YouTube’s GData API, see the
&lt;ulink type="http" url="https://developers.google.com/youtube/v3/docs/"&gt;
online documentation&lt;/ulink&gt;.

&lt;example&gt;
	&lt;title&gt;Getting Basic Video Data&lt;/title&gt;
	&lt;programlisting&gt;
	GDataYouTubeVideo *video;
	const gchar *video_id, *title, *player_uri, *description, *video_uri = NULL;
	gint64 updated, published;
	GDataMediaContent *content;
	GList *thumbnails;

	video = gdata_youtube_service_query_single_video (service, NULL, "R-9gzmQHoe0", NULL, NULL);

	video_id = gdata_entry_get_id (GDATA_ENTRY (video)); /&lt;!-- --&gt;* e.g. "R-9gzmQHoe0" *&lt;!-- --&gt;/
	title = gdata_entry_get_title (GDATA_ENTRY (video)); /&lt;!-- --&gt;* e.g. "Korpiklaani Vodka (official video 2009)" *&lt;!-- --&gt;/
	player_uri = gdata_youtube_video_get_player_uri (video); /&lt;!-- --&gt;* e.g. "http://www.youtube.com/watch?v=ZTUVgYoeN_b" *&lt;!-- --&gt;/
	description = gdata_youtube_video_get_description (video); /&lt;!-- --&gt;* e.g. "Vodka is the first single from the album..." *&lt;!-- --&gt;/
	published = gdata_entry_get_published (GDATA_ENTRY (video)); /&lt;!-- --&gt;* Date and time the video was originally published *&lt;!-- --&gt;/
	updated = gdata_entry_get_updated (GDATA_ENTRY (video)); /&lt;!-- --&gt;* When the video was most recently updated by the author *&lt;!-- --&gt;/

	/&lt;!-- --&gt;* Get a list of GDataMediaThumbnails for the video *&lt;!-- --&gt;/
	for (thumbnails = gdata_youtube_video_get_thumbnails (video); thumbnails != NULL; thumbnails = thumbnails-&gt;next)
		download_and_do_something_with_thumbnail (gdata_media_thumbnail_get_uri (thumbnail));

	g_object_unref (video);
	&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <function name="parser_error_quark"
              c:identifier="gdata_parser_error_quark"
              moved-to="ParserError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="service_error_quark"
              c:identifier="gdata_service_error_quark"
              moved-to="ServiceError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="youtube_service_error_quark"
              c:identifier="gdata_youtube_service_error_quark"
              moved-to="YouTubeServiceError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
