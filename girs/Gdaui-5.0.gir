<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gda" version="5.0"/>
  <include name="Gtk" version="3.0"/>
  <c:include name="libgda-ui/libgda-ui.h"/>
  <namespace name="Gdaui"
             version="5.0"
             shared-library="libgda-ui-5.0.so.4,libgda-5.0.so.4"
             c:identifier-prefixes="Gdaui"
             c:symbol-prefixes="gdaui">
    <constant name="ATTRIBUTE_PLUGIN"
              value="__gdaui_attr_plugin"
              c:type="GDAUI_ATTRIBUTE_PLUGIN">
      <source-position filename="gdaui-enums.h" line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <enumeration name="Action" c:type="GdauiAction">
      <source-position filename="gdaui-enums.h" line="56"/>
      <member name="new_data" value="0" c:identifier="GDAUI_ACTION_NEW_DATA">
      </member>
      <member name="write_modified_data"
              value="1"
              c:identifier="GDAUI_ACTION_WRITE_MODIFIED_DATA">
      </member>
      <member name="delete_selected_data"
              value="2"
              c:identifier="GDAUI_ACTION_DELETE_SELECTED_DATA">
      </member>
      <member name="undelete_selected_data"
              value="3"
              c:identifier="GDAUI_ACTION_UNDELETE_SELECTED_DATA">
      </member>
      <member name="reset_data"
              value="4"
              c:identifier="GDAUI_ACTION_RESET_DATA">
      </member>
      <member name="move_first_record"
              value="5"
              c:identifier="GDAUI_ACTION_MOVE_FIRST_RECORD">
      </member>
      <member name="move_prev_record"
              value="6"
              c:identifier="GDAUI_ACTION_MOVE_PREV_RECORD">
      </member>
      <member name="move_next_record"
              value="7"
              c:identifier="GDAUI_ACTION_MOVE_NEXT_RECORD">
      </member>
      <member name="move_last_record"
              value="8"
              c:identifier="GDAUI_ACTION_MOVE_LAST_RECORD">
      </member>
      <member name="move_first_chunck"
              value="9"
              c:identifier="GDAUI_ACTION_MOVE_FIRST_CHUNCK">
      </member>
      <member name="move_prev_chunck"
              value="10"
              c:identifier="GDAUI_ACTION_MOVE_PREV_CHUNCK">
      </member>
      <member name="move_next_chunck"
              value="11"
              c:identifier="GDAUI_ACTION_MOVE_NEXT_CHUNCK">
      </member>
      <member name="move_last_chunck"
              value="12"
              c:identifier="GDAUI_ACTION_MOVE_LAST_CHUNCK">
      </member>
    </enumeration>
    <bitfield name="ActionMode" c:type="GdauiActionMode">
      <source-position filename="gdaui-enums.h" line="38"/>
      <member name="navigation_arrows"
              value="1"
              c:identifier="GDAUI_ACTION_NAVIGATION_ARROWS">
      </member>
      <member name="navigation_scroll"
              value="2"
              c:identifier="GDAUI_ACTION_NAVIGATION_SCROLL">
      </member>
      <member name="modif_auto_commit"
              value="4"
              c:identifier="GDAUI_ACTION_MODIF_AUTO_COMMIT">
      </member>
      <member name="modif_commit_immediate"
              value="8"
              c:identifier="GDAUI_ACTION_MODIF_COMMIT_IMMEDIATE">
      </member>
      <member name="ask_confirm_update"
              value="16"
              c:identifier="GDAUI_ACTION_ASK_CONFIRM_UPDATE">
      </member>
      <member name="ask_confirm_delete"
              value="32"
              c:identifier="GDAUI_ACTION_ASK_CONFIRM_DELETE">
      </member>
      <member name="ask_confirm_insert"
              value="64"
              c:identifier="GDAUI_ACTION_ASK_CONFIRM_INSERT">
      </member>
      <member name="report_error"
              value="128"
              c:identifier="GDAUI_ACTION_REPORT_ERROR">
      </member>
    </bitfield>
    <function-macro name="BASIC_FORM"
                    c:identifier="GDAUI_BASIC_FORM"
                    introspectable="0">
      <source-position filename="gdaui-basic-form.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BASIC_FORM_CLASS"
                    c:identifier="GDAUI_BASIC_FORM_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-basic-form.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BASIC_FORM_GET_CLASS"
                    c:identifier="GDAUI_BASIC_FORM_GET_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-basic-form.h" line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="BasicForm"
           c:symbol-prefix="basic_form"
           c:type="GdauiBasicForm"
           parent="Gtk.Box"
           glib:type-name="GdauiBasicForm"
           glib:get-type="gdaui_basic_form_get_type"
           glib:type-struct="BasicFormClass">
      <source-position filename="gdaui-basic-form.h" line="58"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gdaui_basic_form_new"
                   version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="434">Creates a new #GdauiBasicForm widget using all the #GdaHolder objects provided in @data_set.

The global layout is rendered using a table (a #GtkTable), and an entry is created for each
node of @data_set.</doc>
        <source-position filename="gdaui-basic-form.h" line="155"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="443">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_set" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="436">a #GdaSet structure</doc>
            <type name="Gda.Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_in_dialog"
                   c:identifier="gdaui_basic_form_new_in_dialog"
                   version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2125">Creates a new #GdauiBasicForm widget in the same way as gdaui_basic_form_new()
and puts it into a #GtkDialog widget. The returned dialog has the "Ok" and "Cancel" buttons
which respectively return GTK_RESPONSE_ACCEPT and GTK_RESPONSE_REJECT.

The #GdauiBasicForm widget is attached to the dialog using the user property
"form".</doc>
        <source-position filename="gdaui-basic-form.h" line="156"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="2139">the new #GtkDialog widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_set" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2127">a #GdaSet object</doc>
            <type name="Gda.Set" c:type="GdaSet*"/>
          </parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2128">the parent window for the new dialog, or %NULL</doc>
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2129">the title of the dialog window, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="header"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2130">a helper text displayed at the top of the dialog, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="activated">
        <source-position filename="gdaui-basic-form.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="holder_changed">
        <source-position filename="gdaui-basic-form.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="holder" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
          <parameter name="is_user_action" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="layout_changed">
        <source-position filename="gdaui-basic-form.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_to_size_group"
              c:identifier="gdaui_basic_form_add_to_size_group"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2298">Add @form's widgets specified by @part to @size_group
(the widgets can then be removed using gdaui_basic_form_remove_from_size_group()).</doc>
        <source-position filename="gdaui-basic-form.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2300">a #GdauiBasicForm</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="size_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2301">a #GtkSizeGroup object</doc>
            <type name="Gtk.SizeGroup" c:type="GtkSizeGroup*"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2302">specifies which widgets in @form are concerned</doc>
            <type name="BasicFormPart" c:type="GdauiBasicFormPart"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_grab_focus"
              c:identifier="gdaui_basic_form_entry_grab_focus"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1908">Makes the data entry corresponding to @holder grab the focus for the window it's in. If @holder is %NULL,
then the focus is on the first entry which needs attention.</doc>
        <source-position filename="gdaui-basic-form.h" line="166"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1910">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="holder"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1911">a #GdaHolder object, or %NULL</doc>
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_set_editable"
              c:identifier="gdaui_basic_form_entry_set_editable"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1946">Sets the #GdauiDataEntry in @form which corresponds to the
@holder parameter editable or not. If @holder is %NULL, then all the parameters
are concerned.</doc>
        <source-position filename="gdaui-basic-form.h" line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1948">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="holder"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1949">a #GdaHolder object; or %NULL</doc>
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1950">%TRUE if corresponding data entry must be editable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_set_visible"
              c:identifier="gdaui_basic_form_entry_set_visible"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1873">Shows or hides the #GdauiDataEntry in @form which corresponds to the
@holder data holder</doc>
        <source-position filename="gdaui-basic-form.h" line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1875">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1876">a #GdaHolder object</doc>
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
          <parameter name="show" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1877">set to %TRUE to show the data entry, and to %FALSE to hide it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data_set"
              c:identifier="gdaui_basic_form_get_data_set"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1728">Get a pointer to the #GdaSet object which
is modified by @form</doc>
        <source-position filename="gdaui-basic-form.h" line="158"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="1735">a pointer to the #GdaSet</doc>
          <type name="Gda.Set" c:type="GdaSet*"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1730">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry_widget"
              c:identifier="gdaui_basic_form_get_entry_widget"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2075">Get the #GdauiDataEntry in @form which corresponds to the @holder place.</doc>
        <source-position filename="gdaui-basic-form.h" line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="2082">the requested widget, or %NULL if not found</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2077">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2078">a #GdaHolder object</doc>
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_label_widget"
              c:identifier="gdaui_basic_form_get_label_widget"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2100">Get the label in @form which corresponds to the @holder holder.</doc>
        <source-position filename="gdaui-basic-form.h" line="172"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="2107">the requested widget, or %NULL if not found</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2102">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="holder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2103">a #GdaHolder object</doc>
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_place_holder"
              c:identifier="gdaui_basic_form_get_place_holder"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2275">Retreives a pointer to a place holder widget. This feature is only available if a specific
layout has been defined for @form using gdaui_basic_form_set_layout_from_file().</doc>
        <source-position filename="gdaui-basic-form.h" line="176"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="2283">a pointer to the requested place holder, or %NULL if not found</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2277">a #GdauiBasicForm</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="placeholder_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2278">the name of the requested place holder</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_changed"
              c:identifier="gdaui_basic_form_has_changed"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1747">Tells if the form has had at least on entry changed since @form was created or
gdaui_basic_form_set_as_reference() has been called.</doc>
        <source-position filename="gdaui-basic-form.h" line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="1754">%TRUE if one entry has changed at least</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1749">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_valid"
              c:identifier="gdaui_basic_form_is_valid"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1710">Tells if the form can be used as-is (if all the parameters do have some valid values)</doc>
        <source-position filename="gdaui-basic-form.h" line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-basic-form.c"
               line="1716">%TRUE if the form is valid</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1712">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_from_size_group"
              c:identifier="gdaui_basic_form_remove_from_size_group"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2339">Removes @form's widgets specified by @part from @size_group
(the widgets must have been added using gdaui_basic_form_add_to_size_group()).</doc>
        <source-position filename="gdaui-basic-form.h" line="184"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2341">a #GdauiBasicForm</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="size_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2342">a #GtkSizeGroup object</doc>
            <type name="Gtk.SizeGroup" c:type="GtkSizeGroup*"/>
          </parameter>
          <parameter name="part" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2343">specifies which widgets in @form are concerned</doc>
            <type name="BasicFormPart" c:type="GdauiBasicFormPart"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="gdaui_basic_form_reset" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1801">Resets all the entries in the form to their
original values</doc>
        <source-position filename="gdaui-basic-form.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1803">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_as_reference"
              c:identifier="gdaui_basic_form_set_as_reference"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="1652">Tells @form that the current values in the different entries are
to be considered as the original values for all the entries; the immediate
consequence is that any sub-sequent call to gdaui_basic_form_has_changed()
will return %FALSE (of course until any entry is changed).</doc>
        <source-position filename="gdaui-basic-form.h" line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="1654">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_entries_to_default"
              c:identifier="gdaui_basic_form_set_entries_to_default"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2006">For each entry in the form, sets it to a default value if it is possible to do so.</doc>
        <source-position filename="gdaui-basic-form.h" line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2008">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_layout_from_file"
              c:identifier="gdaui_basic_form_set_layout_from_file"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2206">Sets a form layout according an XML description contained in @file_name, for the form identified
by the @form_name name (as an XML layout file can contain the descriptions of several forms and grids).</doc>
        <source-position filename="gdaui-basic-form.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2208">a #GdauiBasicForm</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="file_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2209">XML file name to use</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="form_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2210">the name of the form to use, in @file_name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unknown_color"
              c:identifier="gdaui_basic_form_set_unknown_color"
              version="5.0.3">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="2390">Defines the color to be used when @form displays an invalid value. Any value not
between 0. and 1. will result in the default hard coded values to be used (grayish).</doc>
        <source-position filename="gdaui-basic-form.h" line="187"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="form" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2392">a #GdauiBasicForm widget</doc>
            <type name="BasicForm" c:type="GdauiBasicForm*"/>
          </instance-parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2393">the red component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2394">the green component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2395">the blue component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="2396">the alpha component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-expand-v" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="entries-auto-default"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="headers-sensitive"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="297">Deprecated</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="paramlist" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="show-actions" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="xml-layout"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="BasicFormPriv" c:type="GdauiBasicFormPriv*"/>
      </field>
      <glib:signal name="activated" when="first">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="233">Emitted when the use has activated any of the #GdaDataEntry widget
in @form.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="holder-changed" when="first">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="217">Emitted when a GdaHolder changed in @form</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="220">the #GdaHolder that changed</doc>
            <type name="Gda.Holder"/>
          </parameter>
          <parameter name="is_user_modif" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="221">TRUE if the modification has been initiated by a user modification</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="layout-changed" when="first">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="248">Emitted when the form's layout changes</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="populate-popup" when="first" version="4.2.4">
        <doc xml:space="preserve"
             filename="gdaui-basic-form.c"
             line="262">Connect this signal and modify the popup menu.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="menu" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-basic-form.c"
                 line="265">a #GtkMenu to modify</doc>
            <type name="Gtk.Menu"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BasicFormClass"
            c:type="GdauiBasicFormClass"
            glib:is-gtype-struct-for="BasicForm">
      <source-position filename="gdaui-basic-form.h" line="58"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="holder_changed">
        <callback name="holder_changed">
          <source-position filename="gdaui-basic-form.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="form" transfer-ownership="none">
              <type name="BasicForm" c:type="GdauiBasicForm*"/>
            </parameter>
            <parameter name="holder" transfer-ownership="none">
              <type name="Gda.Holder" c:type="GdaHolder*"/>
            </parameter>
            <parameter name="is_user_action" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activated">
        <callback name="activated">
          <source-position filename="gdaui-basic-form.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="form" transfer-ownership="none">
              <type name="BasicForm" c:type="GdauiBasicForm*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="layout_changed">
        <callback name="layout_changed">
          <source-position filename="gdaui-basic-form.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="form" transfer-ownership="none">
              <type name="BasicForm" c:type="GdauiBasicForm*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="BasicFormPart" c:type="GdauiBasicFormPart">
      <source-position filename="gdaui-basic-form.h" line="181"/>
      <member name="labels" value="0" c:identifier="GDAUI_BASIC_FORM_LABELS">
      </member>
      <member name="entries" value="1" c:identifier="GDAUI_BASIC_FORM_ENTRIES">
      </member>
    </enumeration>
    <record name="BasicFormPriv" c:type="GdauiBasicFormPriv" disguised="1">
      <source-position filename="gdaui-basic-form.h" line="39"/>
    </record>
    <function-macro name="CLOUD" c:identifier="GDAUI_CLOUD" introspectable="0">
      <source-position filename="gdaui-cloud.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLOUD_CLASS"
                    c:identifier="GDAUI_CLOUD_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-cloud.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="COLOR_NORMAL_DEFAULT"
              value="#6495ed"
              c:type="GDAUI_COLOR_NORMAL_DEFAULT">
      <source-position filename="gdaui-decl.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_NORMAL_INVALID"
              value="#ff6a6a"
              c:type="GDAUI_COLOR_NORMAL_INVALID">
      <source-position filename="gdaui-decl.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_NORMAL_MODIF"
              value="#cacaee"
              c:type="GDAUI_COLOR_NORMAL_MODIF">
      <source-position filename="gdaui-decl.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_NORMAL_NULL"
              value="#00cd66"
              c:type="GDAUI_COLOR_NORMAL_NULL">
      <source-position filename="gdaui-decl.h" line="33"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_PRELIGHT_DEFAULT"
              value="#75a6fe"
              c:type="GDAUI_COLOR_PRELIGHT_DEFAULT">
      <source-position filename="gdaui-decl.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_PRELIGHT_INVALID"
              value="#ff7b7b"
              c:type="GDAUI_COLOR_PRELIGHT_INVALID">
      <source-position filename="gdaui-decl.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_PRELIGHT_MODIF"
              value="#cfcffe"
              c:type="GDAUI_COLOR_PRELIGHT_MODIF">
      <source-position filename="gdaui-decl.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_PRELIGHT_NULL"
              value="#00ef77"
              c:type="GDAUI_COLOR_PRELIGHT_NULL">
      <source-position filename="gdaui-decl.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COLOR_UNKNOWN_MASK"
              value="0.300000"
              c:type="GDAUI_COLOR_UNKNOWN_MASK">
      <source-position filename="gdaui-decl.h" line="48"/>
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <function-macro name="COMBO" c:identifier="GDAUI_COMBO" introspectable="0">
      <source-position filename="gdaui-combo.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMBO_CLASS"
                    c:identifier="GDAUI_COMBO_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-combo.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <callback name="CellCreateFunc"
              c:type="GdauiCellCreateFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdaui-plugin.h"
           line="39">Defines a function which creates a #GtkCellRenderer object</doc>
      <source-position filename="gdaui-plugin.h" line="48"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="44">a new #GtkCellRenderer</doc>
        <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
      </return-value>
      <parameters>
        <parameter name="handler" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-plugin.h"
               line="41">a #GdaDataHandler</doc>
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-plugin.h"
               line="42">a #GType</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="options"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdaui-plugin.h"
               line="43">options, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Cloud"
           c:symbol-prefix="cloud"
           c:type="GdauiCloud"
           parent="Gtk.Box"
           glib:type-name="GdauiCloud"
           glib:get-type="gdaui_cloud_get_type"
           glib:type-struct="CloudClass">
      <source-position filename="gdaui-cloud.h" line="51"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_cloud_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-cloud.c"
             line="391">Creates a new #GdauiCloud widget suitable to display the data in @model</doc>
        <source-position filename="gdaui-cloud.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-cloud.c"
               line="397">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="393">a #GdaDataModel</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="label_column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="weight_column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="activate">
        <source-position filename="gdaui-cloud.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cloud" transfer-ownership="none">
            <type name="Cloud" c:type="GdauiCloud*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_filter_widget"
              c:identifier="gdaui_cloud_create_filter_widget"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-cloud.c"
             line="1056">Creates a search widget linked directly to modify @cloud's appearance.</doc>
        <source-position filename="gdaui-cloud.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-cloud.c"
               line="1062">a new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cloud" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="1058">a #GdauiCloud widget</doc>
            <type name="Cloud" c:type="GdauiCloud*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="filter" c:identifier="gdaui_cloud_filter" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-cloud.c"
             line="1025">Filters the elements displayed in @cloud, by altering their color.</doc>
        <source-position filename="gdaui-cloud.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cloud" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="1027">a #GdauiCloud widget</doc>
            <type name="Cloud" c:type="GdauiCloud*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="1028">the filter to use, or %NULL to remove any filter</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selection_mode"
              c:identifier="gdaui_cloud_set_selection_mode"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-cloud.c"
             line="543">Sets @cloud's selection mode</doc>
        <source-position filename="gdaui-cloud.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cloud" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="545">a #GdauiCloud widget</doc>
            <type name="Cloud" c:type="GdauiCloud*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="546">the desired selection mode</doc>
            <type name="Gtk.SelectionMode" c:type="GtkSelectionMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_weight_func"
              c:identifier="gdaui_cloud_set_weight_func"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-cloud.c"
             line="1086">Specifies a function called by @cloud to compute each row's respective weight.</doc>
        <source-position filename="gdaui-cloud.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cloud" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="1088">a #GdauiCloud widget</doc>
            <type name="Cloud" c:type="GdauiCloud*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="1089">a #GdauiCloudWeightFunc function which computes weights, or %NULL to unset</doc>
            <type name="CloudWeightFunc" c:type="GdauiCloudWeightFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-cloud.c"
                 line="1090">a pointer to pass as last argument of @func each time it is called, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="label-column" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="max-scale" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="min-scale" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel"/>
      </property>
      <property name="weight-column" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="CloudPriv" c:type="GdauiCloudPriv*"/>
      </field>
      <glib:signal name="activate" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CloudClass"
            c:type="GdauiCloudClass"
            glib:is-gtype-struct-for="Cloud">
      <source-position filename="gdaui-cloud.h" line="51"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="gdaui-cloud.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cloud" transfer-ownership="none">
              <type name="Cloud" c:type="GdauiCloud*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="CloudPriv" c:type="GdauiCloudPriv" disguised="1">
      <source-position filename="gdaui-cloud.h" line="36"/>
    </record>
    <callback name="CloudWeightFunc" c:type="GdauiCloudWeightFunc">
      <source-position filename="gdaui-cloud.h" line="77"/>
      <return-value transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="Gda.DataModel" c:type="GdaDataModel*"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Combo"
           c:symbol-prefix="combo"
           c:type="GdauiCombo"
           parent="Gtk.ComboBox"
           glib:type-name="GdauiCombo"
           glib:get-type="gdaui_combo_get_type"
           glib:type-struct="ComboClass">
      <source-position filename="gdaui-combo.h" line="45"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new" c:identifier="gdaui_combo_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-combo.c"
             line="311">Create a new GdauiCombo widget.</doc>
        <source-position filename="gdaui-combo.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-combo.c"
               line="316">the newly-created widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_model"
                   c:identifier="gdaui_combo_new_with_model"
                   version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-combo.c"
             line="330">Create a new GdauiCombo widget with a model. See gdaui_combo_set_model() for
more information about the @n_cols and @cols_index usage.</doc>
        <source-position filename="gdaui-combo.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-combo.c"
               line="339">the newly-created widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="332">a #GdaDataModel object.</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="n_cols" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="333">number of columns in the model to be shown</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cols_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="334">an array of columns to be shown, its size must be @n_cols</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_null"
              c:identifier="gdaui_combo_add_null"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-combo.c"
             line="663">Tells if @combo should add a special entry representing an "undefined choice", as a %NULL entry. The default is
that only the available choices in @combo's model are presented.</doc>
        <source-position filename="gdaui-combo.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="665">a #GdauiCombo widget</doc>
            <type name="Combo" c:type="GdauiCombo*"/>
          </instance-parameter>
          <parameter name="add_null" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="666">set to %TRUE to add a NULL value to the combo box</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_null_selected"
              c:identifier="gdaui_combo_is_null_selected"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-combo.c"
             line="681">Tell if the currently selected entry represents the "undefined choice" entry.</doc>
        <source-position filename="gdaui-combo.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-combo.c"
               line="687">%TRUE if the %NULL value is selected</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="683">a #GdauiCombo widget</doc>
            <type name="Combo" c:type="GdauiCombo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_data"
              c:identifier="gdaui_combo_set_data"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-combo.c"
             line="383">Makes @combo display data stored in @model (makes the
combo widget refresh its list of values and display the values contained
in the model). A NULL @model will make the combo empty
and disassociate the previous model, if any.

if @n_cols is %0, then all the columns of @model will be displayed in @combo.</doc>
        <source-position filename="gdaui-combo.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="385">a #GdauiCombo widget.</doc>
            <type name="Combo" c:type="GdauiCombo*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="386">a #GdaDataModel object to get data from.</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="n_cols" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="387">number of columns in the model to be shown</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cols_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="388">an array of columns to be shown, its size must be @n_cols</doc>
            <array length="1" zero-terminated="0" c:type="gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_model"
              c:identifier="gdaui_combo_set_model"
              version="4.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-combo.c"
             line="359">Makes @combo display data stored in @model (makes the
combo widget refresh its list of values and display the values contained
in the model). A NULL @model will make the combo empty
and disassociate the previous model, if any.

if @n_cols is %0, then all the columns of @model will be displayed in @combo.</doc>
        <source-position filename="gdaui-combo.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="361">a #GdauiCombo widget.</doc>
            <type name="Combo" c:type="GdauiCombo*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="362">a #GdaDataModel object.</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
          <parameter name="n_cols" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="363">number of columns in the model to be shown</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cols_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-combo.c"
                 line="364">an array of columns to be shown, its size must be @n_cols</doc>
            <array length="1" zero-terminated="0" c:type="gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <property name="as-list" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel"/>
      </property>
      <field name="object">
        <type name="Gtk.ComboBox" c:type="GtkComboBox"/>
      </field>
      <field name="priv">
        <type name="ComboPrivate" c:type="GdauiComboPrivate*"/>
      </field>
    </class>
    <record name="ComboClass"
            c:type="GdauiComboClass"
            glib:is-gtype-struct-for="Combo">
      <source-position filename="gdaui-combo.h" line="45"/>
      <field name="parent_class">
        <type name="Gtk.ComboBoxClass" c:type="GtkComboBoxClass"/>
      </field>
    </record>
    <record name="ComboPrivate" c:type="GdauiComboPrivate" disguised="1">
      <source-position filename="gdaui-combo.h" line="36"/>
    </record>
    <function-macro name="DATA_CELL_RENDERER_BIN"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_BIN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_BIN_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_BIN_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_BIN_GET_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_BIN_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_BOOLEAN"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_BOOLEAN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_BOOLEAN_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_BOOLEAN_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_BOOLEAN_GET_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_BOOLEAN_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_COMBO"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_COMBO"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_COMBO_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_COMBO_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_COMBO_GET_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_COMBO_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_INFO"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_INFO"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_INFO_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_INFO_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_INFO_GET_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_INFO_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_TEXTUAL"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_TEXTUAL"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_TEXTUAL_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_TEXTUAL_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CELL_RENDERER_TEXTUAL_GET_CLASS"
                    c:identifier="GDAUI_DATA_CELL_RENDERER_TEXTUAL_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_ENTRY"
                    c:identifier="GDAUI_DATA_ENTRY"
                    introspectable="0">
      <source-position filename="gdaui-data-entry.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_ENTRY_GET_IFACE"
                    c:identifier="GDAUI_DATA_ENTRY_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdaui-data-entry.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_FILTER"
                    c:identifier="GDAUI_DATA_FILTER"
                    introspectable="0">
      <source-position filename="gdaui-data-filter.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_FILTER_CLASS"
                    c:identifier="GDAUI_DATA_FILTER_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-data-filter.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_PROXY"
                    c:identifier="GDAUI_DATA_PROXY"
                    introspectable="0">
      <source-position filename="gdaui-data-proxy.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_PROXY_GET_IFACE"
                    c:identifier="GDAUI_DATA_PROXY_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdaui-data-proxy.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_PROXY_INFO"
                    c:identifier="GDAUI_DATA_PROXY_INFO"
                    introspectable="0">
      <source-position filename="gdaui-data-proxy-info.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_PROXY_INFO_CLASS"
                    c:identifier="GDAUI_DATA_PROXY_INFO_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-data-proxy-info.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_SELECTOR"
                    c:identifier="GDAUI_DATA_SELECTOR"
                    introspectable="0">
      <source-position filename="gdaui-data-selector.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_SELECTOR_GET_IFACE"
                    c:identifier="GDAUI_DATA_SELECTOR_GET_IFACE"
                    introspectable="0">
      <source-position filename="gdaui-data-selector.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_STORE"
                    c:identifier="GDAUI_DATA_STORE"
                    introspectable="0">
      <source-position filename="gdaui-data-store.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_STORE_CLASS"
                    c:identifier="GDAUI_DATA_STORE_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-data-store.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="DataCellRendererBin"
           c:symbol-prefix="data_cell_renderer_bin"
           c:type="GdauiDataCellRendererBin"
           parent="Gtk.CellRendererPixbuf"
           glib:type-name="GdauiDataCellRendererBin"
           glib:get-type="gdaui_data_cell_renderer_bin_get_type"
           glib:type-struct="DataCellRendererBinClass">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="53"/>
      <constructor name="new" c:identifier="gdaui_data_cell_renderer_bin_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-data-cell-renderer-bin.c"
             line="318">Creates a new #GdauiDataCellRendererBin. Adjust rendering
parameters using object properties. Object properties can be set
globally (with g_object_set()). Also, with #GtkTreeViewColumn, you
can bind a property to a value in a #GtkTreeModel. For example, you
can bind the "active" property on the cell renderer to a bin value
in the model, thus causing the check button to reflect the state of
the model.</doc>
        <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-data-cell-renderer-bin.c"
               line="331">the new cell renderer</doc>
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-bin.c"
                 line="320">a #GdaDataHandler object</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-bin.c"
                 line="321">the #GType of the data to be displayed</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="changed">
        <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell_renderer" transfer-ownership="none">
            <type name="DataCellRendererBin"
                  c:type="GdauiDataCellRendererBin*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <property name="data-handler"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataHandler"/>
      </property>
      <property name="editable" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="value" writable="1" transfer-ownership="none">
        <type name="GObject.Value"/>
      </property>
      <property name="value-attributes"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererPixbuf" c:type="GtkCellRendererPixbuf"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererBinPrivate"
              c:type="GdauiDataCellRendererBinPrivate*"/>
      </field>
      <glib:signal name="changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererBinClass"
            c:type="GdauiDataCellRendererBinClass"
            glib:is-gtype-struct-for="DataCellRendererBin">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="53"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererPixbufClass"
              c:type="GtkCellRendererPixbufClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                           line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer" transfer-ownership="none">
              <type name="DataCellRendererBin"
                    c:type="GdauiDataCellRendererBin*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererBinPrivate"
            c:type="GdauiDataCellRendererBinPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="37"/>
    </record>
    <class name="DataCellRendererBoolean"
           c:symbol-prefix="data_cell_renderer_boolean"
           c:type="GdauiDataCellRendererBoolean"
           parent="Gtk.CellRendererToggle"
           glib:type-name="GdauiDataCellRendererBoolean"
           glib:get-type="gdaui_data_cell_renderer_boolean_get_type"
           glib:type-struct="DataCellRendererBooleanClass">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="53"/>
      <constructor name="new"
                   c:identifier="gdaui_data_cell_renderer_boolean_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-data-cell-renderer-boolean.c"
             line="325">Creates a new #GdauiDataCellRendererBoolean. Adjust rendering
parameters using object properties. Object properties can be set
globally (with g_object_set()). Also, with #GtkTreeViewColumn, you
can bind a property to a value in a #GtkTreeModel. For example, you
can bind the "active" property on the cell renderer to a boolean value
in the model, thus causing the check button to reflect the state of
the model.</doc>
        <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-data-cell-renderer-boolean.c"
               line="338">the new cell renderer</doc>
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-boolean.c"
                 line="327">a #GdaDataHandler object</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-boolean.c"
                 line="328">the #GType of the data to be displayed</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="changed">
        <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell_renderer" transfer-ownership="none">
            <type name="DataCellRendererBoolean"
                  c:type="GdauiDataCellRendererBoolean*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <property name="data-handler"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataHandler"/>
      </property>
      <property name="editable" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="value" writable="1" transfer-ownership="none">
        <type name="GObject.Value"/>
      </property>
      <property name="value-attributes"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererToggle" c:type="GtkCellRendererToggle"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererBooleanPrivate"
              c:type="GdauiDataCellRendererBooleanPrivate*"/>
      </field>
      <glib:signal name="changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererBooleanClass"
            c:type="GdauiDataCellRendererBooleanClass"
            glib:is-gtype-struct-for="DataCellRendererBoolean">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="53"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererToggleClass"
              c:type="GtkCellRendererToggleClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                           line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer" transfer-ownership="none">
              <type name="DataCellRendererBoolean"
                    c:type="GdauiDataCellRendererBoolean*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererBooleanPrivate"
            c:type="GdauiDataCellRendererBooleanPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="37"/>
    </record>
    <class name="DataCellRendererCombo"
           c:symbol-prefix="data_cell_renderer_combo"
           c:type="GdauiDataCellRendererCombo"
           parent="Gtk.CellRendererText"
           glib:type-name="GdauiDataCellRendererCombo"
           glib:get-type="gdaui_data_cell_renderer_combo_get_type"
           glib:type-struct="DataCellRendererComboClass">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="53"/>
      <constructor name="new"
                   c:identifier="gdaui_data_cell_renderer_combo_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-data-cell-renderer-combo.c"
             line="433">Creates a new #GdauiDataCellRendererCombo which will fill the parameters listed in
@source-&gt;nodes with values available from @source-&gt;data_model.</doc>
        <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-data-cell-renderer-combo.c"
               line="441">the new cell renderer</doc>
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="paramlist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-combo.c"
                 line="435">a #GdaSet object</doc>
            <type name="Set" c:type="GdauiSet*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-combo.c"
                 line="436">a #GdauiSetSource structure listed in @paramlist-&gt;sources_list</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="changed" introspectable="0">
        <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell_renderer_combo"
                              transfer-ownership="none">
            <type name="DataCellRendererCombo"
                  c:type="GdauiDataCellRendererCombo*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_values" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="all_new_values" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <property name="data-set"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Set"/>
      </property>
      <property name="data-set-source"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="set-default-if-invalid"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-expander"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="value-attributes"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="values"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="values-display"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererText" c:type="GtkCellRendererText"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererComboPrivate"
              c:type="GdauiDataCellRendererComboPrivate*"/>
      </field>
      <glib:signal name="changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="p1"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererComboClass"
            c:type="GdauiDataCellRendererComboClass"
            glib:is-gtype-struct-for="DataCellRendererCombo">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="53"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererTextClass"
              c:type="GtkCellRendererTextClass"/>
      </field>
      <field name="changed" introspectable="0">
        <callback name="changed" introspectable="0">
          <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                           line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer_combo" transfer-ownership="none">
              <type name="DataCellRendererCombo"
                    c:type="GdauiDataCellRendererCombo*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="new_values" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
            <parameter name="all_new_values" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererComboPrivate"
            c:type="GdauiDataCellRendererComboPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="37"/>
    </record>
    <class name="DataCellRendererInfo"
           c:symbol-prefix="data_cell_renderer_info"
           c:type="GdauiDataCellRendererInfo"
           parent="Gtk.CellRenderer"
           glib:type-name="GdauiDataCellRendererInfo"
           glib:get-type="gdaui_data_cell_renderer_info_get_type"
           glib:type-struct="DataCellRendererInfoClass">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="55"/>
      <constructor name="new" c:identifier="gdaui_data_cell_renderer_info_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-data-cell-renderer-info.c"
             line="294">Creates a new #GdauiDataCellRendererInfo. Adjust rendering
parameters using object properties. Object properties can be set
globally (with g_object_set()). Also, with #GtkTreeViewColumn, you
can bind a property to a value in a #GtkTreeModel. For example, you
can bind the "active" property on the cell renderer to a boolean value
in the model, thus causing the check button to reflect the state of
the model.</doc>
        <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                         line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-data-cell-renderer-info.c"
               line="308">the new cell renderer</doc>
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-info.c"
                 line="296">a #GdauiDataStore</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-info.c"
                 line="297">a #GdaDataModelIter</doc>
            <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
          </parameter>
          <parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-info.c"
                 line="298">a #GdauiSetGroup pointer</doc>
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="status_changed">
        <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell_renderer_info"
                              transfer-ownership="none">
            <type name="DataCellRendererInfo"
                  c:type="GdauiDataCellRendererInfo*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="requested_action" transfer-ownership="none">
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
        </parameters>
      </virtual-method>
      <property name="editable" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="group"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="iter"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataModelIter"/>
      </property>
      <property name="store"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DataStore"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="value-attributes"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRenderer" c:type="GtkCellRenderer"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererInfoPriv"
              c:type="GdauiDataCellRendererInfoPriv*"/>
      </field>
      <glib:signal name="status-changed" when="last" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererInfoClass"
            c:type="GdauiDataCellRendererInfoClass"
            glib:is-gtype-struct-for="DataCellRendererInfo">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="55"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererClass" c:type="GtkCellRendererClass"/>
      </field>
      <field name="status_changed">
        <callback name="status_changed">
          <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                           line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer_info" transfer-ownership="none">
              <type name="DataCellRendererInfo"
                    c:type="GdauiDataCellRendererInfo*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="requested_action" transfer-ownership="none">
              <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererInfoPriv"
            c:type="GdauiDataCellRendererInfoPriv"
            disguised="1">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="39"/>
    </record>
    <class name="DataCellRendererTextual"
           c:symbol-prefix="data_cell_renderer_textual"
           c:type="GdauiDataCellRendererTextual"
           parent="Gtk.CellRendererText"
           glib:type-name="GdauiDataCellRendererTextual"
           glib:get-type="gdaui_data_cell_renderer_textual_get_type"
           glib:type-struct="DataCellRendererTextualClass">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="54"/>
      <constructor name="new"
                   c:identifier="gdaui_data_cell_renderer_textual_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-data-cell-renderer-textual.c"
             line="573">Creates a new #GdauiDataCellRendererTextual. Adjust how text is drawn using
object properties. Object properties can be
set globally (with g_object_set()). Also, with #GtkTreeViewColumn,
you can bind a property to a value in a #GtkTreeModel. For example,
you can bind the "text" property on the cell renderer to a string
value in the model, thus rendering a different string in each row
of the #GtkTreeView</doc>
        <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-data-cell-renderer-textual.c"
               line="587">the new cell renderer</doc>
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="dh"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-textual.c"
                 line="575">a #GdaDataHandler object, or %NULL</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-textual.c"
                 line="576">the #GType being edited</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-data-cell-renderer-textual.c"
                 line="577">options as a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="changed">
        <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell_renderer_textual"
                              transfer-ownership="none">
            <type name="DataCellRendererTextual"
                  c:type="GdauiDataCellRendererTextual*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <property name="data-handler"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataHandler"/>
      </property>
      <property name="options"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="to-be-deleted"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="value"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="value-attributes"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererText" c:type="GtkCellRendererText"/>
      </field>
      <field name="priv">
        <type name="DataCellRendererTextualPrivate"
              c:type="GdauiDataCellRendererTextualPrivate*"/>
      </field>
      <glib:signal name="changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Value"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DataCellRendererTextualClass"
            c:type="GdauiDataCellRendererTextualClass"
            glib:is-gtype-struct-for="DataCellRendererTextual">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="54"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererTextClass"
              c:type="GtkCellRendererTextClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                           line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer_textual" transfer-ownership="none">
              <type name="DataCellRendererTextual"
                    c:type="GdauiDataCellRendererTextual*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DataCellRendererTextualPrivate"
            c:type="GdauiDataCellRendererTextualPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="38"/>
    </record>
    <interface name="DataEntry"
               c:symbol-prefix="data_entry"
               c:type="GdauiDataEntry"
               glib:type-name="GdauiDataEntry"
               glib:get-type="gdaui_data_entry_get_type"
               glib:type-struct="DataEntryIface">
      <source-position filename="gdaui-data-entry.h" line="86"/>
      <prerequisite name="Gtk.Widget"/>
      <function name="error_quark" c:identifier="gdaui_data_entry_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <virtual-method name="can_expand"
                      invoker="can_expand"
                      version="4.2"
                      deprecated="1"
                      deprecated-version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="447">Used for the layout of #GdaDataEntry widgets in containers: queries if @de requires
horizontal or vertical expansion, depending on @horiz</doc>
        <doc-deprecated xml:space="preserve">use the GtkWidget::hexpand, GtkWidget::wexpand or GtkWidget::expand properties</doc-deprecated>
        <source-position filename="gdaui-data-entry.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="455">%TRUE if the widget requires expansion</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="449">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="horiz" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="450">%TRUE to query horizontal expansion requirements, or %FALSE for vertical</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="contents_activated">
        <source-position filename="gdaui-data-entry.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="contents_modified">
        <source-position filename="gdaui-data-entry.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="contents_valid" throws="1">
        <source-position filename="gdaui-data-entry.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="expand_changed">
        <source-position filename="gdaui-data-entry.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_attributes"
                      invoker="get_attributes"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="404">Retrieves the parameters of the GdauiDataEntry widget.</doc>
        <source-position filename="gdaui-data-entry.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="410">the OR'ed bits corresponding to the attributes.</doc>
          <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="406">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_editable" invoker="get_editable" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="495">Tells if @de can be edited by the user</doc>
        <source-position filename="gdaui-data-entry.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="501">%TRUE if @de is editable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="497">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_handler" invoker="get_handler" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="426">Fetch the GdaDataHandler the GdauiDataEntry is using</doc>
        <source-position filename="gdaui-data-entry.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="432">the GdaDataHandler object</doc>
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="428">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_ref_value">
        <source-position filename="gdaui-data-entry.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="222">Fetch the value held in the GdauiDataEntry widget. If the value is set to NULL,
the returned value is of type GDA_TYPE_NULL. If the value is set to default,
then the returned value is of type GDA_TYPE_NULL or is the default value if it
has been provided to the widget (and is of the same type as the one provided by @de).</doc>
        <source-position filename="gdaui-data-entry.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="231">a new #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="224">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value_type"
                      invoker="get_value_type"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="178">Fetch the type of data the GdauiDataEntry handles</doc>
        <source-position filename="gdaui-data-entry.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="184">the GType type</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="180">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="grab_focus" invoker="grab_focus" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="519">Makes @de grab the focus for the window it's in</doc>
        <source-position filename="gdaui-data-entry.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="521">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes"
                      invoker="set_attributes"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="384">Sets the parameters of the #GdauiDataEntry. Only the attributes corresponding to the
mask are set, the other ones are ignored.</doc>
        <source-position filename="gdaui-data-entry.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="386">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="attrs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="387">the attributes to set (OR'ed between them)</doc>
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="388">the mask corresponding to the considered attributes</doc>
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_editable" invoker="set_editable" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="475">Set if @de can be modified or not by the user</doc>
        <source-position filename="gdaui-data-entry.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="477">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="478">set to %TRUE to have an editable data entry</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_ref_value">
        <source-position filename="gdaui-data-entry.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_unknown_color"
                      invoker="set_unknown_color"
                      version="5.0.3">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="536">Defines the color to be used when @de displays an invalid value. Any value not
between 0. and 1. will result in the default hard coded values to be used (grayish).</doc>
        <source-position filename="gdaui-data-entry.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="538">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="539">the red component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="540">the green component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="541">the blue component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="542">the alpha component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="198">Push a value into the #GdauiDataEntry. The value parameter must either be:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;of type GDA_TYPE_NULL (may be created using gda_value_new_null()) to
     represent a NULL value (SQL NULL), or&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;of type specified using gdaui_data_entry_set_value_type(), or&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;NULL to represent an undetermined value (usually an error)&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <source-position filename="gdaui-data-entry.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="200">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="201">a #GValue, or %NULL</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value_default">
        <source-position filename="gdaui-data-entry.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value_type"
                      invoker="set_value_type"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="158">Sets the type of value the GdauiDataEntry will handle. The type must be compatible with what
the widget can handle.</doc>
        <source-position filename="gdaui-data-entry.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="160">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="161">the #GType of the data to be displayed</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="status_changed">
        <source-position filename="gdaui-data-entry.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="validate"
                      invoker="validate"
                      version="5.2"
                      throws="1">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="273">Tests the validity of @de's contents. This function must be overrided by implementators.

Default implementation returns TRUE.</doc>
        <source-position filename="gdaui-data-entry.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="282">TRUE if @de's contents is valid</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="275">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="can_expand"
              c:identifier="gdaui_data_entry_can_expand"
              version="4.2"
              deprecated="1"
              deprecated-version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="447">Used for the layout of #GdaDataEntry widgets in containers: queries if @de requires
horizontal or vertical expansion, depending on @horiz</doc>
        <doc-deprecated xml:space="preserve">use the GtkWidget::hexpand, GtkWidget::wexpand or GtkWidget::expand properties</doc-deprecated>
        <source-position filename="gdaui-data-entry.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="455">%TRUE if the widget requires expansion</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="449">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="horiz" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="450">%TRUE to query horizontal expansion requirements, or %FALSE for vertical</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="content_is_valid"
              c:identifier="gdaui_data_entry_content_is_valid"
              version="4.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="5.2"
              throws="1">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="246">Tests the validity of @de's contents. The validity is a determined from:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;the @de widget itself if it is capable of doing it (depending on the implementation)&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;the results of the "contents-valid" signal which can be connected from &lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <source-position filename="gdaui-data-entry.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="257">TRUE if @de's contents is valid</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="248">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_attributes"
              c:identifier="gdaui_data_entry_get_attributes"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="404">Retrieves the parameters of the GdauiDataEntry widget.</doc>
        <source-position filename="gdaui-data-entry.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="410">the OR'ed bits corresponding to the attributes.</doc>
          <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="406">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_editable"
              c:identifier="gdaui_data_entry_get_editable"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="495">Tells if @de can be edited by the user</doc>
        <source-position filename="gdaui-data-entry.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="501">%TRUE if @de is editable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="497">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handler"
              c:identifier="gdaui_data_entry_get_handler"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="426">Fetch the GdaDataHandler the GdauiDataEntry is using</doc>
        <source-position filename="gdaui-data-entry.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="432">the GdaDataHandler object</doc>
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="428">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reference_value"
              c:identifier="gdaui_data_entry_get_reference_value"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="337">Fetch the reference value held in the #GdauiDataEntry widget</doc>
        <source-position filename="gdaui-data-entry.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="343">the #GValue (not modifiable)</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="339">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="gdaui_data_entry_get_value"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="222">Fetch the value held in the GdauiDataEntry widget. If the value is set to NULL,
the returned value is of type GDA_TYPE_NULL. If the value is set to default,
then the returned value is of type GDA_TYPE_NULL or is the default value if it
has been provided to the widget (and is of the same type as the one provided by @de).</doc>
        <source-position filename="gdaui-data-entry.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="231">a new #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="224">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="gdaui_data_entry_get_value_type"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="178">Fetch the type of data the GdauiDataEntry handles</doc>
        <source-position filename="gdaui-data-entry.h" line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="184">the GType type</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="180">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="grab_focus"
              c:identifier="gdaui_data_entry_grab_focus"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="519">Makes @de grab the focus for the window it's in</doc>
        <source-position filename="gdaui-data-entry.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="521">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_attributes"
              c:identifier="gdaui_data_entry_set_attributes"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="384">Sets the parameters of the #GdauiDataEntry. Only the attributes corresponding to the
mask are set, the other ones are ignored.</doc>
        <source-position filename="gdaui-data-entry.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="386">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="attrs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="387">the attributes to set (OR'ed between them)</doc>
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="388">the mask corresponding to the considered attributes</doc>
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_value"
              c:identifier="gdaui_data_entry_set_default_value"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="359">Sets the default value for the GdauiDataEntry which gets displayed when the
user forces the default value. If it is not set then it is set to type GDA_TYPE_NULL.
The value parameter must either be:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;NULL or of type GDA_TYPE_NULL, or&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;of type specified using gdaui_data_entry_set_value_type().&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <source-position filename="gdaui-data-entry.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="361">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="362">a #GValue, or %NULL</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_editable"
              c:identifier="gdaui_data_entry_set_editable"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="475">Set if @de can be modified or not by the user</doc>
        <source-position filename="gdaui-data-entry.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="477">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="478">set to %TRUE to have an editable data entry</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reference_current"
              c:identifier="gdaui_data_entry_set_reference_current"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="316">Tells that the current value in @de is to be considered as the reference value</doc>
        <source-position filename="gdaui-data-entry.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="318">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_reference_value"
              c:identifier="gdaui_data_entry_set_reference_value"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="297">Push a value into the GdauiDataEntry in the same way as gdaui_data_entry_set_value() but
also sets this value as the reference value.</doc>
        <source-position filename="gdaui-data-entry.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="299">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="300">a #GValue, or %NULL</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unknown_color"
              c:identifier="gdaui_data_entry_set_unknown_color"
              version="5.0.3">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="536">Defines the color to be used when @de displays an invalid value. Any value not
between 0. and 1. will result in the default hard coded values to be used (grayish).</doc>
        <source-position filename="gdaui-data-entry.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="538">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="539">the red component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="540">the green component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="541">the blue component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="542">the alpha component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="gdaui_data_entry_set_value"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="198">Push a value into the #GdauiDataEntry. The value parameter must either be:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;of type GDA_TYPE_NULL (may be created using gda_value_new_null()) to
     represent a NULL value (SQL NULL), or&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;of type specified using gdaui_data_entry_set_value_type(), or&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;NULL to represent an undetermined value (usually an error)&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <source-position filename="gdaui-data-entry.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="200">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="201">a #GValue, or %NULL</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_type"
              c:identifier="gdaui_data_entry_set_value_type"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="158">Sets the type of value the GdauiDataEntry will handle. The type must be compatible with what
the widget can handle.</doc>
        <source-position filename="gdaui-data-entry.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="160">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="161">the #GType of the data to be displayed</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="validate"
              c:identifier="gdaui_data_entry_validate"
              version="5.2"
              throws="1">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="273">Tests the validity of @de's contents. This function must be overrided by implementators.

Default implementation returns TRUE.</doc>
        <source-position filename="gdaui-data-entry.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="282">TRUE if @de's contents is valid</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="de" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="275">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
            <type name="DataEntry" c:type="GdauiDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="contents-activated" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="contents-modified" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="contents-valid"
                   when="last"
                   introspectable="0"
                   deprecated="1"
                   deprecated-version="5.2.0">
        <doc xml:space="preserve"
             filename="gdaui-data-entry.c"
             line="123">Gets emitted when data entered to the #GdaDataEntry widget must be validated.

For bindings use #gdaui_data_entry_validate function.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-entry.c"
               line="132">TRUE when the data was successfull validated, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="error"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="126">a #GError to set erros to or NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="expand-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="status-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <enumeration name="DataEntryError"
                 c:type="GdauiDataEntryError"
                 glib:error-domain="gdaui_data_entry_error">
      <source-position filename="gdaui-data-entry.h" line="46"/>
      <member name="file_not_found_error"
              value="0"
              c:identifier="GDAUI_DATA_ENTRY_FILE_NOT_FOUND_ERROR">
      </member>
      <member name="invalid_data_error"
              value="1"
              c:identifier="GDAUI_DATA_ENTRY_INVALID_DATA_ERROR">
      </member>
    </enumeration>
    <record name="DataEntryIface"
            c:type="GdauiDataEntryIface"
            glib:is-gtype-struct-for="DataEntry">
      <source-position filename="gdaui-data-entry.h" line="86"/>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="contents_modified">
        <callback name="contents_modified">
          <source-position filename="gdaui-data-entry.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="contents_activated">
        <callback name="contents_activated">
          <source-position filename="gdaui-data-entry.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="status_changed">
        <callback name="status_changed">
          <source-position filename="gdaui-data-entry.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="contents_valid">
        <callback name="contents_valid" throws="1">
          <source-position filename="gdaui-data-entry.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value_type">
        <callback name="set_value_type">
          <source-position filename="gdaui-data-entry.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="160">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="161">the #GType of the data to be displayed</doc>
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value_type">
        <callback name="get_value_type">
          <source-position filename="gdaui-data-entry.h" line="61"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="184">the GType type</doc>
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="180">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value">
          <source-position filename="gdaui-data-entry.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="200">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="value"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="201">a #GValue, or %NULL</doc>
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value">
        <callback name="get_value">
          <source-position filename="gdaui-data-entry.h" line="63"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="231">a new #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="224">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_ref_value">
        <callback name="set_ref_value">
          <source-position filename="gdaui-data-entry.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_ref_value">
        <callback name="get_ref_value">
          <source-position filename="gdaui-data-entry.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value_default">
        <callback name="set_value_default">
          <source-position filename="gdaui-data-entry.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes">
        <callback name="set_attributes">
          <source-position filename="gdaui-data-entry.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="386">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="attrs" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="387">the attributes to set (OR'ed between them)</doc>
              <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
            </parameter>
            <parameter name="mask" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="388">the mask corresponding to the considered attributes</doc>
              <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_attributes">
        <callback name="get_attributes">
          <source-position filename="gdaui-data-entry.h" line="68"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="410">the OR'ed bits corresponding to the attributes.</doc>
            <type name="Gda.ValueAttribute" c:type="GdaValueAttribute"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="406">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_handler">
        <callback name="get_handler">
          <source-position filename="gdaui-data-entry.h" line="69"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="432">the GdaDataHandler object</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="428">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_expand">
        <callback name="can_expand">
          <source-position filename="gdaui-data-entry.h" line="70"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="455">%TRUE if the widget requires expansion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="449">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="horiz" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="450">%TRUE to query horizontal expansion requirements, or %FALSE for vertical</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_editable">
        <callback name="set_editable">
          <source-position filename="gdaui-data-entry.h" line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="477">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="editable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="478">set to %TRUE to have an editable data entry</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_editable">
        <callback name="get_editable">
          <source-position filename="gdaui-data-entry.h" line="72"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="501">%TRUE if @de is editable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="497">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="grab_focus">
        <callback name="grab_focus">
          <source-position filename="gdaui-data-entry.h" line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="521">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="expand_changed">
        <callback name="expand_changed">
          <source-position filename="gdaui-data-entry.h" line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_unknown_color">
        <callback name="set_unknown_color">
          <source-position filename="gdaui-data-entry.h" line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="538">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
            <parameter name="red" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="539">the red component of a color</doc>
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="green" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="540">the green component of a color</doc>
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="blue" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="541">the blue component of a color</doc>
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="alpha" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="542">the alpha component of a color</doc>
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="validate">
        <callback name="validate" throws="1">
          <source-position filename="gdaui-data-entry.h" line="81"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-entry.c"
                 line="282">TRUE if @de's contents is valid</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="de" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-entry.c"
                   line="275">a #GtkWidget object which implements the #GdauiDataEntry interface</doc>
              <type name="DataEntry" c:type="GdauiDataEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gdaui_reserved2" introspectable="0">
        <callback name="_gdaui_reserved2">
          <source-position filename="gdaui-data-entry.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gdaui_reserved3" introspectable="0">
        <callback name="_gdaui_reserved3">
          <source-position filename="gdaui-data-entry.h" line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DataFilter"
           c:symbol-prefix="data_filter"
           c:type="GdauiDataFilter"
           parent="Gtk.Box"
           glib:type-name="GdauiDataFilter"
           glib:get-type="gdaui_data_filter_get_type"
           glib:type-struct="DataFilterClass">
      <source-position filename="gdaui-data-filter.h" line="52"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gdaui_data_filter_new"
                   version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-filter.c"
             line="247">Creates a new #GdauiDataFilter widget suitable to change the filter expression
for @data_widget's displayed rows</doc>
        <source-position filename="gdaui-data-filter.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-data-filter.c"
               line="254">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-filter.c"
                 line="249">a widget implementing the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-widget" writable="1" transfer-ownership="none">
        <type name="DataProxy"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="DataFilterPriv" c:type="GdauiDataFilterPriv*"/>
      </field>
    </class>
    <record name="DataFilterClass"
            c:type="GdauiDataFilterClass"
            glib:is-gtype-struct-for="DataFilter">
      <source-position filename="gdaui-data-filter.h" line="52"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="DataFilterPriv" c:type="GdauiDataFilterPriv" disguised="1">
      <source-position filename="gdaui-data-filter.h" line="38"/>
    </record>
    <interface name="DataProxy"
               c:symbol-prefix="data_proxy"
               c:type="GdauiDataProxy"
               glib:type-name="GdauiDataProxy"
               glib:get-type="gdaui_data_proxy_get_type"
               glib:type-struct="DataProxyIface">
      <source-position filename="gdaui-data-proxy.h" line="69"/>
      <virtual-method name="get_actions_group"
                      invoker="get_actions_group"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="154">Each widget imlplementing the #GdauiDataProxy interface provides actions. Actions can be triggered
using the gdaui_data_proxy_perform_action() method, but using this method allows for the creation of
toolbars, menus, etc calling these actions.

The actions are among:
&lt;itemizedlist&gt;&lt;listitem&gt;&lt;para&gt;Data edition actions: "ActionNew", "ActionCommit",
   "ActionDelete", "ActionReset". Note that the "ActionDelete" action is actually a #GtkToggleAction
   action which can be used to delete a row or undelete it.&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Record by record moving: "ActionFirstRecord", "ActionPrevRecord",
   "ActionNextRecord", "ActionLastRecord".&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Chuncks of records moving: "ActionFirstChunck", "ActionPrevChunck",
    "ActionNextChunck", "ActionLastChunck".&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Filtering: "ActionFilter".&lt;/para&gt;&lt;/listitem&gt;&lt;/itemizedlist&gt;</doc>
        <source-position filename="gdaui-data-proxy.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="172">the #GtkActionGroup with all the possible actions on the widget.</doc>
          <type name="Gtk.ActionGroup" c:type="GtkActionGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="156">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_proxy" invoker="get_proxy" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="93">Get a pointer to the #GdaDataProxy being used by @iface</doc>
        <source-position filename="gdaui-data-proxy.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="99">a #GdaDataProxy pointer</doc>
          <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="95">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_write_mode"
                      invoker="get_write_mode"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="283">Get the way the modifications stored in the #GdaDataProxy used internally by @iface are written back to
the #GdaDataModel which holds the data displayed in @iface.</doc>
        <source-position filename="gdaui-data-proxy.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="290">the write mode used by @iface</doc>
          <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="285">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="proxy_changed">
        <source-position filename="gdaui-data-proxy.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_column_editable">
        <source-position filename="gdaui-data-proxy.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="editable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_write_mode"
                      invoker="set_write_mode"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="260">Specifies the way the modifications stored in the #GdaDataProxy used internally by @iface are written back to
the #GdaDataModel which holds the data displayed in @iface.</doc>
        <source-position filename="gdaui-data-proxy.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="268">TRUE if the proposed mode has been taken into account</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="262">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="263">the requested #GdauiDataProxyWriteMode mode</doc>
            <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show_column_actions">
        <source-position filename="gdaui-data-proxy.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="show_actions" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="column_set_editable"
              c:identifier="gdaui_data_proxy_column_set_editable"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="114">Sets if the data entry in the @iface widget at @column (in the data model @iface operates on)
can be edited or not.</doc>
        <source-position filename="gdaui-data-proxy.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="116">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="117">column number of the data</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="118">set to %TRUE to make the column editable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_show_actions"
              c:identifier="gdaui_data_proxy_column_show_actions"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="134">Sets if the data entry in the @iface widget at @column (in the data model @iface operates on) must show its
actions menu or not.</doc>
        <source-position filename="gdaui-data-proxy.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="136">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="137">column number of the data, or -1 to apply the setting to all the columns</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="show_actions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="138">set to %TRUE if the actions menu must be shown</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_actions_group"
              c:identifier="gdaui_data_proxy_get_actions_group"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="154">Each widget imlplementing the #GdauiDataProxy interface provides actions. Actions can be triggered
using the gdaui_data_proxy_perform_action() method, but using this method allows for the creation of
toolbars, menus, etc calling these actions.

The actions are among:
&lt;itemizedlist&gt;&lt;listitem&gt;&lt;para&gt;Data edition actions: "ActionNew", "ActionCommit",
   "ActionDelete", "ActionReset". Note that the "ActionDelete" action is actually a #GtkToggleAction
   action which can be used to delete a row or undelete it.&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Record by record moving: "ActionFirstRecord", "ActionPrevRecord",
   "ActionNextRecord", "ActionLastRecord".&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Chuncks of records moving: "ActionFirstChunck", "ActionPrevChunck",
    "ActionNextChunck", "ActionLastChunck".&lt;/para&gt;&lt;/listitem&gt;
&lt;listitem&gt;&lt;para&gt;Filtering: "ActionFilter".&lt;/para&gt;&lt;/listitem&gt;&lt;/itemizedlist&gt;</doc>
        <source-position filename="gdaui-data-proxy.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="172">the #GtkActionGroup with all the possible actions on the widget.</doc>
          <type name="Gtk.ActionGroup" c:type="GtkActionGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="156">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proxy"
              c:identifier="gdaui_data_proxy_get_proxy"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="93">Get a pointer to the #GdaDataProxy being used by @iface</doc>
        <source-position filename="gdaui-data-proxy.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="99">a #GdaDataProxy pointer</doc>
          <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="95">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_write_mode"
              c:identifier="gdaui_data_proxy_get_write_mode"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="283">Get the way the modifications stored in the #GdaDataProxy used internally by @iface are written back to
the #GdaDataModel which holds the data displayed in @iface.</doc>
        <source-position filename="gdaui-data-proxy.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="290">the write mode used by @iface</doc>
          <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="285">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="perform_action"
              c:identifier="gdaui_data_proxy_perform_action"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="186">Forces the widget to perform the selected @action, as if the user
had pressed on the corresponding action button in the @iface widget,
if the corresponding action is possible and if the @iface widget
supports the action.</doc>
        <source-position filename="gdaui-data-proxy.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="188">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="189">a #GdauiAction action</doc>
            <type name="Action" c:type="GdauiAction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_write_mode"
              c:identifier="gdaui_data_proxy_set_write_mode"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="260">Specifies the way the modifications stored in the #GdaDataProxy used internally by @iface are written back to
the #GdaDataModel which holds the data displayed in @iface.</doc>
        <source-position filename="gdaui-data-proxy.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy.c"
               line="268">TRUE if the proposed mode has been taken into account</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="262">an object which implements the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="263">the requested #GdauiDataProxyWriteMode mode</doc>
            <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="proxy-changed" when="first">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.c"
             line="71">The ::proxy-changed signal is emitted each time the #GdaDataProxy which would be
returned by gdaui_data_proxy_get_proxy() changes. This is generally the result
of changes in the structure of the proxied data model (different number and/or type
of columns for example).</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="74">the GdaDataProxy which would be returned by gdaui_data_proxy_get_proxy()</doc>
            <type name="Gda.DataProxy"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="DataProxyIface"
            c:type="GdauiDataProxyIface"
            glib:is-gtype-struct-for="DataProxy">
      <source-position filename="gdaui-data-proxy.h" line="69"/>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_proxy">
        <callback name="get_proxy">
          <source-position filename="gdaui-data-proxy.h" line="60"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="99">a #GdaDataProxy pointer</doc>
            <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-proxy.c"
                   line="95">an object which implements the #GdauiDataProxy interface</doc>
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_column_editable">
        <callback name="set_column_editable">
          <source-position filename="gdaui-data-proxy.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="editable" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_column_actions">
        <callback name="show_column_actions">
          <source-position filename="gdaui-data-proxy.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="show_actions" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_actions_group">
        <callback name="get_actions_group">
          <source-position filename="gdaui-data-proxy.h" line="63"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="172">the #GtkActionGroup with all the possible actions on the widget.</doc>
            <type name="Gtk.ActionGroup" c:type="GtkActionGroup*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-proxy.c"
                   line="156">an object which implements the #GdauiDataProxy interface</doc>
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_write_mode">
        <callback name="set_write_mode">
          <source-position filename="gdaui-data-proxy.h" line="64"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="268">TRUE if the proposed mode has been taken into account</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-proxy.c"
                   line="262">an object which implements the #GdauiDataProxy interface</doc>
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="mode" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-proxy.c"
                   line="263">the requested #GdauiDataProxyWriteMode mode</doc>
              <type name="DataProxyWriteMode"
                    c:type="GdauiDataProxyWriteMode"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_write_mode">
        <callback name="get_write_mode">
          <source-position filename="gdaui-data-proxy.h" line="65"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy.c"
                 line="290">the write mode used by @iface</doc>
            <type name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-proxy.c"
                   line="285">an object which implements the #GdauiDataProxy interface</doc>
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="proxy_changed">
        <callback name="proxy_changed">
          <source-position filename="gdaui-data-proxy.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataProxy" c:type="GdauiDataProxy*"/>
            </parameter>
            <parameter name="proxy" transfer-ownership="none">
              <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DataProxyInfo"
           c:symbol-prefix="data_proxy_info"
           c:type="GdauiDataProxyInfo"
           parent="Gtk.Box"
           glib:type-name="GdauiDataProxyInfo"
           glib:get-type="gdaui_data_proxy_info_get_type"
           glib:type-struct="DataProxyInfoClass">
      <source-position filename="gdaui-data-proxy-info.h" line="71"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gdaui_data_proxy_info_new"
                   version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy-info.c"
             line="158">Creates a new #GdauiDataProxyInfo widget suitable to display information about @data_proxy</doc>
        <source-position filename="gdaui-data-proxy-info.h" line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-data-proxy-info.c"
               line="165">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="data_proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy-info.c"
                 line="160">a widget implementing the #GdauiDataProxy interface</doc>
            <type name="DataProxy" c:type="GdauiDataProxy*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-proxy-info.c"
                 line="161">OR'ed values, specifying what to display in the new widget</doc>
            <type name="DataProxyInfoFlag" c:type="GdauiDataProxyInfoFlag"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="data-proxy" writable="1" transfer-ownership="none">
        <type name="DataProxy"/>
      </property>
      <property name="flags"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="ui-manager" version="4.2.9" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy-info.c"
             line="134">Use this property to obtain the #GtkUIManager object internally used (to add new actions
for example).</doc>
        <type name="Gtk.UIManager"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="DataProxyInfoPriv" c:type="GdauiDataProxyInfoPriv*"/>
      </field>
    </class>
    <record name="DataProxyInfoClass"
            c:type="GdauiDataProxyInfoClass"
            glib:is-gtype-struct-for="DataProxyInfo">
      <source-position filename="gdaui-data-proxy-info.h" line="71"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <bitfield name="DataProxyInfoFlag" c:type="GdauiDataProxyInfoFlag">
      <source-position filename="gdaui-data-proxy-info.h" line="57"/>
      <member name="none" value="0" c:identifier="GDAUI_DATA_PROXY_INFO_NONE">
      </member>
      <member name="current_row"
              value="1"
              c:identifier="GDAUI_DATA_PROXY_INFO_CURRENT_ROW">
      </member>
      <member name="row_modify_buttons"
              value="4"
              c:identifier="GDAUI_DATA_PROXY_INFO_ROW_MODIFY_BUTTONS">
      </member>
      <member name="row_move_buttons"
              value="8"
              c:identifier="GDAUI_DATA_PROXY_INFO_ROW_MOVE_BUTTONS">
      </member>
      <member name="chunck_change_buttons"
              value="16"
              c:identifier="GDAUI_DATA_PROXY_INFO_CHUNCK_CHANGE_BUTTONS">
      </member>
      <member name="no_filter"
              value="32"
              c:identifier="GDAUI_DATA_PROXY_INFO_NO_FILTER">
      </member>
    </bitfield>
    <record name="DataProxyInfoPriv"
            c:type="GdauiDataProxyInfoPriv"
            disguised="1">
      <source-position filename="gdaui-data-proxy-info.h" line="38"/>
    </record>
    <enumeration name="DataProxyWriteMode" c:type="GdauiDataProxyWriteMode">
      <doc xml:space="preserve"
           filename="gdaui-data-proxy.h"
           line="37">Defines when the data modifications held in the underlying #GdaDataProxy are written to the
data model being proxied (using gda_data_proxy_apply_row_changes()).</doc>
      <source-position filename="gdaui-data-proxy.h" line="52"/>
      <member name="demand"
              value="0"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_DEMAND">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.h"
             line="39">write only when explicitly requested</doc>
      </member>
      <member name="row_change"
              value="1"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_ROW_CHANGE">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.h"
             line="40">write when the current selected row changes</doc>
      </member>
      <member name="value_activated"
              value="2"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_VALUE_ACTIVATED">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.h"
             line="41">write when user activates a value change</doc>
      </member>
      <member name="value_change"
              value="3"
              c:identifier="GDAUI_DATA_PROXY_WRITE_ON_VALUE_CHANGE">
        <doc xml:space="preserve"
             filename="gdaui-data-proxy.h"
             line="42">write when a parameters's value changes</doc>
      </member>
    </enumeration>
    <interface name="DataSelector"
               c:symbol-prefix="data_selector"
               c:type="GdauiDataSelector"
               glib:type-name="GdauiDataSelector"
               glib:get-type="gdaui_data_selector_get_type"
               glib:type-struct="DataSelectorIface">
      <source-position filename="gdaui-data-selector.h" line="55"/>
      <virtual-method name="get_data_set" invoker="get_data_set" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="233">Get the #GdaDataModelIter object represented the current selected row in @iface. This
function may return either %NULL or an invalid iterator (see gda_data_model_iter_is_valid()) if
the selection cannot be represented by a single selected row.

Note that the returned #GdaDataModelIter is actually an iterator iterating on the #GdaDataModel
returned by the gdaui_data_selector_get_model() method.</doc>
        <source-position filename="gdaui-data-selector.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="244">a pointer to a #GdaDataModelIter object, or %NULL</doc>
          <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="235">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_model" invoker="get_model" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="84">Queries the #GdaDataModel from which the data displayed by the widget implementing @iface
are. Beware that the returned data model may be different than the one used when the
widget was created in case it internally uses a #GdaDataProxy.</doc>
        <source-position filename="gdaui-data-selector.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="92">the #GdaDataModel</doc>
          <type name="Gda.DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="86">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_selected_rows"
                      invoker="get_selected_rows"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="125">Gat an array of selected rows. If no row is selected, the the returned value is %NULL.

Please note that rows refers to the "visible" rows
at the time it's being called, which may change if the widget implementing this interface
uses a #GdaDataProxy (as is the case for example for the #GdauiRawForm, #GdauiForm, #GdauiRawGrid
and #GdauiGrid).</doc>
        <source-position filename="gdaui-data-selector.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="136">an array of #gint values, one for each selected row. Use g_array_free() when finished (passing %TRUE as the last argument)</doc>
          <array name="GLib.Array" c:type="GArray*">
            <type name="gint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="127">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="select_row" invoker="select_row" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="151">Force the selection of a specific row.

Please note that @row refers to the "visible" row
at the time it's being called, which may change if the widget implementing this interface
uses a #GdaDataProxy (as is the case for example for the #GdauiRawForm, #GdauiForm, #GdauiRawGrid
and #GdauiGrid).</doc>
        <source-position filename="gdaui-data-selector.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="163">%TRUE if the row has been selected</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="153">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="154">the row to select</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="selection_changed">
        <source-position filename="gdaui-data-selector.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_column_visible"
                      invoker="set_column_visible"
                      version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="199">Shows or hides the data at column @column</doc>
        <source-position filename="gdaui-data-selector.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="201">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="202">a column number, starting at %0, or -1 tp apply to all the columns</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="203">required visibility of the data in the @column column</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_model" invoker="set_model" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="106">Sets the data model from which the data being displayed are. Also see gdaui_data_selector_get_model()</doc>
        <source-position filename="gdaui-data-selector.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="108">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="109">a #GdaDataModel to use</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unselect_row" invoker="unselect_row" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="178">Please note that @row refers to the "visible" row
at the time it's being called, which may change if the widget implementing this interface
uses a #GdaDataProxy (as is the case for example for the #GdauiRawForm, #GdauiForm, #GdauiRawGrid
and #GdauiGrid).</doc>
        <source-position filename="gdaui-data-selector.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="180">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="181">the row to unselect</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_data_set"
              c:identifier="gdaui_data_selector_get_data_set"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="233">Get the #GdaDataModelIter object represented the current selected row in @iface. This
function may return either %NULL or an invalid iterator (see gda_data_model_iter_is_valid()) if
the selection cannot be represented by a single selected row.

Note that the returned #GdaDataModelIter is actually an iterator iterating on the #GdaDataModel
returned by the gdaui_data_selector_get_model() method.</doc>
        <source-position filename="gdaui-data-selector.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="244">a pointer to a #GdaDataModelIter object, or %NULL</doc>
          <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="235">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="gdaui_data_selector_get_model"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="84">Queries the #GdaDataModel from which the data displayed by the widget implementing @iface
are. Beware that the returned data model may be different than the one used when the
widget was created in case it internally uses a #GdaDataProxy.</doc>
        <source-position filename="gdaui-data-selector.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="92">the #GdaDataModel</doc>
          <type name="Gda.DataModel" c:type="GdaDataModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="86">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_rows"
              c:identifier="gdaui_data_selector_get_selected_rows"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="125">Gat an array of selected rows. If no row is selected, the the returned value is %NULL.

Please note that rows refers to the "visible" rows
at the time it's being called, which may change if the widget implementing this interface
uses a #GdaDataProxy (as is the case for example for the #GdauiRawForm, #GdauiForm, #GdauiRawGrid
and #GdauiGrid).</doc>
        <source-position filename="gdaui-data-selector.h" line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="136">an array of #gint values, one for each selected row. Use g_array_free() when finished (passing %TRUE as the last argument)</doc>
          <array name="GLib.Array" c:type="GArray*">
            <type name="gint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="127">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="select_row"
              c:identifier="gdaui_data_selector_select_row"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="151">Force the selection of a specific row.

Please note that @row refers to the "visible" row
at the time it's being called, which may change if the widget implementing this interface
uses a #GdaDataProxy (as is the case for example for the #GdauiRawForm, #GdauiForm, #GdauiRawGrid
and #GdauiGrid).</doc>
        <source-position filename="gdaui-data-selector.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-selector.c"
               line="163">%TRUE if the row has been selected</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="153">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="154">the row to select</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_visible"
              c:identifier="gdaui_data_selector_set_column_visible"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="199">Shows or hides the data at column @column</doc>
        <source-position filename="gdaui-data-selector.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="201">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="202">a column number, starting at %0, or -1 tp apply to all the columns</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="203">required visibility of the data in the @column column</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model"
              c:identifier="gdaui_data_selector_set_model"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="106">Sets the data model from which the data being displayed are. Also see gdaui_data_selector_get_model()</doc>
        <source-position filename="gdaui-data-selector.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="108">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="109">a #GdaDataModel to use</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unselect_row"
              c:identifier="gdaui_data_selector_unselect_row"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-selector.c"
             line="178">Please note that @row refers to the "visible" row
at the time it's being called, which may change if the widget implementing this interface
uses a #GdaDataProxy (as is the case for example for the #GdauiRawForm, #GdauiForm, #GdauiRawGrid
and #GdauiGrid).</doc>
        <source-position filename="gdaui-data-selector.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="180">an object which implements the #GdauiDataSelector interface</doc>
            <type name="DataSelector" c:type="GdauiDataSelector*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="181">the row to unselect</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="selection-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="DataSelectorIface"
            c:type="GdauiDataSelectorIface"
            glib:is-gtype-struct-for="DataSelector">
      <source-position filename="gdaui-data-selector.h" line="55"/>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_model">
        <callback name="get_model">
          <source-position filename="gdaui-data-selector.h" line="45"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="92">the #GdaDataModel</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="86">an object which implements the #GdauiDataSelector interface</doc>
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_model">
        <callback name="set_model">
          <source-position filename="gdaui-data-selector.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="108">an object which implements the #GdauiDataSelector interface</doc>
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="model" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="109">a #GdaDataModel to use</doc>
              <type name="Gda.DataModel" c:type="GdaDataModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_selected_rows">
        <callback name="get_selected_rows">
          <source-position filename="gdaui-data-selector.h" line="47"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="136">an array of #gint values, one for each selected row. Use g_array_free() when finished (passing %TRUE as the last argument)</doc>
            <array name="GLib.Array" c:type="GArray*">
              <type name="gint"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="127">an object which implements the #GdauiDataSelector interface</doc>
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_data_set">
        <callback name="get_data_set">
          <source-position filename="gdaui-data-selector.h" line="48"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="244">a pointer to a #GdaDataModelIter object, or %NULL</doc>
            <type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="235">an object which implements the #GdauiDataSelector interface</doc>
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="select_row">
        <callback name="select_row">
          <source-position filename="gdaui-data-selector.h" line="49"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-selector.c"
                 line="163">%TRUE if the row has been selected</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="153">an object which implements the #GdauiDataSelector interface</doc>
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="154">the row to select</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unselect_row">
        <callback name="unselect_row">
          <source-position filename="gdaui-data-selector.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="180">an object which implements the #GdauiDataSelector interface</doc>
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="181">the row to unselect</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_column_visible">
        <callback name="set_column_visible">
          <source-position filename="gdaui-data-selector.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="201">an object which implements the #GdauiDataSelector interface</doc>
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="202">a column number, starting at %0, or -1 tp apply to all the columns</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="visible" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gdaui-data-selector.c"
                   line="203">required visibility of the data in the @column column</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <source-position filename="gdaui-data-selector.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="DataSelector" c:type="GdauiDataSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DataStore"
           c:symbol-prefix="data_store"
           c:type="GdauiDataStore"
           parent="GObject.Object"
           glib:type-name="GdauiDataStore"
           glib:get-type="gdaui_data_store_get_type"
           glib:type-struct="DataStoreClass">
      <source-position filename="gdaui-data-store.h" line="67"/>
      <implements name="Gtk.TreeModel"/>
      <function name="new" c:identifier="gdaui_data_store_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-store.c"
             line="340">Creates a #GtkTreeModel interface with a #GdaDataModel</doc>
        <source-position filename="gdaui-data-store.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-data-store.c"
               line="346">the new object</doc>
          <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="342">a #GdaDataModel object</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </function>
      <method name="append"
              c:identifier="gdaui_data_store_append"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-store.c"
             line="493">Appends a new row.</doc>
        <source-position filename="gdaui-data-store.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-store.c"
               line="500">%TRUE if no error occurred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="495">a #GdauiDataStore object</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="496">an unset #GtkTreeIter to set to the appended row</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete"
              c:identifier="gdaui_data_store_delete"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-store.c"
             line="433">Marks the row pointed by @iter to be deleted</doc>
        <source-position filename="gdaui-data-store.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="435">a #GdauiDataStore object</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="436">the considered row</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_iter_from_values"
              c:identifier="gdaui_data_store_get_iter_from_values"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-store.c"
             line="569">Sets @iter to the first row where all the values in @values at the columns identified at
@cols_index match. If the row can't be identified, then the contents of @iter is not modified.

NOTE: the @cols_index array MUST contain a column index for each value in @values</doc>
        <source-position filename="gdaui-data-store.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-store.c"
               line="581">%TRUE if the row has been identified @iter was set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="571">a #GdauiDataStore object</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </instance-parameter>
          <parameter name="iter"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="572">an unset #GtkTreeIter to set to the requested row</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="573">a list of #GValue values</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cols_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="574">an array of #gint containing the column number to match each value of @values</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_proxy"
              c:identifier="gdaui_data_store_get_proxy"
              version="4.2">
        <source-position filename="gdaui-data-store.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-store.c"
               line="534">the internal #GdaDataProxy being used by @store</doc>
          <type name="Gda.DataProxy" c:type="GdaDataProxy*"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="532">a #GdauiDataStore object</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_from_iter"
              c:identifier="gdaui_data_store_get_row_from_iter"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-store.c"
             line="547">Get the number of the row represented by @iter</doc>
        <source-position filename="gdaui-data-store.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-store.c"
               line="554">the row number, or -1 if an error occurred</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="549">a #GdauiDataStore object</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="550">a valid #GtkTreeIter</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="gdaui_data_store_set_value"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-store.c"
             line="361">Stores a value in the @store data model.</doc>
        <source-position filename="gdaui-data-store.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-data-store.c"
               line="370">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="363">a #GdauiDataStore object</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="364">the considered row</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="365">the data model column</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="366">the value to store (gets copied)</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="undelete"
              c:identifier="gdaui_data_store_undelete"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-data-store.c"
             line="463">Remove the "to be deleted" mark the row pointed by @iter, if it existed.</doc>
        <source-position filename="gdaui-data-store.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="465">a #GdauiDataStore object</doc>
            <type name="DataStore" c:type="GdauiDataStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-data-store.c"
                 line="466">the considered row</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <property name="model"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="prepend-null-entry"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="proxy" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DataStorePriv" c:type="GdauiDataStorePriv*"/>
      </field>
    </class>
    <record name="DataStoreClass"
            c:type="GdauiDataStoreClass"
            glib:is-gtype-struct-for="DataStore">
      <source-position filename="gdaui-data-store.h" line="67"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="DataStorePriv" c:type="GdauiDataStorePriv" disguised="1">
      <source-position filename="gdaui-data-store.h" line="37"/>
    </record>
    <function-macro name="ENTRY" c:identifier="GDAUI_ENTRY" introspectable="0">
      <source-position filename="data-entries/gdaui-entry.h" line="28"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_BIN"
                    c:identifier="GDAUI_ENTRY_BIN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-bin.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_BIN_CLASS"
                    c:identifier="GDAUI_ENTRY_BIN_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-bin.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_BOOLEAN"
                    c:identifier="GDAUI_ENTRY_BOOLEAN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-boolean.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_BOOLEAN_CLASS"
                    c:identifier="GDAUI_ENTRY_BOOLEAN_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-boolean.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_CLASS"
                    c:identifier="GDAUI_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry.h" line="29"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_COMBO"
                    c:identifier="GDAUI_ENTRY_COMBO"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-combo.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_COMBO_CLASS"
                    c:identifier="GDAUI_ENTRY_COMBO_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-combo.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_COMMON_TIME"
                    c:identifier="GDAUI_ENTRY_COMMON_TIME"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-common-time.h"
                       line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_COMMON_TIME_CLASS"
                    c:identifier="GDAUI_ENTRY_COMMON_TIME_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-common-time.h"
                       line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_DATE"
                    c:identifier="GDAUI_ENTRY_DATE"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-date.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_DATE_CLASS"
                    c:identifier="GDAUI_ENTRY_DATE_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-date.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_GET_CLASS"
                    c:identifier="GDAUI_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_NONE"
                    c:identifier="GDAUI_ENTRY_NONE"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-none.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_NONE_CLASS"
                    c:identifier="GDAUI_ENTRY_NONE_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-none.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_NUMBER"
                    c:identifier="GDAUI_ENTRY_NUMBER"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-number.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_NUMBER_CLASS"
                    c:identifier="GDAUI_ENTRY_NUMBER_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-number.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_SHELL"
                    c:identifier="GDAUI_ENTRY_SHELL"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-shell.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_SHELL_CLASS"
                    c:identifier="GDAUI_ENTRY_SHELL_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-shell.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_STRING"
                    c:identifier="GDAUI_ENTRY_STRING"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-string.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_STRING_CLASS"
                    c:identifier="GDAUI_ENTRY_STRING_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-string.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_TIME"
                    c:identifier="GDAUI_ENTRY_TIME"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-time.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_TIMESTAMP"
                    c:identifier="GDAUI_ENTRY_TIMESTAMP"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-timestamp.h"
                       line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_TIMESTAMP_CLASS"
                    c:identifier="GDAUI_ENTRY_TIMESTAMP_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-timestamp.h"
                       line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_TIME_CLASS"
                    c:identifier="GDAUI_ENTRY_TIME_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-time.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_WRAPPER"
                    c:identifier="GDAUI_ENTRY_WRAPPER"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-wrapper.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENTRY_WRAPPER_CLASS"
                    c:identifier="GDAUI_ENTRY_WRAPPER_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-wrapper.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Entry"
           c:symbol-prefix="entry"
           c:type="GdauiEntry"
           parent="Gtk.Entry"
           glib:type-name="GdauiEntry"
           glib:get-type="gdaui_entry_get_type"
           glib:type-struct="EntryClass">
      <source-position filename="data-entries/gdaui-entry.h" line="82"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="gdaui_entry_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.c"
             line="330">Creates a new #GdauiEntry widget.</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="85"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry.c"
               line="337">the newly created #GdauiEntry widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="prefix"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="332">a prefix (not modifiable) string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="suffix"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="333">a suffix (not modifiable) string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="assume_delete">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.h"
             line="71">To be defined by children classes to handle delete themselves</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="73">a #GdauiEntry</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
          <parameter name="virt_start_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="74">the starting position.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="virt_end_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="75">the end position (not included in deletion), always &gt; @start_pos</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="76">an offset to add to positions using @virt_start_pos or @virt_end_pos as reference
         to call gtk_editable_*()</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="assume_insert">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.h"
             line="59">To be defined by children classes to handle insert themselves</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="61">a #GdauiEntry</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="62">the text to be inserted</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="63">@text's length in bytes (not characters)</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="virt_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="64">the position where @text is to be inserted</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="65">an offset to add to positions using @virt_pos as reference to call gtk_editable_*()</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_empty_text">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.h"
             line="49">If defined, sould return a text suitable to display EMPTY value, it will be called when
entry was set to NULL and is becomming not NULL</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry.h"
               line="55">a new string, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_text" c:identifier="gdaui_entry_get_text">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.c"
             line="367">Get a new string containing the contents of the widget as a string without the
prefix and/or suffix and/or format if they have been specified. This method differs
from calling gtk_entry_get_text() since the latest will return the complete text
in @entry including prefix and/or suffix and/or format.

Note: %NULL may be returned if this method is called while the widget is working on some
internal modifications, or if gdaui_entry_set_text() was called with a %NULL
as its @text argument.</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry.c"
               line="380">a new string, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="369">a #GdauiEntry.</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_max_length" c:identifier="gdaui_entry_set_max_length">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.c"
             line="348">Sets the maximum allowed length of the contents of the widget.
If the current contents are longer than the given length, then they will be truncated to fit.

The difference with gtk_entry_set_max_length() is that the max length does not take into account
the prefix and/or suffix parts which may have been set.</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="350">a #GdauiEntry.</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
          <parameter name="max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="351">the maximum length of the entry, or 0 for no maximum.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_prefix" c:identifier="gdaui_entry_set_prefix">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.c"
             line="452">Sets @prefix as a prefix string of @entry: that string will always be displayed in the
text entry, will not be modifiable, and won't be part of the returned text</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="454">a #GdauiEntry widget</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
          <parameter name="prefix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="455">a prefix string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_suffix" c:identifier="gdaui_entry_set_suffix">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.c"
             line="468">Sets @suffix as a suffix string of @entry: that string will always be displayed in the
text entry, will not be modifiable, and won't be part of the returned text</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="470">a #GdauiEntry widget</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
          <parameter name="suffix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="471">a suffix string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text" c:identifier="gdaui_entry_set_text">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.c"
             line="414">Sets @text into @entry.

As a side effect, if @text is %NULL, then the entry will
be completely empty, whereas if @text is the empty string (""), then
@entry will display the prefix and/or suffix and/or format string if they have
been set. Except this case, calling this method is similar to calling
gtk_entry_set_text()</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="416">a #GdauiEntry widget</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="417">the text to set into @entry, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width_chars"
              c:identifier="gdaui_entry_set_width_chars">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry.c"
             line="485">Sets @entry's maximum width in characters, without taking into account
any prefix or suffix (which will automatically be handled). If you want to take
a prefix or suffix into account direclty, then use gtk_entry_set_width_chars()</doc>
        <source-position filename="data-entries/gdaui-entry.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="487">a #GdauiEntry widget</doc>
            <type name="Entry" c:type="GdauiEntry*"/>
          </instance-parameter>
          <parameter name="max_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.c"
                 line="488">maximum width, or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="prefix" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="suffix" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="entry">
        <type name="Gtk.Entry" c:type="GtkEntry"/>
      </field>
      <field name="priv">
        <type name="EntryPrivate" c:type="GdauiEntryPrivate*"/>
      </field>
    </class>
    <class name="EntryBin"
           c:symbol-prefix="entry_bin"
           c:type="GdauiEntryBin"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryBin"
           glib:get-type="gdaui_entry_bin_get_type"
           glib:type-struct="EntryBinClass">
      <source-position filename="data-entries/gdaui-entry-bin.h" line="51"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_bin_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-bin.c"
             line="146">Creates a new widget which is mainly a #GtkEntry</doc>
        <source-position filename="data-entries/gdaui-entry-bin.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-bin.c"
               line="153">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-bin.c"
                 line="148">the data handler to be used by the new widget</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-bin.c"
                 line="149">the requested data type (compatible with @dh)</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryBinPrivate" c:type="GdauiEntryBinPrivate*"/>
      </field>
    </class>
    <record name="EntryBinClass"
            c:type="GdauiEntryBinClass"
            glib:is-gtype-struct-for="EntryBin">
      <source-position filename="data-entries/gdaui-entry-bin.h" line="51"/>
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryBinPrivate" c:type="GdauiEntryBinPrivate" disguised="1">
      <source-position filename="data-entries/gdaui-entry-bin.h" line="37"/>
    </record>
    <class name="EntryBoolean"
           c:symbol-prefix="entry_boolean"
           c:type="GdauiEntryBoolean"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryBoolean"
           glib:get-type="gdaui_entry_boolean_get_type"
           glib:type-struct="EntryBooleanClass">
      <source-position filename="data-entries/gdaui-entry-boolean.h"
                       line="51"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_boolean_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-boolean.c"
             line="101">Creates a new data entry widget</doc>
        <source-position filename="data-entries/gdaui-entry-boolean.h"
                         line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-boolean.c"
               line="108">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-boolean.c"
                 line="103">the data handler to be used by the new widget</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-boolean.c"
                 line="104">the requested data type (compatible with @dh)</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryBooleanPrivate" c:type="GdauiEntryBooleanPrivate*"/>
      </field>
    </class>
    <record name="EntryBooleanClass"
            c:type="GdauiEntryBooleanClass"
            glib:is-gtype-struct-for="EntryBoolean">
      <source-position filename="data-entries/gdaui-entry-boolean.h"
                       line="51"/>
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryBooleanPrivate"
            c:type="GdauiEntryBooleanPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-boolean.h"
                       line="37"/>
    </record>
    <record name="EntryClass"
            c:type="GdauiEntryClass"
            glib:is-gtype-struct-for="Entry">
      <source-position filename="data-entries/gdaui-entry.h" line="82"/>
      <field name="parent_class">
        <type name="Gtk.EntryClass" c:type="GtkEntryClass"/>
      </field>
      <field name="get_empty_text">
        <callback name="get_empty_text">
          <source-position filename="data-entries/gdaui-entry.h" line="57"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry.h"
                 line="55">a new string, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="Entry" c:type="GdauiEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="assume_insert">
        <callback name="assume_insert">
          <source-position filename="data-entries/gdaui-entry.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="61">a #GdauiEntry</doc>
              <type name="Entry" c:type="GdauiEntry*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="62">the text to be inserted</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="text_length" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="63">@text's length in bytes (not characters)</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="virt_pos" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="64">the position where @text is to be inserted</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="65">an offset to add to positions using @virt_pos as reference to call gtk_editable_*()</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="assume_delete">
        <callback name="assume_delete">
          <source-position filename="data-entries/gdaui-entry.h" line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="73">a #GdauiEntry</doc>
              <type name="Entry" c:type="GdauiEntry*"/>
            </parameter>
            <parameter name="virt_start_pos" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="74">the starting position.</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="virt_end_pos" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="75">the end position (not included in deletion), always &gt; @start_pos</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="data-entries/gdaui-entry.h"
                   line="76">an offset to add to positions using @virt_start_pos or @virt_end_pos as reference
         to call gtk_editable_*()</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="EntryCombo"
           c:symbol-prefix="entry_combo"
           c:type="GdauiEntryCombo"
           parent="EntryShell"
           glib:type-name="GdauiEntryCombo"
           glib:get-type="gdaui_entry_combo_get_type"
           glib:type-struct="EntryComboClass">
      <source-position filename="data-entries/gdaui-entry-combo.h" line="52"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_combo_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-combo.c"
             line="215">Creates a new #GdauiEntryCombo widget. The widget is a combo box which displays a
selectable list of items (the items come from the 'source-&gt;data_model' data model)

The widget allows the value setting of one or more #GdaHolder objects
(one for each 'source-&gt;nodes') while proposing potentially "more readable" choices.</doc>
        <source-position filename="data-entries/gdaui-entry-combo.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-combo.c"
               line="226">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="paramlist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="217">a #GdauiSet object</doc>
            <type name="Set" c:type="GdauiSet*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="218">a #GdauiSetSource structure, part of @paramlist</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_all_values"
              c:identifier="gdaui_entry_combo_get_all_values">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-combo.c"
             line="587">Get a list of all the values in @combo's data model's selected row. The list
must be freed by the caller.</doc>
        <source-position filename="data-entries/gdaui-entry-combo.h"
                         line="60"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-combo.c"
               line="594">a new list of values</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GObject.Value"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="589">a #GdauiEntryCombo widet</doc>
            <type name="EntryCombo" c:type="GdauiEntryCombo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reference_values"
              c:identifier="gdaui_entry_combo_get_reference_values">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-combo.c"
             line="674">Get the original values stored within @combo. The returned values are the ones
within @combo, so they must not be freed afterwards; the list has to be freed afterwards.</doc>
        <source-position filename="data-entries/gdaui-entry-combo.h"
                         line="62"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-combo.c"
               line="681">a new list of values</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GObject.Value"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="676">a #GdauiEntryCombo widet</doc>
            <type name="EntryCombo" c:type="GdauiEntryCombo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="gdaui_entry_combo_get_values">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-combo.c"
             line="561">Get the values stored within @combo. The returned values are the ones
within @combo, so they must not be freed afterwards, however the returned
list has to be freed afterwards.</doc>
        <source-position filename="data-entries/gdaui-entry-combo.h"
                         line="59"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-combo.c"
               line="569">a new list of values</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GObject.Value"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="563">a #GdauiEntryCombo widet</doc>
            <type name="EntryCombo" c:type="GdauiEntryCombo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default_values"
              c:identifier="gdaui_entry_combo_set_default_values">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-combo.c"
             line="711">Sets the default values of @combo to the specified ones. None of the
values provided in the list is modified.</doc>
        <source-position filename="data-entries/gdaui-entry-combo.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="713">a #GdauiEntryCombo widet</doc>
            <type name="EntryCombo" c:type="GdauiEntryCombo*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="714">a list of #GValue values</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="GObject.Value"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_reference_values"
              c:identifier="gdaui_entry_combo_set_reference_values">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-combo.c"
             line="605">Sets the original values of @combo to the specified ones. None of the
values provided in the list is modified.</doc>
        <source-position filename="data-entries/gdaui-entry-combo.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="607">a #GdauiEntryCombo widet</doc>
            <type name="EntryCombo" c:type="GdauiEntryCombo*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="608">a list of #GValue values</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="GObject.Value"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_values" c:identifier="gdaui_entry_combo_set_values">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-combo.c"
             line="463">Sets the values of @combo to the specified ones. None of the
values provided in the list is modified.

@values holds a list of #GValue values, one for each parameter that is present in the @node argument
of the gdaui_entry_combo_new() function which created @combo.

An error can occur when there is no corresponding value(s) to be displayed
for the provided values.

If @values is %NULL, then the entry itself is set to NULL;</doc>
        <source-position filename="data-entries/gdaui-entry-combo.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-combo.c"
               line="479">%TRUE if no error occurred.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="465">a #GdauiEntryCombo widet</doc>
            <type name="EntryCombo" c:type="GdauiEntryCombo*"/>
          </instance-parameter>
          <parameter name="values"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-combo.c"
                 line="466">a list of #GValue values, or %NULL</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="GObject.Value"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="set-default-if-invalid"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="EntryShell" c:type="GdauiEntryShell"/>
      </field>
      <field name="priv">
        <type name="EntryComboPriv" c:type="GdauiEntryComboPriv*"/>
      </field>
    </class>
    <record name="EntryComboClass"
            c:type="GdauiEntryComboClass"
            glib:is-gtype-struct-for="EntryCombo">
      <source-position filename="data-entries/gdaui-entry-combo.h" line="52"/>
      <field name="parent_class">
        <type name="EntryShellClass" c:type="GdauiEntryShellClass"/>
      </field>
    </record>
    <record name="EntryComboPriv" c:type="GdauiEntryComboPriv" disguised="1">
      <source-position filename="data-entries/gdaui-entry-combo.h" line="38"/>
    </record>
    <class name="EntryCommonTime"
           c:symbol-prefix="entry_common_time"
           c:type="GdauiEntryCommonTime"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryCommonTime"
           glib:get-type="gdaui_entry_common_time_get_type"
           glib:type-struct="EntryCommonTimeClass">
      <source-position filename="data-entries/gdaui-entry-common-time.h"
                       line="50"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Scrollable"/>
      <property name="editing-canceled" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="type" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryCommonTimePrivate"
              c:type="GdauiEntryCommonTimePrivate*"/>
      </field>
    </class>
    <record name="EntryCommonTimeClass"
            c:type="GdauiEntryCommonTimeClass"
            glib:is-gtype-struct-for="EntryCommonTime">
      <source-position filename="data-entries/gdaui-entry-common-time.h"
                       line="50"/>
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryCommonTimePrivate"
            c:type="GdauiEntryCommonTimePrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-common-time.h"
                       line="36"/>
    </record>
    <callback name="EntryCreateFunc"
              c:type="GdauiEntryCreateFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="gdaui-plugin.h"
           line="28">Defines a function which creates a #GdauiDataEntry widget</doc>
      <source-position filename="gdaui-plugin.h" line="37"/>
      <return-value>
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="33">a new #GdauiDataEntry</doc>
        <type name="DataEntry" c:type="GdauiDataEntry*"/>
      </return-value>
      <parameters>
        <parameter name="handler" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-plugin.h"
               line="30">a #GdaDataHandler</doc>
          <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-plugin.h"
               line="31">a #GType</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="options"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdaui-plugin.h"
               line="32">options, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="EntryDate"
           c:symbol-prefix="entry_date"
           c:type="GdauiEntryDate"
           parent="EntryCommonTime"
           glib:type-name="GdauiEntryDate"
           glib:get-type="gdaui_entry_date_get_type"
           glib:type-struct="EntryDateClass">
      <source-position filename="data-entries/gdaui-entry-date.h" line="49"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_date_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-date.c"
             line="70">Creates a new data entry widget</doc>
        <source-position filename="data-entries/gdaui-entry-date.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-date.c"
               line="76">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-date.c"
                 line="72">the data handler to be used by the new widget</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryCommonTime" c:type="GdauiEntryCommonTime"/>
      </field>
    </class>
    <record name="EntryDateClass"
            c:type="GdauiEntryDateClass"
            glib:is-gtype-struct-for="EntryDate">
      <source-position filename="data-entries/gdaui-entry-date.h" line="49"/>
      <field name="parent_class">
        <type name="EntryCommonTimeClass" c:type="GdauiEntryCommonTimeClass"/>
      </field>
    </record>
    <record name="EntryDatePrivate"
            c:type="GdauiEntryDatePrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-date.h" line="36"/>
    </record>
    <class name="EntryNone"
           c:symbol-prefix="entry_none"
           c:type="GdauiEntryNone"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryNone"
           glib:get-type="gdaui_entry_none_get_type"
           glib:type-struct="EntryNoneClass">
      <source-position filename="data-entries/gdaui-entry-none.h" line="50"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_none_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-none.c"
             line="96">Creates a new data entry widget</doc>
        <source-position filename="data-entries/gdaui-entry-none.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-none.c"
               line="102">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-none.c"
                 line="98">the requested data type (compatible with @dh)</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryNonePrivate" c:type="GdauiEntryNonePrivate*"/>
      </field>
    </class>
    <record name="EntryNoneClass"
            c:type="GdauiEntryNoneClass"
            glib:is-gtype-struct-for="EntryNone">
      <source-position filename="data-entries/gdaui-entry-none.h" line="50"/>
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryNonePrivate"
            c:type="GdauiEntryNonePrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-none.h" line="36"/>
    </record>
    <class name="EntryNumber"
           c:symbol-prefix="entry_number"
           c:type="GdauiEntryNumber"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryNumber"
           glib:get-type="gdaui_entry_number_get_type"
           glib:type-struct="EntryNumberClass">
      <source-position filename="data-entries/gdaui-entry-number.h" line="50"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_number_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-number.c"
             line="186">Creates a new data entry widget</doc>
        <source-position filename="data-entries/gdaui-entry-number.h"
                         line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-number.c"
               line="193">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-number.c"
                 line="188">the data handler to be used by the new widget</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-number.c"
                 line="189">the requested data type (compatible with @dh)</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="is_type_numeric"
                c:identifier="gdaui_entry_number_is_type_numeric">
        <source-position filename="data-entries/gdaui-entry-number.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </function>
      <property name="editing-canceled" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="options"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryNumberPrivate" c:type="GdauiEntryNumberPrivate*"/>
      </field>
    </class>
    <record name="EntryNumberClass"
            c:type="GdauiEntryNumberClass"
            glib:is-gtype-struct-for="EntryNumber">
      <source-position filename="data-entries/gdaui-entry-number.h" line="50"/>
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryNumberPrivate"
            c:type="GdauiEntryNumberPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-number.h" line="36"/>
    </record>
    <record name="EntryPrivate" c:type="GdauiEntryPrivate" disguised="1">
      <source-position filename="data-entries/gdaui-entry.h" line="36"/>
    </record>
    <class name="EntryShell"
           c:symbol-prefix="entry_shell"
           c:type="GdauiEntryShell"
           parent="Gtk.Viewport"
           glib:type-name="GdauiEntryShell"
           glib:get-type="gdaui_entry_shell_get_type"
           glib:type-struct="EntryShellClass">
      <source-position filename="data-entries/gdaui-entry-shell.h" line="54"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <method name="pack_entry" c:identifier="gdaui_entry_shell_pack_entry">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-shell.c"
             line="290">Packs a #GTkWidget widget into the GdauiEntryShell.</doc>
        <source-position filename="data-entries/gdaui-entry-shell.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="292">a #GdauiEntryShell object</doc>
            <type name="EntryShell" c:type="GdauiEntryShell*"/>
          </instance-parameter>
          <parameter name="main_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="293">a #GtkWidget to pack into @shell</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh" c:identifier="gdaui_entry_shell_refresh">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-shell.c"
             line="428">Forces the shell to refresh its display (mainly the color of the
button).</doc>
        <source-position filename="data-entries/gdaui-entry-shell.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="430">the GdauiEntryShell widget to refresh</doc>
            <type name="EntryShell" c:type="GdauiEntryShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_ucolor"
              c:identifier="gdaui_entry_shell_set_ucolor"
              version="5.0.3">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-shell.c"
             line="458">Defines the color to be used when @de displays an invalid value. Any value not
between 0. and 1. will result in the default hard coded values to be used (grayish).</doc>
        <source-position filename="data-entries/gdaui-entry-shell.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="460">a #GdauiEntryShell</doc>
            <type name="EntryShell" c:type="GdauiEntryShell*"/>
          </instance-parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="461">the red component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="462">the green component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="463">the blue component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="464">the alpha component of a color</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unknown" c:identifier="gdaui_entry_shell_set_unknown">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-shell.c"
             line="443">Defines if @shell's contents is in an undefined state (shows or hides @shell's contents)</doc>
        <source-position filename="data-entries/gdaui-entry-shell.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="445">the #GdauiEntryShell widget to refresh</doc>
            <type name="EntryShell" c:type="GdauiEntryShell*"/>
          </instance-parameter>
          <parameter name="unknown" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-shell.c"
                 line="446">set to %TRUE if @shell's contents is unavailable and should not be modified</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="actions" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="handler" writable="1" transfer-ownership="none">
        <type name="Gda.DataHandler"/>
      </property>
      <property name="is-cell-renderer" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="Gtk.Viewport" c:type="GtkViewport"/>
      </field>
      <field name="priv">
        <type name="EntryShellPriv" c:type="GdauiEntryShellPriv*"/>
      </field>
    </class>
    <record name="EntryShellClass"
            c:type="GdauiEntryShellClass"
            glib:is-gtype-struct-for="EntryShell">
      <source-position filename="data-entries/gdaui-entry-shell.h" line="54"/>
      <field name="parent_class">
        <type name="Gtk.ViewportClass" c:type="GtkViewportClass"/>
      </field>
    </record>
    <record name="EntryShellPriv" c:type="GdauiEntryShellPriv" disguised="1">
      <source-position filename="data-entries/gdaui-entry-shell.h" line="40"/>
    </record>
    <class name="EntryString"
           c:symbol-prefix="entry_string"
           c:type="GdauiEntryString"
           parent="EntryWrapper"
           glib:type-name="GdauiEntryString"
           glib:get-type="gdaui_entry_string_get_type"
           glib:type-struct="EntryStringClass">
      <source-position filename="data-entries/gdaui-entry-string.h" line="50"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_string_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-string.c"
             line="191">Creates a new data entry widget</doc>
        <source-position filename="data-entries/gdaui-entry-string.h"
                         line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-string.c"
               line="198">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-string.c"
                 line="193">the data handler to be used by the new widget</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-string.c"
                 line="194">the requested data type (compatible with @dh)</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="editing-canceled" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="multiline" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="options"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="object">
        <type name="EntryWrapper" c:type="GdauiEntryWrapper"/>
      </field>
      <field name="priv">
        <type name="EntryStringPrivate" c:type="GdauiEntryStringPrivate*"/>
      </field>
    </class>
    <record name="EntryStringClass"
            c:type="GdauiEntryStringClass"
            glib:is-gtype-struct-for="EntryString">
      <source-position filename="data-entries/gdaui-entry-string.h" line="50"/>
      <field name="parent_class">
        <type name="EntryWrapperClass" c:type="GdauiEntryWrapperClass"/>
      </field>
    </record>
    <record name="EntryStringPrivate"
            c:type="GdauiEntryStringPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-string.h" line="36"/>
    </record>
    <class name="EntryTime"
           c:symbol-prefix="entry_time"
           c:type="GdauiEntryTime"
           parent="EntryCommonTime"
           glib:type-name="GdauiEntryTime"
           glib:get-type="gdaui_entry_time_get_type"
           glib:type-struct="EntryTimeClass">
      <source-position filename="data-entries/gdaui-entry-time.h" line="49"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_time_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-time.c"
             line="70">Creates a new widget which is mainly a GtkEntry</doc>
        <source-position filename="data-entries/gdaui-entry-time.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-time.c"
               line="76">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-time.c"
                 line="72">the data handler to be used by the new widget</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryCommonTime" c:type="GdauiEntryCommonTime"/>
      </field>
    </class>
    <record name="EntryTimeClass"
            c:type="GdauiEntryTimeClass"
            glib:is-gtype-struct-for="EntryTime">
      <source-position filename="data-entries/gdaui-entry-time.h" line="49"/>
      <field name="parent_class">
        <type name="EntryCommonTimeClass" c:type="GdauiEntryCommonTimeClass"/>
      </field>
    </record>
    <record name="EntryTimePrivate"
            c:type="GdauiEntryTimePrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-time.h" line="36"/>
    </record>
    <class name="EntryTimestamp"
           c:symbol-prefix="entry_timestamp"
           c:type="GdauiEntryTimestamp"
           parent="EntryCommonTime"
           glib:type-name="GdauiEntryTimestamp"
           glib:get-type="gdaui_entry_timestamp_get_type"
           glib:type-struct="EntryTimestampClass">
      <source-position filename="data-entries/gdaui-entry-timestamp.h"
                       line="49"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_entry_timestamp_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-timestamp.c"
             line="70">Creates a new data entry widget</doc>
        <source-position filename="data-entries/gdaui-entry-timestamp.h"
                         line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-entry-timestamp.c"
               line="76">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dh" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-timestamp.c"
                 line="72">the data handler to be used by the new widget</doc>
            <type name="Gda.DataHandler" c:type="GdaDataHandler*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="EntryCommonTime" c:type="GdauiEntryCommonTime"/>
      </field>
    </class>
    <record name="EntryTimestampClass"
            c:type="GdauiEntryTimestampClass"
            glib:is-gtype-struct-for="EntryTimestamp">
      <source-position filename="data-entries/gdaui-entry-timestamp.h"
                       line="49"/>
      <field name="parent_class">
        <type name="EntryCommonTimeClass" c:type="GdauiEntryCommonTimeClass"/>
      </field>
    </record>
    <record name="EntryTimestampPrivate"
            c:type="GdauiEntryTimestampPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-timestamp.h"
                       line="36"/>
    </record>
    <class name="EntryWrapper"
           c:symbol-prefix="entry_wrapper"
           c:type="GdauiEntryWrapper"
           parent="EntryShell"
           glib:type-name="GdauiEntryWrapper"
           glib:get-type="gdaui_entry_wrapper_get_type"
           glib:type-struct="EntryWrapperClass">
      <source-position filename="data-entries/gdaui-entry-wrapper.h"
                       line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataEntry"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <virtual-method name="can_expand">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
          <parameter name="horiz" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="connect_signals" introspectable="0">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
          <parameter name="modify_cb" transfer-ownership="none">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="activate_cb" transfer-ownership="none">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_entry" introspectable="0">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="54"/>
        <return-value>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="grab_focus">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_valid">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="real_get_value">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="real_set_value">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_editable">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
          <parameter name="editable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="value_is_equal_to">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="value_is_null">
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="contents_activated"
              c:identifier="gdaui_entry_wrapper_contents_activated">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-wrapper.c"
             line="353">Signals to @gwrap that the entry has been activated (that is the user
pressed ENTER for example to signify he has finished entering data)</doc>
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-wrapper.c"
                 line="355">a #GdauiEntryWrapper widget</doc>
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="contents_changed"
              c:identifier="gdaui_entry_wrapper_contents_changed">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-entry-wrapper.c"
             line="339">Signals to @gwrap that the entry has changed</doc>
        <source-position filename="data-entries/gdaui-entry-wrapper.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="wrapper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-entry-wrapper.c"
                 line="341">a #GdauiEntryWrapper widget</doc>
            <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="set-default-if-invalid"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="EntryShell" c:type="GdauiEntryShell"/>
      </field>
      <field name="priv">
        <type name="EntryWrapperPriv" c:type="GdauiEntryWrapperPriv*"/>
      </field>
    </class>
    <record name="EntryWrapperClass"
            c:type="GdauiEntryWrapperClass"
            glib:is-gtype-struct-for="EntryWrapper">
      <source-position filename="data-entries/gdaui-entry-wrapper.h"
                       line="65"/>
      <field name="parent_class">
        <type name="EntryShellClass" c:type="GdauiEntryShellClass"/>
      </field>
      <field name="create_entry" introspectable="0">
        <callback name="create_entry" introspectable="0">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="54"/>
          <return-value>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="real_set_value">
        <callback name="real_set_value">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="real_get_value">
        <callback name="real_get_value">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="56"/>
          <return-value transfer-ownership="full">
            <type name="GObject.Value" c:type="GValue*"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="connect_signals" introspectable="0">
        <callback name="connect_signals" introspectable="0">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="modify_cb" transfer-ownership="none">
              <type name="GObject.Callback" c:type="GCallback"/>
            </parameter>
            <parameter name="activate_cb" transfer-ownership="none">
              <type name="GObject.Callback" c:type="GCallback"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_expand">
        <callback name="can_expand">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="horiz" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_editable">
        <callback name="set_editable">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="editable" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="value_is_equal_to">
        <callback name="value_is_equal_to">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="value_is_null">
        <callback name="value_is_null">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_valid">
        <callback name="is_valid">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="grab_focus">
        <callback name="grab_focus">
          <source-position filename="data-entries/gdaui-entry-wrapper.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="wrapper" transfer-ownership="none">
              <type name="EntryWrapper" c:type="GdauiEntryWrapper*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="EntryWrapperPriv"
            c:type="GdauiEntryWrapperPriv"
            disguised="1">
      <source-position filename="data-entries/gdaui-entry-wrapper.h"
                       line="37"/>
    </record>
    <function-macro name="FORM" c:identifier="GDAUI_FORM" introspectable="0">
      <source-position filename="gdaui-form.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FORMATTED_ENTRY"
                    c:identifier="GDAUI_FORMATTED_ENTRY"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="28"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FORMATTED_ENTRY_CLASS"
                    c:identifier="GDAUI_FORMATTED_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="29"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FORMATTED_ENTRY_GET_CLASS"
                    c:identifier="GDAUI_FORMATTED_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FORM_CLASS"
                    c:identifier="GDAUI_FORM_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-form.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Form"
           c:symbol-prefix="form"
           c:type="GdauiForm"
           parent="Gtk.Box"
           glib:type-name="GdauiForm"
           glib:get-type="gdaui_form_get_type"
           glib:type-struct="FormClass">
      <source-position filename="gdaui-form.h" line="51"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_form_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-form.c"
             line="240">Creates a new #GdauiForm widget suitable to display the data in @model</doc>
        <source-position filename="gdaui-form.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-form.c"
               line="246">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-form.c"
                 line="242">a #GdaDataModel</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="info" transfer-ownership="none">
        <type name="DataProxyInfo"/>
      </property>
      <property name="info-flags"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="model"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.DataModel"/>
      </property>
      <property name="raw-form" transfer-ownership="none">
        <type name="RawForm"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="FormPriv" c:type="GdauiFormPriv*"/>
      </field>
    </class>
    <record name="FormClass"
            c:type="GdauiFormClass"
            glib:is-gtype-struct-for="Form">
      <source-position filename="gdaui-form.h" line="51"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="FormPriv" c:type="GdauiFormPriv" disguised="1">
      <source-position filename="gdaui-form.h" line="37"/>
    </record>
    <class name="FormattedEntry"
           c:symbol-prefix="formatted_entry"
           c:type="GdauiFormattedEntry"
           parent="Entry"
           glib:type-name="GdauiFormattedEntry"
           glib:get-type="gdaui_formatted_entry_get_type"
           glib:type-struct="FormattedEntryClass">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="48"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="gdaui_formatted_entry_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-formatted-entry.c"
             line="437">Creates a new #GdauiFormattedEntry widget.

Characters in @format are of two types:
  writeable: writeable characters which will be replaced with and underscore and where text will be entered
  fixed: every other characters are fixed characters, where text cant' be edited, and will be displayed AS IS

Possible values for writeable characters are:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;'0': digits&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;'9': digits excluded 0&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;'@': alpha&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;'^': alpha converted to upper case&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;'#': alphanumeric&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;'*': any char&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;

if @mask is not %NULL, then it should only contains the follogin characters, which are used side by side with
@format's characters:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;'_': the corresponding character in @format is actually used as a writable character&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;'-': the corresponding character in @format is actually used as a writable character, but
             the character will be removed from gdaui_formatted_entry_get_text()'s result if it was not
             filled by the user&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;' ': the corresponding character in @format will not be considered as a writable character
             but as a non writable character&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;
it is then interpreted in the following way: for a character C in @format, if the character at the same
position in @mask is the space character (' '), then C will not interpreted as a writable format
character as defined above. @mask does not be to have the same length as @format.</doc>
        <source-position filename="data-entries/gdaui-formatted-entry.h"
                         line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-formatted-entry.c"
               line="472">the newly created #GdauiFormattedEntry widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-formatted-entry.c"
                 line="439">a format string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="mask"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-formatted-entry.c"
                 line="440">a mask string, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_text" c:identifier="gdaui_formatted_entry_get_text">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-formatted-entry.c"
             line="483">Get @entry's contents. This function is similar to gdaui_get_text() except
that it optionnally uses the information contained in @mask when gdaui_formatted_entry_new()
was called to format the output differently.</doc>
        <source-position filename="data-entries/gdaui-formatted-entry.h"
                         line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-formatted-entry.c"
               line="491">a new string, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-formatted-entry.c"
                 line="485">a #GdauiFormattedEntry widget</doc>
            <type name="FormattedEntry" c:type="GdauiFormattedEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_insert_func"
              c:identifier="gdaui_formatted_entry_set_insert_func">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-formatted-entry.c"
             line="519">Specifies that @entry should call @insert_func when the user wants to insert a char
which is anot allowed, to perform other actions</doc>
        <source-position filename="data-entries/gdaui-formatted-entry.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-formatted-entry.c"
                 line="521">a #GdauiFormattedEntry widget</doc>
            <type name="FormattedEntry" c:type="GdauiFormattedEntry*"/>
          </instance-parameter>
          <parameter name="insert_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-formatted-entry.c"
                 line="522">a #GdauiFormattedEntryInsertFunc, or %NULL</doc>
            <type name="FormattedEntryInsertFunc"
                  c:type="GdauiFormattedEntryInsertFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-formatted-entry.c"
                 line="523">a pointer which will be passed to @insert_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="format" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mask" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="entry">
        <type name="Entry" c:type="GdauiEntry"/>
      </field>
      <field name="priv">
        <type name="FormattedEntryPrivate"
              c:type="GdauiFormattedEntryPrivate*"/>
      </field>
    </class>
    <record name="FormattedEntryClass"
            c:type="GdauiFormattedEntryClass"
            glib:is-gtype-struct-for="FormattedEntry">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="48"/>
      <field name="parent_class">
        <type name="EntryClass" c:type="GdauiEntryClass"/>
      </field>
    </record>
    <callback name="FormattedEntryInsertFunc"
              c:type="GdauiFormattedEntryInsertFunc">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="54"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="entry" transfer-ownership="none">
          <type name="FormattedEntry" c:type="GdauiFormattedEntry*"/>
        </parameter>
        <parameter name="insert_char" transfer-ownership="none">
          <type name="gunichar" c:type="gunichar"/>
        </parameter>
        <parameter name="virt_pos" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="FormattedEntryPrivate"
            c:type="GdauiFormattedEntryPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="37"/>
    </record>
    <function-macro name="GRID" c:identifier="GDAUI_GRID" introspectable="0">
      <source-position filename="gdaui-grid.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GRID_CLASS"
                    c:identifier="GDAUI_GRID_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-grid.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Grid"
           c:symbol-prefix="grid"
           c:type="GdauiGrid"
           parent="Gtk.Box"
           glib:type-name="GdauiGrid"
           glib:get-type="gdaui_grid_get_type"
           glib:type-struct="GridClass">
      <source-position filename="gdaui-grid.h" line="50"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_grid_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-grid.c"
             line="231">Creates a new #GdauiGrid widget suitable to display the data in @model</doc>
        <source-position filename="gdaui-grid.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-grid.c"
               line="237">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-grid.c"
                 line="233">a #GdaDataModel, or %NULL</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_sample_size"
              c:identifier="gdaui_grid_set_sample_size"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-grid.c"
             line="314">Sets the size of each chunk of data to display: the maximum number of rows which
can be displayed at a time. See gdaui_raw_grid_set_sample_size() and gda_data_proxy_set_sample_size()</doc>
        <source-position filename="gdaui-grid.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-grid.c"
                 line="316">a #GdauiGrid widget</doc>
            <type name="Grid" c:type="GdauiGrid*"/>
          </instance-parameter>
          <parameter name="sample_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-grid.c"
                 line="317">the size of the sample displayed in @grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="info" transfer-ownership="none">
        <type name="DataProxyInfo"/>
      </property>
      <property name="info-flags"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel"/>
      </property>
      <property name="raw-grid" transfer-ownership="none">
        <type name="RawGrid"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="GridPriv" c:type="GdauiGridPriv*"/>
      </field>
    </class>
    <record name="GridClass"
            c:type="GdauiGridClass"
            glib:is-gtype-struct-for="Grid">
      <source-position filename="gdaui-grid.h" line="50"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="GridPriv" c:type="GdauiGridPriv" disguised="1">
      <source-position filename="gdaui-grid.h" line="36"/>
    </record>
    <function-macro name="IS_BASIC_FORM"
                    c:identifier="GDAUI_IS_BASIC_FORM"
                    introspectable="0">
      <source-position filename="gdaui-basic-form.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BASIC_FORM_CLASS"
                    c:identifier="GDAUI_IS_BASIC_FORM_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-basic-form.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLOUD"
                    c:identifier="GDAUI_IS_CLOUD"
                    introspectable="0">
      <source-position filename="gdaui-cloud.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLOUD_CLASS"
                    c:identifier="GDAUI_IS_CLOUD_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-cloud.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COMBO"
                    c:identifier="GDAUI_IS_COMBO"
                    introspectable="0">
      <source-position filename="gdaui-combo.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COMBO_CLASS"
                    c:identifier="GDAUI_IS_COMBO_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-combo.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_BIN"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_BIN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_BIN_CLASS"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_BIN_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-bin.h"
                       line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_BOOLEAN"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_BOOLEAN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_BOOLEAN_CLASS"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_BOOLEAN_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-boolean.h"
                       line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_COMBO"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_COMBO"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_COMBO_CLASS"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_COMBO_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-combo.h"
                       line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_INFO"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_INFO"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_INFO_CLASS"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_INFO_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-info.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_TEXTUAL"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_TEXTUAL"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CELL_RENDERER_TEXTUAL_CLASS"
                    c:identifier="GDAUI_IS_DATA_CELL_RENDERER_TEXTUAL_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-data-cell-renderer-textual.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_ENTRY"
                    c:identifier="GDAUI_IS_DATA_ENTRY"
                    introspectable="0">
      <source-position filename="gdaui-data-entry.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_FILTER"
                    c:identifier="GDAUI_IS_DATA_FILTER"
                    introspectable="0">
      <source-position filename="gdaui-data-filter.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_PROXY"
                    c:identifier="GDAUI_IS_DATA_PROXY"
                    introspectable="0">
      <source-position filename="gdaui-data-proxy.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_PROXY_INFO"
                    c:identifier="GDAUI_IS_DATA_PROXY_INFO"
                    introspectable="0">
      <source-position filename="gdaui-data-proxy-info.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_SELECTOR"
                    c:identifier="GDAUI_IS_DATA_SELECTOR"
                    introspectable="0">
      <source-position filename="gdaui-data-selector.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_STORE"
                    c:identifier="GDAUI_IS_DATA_STORE"
                    introspectable="0">
      <source-position filename="gdaui-data-store.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY"
                    c:identifier="GDAUI_IS_ENTRY"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_BIN"
                    c:identifier="GDAUI_IS_ENTRY_BIN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-bin.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_BOOLEAN"
                    c:identifier="GDAUI_IS_ENTRY_BOOLEAN"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-boolean.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_CLASS"
                    c:identifier="GDAUI_IS_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_COMBO"
                    c:identifier="GDAUI_IS_ENTRY_COMBO"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-combo.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_COMMON_TIME"
                    c:identifier="GDAUI_IS_ENTRY_COMMON_TIME"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-common-time.h"
                       line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_DATE"
                    c:identifier="GDAUI_IS_ENTRY_DATE"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-date.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_NONE"
                    c:identifier="GDAUI_IS_ENTRY_NONE"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-none.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_NUMBER"
                    c:identifier="GDAUI_IS_ENTRY_NUMBER"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-number.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_SHELL"
                    c:identifier="GDAUI_IS_ENTRY_SHELL"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-shell.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_STRING"
                    c:identifier="GDAUI_IS_ENTRY_STRING"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-string.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_TIME"
                    c:identifier="GDAUI_IS_ENTRY_TIME"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-time.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_TIMESTAMP"
                    c:identifier="GDAUI_IS_ENTRY_TIMESTAMP"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-timestamp.h"
                       line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENTRY_WRAPPER"
                    c:identifier="GDAUI_IS_ENTRY_WRAPPER"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-entry-wrapper.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FORM"
                    c:identifier="GDAUI_IS_FORM"
                    introspectable="0">
      <source-position filename="gdaui-form.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FORMATTED_ENTRY"
                    c:identifier="GDAUI_IS_FORMATTED_ENTRY"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FORMATTED_ENTRY_CLASS"
                    c:identifier="GDAUI_IS_FORMATTED_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-formatted-entry.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FORM_CLASS"
                    c:identifier="GDAUI_IS_FORM_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-form.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GRID"
                    c:identifier="GDAUI_IS_GRID"
                    introspectable="0">
      <source-position filename="gdaui-grid.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GRID_CLASS"
                    c:identifier="GDAUI_IS_GRID_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-grid.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOGIN"
                    c:identifier="GDAUI_IS_LOGIN"
                    introspectable="0">
      <source-position filename="gdaui-login.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOGIN_CLASS"
                    c:identifier="GDAUI_IS_LOGIN_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-login.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NUMERIC_ENTRY"
                    c:identifier="GDAUI_IS_NUMERIC_ENTRY"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NUMERIC_ENTRY_CLASS"
                    c:identifier="GDAUI_IS_NUMERIC_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROVIDER_SELECTOR"
                    c:identifier="GDAUI_IS_PROVIDER_SELECTOR"
                    introspectable="0">
      <source-position filename="gdaui-provider-selector.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROVIDER_SELECTOR_CLASS"
                    c:identifier="GDAUI_IS_PROVIDER_SELECTOR_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-provider-selector.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RAW_FORM"
                    c:identifier="GDAUI_IS_RAW_FORM"
                    introspectable="0">
      <source-position filename="gdaui-raw-form.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RAW_GRID"
                    c:identifier="GDAUI_IS_RAW_GRID"
                    introspectable="0">
      <source-position filename="gdaui-raw-grid.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RT_EDITOR"
                    c:identifier="GDAUI_IS_RT_EDITOR"
                    introspectable="0">
      <source-position filename="gdaui-rt-editor.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SERVER_OPERATION"
                    c:identifier="GDAUI_IS_SERVER_OPERATION"
                    introspectable="0">
      <source-position filename="gdaui-server-operation.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SET"
                    c:identifier="GDAUI_IS_SET"
                    introspectable="0">
      <source-position filename="gdaui-set.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TREE_STORE"
                    c:identifier="GDAUI_IS_TREE_STORE"
                    introspectable="0">
      <source-position filename="gdaui-tree-store.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOGIN" c:identifier="GDAUI_LOGIN" introspectable="0">
      <source-position filename="gdaui-login.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOGIN_CLASS"
                    c:identifier="GDAUI_LOGIN_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-login.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Login"
           c:symbol-prefix="login"
           c:type="GdauiLogin"
           parent="Gtk.Box"
           glib:type-name="GdauiLogin"
           glib:get-type="gdaui_login_get_type"
           glib:type-struct="LoginClass">
      <source-position filename="gdaui-login.h" line="48"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_login_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-login.c"
             line="521">Creates a new login widget which enables the user to specify connection parameters.</doc>
        <source-position filename="gdaui-login.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-login.c"
               line="527">a new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dsn"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="523">a data source name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="changed">
        <source-position filename="gdaui-login.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="login" transfer-ownership="none">
            <type name="Login" c:type="GdauiLogin*"/>
          </instance-parameter>
          <parameter name="is_valid" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_connection_information"
              c:identifier="gdaui_login_get_connection_information"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-login.c"
             line="594">Get the information specified in @login as a pointer to a (read-only) #GdaDsnInfo.
If the connection is not specified by a DSN, then the 'name' attribute of the returned
#GdaDsnInfo will be %NULL, and otherwise it will contain the name of the selected DSN.</doc>
        <source-position filename="gdaui-login.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-login.c"
               line="602">a pointer to a (read-only) #GdaDsnInfo.</doc>
          <type name="Gda.DsnInfo" c:type="const GdaDsnInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="login" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="596">a #GdauiLogin object</doc>
            <type name="Login" c:type="GdauiLogin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_connection_information"
              c:identifier="gdaui_login_set_connection_information">
        <doc xml:space="preserve"
             filename="gdaui-login.c"
             line="669">Changes the information displayed in @login, to represent @cinfo.
If @login's mode has %GDA_UI_LOGIN_HIDE_DIRECT_CONNECTION_MODE, then
if @cinfo-&gt;name is not %NULL it is displayed in the DSN selector, otherwise
a warning is shown and the result
is the same as having passed %NULL for the @cinfo argument.

In any case @login's mode (set by gdaui_login_set_mode()) is not changed.</doc>
        <source-position filename="gdaui-login.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="login" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="671">a #GdauiLogin object</doc>
            <type name="Login" c:type="GdauiLogin*"/>
          </instance-parameter>
          <parameter name="cinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="672">a pointer to a structure representing the information to display.</doc>
            <type name="Gda.DsnInfo" c:type="const GdaDsnInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dsn" c:identifier="gdaui_login_set_dsn">
        <doc xml:space="preserve"
             filename="gdaui-login.c"
             line="643">Changes the information displayed in @login, to represent @dsn.
If @login's mode has %GDA_UI_LOGIN_HIDE_DSN_SELECTION_MODE, then
the DSN information is extracted and displayed in the direct login area.

If @dsn is not a declared data source name, then a warning is shown and the result
is the same as having passed %NULL for the @dsn argument.

In any case @login's mode (set by gdaui_login_set_mode()) is not changed.</doc>
        <source-position filename="gdaui-login.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="login" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="645">a #GdauiLogin object</doc>
            <type name="Login" c:type="GdauiLogin*"/>
          </instance-parameter>
          <parameter name="dsn"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="646">a data source name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode"
              c:identifier="gdaui_login_set_mode"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-login.c"
             line="541">Set how @login operates</doc>
        <source-position filename="gdaui-login.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="login" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="543">a #GdauiLogin object</doc>
            <type name="Login" c:type="GdauiLogin*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-login.c"
                 line="544">a flag</doc>
            <type name="LoginMode" c:type="GdauiLoginMode"/>
          </parameter>
        </parameters>
      </method>
      <property name="dsn" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mode"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="valid" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="LoginPrivate" c:type="GdauiLoginPrivate*"/>
      </field>
      <glib:signal name="changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="LoginClass"
            c:type="GdauiLoginClass"
            glib:is-gtype-struct-for="Login">
      <source-position filename="gdaui-login.h" line="48"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="gdaui-login.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="login" transfer-ownership="none">
              <type name="Login" c:type="GdauiLogin*"/>
            </parameter>
            <parameter name="is_valid" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <bitfield name="LoginMode" c:type="GdauiLoginMode">
      <doc xml:space="preserve"
           filename="gdaui-login.h"
           line="50">Defines the aspect of the #GdauiLogin widget</doc>
      <source-position filename="gdaui-login.h" line="62"/>
      <member name="enable_control_centre_mode"
              value="1"
              c:identifier="GDA_UI_LOGIN_ENABLE_CONTROL_CENTRE_MODE">
      </member>
      <member name="hide_dsn_selection_mode"
              value="2"
              c:identifier="GDA_UI_LOGIN_HIDE_DSN_SELECTION_MODE">
      </member>
      <member name="hide_direct_connection_mode"
              value="4"
              c:identifier="GDA_UI_LOGIN_HIDE_DIRECT_CONNECTION_MODE">
      </member>
    </bitfield>
    <record name="LoginPrivate" c:type="GdauiLoginPrivate" disguised="1">
      <source-position filename="gdaui-login.h" line="36"/>
    </record>
    <function-macro name="NUMERIC_ENTRY"
                    c:identifier="GDAUI_NUMERIC_ENTRY"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="28"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NUMERIC_ENTRY_CLASS"
                    c:identifier="GDAUI_NUMERIC_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="29"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NUMERIC_ENTRY_GET_CLASS"
                    c:identifier="GDAUI_NUMERIC_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="NumericEntry"
           c:symbol-prefix="numeric_entry"
           c:type="GdauiNumericEntry"
           parent="Entry"
           glib:type-name="GdauiNumericEntry"
           glib:get-type="gdaui_numeric_entry_get_type"
           glib:type-struct="NumericEntryClass">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="48"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="gdaui_numeric_entry_new">
        <doc xml:space="preserve"
             filename="data-entries/gdaui-numeric-entry.c"
             line="669">Creates a new #GdauiNumericEntry widget.</doc>
        <source-position filename="data-entries/gdaui-numeric-entry.h"
                         line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="data-entries/gdaui-numeric-entry.c"
               line="675">the newly created #GdauiNumericEntry widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="data-entries/gdaui-numeric-entry.c"
                 line="671">the numeric type</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_value" c:identifier="gdaui_numeric_entry_get_value">
        <source-position filename="data-entries/gdaui-numeric-entry.h"
                         line="52"/>
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="NumericEntry" c:type="GdauiNumericEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="decimal-sep" writable="1" transfer-ownership="none">
        <type name="gchar" c:type="gchar"/>
      </property>
      <property name="n-decimals" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="thousands-sep" writable="1" transfer-ownership="none">
        <type name="gchar" c:type="gchar"/>
      </property>
      <property name="type" writable="1" transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <field name="entry">
        <type name="Entry" c:type="GdauiEntry"/>
      </field>
      <field name="priv">
        <type name="NumericEntryPrivate" c:type="GdauiNumericEntryPrivate*"/>
      </field>
    </class>
    <record name="NumericEntryClass"
            c:type="GdauiNumericEntryClass"
            glib:is-gtype-struct-for="NumericEntry">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="48"/>
      <field name="parent_class">
        <type name="EntryClass" c:type="GdauiEntryClass"/>
      </field>
    </record>
    <record name="NumericEntryPrivate"
            c:type="GdauiNumericEntryPrivate"
            disguised="1">
      <source-position filename="data-entries/gdaui-numeric-entry.h"
                       line="37"/>
    </record>
    <function-macro name="PROVIDER_SELECTOR"
                    c:identifier="GDAUI_PROVIDER_SELECTOR"
                    introspectable="0">
      <source-position filename="gdaui-provider-selector.h" line="28"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROVIDER_SELECTOR_CLASS"
                    c:identifier="GDAUI_PROVIDER_SELECTOR_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-provider-selector.h" line="29"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <record name="Plugin" c:type="GdauiPlugin">
      <doc xml:space="preserve"
           filename="gdaui-plugin.h"
           line="51">Structure representing a plugin.

Note: @entry_create_func and @cell_create_func can't be %NULL at the same time</doc>
      <source-position filename="gdaui-plugin.h" line="78"/>
      <field name="plugin_name" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="53">the name of the plugin</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="plugin_descr" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="54">a description for the plugin, or %NULL</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="plugin_file" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="55">the shared object implementing the plugin, can be %NULL for internal plugins</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="nb_g_types" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="56">number of types the plugin can handle, or %0 for any type</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="valid_g_types" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="57">an array of #GType, containing the accepted types, its size is @nb_g_types, or %NULL if @nb_g_types is %0</doc>
        <type name="GType" c:type="GType*"/>
      </field>
      <field name="options_xml_spec" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="58">a string describing the plugin's options, or %NULL</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="entry_create_func" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="59">the function called to create a #GdauiDataEntry, or %NULL</doc>
        <type name="EntryCreateFunc" c:type="GdauiEntryCreateFunc"/>
      </field>
      <field name="cell_create_func" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-plugin.h"
             line="60">the function called to create a #GtkCellRenderer, or %NULL</doc>
        <type name="CellCreateFunc" c:type="GdauiCellCreateFunc"/>
      </field>
      <method name="declare" c:identifier="gdaui_plugin_declare">
        <doc xml:space="preserve"
             filename="gdaui-init.c"
             line="280">Adds a new plugin which will be used by the forms and grids. The new plugin, as
described by @plugin can declare a custom widget to be used for forms, grids, or both.

If a plugin is already declared with the same name as the requested name, then
a warning is issued and the operation fails.</doc>
        <source-position filename="gdaui-plugin.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-init.c"
                 line="282">a pointer to a structure filled to describe the new plugin. All the contained information is copied.</doc>
            <type name="Plugin" c:type="const GdauiPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="ProviderSelector"
           c:symbol-prefix="provider_selector"
           c:type="GdauiProviderSelector"
           parent="Combo"
           glib:type-name="GdauiProviderSelector"
           glib:get-type="gdaui_provider_selector_get_type"
           glib:type-struct="ProviderSelectorClass">
      <source-position filename="gdaui-provider-selector.h" line="44"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new" c:identifier="gdaui_provider_selector_new">
        <doc xml:space="preserve"
             filename="gdaui-provider-selector.c"
             line="132">Create a new #GdauiProviderSelector widget.</doc>
        <source-position filename="gdaui-provider-selector.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-provider-selector.c"
               line="137">the newly created widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_provider"
              c:identifier="gdaui_provider_selector_get_provider"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-provider-selector.c"
             line="148">Get the selected provider.</doc>
        <source-position filename="gdaui-provider-selector.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-provider-selector.c"
               line="154">the selected provider, or %NULL if no provider is selected</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-provider-selector.c"
                 line="150">a #GdauiProviderSelector widget</doc>
            <type name="ProviderSelector" c:type="GdauiProviderSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_provider_obj"
              c:identifier="gdaui_provider_selector_get_provider_obj"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-provider-selector.c"
             line="208">Get the selected provider as a #GdaServerProvider object</doc>
        <source-position filename="gdaui-provider-selector.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-provider-selector.c"
               line="214">a #GdaServerProvider or %NULL if an error occurred</doc>
          <type name="Gda.ServerProvider" c:type="GdaServerProvider*"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-provider-selector.c"
                 line="210">a #GdauiProviderSelector widget</doc>
            <type name="ProviderSelector" c:type="GdauiProviderSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_provider"
              c:identifier="gdaui_provider_selector_set_provider"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-provider-selector.c"
             line="175">Forces @selector to be set on @provider</doc>
        <source-position filename="gdaui-provider-selector.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-provider-selector.c"
               line="182">%TRUE if @provider has been selected</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-provider-selector.c"
                 line="177">a #GdauiProviderSelector widget</doc>
            <type name="ProviderSelector" c:type="GdauiProviderSelector*"/>
          </instance-parameter>
          <parameter name="provider"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-provider-selector.c"
                 line="178">the provider to be selected, or %NULL for the default (SQLite)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Combo" c:type="GdauiCombo"/>
      </field>
      <field name="priv">
        <type name="ProviderSelectorPrivate"
              c:type="GdauiProviderSelectorPrivate*"/>
      </field>
    </class>
    <record name="ProviderSelectorClass"
            c:type="GdauiProviderSelectorClass"
            glib:is-gtype-struct-for="ProviderSelector">
      <source-position filename="gdaui-provider-selector.h" line="44"/>
      <field name="parent_class">
        <type name="ComboClass" c:type="GdauiComboClass"/>
      </field>
    </record>
    <record name="ProviderSelectorPrivate"
            c:type="GdauiProviderSelectorPrivate"
            disguised="1">
      <source-position filename="gdaui-provider-selector.h" line="35"/>
    </record>
    <function-macro name="RAW_FORM"
                    c:identifier="GDAUI_RAW_FORM"
                    introspectable="0">
      <source-position filename="gdaui-raw-form.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RAW_FORM_CLASS"
                    c:identifier="GDAUI_RAW_FORM_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-raw-form.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RAW_GRID"
                    c:identifier="GDAUI_RAW_GRID"
                    introspectable="0">
      <source-position filename="gdaui-raw-grid.h" line="28"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RAW_GRID_CLASS"
                    c:identifier="GDAUI_RAW_GRID_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-raw-grid.h" line="29"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RT_EDITOR"
                    c:identifier="GDAUI_RT_EDITOR"
                    introspectable="0">
      <source-position filename="gdaui-rt-editor.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RT_EDITOR_CLASS"
                    c:identifier="GDAUI_RT_EDITOR_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-rt-editor.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="RawForm"
           c:symbol-prefix="raw_form"
           c:type="GdauiRawForm"
           parent="BasicForm"
           glib:type-name="GdauiRawForm"
           glib:get-type="gdaui_raw_form_get_type"
           glib:type-struct="RawFormClass">
      <source-position filename="gdaui-raw-form.h" line="51"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gdaui_raw_form_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-raw-form.c"
             line="302">Creates a new #GdauiRawForm widget to display data in @model</doc>
        <source-position filename="gdaui-raw-form.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-raw-form.c"
               line="308">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-raw-form.c"
                 line="304">a #GdaDataModel, or %NULL</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel"/>
      </property>
      <field name="object">
        <type name="BasicForm" c:type="GdauiBasicForm"/>
      </field>
      <field name="priv">
        <type name="RawFormPriv" c:type="GdauiRawFormPriv*"/>
      </field>
    </class>
    <record name="RawFormClass"
            c:type="GdauiRawFormClass"
            glib:is-gtype-struct-for="RawForm">
      <source-position filename="gdaui-raw-form.h" line="51"/>
      <field name="parent_class">
        <type name="BasicFormClass" c:type="GdauiBasicFormClass"/>
      </field>
    </record>
    <record name="RawFormPriv" c:type="GdauiRawFormPriv" disguised="1">
      <source-position filename="gdaui-raw-form.h" line="37"/>
    </record>
    <class name="RawGrid"
           c:symbol-prefix="raw_grid"
           c:type="GdauiRawGrid"
           parent="Gtk.TreeView"
           glib:type-name="GdauiRawGrid"
           glib:get-type="gdaui_raw_grid_get_type"
           glib:type-struct="RawGridClass">
      <source-position filename="gdaui-raw-grid.h" line="52"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="DataProxy"/>
      <implements name="DataSelector"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gdaui_raw_grid_new" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-raw-grid.c"
             line="428">Creates a new #GdauiRawGrid widget suitable to display the data in @model</doc>
        <source-position filename="gdaui-raw-grid.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-raw-grid.c"
               line="434">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="430">a #GdaDataModel</doc>
            <type name="Gda.DataModel" c:type="GdaDataModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="double_clicked">
        <source-position filename="gdaui-raw-grid.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <type name="RawGrid" c:type="GdauiRawGrid*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="populate_popup">
        <source-position filename="gdaui-raw-grid.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <type name="RawGrid" c:type="GdauiRawGrid*"/>
          </instance-parameter>
          <parameter name="menu" transfer-ownership="none">
            <type name="Gtk.Menu" c:type="GtkMenu*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_formatting_function"
              c:identifier="gdaui_raw_grid_add_formatting_function"
              version="5.0.3">
        <doc xml:space="preserve"
             filename="gdaui-raw-grid.c"
             line="1006">This function allows you to specify that the @func function needs to be called
whenever the rendering of a cell in @grid needs to be done. It is similar in purpose
to the gtk_tree_view_column_set_cell_data_func() function.</doc>
        <source-position filename="gdaui-raw-grid.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="1008">a #GdauiRawGrid widget</doc>
            <type name="RawGrid" c:type="GdauiRawGrid*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="1009">a #GdauiRawGridFormatFunc function pointer</doc>
            <type name="RawGridFormatFunc" c:type="GdauiRawGridFormatFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="1010">a pointer to pass to the @func function when called</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="dnotify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="1011">destroy notifier for @data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_formatting_function"
              c:identifier="gdaui_raw_grid_remove_formatting_function"
              version="5.0.3">
        <doc xml:space="preserve"
             filename="gdaui-raw-grid.c"
             line="1038">This function undoes what has been specified before by gdaui_raw_grid_add_formatting_function()</doc>
        <source-position filename="gdaui-raw-grid.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="1040">a #GdauiRawGrid widget</doc>
            <type name="RawGrid" c:type="GdauiRawGrid*"/>
          </instance-parameter>
          <parameter name="func" transfer-ownership="none" scope="notified">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="1041">a #GdauiRawGridFormatFunc function pointer</doc>
            <type name="RawGridFormatFunc" c:type="GdauiRawGridFormatFunc"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_layout_from_file"
              c:identifier="gdaui_raw_grid_set_layout_from_file"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-raw-grid.c"
             line="2708">Sets a grid's columns layout according an XML description contained in @file_name, for the grid identified
by the @grid_name name (as an XML layout file can contain the descriptions of several forms and grids).</doc>
        <source-position filename="gdaui-raw-grid.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="2710">a #GdauiRawGrid</doc>
            <type name="RawGrid" c:type="GdauiRawGrid*"/>
          </instance-parameter>
          <parameter name="file_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="2711">XML file name to use</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="grid_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="2712">the name of the grid to use, in @file_name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sample_size"
              c:identifier="gdaui_raw_grid_set_sample_size"
              version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-raw-grid.c"
             line="2672">Sets the size of each chunk of data to display: the maximum number of rows which
can be displayed at a time. See gdaui_grid_set_sample_size() and gda_data_proxy_set_sample_size()</doc>
        <source-position filename="gdaui-raw-grid.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="2674">a #GdauiRawGrid</doc>
            <type name="RawGrid" c:type="GdauiRawGrid*"/>
          </instance-parameter>
          <parameter name="sample_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="2675">the size of the sample displayed in @grid</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sample_start"
              c:identifier="gdaui_raw_grid_set_sample_start"
              version="4.2">
        <source-position filename="gdaui-raw-grid.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="2693">a #GdauiRawGrid</doc>
            <type name="RawGrid" c:type="GdauiRawGrid*"/>
          </instance-parameter>
          <parameter name="sample_start" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="global-actions-visible"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="info-cell-visible"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="Gda.DataModel"/>
      </property>
      <property name="xml-layout"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="object">
        <type name="Gtk.TreeView" c:type="GtkTreeView"/>
      </field>
      <field name="priv">
        <type name="RawGridPriv" c:type="GdauiRawGridPriv*"/>
      </field>
      <glib:signal name="double-clicked" when="first">
        <doc xml:space="preserve"
             filename="gdaui-raw-grid.c"
             line="278">Emitted when the user double clicks on a row</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="281">the row that was double clicked</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="populate-popup" when="first">
        <doc xml:space="preserve"
             filename="gdaui-raw-grid.c"
             line="294">Connect this signal and modify the popup menu.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="menu" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-raw-grid.c"
                 line="297">a #GtkMenu to modify</doc>
            <type name="Gtk.Menu"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="RawGridClass"
            c:type="GdauiRawGridClass"
            glib:is-gtype-struct-for="RawGrid">
      <source-position filename="gdaui-raw-grid.h" line="52"/>
      <field name="parent_class">
        <type name="Gtk.TreeViewClass" c:type="GtkTreeViewClass"/>
      </field>
      <field name="double_clicked">
        <callback name="double_clicked">
          <source-position filename="gdaui-raw-grid.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="grid" transfer-ownership="none">
              <type name="RawGrid" c:type="GdauiRawGrid*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="populate_popup">
        <callback name="populate_popup">
          <source-position filename="gdaui-raw-grid.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="grid" transfer-ownership="none">
              <type name="RawGrid" c:type="GdauiRawGrid*"/>
            </parameter>
            <parameter name="menu" transfer-ownership="none">
              <type name="Gtk.Menu" c:type="GtkMenu*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="RawGridFormatFunc" c:type="GdauiRawGridFormatFunc">
      <source-position filename="gdaui-raw-grid.h" line="75"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cell" transfer-ownership="none">
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </parameter>
        <parameter name="column" transfer-ownership="none">
          <type name="Gtk.TreeViewColumn" c:type="GtkTreeViewColumn*"/>
        </parameter>
        <parameter name="column_pos" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="model" transfer-ownership="none">
          <type name="Gda.DataModel" c:type="GdaDataModel*"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="RawGridPriv" c:type="GdauiRawGridPriv" disguised="1">
      <source-position filename="gdaui-raw-grid.h" line="35"/>
    </record>
    <class name="RtEditor"
           c:symbol-prefix="rt_editor"
           c:type="GdauiRtEditor"
           parent="Gtk.Box"
           glib:type-name="GdauiRtEditor"
           glib:get-type="gdaui_rt_editor_get_type"
           glib:type-struct="RtEditorClass">
      <source-position filename="gdaui-rt-editor.h" line="53"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gdaui_rt_editor_new"
                   version="4.2.2">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="413">Creates a new #GdauiRtEditor widget</doc>
        <source-position filename="gdaui-rt-editor.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-rt-editor.c"
               line="418">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="changed">
        <source-position filename="gdaui-rt-editor.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="RtEditor" c:type="GdauiRtEditor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_contents"
              c:identifier="gdaui_rt_editor_get_contents"
              version="4.2.2">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="1539">Get the contents of @editor, using the markup syntax</doc>
        <source-position filename="gdaui-rt-editor.h" line="84"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-rt-editor.c"
               line="1545">a new string, or %NULL if there was an error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-rt-editor.c"
                 line="1541">a #GdauiRtEditor</doc>
            <type name="RtEditor" c:type="GdauiRtEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_contents"
              c:identifier="gdaui_rt_editor_set_contents"
              version="4.2.2">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="1895">Set @editor's contents. If @length is -1, @markup must be nul-terminated</doc>
        <source-position filename="gdaui-rt-editor.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-rt-editor.c"
                 line="1897">a #GdauiRtEditor</doc>
            <type name="RtEditor" c:type="GdauiRtEditor*"/>
          </instance-parameter>
          <parameter name="markup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-rt-editor.c"
                 line="1898">the text to set in @editor, using the markup syntax (must be valid UTF-8)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-rt-editor.c"
                 line="1899">length of text in bytes.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_editable"
              c:identifier="gdaui_rt_editor_set_editable"
              version="4.2.2">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="1915">Set @editor's editability</doc>
        <source-position filename="gdaui-rt-editor.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-rt-editor.c"
                 line="1917">a #GdauiRtEditor</doc>
            <type name="RtEditor" c:type="GdauiRtEditor*"/>
          </instance-parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-rt-editor.c"
                 line="1918">whether it's editable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="257">Get access to the actual #GtkTextBuffer used. Do not modify it!</doc>
        <type name="Gtk.TextBuffer"/>
      </property>
      <property name="in-scrolled-window"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="268">Determines if the contents of the widget appears in a scrolled window or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="no-background" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="232">If set to %TRUE, then the default text background is removed
and thus the textbackground is the default widget's background.

This property has to be set before the widget is realized, and is taken into account only
if the widget is not editable (when it's realized).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-markup" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gdaui-rt-editor.c"
             line="246">Instead of showing the formatted text, display the raw text (in the txt2tags syntax)</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="RtEditorPriv" c:type="GdauiRtEditorPriv*"/>
      </field>
      <glib:signal name="changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="RtEditorClass"
            c:type="GdauiRtEditorClass"
            glib:is-gtype-struct-for="RtEditor">
      <source-position filename="gdaui-rt-editor.h" line="53"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="gdaui-rt-editor.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="editor" transfer-ownership="none">
              <type name="RtEditor" c:type="GdauiRtEditor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="RtEditorPriv" c:type="GdauiRtEditorPriv" disguised="1">
      <source-position filename="gdaui-rt-editor.h" line="36"/>
    </record>
    <function-macro name="SERVER_OPERATION"
                    c:identifier="GDAUI_SERVER_OPERATION"
                    introspectable="0">
      <source-position filename="gdaui-server-operation.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SERVER_OPERATION_CLASS"
                    c:identifier="GDAUI_SERVER_OPERATION_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-server-operation.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SET" c:identifier="GDAUI_SET" introspectable="0">
      <source-position filename="gdaui-set.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SET_CLASS"
                    c:identifier="GDAUI_SET_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-set.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SET_GROUP"
                    c:identifier="GDAUI_SET_GROUP"
                    introspectable="0">
      <source-position filename="gdaui-set.h" line="56"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SET_SOURCE"
                    c:identifier="GDAUI_SET_SOURCE"
                    introspectable="0">
      <source-position filename="gdaui-set.h" line="90"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ServerOperation"
           c:symbol-prefix="server_operation"
           c:type="GdauiServerOperation"
           parent="Gtk.Box"
           glib:type-name="GdauiServerOperation"
           glib:get-type="gdaui_server_operation_get_type"
           glib:type-struct="ServerOperationClass">
      <source-position filename="gdaui-server-operation.h" line="53"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gdaui_server_operation_new"
                   version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-server-operation.c"
             line="225">Creates a new #GdauiServerOperation widget using all the parameters provided in @paramlist.

The global layout is rendered using a table (a #GtkTable), and an entry is created for each
node of @paramlist.</doc>
        <source-position filename="gdaui-server-operation.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-server-operation.c"
               line="234">the new widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-server-operation.c"
                 line="227">a #GdaServerOperation structure</doc>
            <type name="Gda.ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_in_dialog"
                   c:identifier="gdaui_server_operation_new_in_dialog"
                   version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-server-operation.c"
             line="1062">Creates a new #GdauiServerOperation widget in the same way as gdaui_server_operation_new()
and puts it into a #GtkDialog widget. The returned dialog has the "Ok" and "Cancel" buttons
which respectively return GTK_RESPONSE_ACCEPT and GTK_RESPONSE_REJECT.

The #GdauiServerOperation widget is attached to the dialog using the user property
"form".</doc>
        <source-position filename="gdaui-server-operation.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-server-operation.c"
               line="1076">the new #GtkDialog widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="op" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-server-operation.c"
                 line="1064">a #GdaServerOperation object</doc>
            <type name="Gda.ServerOperation" c:type="GdaServerOperation*"/>
          </parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-server-operation.c"
                 line="1065">the parent window for the new dialog, or %NULL</doc>
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-server-operation.c"
                 line="1066">the title of the dialog window, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="header"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-server-operation.c"
                 line="1067">a helper text displayed at the top of the dialog, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="hide-single-header"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="server-operation"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.ServerOperation"/>
      </property>
      <field name="object">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="ServerOperationPriv" c:type="GdauiServerOperationPriv*"/>
      </field>
    </class>
    <record name="ServerOperationClass"
            c:type="GdauiServerOperationClass"
            glib:is-gtype-struct-for="ServerOperation">
      <source-position filename="gdaui-server-operation.h" line="53"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="ServerOperationPriv"
            c:type="GdauiServerOperationPriv"
            disguised="1">
      <source-position filename="gdaui-server-operation.h" line="40"/>
    </record>
    <class name="Set"
           c:symbol-prefix="set"
           c:type="GdauiSet"
           parent="GObject.Object"
           glib:type-name="GdauiSet"
           glib:get-type="gdaui_set_get_type"
           glib:type-struct="SetClass">
      <source-position filename="gdaui-set.h" line="128"/>
      <constructor name="new" c:identifier="gdaui_set_new" version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="613">Creates a new #GdauiSet which wraps @set's properties</doc>
        <source-position filename="gdaui-set.h" line="134"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="619">the new widget</doc>
          <type name="Set" c:type="GdauiSet*"/>
        </return-value>
        <parameters>
          <parameter name="set" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="615">a #GdaSet</doc>
            <type name="Gda.Set" c:type="GdaSet*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="public_data_changed">
        <source-position filename="gdaui-set.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="set" transfer-ownership="none">
            <type name="Set" c:type="GdauiSet*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="source_model_changed">
        <source-position filename="gdaui-set.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="set" transfer-ownership="none">
            <type name="Set" c:type="GdauiSet*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_group"
              c:identifier="gdaui_set_get_group"
              version="5.2">
        <source-position filename="gdaui-set.h" line="135"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="979">A new #GdauiSetGroup struct</doc>
          <type name="SetGroup" c:type="GdauiSetGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dbset" transfer-ownership="none">
            <type name="Set" c:type="GdauiSet*"/>
          </instance-parameter>
          <parameter name="holder" transfer-ownership="none">
            <type name="Gda.Holder" c:type="GdaHolder*"/>
          </parameter>
        </parameters>
      </method>
      <property name="set"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.Set"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SetPriv" c:type="GdauiSetPriv*"/>
      </field>
      <field name="sources_list">
        <doc xml:space="preserve"
             filename="gdaui-set.h"
             line="109">list of #GdauiSetSource</doc>
        <type name="GLib.SList" c:type="GSList*">
          <type name="SetSource"/>
        </type>
      </field>
      <field name="groups_list">
        <doc xml:space="preserve"
             filename="gdaui-set.h"
             line="110">list of #GdauiSetGroup</doc>
        <type name="GLib.SList" c:type="GSList*">
          <type name="SetGroup"/>
        </type>
      </field>
      <glib:signal name="public-data-changed" when="first" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="546">Gets emitted when @set's public data (#GdauiSetGroup or #GdauiSetSource values) have changed</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="source-model-changed" when="first" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="561">Gets emitted when the data model used in @set's #GdauiSetSource has changed</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SetClass"
            c:type="GdauiSetClass"
            glib:is-gtype-struct-for="Set">
      <source-position filename="gdaui-set.h" line="128"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="public_data_changed">
        <callback name="public_data_changed">
          <source-position filename="gdaui-set.h" line="126"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="set" transfer-ownership="none">
              <type name="Set" c:type="GdauiSet*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="source_model_changed">
        <callback name="source_model_changed">
          <source-position filename="gdaui-set.h" line="127"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="set" transfer-ownership="none">
              <type name="Set" c:type="GdauiSet*"/>
            </parameter>
            <parameter name="source" transfer-ownership="none">
              <type name="SetSource" c:type="GdauiSetSource*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="SetGroup"
            c:type="GdauiSetGroup"
            glib:type-name="GdauiSetGroup"
            glib:get-type="gdaui_set_group_get_type"
            c:symbol-prefix="set_group">
      <doc xml:space="preserve"
           filename="gdaui-set.c"
           line="29">The &lt;structname&gt;GdauiSetGroup&lt;/structname&gt;.

To create a new #GdauiSetGroup use #gdaiu_set_group_new.

To free a #GdauiSetGroup, created by #gdaui_set_group_new, use #gda_set_group_free.

Since 5.2, you must consider this struct as opaque. Any access to its internal must use public API.
Don't try to use #gdaui_set_group_free on a struct that was created manually.</doc>
      <source-position filename="gdaui-set.h" line="52"/>
      <field name="group" writable="1">
        <type name="Gda.SetGroup" c:type="GdaSetGroup*"/>
      </field>
      <field name="source" writable="1">
        <type name="SetSource" c:type="GdauiSetSource*"/>
      </field>
      <field name="_gda_reserved1" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gdaui_set_group_new" version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="73">Creates a new #GdauiSetGroup struct.</doc>
        <source-position filename="gdaui-set.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="79">a new #GdauiSetGroup struct.</doc>
          <type name="SetGroup" c:type="GdauiSetGroup*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="75">a #GdaSetGroup</doc>
            <type name="Gda.SetGroup" c:type="GdaSetGroup*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gdaui_set_group_copy" version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="93">Copy constructor.</doc>
        <source-position filename="gdaui-set.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="99">a new #GdauiSetGroup</doc>
          <type name="SetGroup" c:type="GdauiSetGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="95">a #GdauiSetGroup</doc>
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gdaui_set_group_free" version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="114">Frees any resources taken by @sg struct. If @sg is %NULL, then nothing happens.</doc>
        <source-position filename="gdaui-set.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sg"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="116">a #GdauiSetGroup struct to free</doc>
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_group"
              c:identifier="gdaui_set_group_get_group"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="179">Get group used by @sg.</doc>
        <source-position filename="gdaui-set.h" line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="185">used #GdaSetGroup</doc>
          <type name="Gda.SetGroup" c:type="GdaSetGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="181">a #GdauiSetGroup struct to free</doc>
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="gdaui_set_group_get_source"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="145">Get source used by @sg.</doc>
        <source-position filename="gdaui-set.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="151">used #GdaSetGroup</doc>
          <type name="SetSource" c:type="GdauiSetSource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="147">a #GdauiSetGroup struct</doc>
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_group"
              c:identifier="gdaui_set_group_set_group"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="162">Set source to @source.</doc>
        <source-position filename="gdaui-set.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="164">a #GdauiSetGroup struct to free</doc>
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="165">a #GdaSetGroup struct</doc>
            <type name="Gda.SetGroup" c:type="GdaSetGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="gdaui_set_group_set_source"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="129">Set source to @source. if @source is #NULL, then @group nodes contains exactly one entry.</doc>
        <source-position filename="gdaui-set.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="131">a #GdauiSetGroup struct to free
@source (allow-none): a #GdauiSetSource struct or NULL</doc>
            <type name="SetGroup" c:type="GdauiSetGroup*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="SetPriv" c:type="GdauiSetPriv" disguised="1">
      <source-position filename="gdaui-set.h" line="37"/>
    </record>
    <record name="SetSource"
            c:type="GdauiSetSource"
            glib:type-name="GdauiSetSource"
            glib:get-type="gdaui_set_source_get_type"
            c:symbol-prefix="set_source">
      <doc xml:space="preserve"
           filename="gdaui-set.c"
           line="197">The &lt;structname&gt;GdauiSetSource&lt;/structname&gt; is a ...

To create a new #GdauiSetSource use #gdaui_set_source_new.

To free a #GdauiSetSource, created by #gdaui_set_source_new, use #gdaui_set_source_free.

Since 5.2, you must consider this struct as opaque. Any access to its internal must use public API.
Don't try to use #gdaui_set_source_free on a struct that was created manually.</doc>
      <source-position filename="gdaui-set.h" line="86"/>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="199">a #GdaSetSource</doc>
        <type name="Gda.SetSource" c:type="GdaSetSource*"/>
      </field>
      <field name="shown_n_cols" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="201">number of elements of @shown_cols_index</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="shown_cols_index" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="200">Array with the column number to be shown from #GdaSetSource</doc>
        <array length="1" zero-terminated="0" c:type="gint*">
          <type name="gint" c:type="gint"/>
        </array>
      </field>
      <field name="ref_n_cols" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="203">number of elements of @ref_cols_index</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="ref_cols_index" writable="1">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="202">Array with the number of columns as PRIMARY KEY in #GdaSetSource</doc>
        <array length="3" zero-terminated="0" c:type="gint*">
          <type name="gint" c:type="gint"/>
        </array>
      </field>
      <field name="_gda_reserved1" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved2" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved3" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_gda_reserved4" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <constructor name="new"
                   c:identifier="gdaui_set_source_new"
                   version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="253">Creates a new #GdauiSetSource struct.</doc>
        <source-position filename="gdaui-set.h" line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="258">a new #GdauiSetSource struct.</doc>
          <type name="SetSource" c:type="GdauiSetSource*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="Gda.SetSource" c:type="GdaSetSource*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gdaui_set_source_copy" version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="276">Copy constructor.</doc>
        <source-position filename="gdaui-set.h" line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="282">a new #GdauiSetSource</doc>
          <type name="SetSource" c:type="GdauiSetSource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="278">a #GdauiSetGroup</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gdaui_set_source_free" version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="301">Frees any resources taken by @s struct. If @s is %NULL, then nothing happens.</doc>
        <source-position filename="gdaui-set.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="s"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="303">a #GdauiSetSource struct to free</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ref_columns"
              c:identifier="gdaui_set_source_get_ref_columns"
              version="5.2">
        <source-position filename="gdaui-set.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="428">array of of columns to be shown.</doc>
          <array c:type="gint*">
            <type name="gint" c:type="gint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="426">a #GdauiSetSource</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ref_n_cols"
              c:identifier="gdaui_set_source_get_ref_n_cols"
              version="5.2">
        <source-position filename="gdaui-set.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="413">number of columns to referenced.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="411">a #GdauiSetSource</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shown_columns"
              c:identifier="gdaui_set_source_get_shown_columns"
              version="5.2">
        <source-position filename="gdaui-set.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="373">array of of columns to be shown.</doc>
          <array c:type="gint*">
            <type name="gint" c:type="gint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="371">a #GdauiSetSource</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shown_n_cols"
              c:identifier="gdaui_set_source_get_shown_n_cols"
              version="5.2">
        <source-position filename="gdaui-set.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="358">number of columns to be shown.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="356">a #GdauiSetSource</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="gdaui_set_source_get_source"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="337">Get source used by @sg.</doc>
        <source-position filename="gdaui-set.h" line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-set.c"
               line="343">used #GdaSetSource</doc>
          <type name="Gda.SetSource" c:type="GdaSetSource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="339">a #GdauiSetGroup struct</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_ref_columns"
              c:identifier="gdaui_set_source_set_ref_columns"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="439">Set the columns to be shown.</doc>
        <source-position filename="gdaui-set.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="441">a #GdauiSetSource struct to free</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="442">an array of with columns numbers of referen (Primary Key) at #GdaSetSource</doc>
            <array length="1" zero-terminated="0" c:type="gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
          <parameter name="n_columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="443">number of columns of the array</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_shown_columns"
              c:identifier="gdaui_set_source_set_shown_columns"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="384">Set the columns to be shown.</doc>
        <source-position filename="gdaui-set.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="386">a #GdauiSetSource</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="387">an array of with columns numbers to be shown from a #GdaSetSource</doc>
            <array length="1" zero-terminated="0" c:type="gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
          <parameter name="n_columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="388">number of columns of the array</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="gdaui_set_source_set_source"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-set.c"
             line="320">Set source to @source.</doc>
        <source-position filename="gdaui-set.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="322">a #GdauiSetSource struct to free</doc>
            <type name="SetSource" c:type="GdauiSetSource*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-set.c"
                 line="323">a #GdaSetSource struct</doc>
            <type name="Gda.SetSource" c:type="GdaSetSource*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <function-macro name="TREE_STORE"
                    c:identifier="GDAUI_TREE_STORE"
                    introspectable="0">
      <source-position filename="gdaui-tree-store.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TREE_STORE_CLASS"
                    c:identifier="GDAUI_TREE_STORE_CLASS"
                    introspectable="0">
      <source-position filename="gdaui-tree-store.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="TreeStore"
           c:symbol-prefix="tree_store"
           c:type="GdauiTreeStore"
           parent="GObject.Object"
           glib:type-name="GdauiTreeStore"
           glib:get-type="gdaui_tree_store_get_type"
           glib:type-struct="TreeStoreClass">
      <source-position filename="gdaui-tree-store.h" line="57"/>
      <implements name="Gtk.TreeDragDest"/>
      <implements name="Gtk.TreeDragSource"/>
      <implements name="Gtk.TreeModel"/>
      <function name="new"
                c:identifier="gdaui_tree_store_new"
                version="4.2"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gdaui-tree-store.c"
             line="392">Creates a #GtkTreeModel interface with a #GdaTree, mapping columns to attributes' values.

As an example, &lt;literal&gt;gdaui_tree_store_new (tree, 2, G_TYPE_STRING, "name", G_TYPE_STRING, "schema");&lt;/literal&gt; creates
a #GtkTreeStore with two columns (of type G_TYPE_STRING), one with the values of the "name" attribute, and one with
the values of the "schema" attribute.

Note that the GType has to correspond to the type of value associated with the attribute name (no type
conversion is done), and a warning will be displayed in case of type mismatch.</doc>
        <source-position filename="gdaui-tree-store.h" line="79"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdaui-tree-store.c"
               line="407">the new object, or %NULL if an attribute's name was NULL or an empty string</doc>
          <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="394">a #GdaTree object</doc>
            <type name="Gda.Tree" c:type="GdaTree*"/>
          </parameter>
          <parameter name="n_columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="395">number of columns in the tree store</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="396">couples of (GType, attribute name) for each column, from first to last</doc>
            <varargs/>
          </parameter>
        </parameters>
      </function>
      <function name="newv" c:identifier="gdaui_tree_store_newv" version="4.2">
        <doc xml:space="preserve"
             filename="gdaui-tree-store.c"
             line="444">Creates a #GtkTreeModel interface with a #GdaTree, mapping columns to attributes' values.
For more information and limitations, see gdaui_tree_store_new().</doc>
        <source-position filename="gdaui-tree-store.h" line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdaui-tree-store.c"
               line="455">the new object, or %NULL if an inconsistency exists in the parameters</doc>
          <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="446">a #GdaTree object</doc>
            <type name="Gda.Tree" c:type="GdaTree*"/>
          </parameter>
          <parameter name="n_columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="447">number of columns in the tree store</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="types" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="448">an array of @n_columns GType to specify the type of each column</doc>
            <type name="GType" c:type="GType*"/>
          </parameter>
          <parameter name="attribute_names" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="449">an array of @n_columns strings to specify the attribute name
                  to map each column on</doc>
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="drag_can_drag">
        <source-position filename="gdaui-tree-store.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drag_can_drop">
        <source-position filename="gdaui-tree-store.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="selection_data" transfer-ownership="none">
            <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drag_delete">
        <source-position filename="gdaui-tree-store.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drag_drop">
        <source-position filename="gdaui-tree-store.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="selection_data" transfer-ownership="none">
            <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drag_get">
        <source-position filename="gdaui-tree-store.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="selection_data" transfer-ownership="none">
            <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_iter"
              c:identifier="gdaui_tree_store_get_iter"
              version="4.2.8"
              introspectable="0"
              deprecated="1"
              deprecated-version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-tree-store.c"
             line="522">Sets @iter to represent @node in the tree.</doc>
        <source-position filename="gdaui-tree-store.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-tree-store.c"
               line="530">%TRUE if no error occurred and @iter is valid</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="524">a #GdauiTreeStore object</doc>
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="525">a pointer to a #GtkTreeIter</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="526">a #GdaTreeNode in @store</doc>
            <type name="Gda.TreeNode" c:type="GdaTreeNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_iter_from_node"
              c:identifier="gdaui_tree_store_get_iter_from_node"
              version="5.2">
        <doc xml:space="preserve"
             filename="gdaui-tree-store.c"
             line="543">Sets @iter to represent @node in the tree.</doc>
        <source-position filename="gdaui-tree-store.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-tree-store.c"
               line="551">%TRUE if no error occurred and @iter is valid</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="545">a #GdauiTreeStore object</doc>
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="546">a #GtkTreeIter</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="547">a #GdaTreeNode in @store</doc>
            <type name="Gda.TreeNode" c:type="GdaTreeNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node"
              c:identifier="gdaui_tree_store_get_node"
              version="4.2.8">
        <doc xml:space="preserve"
             filename="gdaui-tree-store.c"
             line="497">Get the  #GdaTreeNode represented by @iter.</doc>
        <source-position filename="gdaui-tree-store.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-tree-store.c"
               line="504">the #GdaTreeNode represented by @iter, or %NULL if an error occurred</doc>
          <type name="Gda.TreeNode" c:type="GdaTreeNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="499">a #GdauiTreeStore object</doc>
            <type name="TreeStore" c:type="GdauiTreeStore*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdaui-tree-store.c"
                 line="500">a valid #GtkTreeIter</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </method>
      <property name="tree"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gda.Tree"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="TreeStorePriv" c:type="GdauiTreeStorePriv*"/>
      </field>
      <glib:signal name="drag-can-drag" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-can-drop" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-delete" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-drop" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-get" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TreeStoreClass"
            c:type="GdauiTreeStoreClass"
            glib:is-gtype-struct-for="TreeStore">
      <source-position filename="gdaui-tree-store.h" line="57"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="drag_can_drag">
        <callback name="drag_can_drag">
          <source-position filename="gdaui-tree-store.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_get">
        <callback name="drag_get">
          <source-position filename="gdaui-tree-store.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="selection_data" transfer-ownership="none">
              <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_can_drop">
        <callback name="drag_can_drop">
          <source-position filename="gdaui-tree-store.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="selection_data" transfer-ownership="none">
              <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_drop">
        <callback name="drag_drop">
          <source-position filename="gdaui-tree-store.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="selection_data" transfer-ownership="none">
              <type name="Gtk.SelectionData" c:type="GtkSelectionData*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_delete">
        <callback name="drag_delete">
          <source-position filename="gdaui-tree-store.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="store" transfer-ownership="none">
              <type name="TreeStore" c:type="GdauiTreeStore*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="TreeStorePriv" c:type="GdauiTreeStorePriv" disguised="1">
      <source-position filename="gdaui-tree-store.h" line="35"/>
    </record>
    <function name="data_entry_error_quark"
              c:identifier="gdaui_data_entry_error_quark"
              moved-to="DataEntry.error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <docsection name="gdaui-basic-form">
      <doc xml:space="preserve"
           filename="gdaui-basic-form.h"
           line="60">The #GdauiBasicForm widget is a form containing an entry for each #GdaHolder object
contained in a #GdaSet (specified when the form is created). A typical usage is when the
user is requested to enter a value which will be used in a statement (without any error checking for clarity):
&lt;programlisting&gt;
GdaStatement *stmt;
GdaSet *params;
stmt = gda_sql_parser_parse_string (parser, "SELECT * FROM customers where name LIKE ##name::string", NULL, NULL);
gda_statement_get_parameters (stmt, &amp;amp;params, NULL);

GtkWidget *form;
gint result;
form = gdaui_basic_form_new_in_dialog (params, NULL, "Customer search", "Enter Customer search expression");
result = gtk_dialog_run (GTK_DIALOG (form));
gtk_widget_destroy (form);
if (result == GTK_RESPONSE_ACCEPT) {
   // execute statement
   GdaDataModel *model;
   model = gda_connection_statement_execute_select (cnc, stmt, params, NULL);
   [...]
}
g_object_unref (params);
g_object_unref (stmt);
&lt;/programlisting&gt;

The default layout within a #GdauiBasicForm is a vertical column: all the data entry widgets are aligned
in a single column. This behaviour can be changed using the gdaui_basic_form_set_layout_from_file() method or
setting the &lt;link linkend="GdauiBasicForm--xml-layout"&gt;xml-layout&lt;/link&gt; property.

&lt;anchor id="GdauiBasicFormXMLLayout"/&gt;
The #GdauiBasicForm class parses textual descriptions of XML layout which
which can be described by the following DTD.

&lt;programlisting&gt;&lt;![CDATA[
&lt;!ELEMENT gdaui_layouts (gdaui_form | gdaui_grid)&gt;

&lt;!ELEMENT gdaui_form (gdaui_section | gdaui_column | gdaui_notebook)*&gt;
&lt;!ATTLIST gdaui_form
         name CDATA #REQUIRED
	  container (columns|rows|hpaned|vpaned) #IMPLIED&gt;

&lt;!ELEMENT gdaui_section (gdaui_section | gdaui_column | gdaui_notebook)*&gt;
&lt;!ATTLIST gdaui_section
         title CDATA #IMPLIED &gt;

&lt;!ELEMENT gdaui_notebook (gdaui_section | gdaui_column | gdaui_notebook)*&gt;

&lt;!ELEMENT gdaui_column (gdaui_entry | gdaui_placeholder)*&gt;

&lt;!ELEMENT gdaui_entry EMPTY&gt;
&lt;!ATTLIST gdaui_entry
         name CDATA #REQUIRED
	  editable (true|false) #IMPLIED
	  label CDATA #IMPLIED
	  plugin CDATA #IMPLIED&gt;

&lt;!ELEMENT gdaui_placeholder EMPTY&gt;
&lt;!ATTLIST gdaui_placeholder
	  id CDATA #REQUIRED
	  label CDATA #IMPLIED&gt;
]]&gt;&lt;/programlisting&gt;

&lt;example&gt;
 &lt;title&gt;A GdauiBasicForm layout example&lt;/title&gt;
 &lt;programlisting&gt;&lt;![CDATA[
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;gdaui_layouts&gt;
 &lt;gdaui_form name="customers" container="hpaned"&gt;
   &lt;gdaui_section title="Summary"&gt;
     &lt;gdaui_column&gt;
	&lt;gdaui_entry name="id" editable="no"/&gt;
	&lt;gdaui_entry name="name"/&gt;
	&lt;gdaui_entry name="comments" plugin="text"/&gt;
	&lt;gdaui_entry name="total_orders" label="Total ordered" plugin="number:NB_DECIMALS=2;CURRENCY=€"/&gt;
     &lt;/gdaui_column&gt;
   &lt;/gdaui_section&gt;
   &lt;gdaui_section title="Photo"&gt;
     &lt;gdaui_column&gt;
	&lt;gdaui_entry name="photo" plugin="picture"/&gt;
     &lt;/gdaui_column&gt;
   &lt;/gdaui_section&gt;
 &lt;/gdaui_form&gt;
&lt;/gdaui_layouts&gt;
]]&gt;&lt;/programlisting&gt;
&lt;/example&gt;</doc>
    </docsection>
    <docsection name="gdaui-cloud">
      <doc xml:space="preserve"
           filename="gdaui-cloud.h"
           line="53">The #GdauiCloud widget displays a string for each row in a #GdaDataModel for which the size
is variable (determined either by some data in the data model, or by a function provided by
the programmer).

Depending on the selection mode of the widget, each string can be selected by the user and
the "selection-changed" signal is emitted.</doc>
    </docsection>
    <docsection name="gdaui-data-entry">
      <doc xml:space="preserve"
           filename="gdaui-data-entry.h"
           line="88">The #GdaUiDataEntry is an interface for widgets (simple or complex)
which lets the user view and/or modify a #GValue.

This interface is implemented by widgets which feature data editing (usually composed of an editing
area and a button to have some more control on the value being edited).
The interface allows to control how the widget works and to query the value and the attributes
of the data held by the widget.

The widget can store the original value (to be able to tell if the value has been changed
by the user) and a default value (which will be returned if the user explicitly forces the widget
to be set to the default value).
Control methods allow to set the type of value to be edited (the requested type must be
compatible with what the widget can handle), set the value (which replaces the currently edited
value), set the value and the original value (the value passed as argument is set and is also
considered to be the original value).

#GdaUiDataEntry widgets are normally created using the gdaui_new_data_entry() function.</doc>
    </docsection>
    <docsection name="gdaui-data-filter">
      <doc xml:space="preserve"
           filename="gdaui-data-filter.h"
           line="54">The #GdauiDataFilter widget can be used as a standalone widget, but is also
used internally by the #GdauiDataProxyInfo widget for its search option.</doc>
    </docsection>
    <docsection name="gdaui-data-proxy">
      <doc xml:space="preserve"
           filename="gdaui-data-proxy.h"
           line="71">The #GdauiDataProxy interface is implemented by widgets which allow modifications
to a #GdaDataModel (through a #GdaDataProxy to actually proxy the changes before they
are written to the data model).</doc>
    </docsection>
    <docsection name="gdaui-data-proxy-info">
      <doc xml:space="preserve"
           filename="gdaui-data-proxy-info.h"
           line="73">The #GdauiDataProxyInfo widget is a container widget which, depending on how it is configured:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;proposes action buttons to change the currently displayed row, add new row, ...&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;displays information about the number of rows in a #GdauiDataProxy&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
    </docsection>
    <docsection name="gdaui-data-selector">
      <doc xml:space="preserve"
           filename="gdaui-data-selector.h"
           line="57">The #GdauiDataSelector interface is implemented by widgets which allow the user
to select some data from a #GdaDataModel. Depending on the actual widget, the selection
can be a single row or more than one row.

This interface allows one to set and get the #GdaDataModel from which data is to be selected
and offers a few other common behaviours.

Please note that any row number in this interface is in reference to the #GdaDataModel returned by
the gdaui_data_selector_get_model() method.</doc>
    </docsection>
    <docsection name="gdaui-data-store">
      <doc xml:space="preserve"
           filename="gdaui-data-store.h"
           line="69">The #GdauiDataStore object implements the #GtkTreeModel interface
on top of a #GdaDataModel to be able to display its contents
in a #GtkTreeView.</doc>
    </docsection>
    <docsection name="gdaui-login">
      <doc xml:space="preserve"
           filename="gdaui-login.h"
           line="64">The #GdauiLogin widget can be used when the user needs to enter
data to open a connection. It can be customized in several ways:
&lt;itemizedlist&gt;
  &lt;listitem&gt;&lt;para&gt;data source (DSN) selection can be shown or hidden&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;the button to launch the control center to declare new data sources can be
shown or hidden&lt;/para&gt;&lt;/listitem&gt;
  &lt;listitem&gt;&lt;para&gt;the form to open a connection not using a DSN can be shown or hidden&lt;/para&gt;&lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
    </docsection>
    <docsection name="gdaui-plugins">
      <doc xml:space="preserve"
           filename="gdaui-plugin.h"
           line="80">This section describes the functions used to declare UI plugins: data entry and cell renderers.</doc>
    </docsection>
    <docsection name="gdaui-raw-form">
      <doc xml:space="preserve"
           filename="gdaui-raw-form.h"
           line="53">The #GdauiForm widget which uses the #GdauiRawForm and adds decorations such as
information about data model size, and features searching.</doc>
    </docsection>
    <docsection name="gdaui-raw-grid">
      <doc xml:space="preserve"
           filename="gdaui-raw-grid.h"
           line="54">The #GdauiGrid widget which uses the #GdauiRawGrid and adds decorations such as
information about data model size, and features searching.</doc>
    </docsection>
    <docsection name="gdaui-rt-editor">
      <doc xml:space="preserve"
           filename="gdaui-rt-editor.h"
           line="55">The text entered in the editor can be formatted using bold, underline, title, ... attributes
and then extracted using a subset of the &lt;ulink url="http://www.txt2tags.org/markup.html"&gt;txt2tags&lt;/ulink&gt;
markup. Use this widget to edit textual fields where some markup is desirable to organize the text.

For example the real text used to obtain the formatting in the figure is:
&lt;programlisting&gt;
blah //italic// blah.
and ** BOLD!//both italic and bold// Bold!**
Nice Picture: [[[R2RrUAA...y8vLy8tYQwAA]]] Yes
- List item --One--
- List item **Two**
- sub1
- sub2&lt;/programlisting&gt;
where the picture's serialized data has been truncated here for readability
(between the [[[ and ]]] markers). Pictures are usually inserted using the incorporated
tollbar and not y hand (even though it's possible).</doc>
    </docsection>
    <docsection name="gdaui-server-operation">
      <doc xml:space="preserve"
           filename="gdaui-server-operation.h"
           line="55">The #GdauiServerOperation widget allows the user to enter information to perform
Data Definition queries (all queries which are not SELECT, INSERT, UPDATE or DELETE).
For example the figure shows a #GdauiServerOperation widget set to create an index in an
SQLite database.</doc>
    </docsection>
    <docsection name="gdaui-tree-store">
      <doc xml:space="preserve"
           filename="gdaui-tree-store.h"
           line="59">The #GdauiTreeStore implements the #GtkTreeModel interface required
to display data from a #GdaTree in a #GtkTreeView widget.

To allow a tree to be populated only on request (ie. when the user expands a row), each
#GdaTreeNode can give the attribute named #GDA_ATTRIBUTE_TREE_NODE_UNKNOWN_CHILDREN
a boolean %TRUE #GValue to tell the #GdauiTreeStore data model to artificially add
a dummy child for the row corresponding to the #GdaTreeNode. Then the programmer
can connect to the &lt;link linkend="GtkTreeView-test-expand-row"&gt;GtkTreeView::test-expand-row&lt;/link&gt;
signal and update the requested children.</doc>
    </docsection>
    <function name="new_data_entry" c:identifier="gdaui_new_data_entry">
      <doc xml:space="preserve"
           filename="gdaui-init.c"
           line="122">Creates a new #GdauiDataEntry widget, taking into account the requested entry name
if @plugin_name is not %NULL (if no entry of that name is found, then the default data
entry widget will be created).

The @plugin_name format is interpreted as two parts: &amp;lt;plugin name&amp;gt;:&amp;lt;plugin options&amp;gt;, and
if the plugins has no option, then the ":&amp;lt;plugin options&amp;gt;" part may be omitted.</doc>
      <source-position filename="gdaui-easy.h" line="40"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gdaui-init.c"
             line="134">a new #GdauiDataEntry widget, _NEVER_ %NULL</doc>
        <type name="DataEntry" c:type="GdauiDataEntry*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdaui-init.c"
               line="124">a #GType</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="plugin_name"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gdaui-init.c"
               line="125">the name of an entry plugin, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
