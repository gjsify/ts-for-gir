<?xml version="1.0"?>
<!-- Gitg-1.0.gir generated by valac 0.57.0.169-9de8e, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="Gtk" version="3.0"/>
<include name="GdkPixbuf" version="2.0"/>
<include name="Ggit" version="1.0"/>
<include name="GLib" version="2.0"/>
<include name="Gdk" version="3.0"/>
<include name="Gee" version="0.8"/>
<include name="Pango" version="1.0"/>
<include name="cairo" version="1.0"/>
<package name="gitg-1.0"/>
<c:include name="libgitg.h"/>
<namespace name="Gitg" version="1.0" c:prefix="Gitg" c:identifier-prefixes="Gitg" c:symbol-prefixes="gitg">
	<enumeration name="AuthenticationLifeTime" c:type="GitgAuthenticationLifeTime" glib:type-name="GitgAuthenticationLifeTime" glib:get-type="gitg_authentication_life_time_get_type">
		<member name="forget" c:identifier="GITG_AUTHENTICATION_LIFE_TIME_FORGET" value="0"/>
		<member name="session" c:identifier="GITG_AUTHENTICATION_LIFE_TIME_SESSION" value="1"/>
		<member name="forever" c:identifier="GITG_AUTHENTICATION_LIFE_TIME_FOREVER" value="2"/>
	</enumeration>
	<enumeration name="CommitModelColumns" c:type="GitgCommitModelColumns" glib:type-name="GitgCommitModelColumns" glib:get-type="gitg_commit_model_columns_get_type">
		<member name="sha1" c:identifier="GITG_COMMIT_MODEL_COLUMNS_SHA1" value="0"/>
		<member name="subject" c:identifier="GITG_COMMIT_MODEL_COLUMNS_SUBJECT" value="1"/>
		<member name="message" c:identifier="GITG_COMMIT_MODEL_COLUMNS_MESSAGE" value="2"/>
		<member name="author" c:identifier="GITG_COMMIT_MODEL_COLUMNS_AUTHOR" value="3"/>
		<member name="author_name" c:identifier="GITG_COMMIT_MODEL_COLUMNS_AUTHOR_NAME" value="4"/>
		<member name="author_email" c:identifier="GITG_COMMIT_MODEL_COLUMNS_AUTHOR_EMAIL" value="5"/>
		<member name="author_date" c:identifier="GITG_COMMIT_MODEL_COLUMNS_AUTHOR_DATE" value="6"/>
		<member name="committer" c:identifier="GITG_COMMIT_MODEL_COLUMNS_COMMITTER" value="7"/>
		<member name="committer_name" c:identifier="GITG_COMMIT_MODEL_COLUMNS_COMMITTER_NAME" value="8"/>
		<member name="committer_email" c:identifier="GITG_COMMIT_MODEL_COLUMNS_COMMITTER_EMAIL" value="9"/>
		<member name="committer_date" c:identifier="GITG_COMMIT_MODEL_COLUMNS_COMMITTER_DATE" value="10"/>
		<member name="commit" c:identifier="GITG_COMMIT_MODEL_COLUMNS_COMMIT" value="11"/>
		<member name="num" c:identifier="GITG_COMMIT_MODEL_COLUMNS_NUM" value="12"/>
	</enumeration>
	<function name="commit_model_columns_type" c:identifier="gitg_commit_model_columns_type">
		<return-value transfer-ownership="full">
			<type name="GType" c:type="GType"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Gitg.CommitModelColumns" c:type="GitgCommitModelColumns"/>
			</instance-parameter>
		</parameters>
	</function>
	<bitfield name="LaneTag" c:type="GitgLaneTag" glib:type-name="GitgLaneTag" glib:get-type="gitg_lane_tag_get_type">
		<member name="none" c:identifier="GITG_LANE_TAG_NONE" value="0"/>
		<member name="start" c:identifier="GITG_LANE_TAG_START" value="(null)"/>
		<member name="end" c:identifier="GITG_LANE_TAG_END" value="(null)"/>
		<member name="sign_stash" c:identifier="GITG_LANE_TAG_SIGN_STASH" value="(null)"/>
		<member name="sign_staged" c:identifier="GITG_LANE_TAG_SIGN_STAGED" value="(null)"/>
		<member name="sign_unstaged" c:identifier="GITG_LANE_TAG_SIGN_UNSTAGED" value="(null)"/>
		<member name="hidden" c:identifier="GITG_LANE_TAG_HIDDEN" value="(null)"/>
	</bitfield>
	<enumeration name="RefType" c:type="GitgRefType" glib:type-name="GitgRefType" glib:get-type="gitg_ref_type_get_type">
		<member name="none" c:identifier="GITG_REF_TYPE_NONE" value="0"/>
		<member name="branch" c:identifier="GITG_REF_TYPE_BRANCH" value="1"/>
		<member name="remote" c:identifier="GITG_REF_TYPE_REMOTE" value="2"/>
		<member name="tag" c:identifier="GITG_REF_TYPE_TAG" value="3"/>
		<member name="stash" c:identifier="GITG_REF_TYPE_STASH" value="4"/>
	</enumeration>
	<enumeration name="RefState" c:type="GitgRefState" glib:type-name="GitgRefState" glib:get-type="gitg_ref_state_get_type">
		<member name="none" c:identifier="GITG_REF_STATE_NONE" value="0"/>
		<member name="selected" c:identifier="GITG_REF_STATE_SELECTED" value="1"/>
		<member name="prelight" c:identifier="GITG_REF_STATE_PRELIGHT" value="2"/>
	</enumeration>
	<enumeration name="RemoteState" c:type="GitgRemoteState" glib:type-name="GitgRemoteState" glib:get-type="gitg_remote_state_get_type">
		<member name="disconnected" c:identifier="GITG_REMOTE_STATE_DISCONNECTED" value="0"/>
		<member name="connecting" c:identifier="GITG_REMOTE_STATE_CONNECTING" value="1"/>
		<member name="connected" c:identifier="GITG_REMOTE_STATE_CONNECTED" value="2"/>
		<member name="transferring" c:identifier="GITG_REMOTE_STATE_TRANSFERRING" value="3"/>
	</enumeration>
	<enumeration name="SelectionMode" c:type="GitgSelectionMode" glib:type-name="GitgSelectionMode" glib:get-type="gitg_selection_mode_get_type">
		<member name="normal" c:identifier="GITG_SELECTION_MODE_NORMAL" value="0"/>
		<member name="selection" c:identifier="GITG_SELECTION_MODE_SELECTION" value="1"/>
	</enumeration>
	<enumeration name="DeleteSources" c:type="GitgDeleteSources" glib:type-name="GitgDeleteSources" glib:get-type="gitg_delete_sources_get_type">
		<member name="cancel" c:identifier="GITG_DELETE_SOURCES_CANCEL" value="0"/>
		<member name="trash" c:identifier="GITG_DELETE_SOURCES_TRASH" value="1"/>
		<member name="delete" c:identifier="GITG_DELETE_SOURCES_DELETE" value="2"/>
	</enumeration>
	<enumeration name="SidebarHint" c:type="GitgSidebarHint" glib:type-name="GitgSidebarHint" glib:get-type="gitg_sidebar_hint_get_type">
		<member name="none" c:identifier="GITG_SIDEBAR_HINT_NONE" value="0"/>
		<member name="header" c:identifier="GITG_SIDEBAR_HINT_HEADER" value="1"/>
		<member name="separator" c:identifier="GITG_SIDEBAR_HINT_SEPARATOR" value="2"/>
		<member name="dummy" c:identifier="GITG_SIDEBAR_HINT_DUMMY" value="3"/>
	</enumeration>
	<enumeration name="SidebarColumn" c:type="GitgSidebarColumn" glib:type-name="GitgSidebarColumn" glib:get-type="gitg_sidebar_column_get_type">
		<member name="hint" c:identifier="GITG_SIDEBAR_COLUMN_HINT" value="0"/>
		<member name="section" c:identifier="GITG_SIDEBAR_COLUMN_SECTION" value="1"/>
		<member name="item" c:identifier="GITG_SIDEBAR_COLUMN_ITEM" value="2"/>
	</enumeration>
	<bitfield name="StageCommitOptions" c:type="GitgStageCommitOptions" glib:type-name="GitgStageCommitOptions" glib:get-type="gitg_stage_commit_options_get_type">
		<member name="none" c:identifier="GITG_STAGE_COMMIT_OPTIONS_NONE" value="0"/>
		<member name="sign_off" c:identifier="GITG_STAGE_COMMIT_OPTIONS_SIGN_OFF" value="(null)"/>
		<member name="amend" c:identifier="GITG_STAGE_COMMIT_OPTIONS_AMEND" value="(null)"/>
		<member name="skip_hooks" c:identifier="GITG_STAGE_COMMIT_OPTIONS_SKIP_HOOKS" value="(null)"/>
		<member name="sign_commit" c:identifier="GITG_STAGE_COMMIT_OPTIONS_SIGN_COMMIT" value="(null)"/>
	</bitfield>
	<enumeration name="CredentialsError" c:type="GitgCredentialsError" glib:type-name="GitgCredentialsError" glib:get-type="gitg_credentials_error_get_type" glib:error-domain="gitg-credentials-error-quark">
		<member name="cancelled" c:identifier="GITG_CREDENTIALS_ERROR_CANCELLED" value="0"/>
	</enumeration>
	<enumeration name="DateError" c:type="GitgDateError" glib:type-name="GitgDateError" glib:get-type="gitg_date_error_get_type" glib:error-domain="gitg-date-error-quark">
		<member name="invalid_format" c:identifier="GITG_DATE_ERROR_INVALID_FORMAT" value="0"/>
	</enumeration>
	<enumeration name="InitError" c:type="GitgInitError" glib:type-name="GitgInitError" glib:get-type="gitg_init_error_get_type" glib:error-domain="gitg-init-error-quark">
		<member name="threads_unsafe" c:identifier="GITG_INIT_ERROR_THREADS_UNSAFE" value="0"/>
	</enumeration>
	<enumeration name="RemoteError" c:type="GitgRemoteError" glib:type-name="GitgRemoteError" glib:get-type="gitg_remote_error_get_type" glib:error-domain="gitg-remote-error-quark">
		<member name="already_connected" c:identifier="GITG_REMOTE_ERROR_ALREADY_CONNECTED" value="0"/>
		<member name="already_connecting" c:identifier="GITG_REMOTE_ERROR_ALREADY_CONNECTING" value="1"/>
		<member name="already_disconnected" c:identifier="GITG_REMOTE_ERROR_ALREADY_DISCONNECTED" value="2"/>
		<member name="still_connecting" c:identifier="GITG_REMOTE_ERROR_STILL_CONNECTING" value="3"/>
	</enumeration>
	<enumeration name="StageError" c:type="GitgStageError" glib:type-name="GitgStageError" glib:get-type="gitg_stage_error_get_type" glib:error-domain="gitg-stage-error-quark">
		<member name="pre_commit_hook_failed" c:identifier="GITG_STAGE_ERROR_PRE_COMMIT_HOOK_FAILED" value="0"/>
		<member name="commit_msg_hook_failed" c:identifier="GITG_STAGE_ERROR_COMMIT_MSG_HOOK_FAILED" value="1"/>
		<member name="nothing_to_commit" c:identifier="GITG_STAGE_ERROR_NOTHING_TO_COMMIT" value="2"/>
		<member name="index_entry_not_found" c:identifier="GITG_STAGE_ERROR_INDEX_ENTRY_NOT_FOUND" value="3"/>
		<member name="sign_config_not_found" c:identifier="GITG_STAGE_ERROR_SIGN_CONFIG_NOT_FOUND" value="4"/>
		<member name="sign_config_error" c:identifier="GITG_STAGE_ERROR_SIGN_CONFIG_ERROR" value="5"/>
		<member name="update_ref_error" c:identifier="GITG_STAGE_ERROR_UPDATE_REF_ERROR" value="6"/>
	</enumeration>
	<class name="Async" c:type="GitgAsync" c:symbol-prefix="async" glib:type-name="GitgAsync" glib:get-type="gitg_async_get_type" glib:type-struct="AsyncClass" glib:fundamental="1" glib:ref-func="gitg_async_ref" glib:unref-func="gitg_async_unref" glib:set-value-func="gitg_value_set_async" glib:get-value-func="gitg_value_get_async">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AsyncPrivate" c:type="GitgAsyncPrivate*"/>
		</field>
		<function name="thread" c:identifier="gitg_async_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="call">
					<type name="Gitg.AsyncThreadFunc" c:type="GitgAsyncThreadFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="thread_finish" c:identifier="gitg_async_thread_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<function name="thread_try" c:identifier="gitg_async_thread_try">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="func" transfer-ownership="none" closure="1" scope="call">
					<type name="Gitg.AsyncThreadFunc" c:type="GitgAsyncThreadFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="thread_try_finish" c:identifier="gitg_async_thread_try_finish">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gitg_async_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Async" c:type="GitgAsync*"/>
			</return-value>
		</constructor>
		<callback name="ThreadFunc" c:type="GitgAsyncThreadFunc" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</callback>
	</class>
	<record name="AsyncClass" c:type="GitgAsyncClass" glib:is-gtype-struct-for="Async">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="AsyncPrivate" c:type="GitgAsyncPrivate" disguised="1"/>
	<class name="AuthenticationDialog" c:type="GitgAuthenticationDialog" c:symbol-prefix="authentication_dialog" glib:type-name="GitgAuthenticationDialog" glib:get-type="gitg_authentication_dialog_get_type" glib:type-struct="AuthenticationDialogClass" parent="Gtk.Dialog">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Dialog" c:type="GtkDialog"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AuthenticationDialogPrivate" c:type="GitgAuthenticationDialogPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_authentication_dialog_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.AuthenticationDialog" c:type="GitgAuthenticationDialog*"/>
			</return-value>
			<parameters>
				<parameter name="url" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="username" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="failed" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="username">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_username" c:identifier="gitg_authentication_dialog_get_username">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.AuthenticationDialog" c:type="GitgAuthenticationDialog*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="password">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_password" c:identifier="gitg_authentication_dialog_get_password">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.AuthenticationDialog" c:type="GitgAuthenticationDialog*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="life-time">
			<type name="Gitg.AuthenticationLifeTime" c:type="GitgAuthenticationLifeTime"/>
		</property>
		<method name="get_life_time" c:identifier="gitg_authentication_dialog_get_life_time">
			<return-value transfer-ownership="none">
				<type name="Gitg.AuthenticationLifeTime" c:type="GitgAuthenticationLifeTime"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.AuthenticationDialog" c:type="GitgAuthenticationDialog*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="AuthenticationDialogClass" c:type="GitgAuthenticationDialogClass" glib:is-gtype-struct-for="AuthenticationDialog">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
		</field>
	</record>
	<record name="AuthenticationDialogPrivate" c:type="GitgAuthenticationDialogPrivate" disguised="1"/>
	<class name="AvatarCache" c:type="GitgAvatarCache" c:symbol-prefix="avatar_cache" glib:type-name="GitgAvatarCache" glib:get-type="gitg_avatar_cache_get_type" glib:type-struct="AvatarCacheClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AvatarCachePrivate" c:type="GitgAvatarCachePrivate*"/>
		</field>
		<function name="default" c:identifier="gitg_avatar_cache_default">
			<return-value transfer-ownership="full">
				<type name="Gitg.AvatarCache" c:type="GitgAvatarCache*"/>
			</return-value>
		</function>
		<method name="load" c:identifier="gitg_avatar_cache_load">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.AvatarCache" c:type="GitgAvatarCache*"/>
				</instance-parameter>
				<parameter name="email" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_finish" c:identifier="gitg_avatar_cache_load_finish">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.AvatarCache" c:type="GitgAvatarCache*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="AvatarCacheClass" c:type="GitgAvatarCacheClass" glib:is-gtype-struct-for="AvatarCache">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AvatarCachePrivate" c:type="GitgAvatarCachePrivate" disguised="1"/>
	<class name="BranchBase" c:type="GitgBranchBase" c:symbol-prefix="branch_base" glib:type-name="GitgBranchBase" glib:get-type="gitg_branch_base_get_type" glib:type-struct="BranchBaseClass" parent="Ggit.Branch">
		<implements name="Gitg.Ref"/>
		<implements name="Gitg.Branch"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Ggit.Branch" c:type="GgitBranch"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BranchBasePrivate" c:type="GitgBranchBasePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_branch_base_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.BranchBase" c:type="GitgBranchBase*"/>
			</return-value>
		</constructor>
	</class>
	<record name="BranchBaseClass" c:type="GitgBranchBaseClass" glib:is-gtype-struct-for="BranchBase">
		<field name="parent_class" readable="0" private="1">
			<type name="Ggit.BranchClass" c:type="GgitBranchClass"/>
		</field>
	</record>
	<record name="BranchBasePrivate" c:type="GitgBranchBasePrivate" disguised="1"/>
	<class name="CellRendererLanes" c:type="GitgCellRendererLanes" c:symbol-prefix="cell_renderer_lanes" glib:type-name="GitgCellRendererLanes" glib:get-type="gitg_cell_renderer_lanes_get_type" glib:type-struct="CellRendererLanesClass" parent="Gtk.CellRendererText">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.CellRendererText" c:type="GtkCellRendererText"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CellRendererLanesPrivate" c:type="GitgCellRendererLanesPrivate*"/>
		</field>
		<method name="get_ref_at_pos" c:identifier="gitg_cell_renderer_lanes_get_ref_at_pos">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cell_w" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="hot_x" direction="out" transfer-ownership="full">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_cell_renderer_lanes_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
			</return-value>
		</constructor>
		<property name="commit" writable="1">
			<type name="Gitg.Commit" c:type="GitgCommit*"/>
		</property>
		<method name="get_commit" c:identifier="gitg_cell_renderer_lanes_get_commit">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_commit" c:identifier="gitg_cell_renderer_lanes_set_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</method>
		<property name="next-commit" writable="1">
			<type name="Gitg.Commit" c:type="GitgCommit*"/>
		</property>
		<method name="get_next_commit" c:identifier="gitg_cell_renderer_lanes_get_next_commit">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_next_commit" c:identifier="gitg_cell_renderer_lanes_set_next_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</method>
		<property name="lane-width" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_lane_width" c:identifier="gitg_cell_renderer_lanes_get_lane_width">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_lane_width" c:identifier="gitg_cell_renderer_lanes_set_lane_width">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="dot-width" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_dot_width" c:identifier="gitg_cell_renderer_lanes_get_dot_width">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_dot_width" c:identifier="gitg_cell_renderer_lanes_set_dot_width">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="labels" writable="1">
			<type name="GLib.SList" c:type="GSList*">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</type>
		</property>
		<method name="get_labels" c:identifier="gitg_cell_renderer_lanes_get_labels">
			<return-value transfer-ownership="none">
				<type name="GLib.SList" c:type="GSList*">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_labels" c:identifier="gitg_cell_renderer_lanes_set_labels">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CellRendererLanes" c:type="GitgCellRendererLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.SList" c:type="GSList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CellRendererLanesClass" c:type="GitgCellRendererLanesClass" glib:is-gtype-struct-for="CellRendererLanes">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.CellRendererTextClass" c:type="GtkCellRendererTextClass"/>
		</field>
	</record>
	<record name="CellRendererLanesPrivate" c:type="GitgCellRendererLanesPrivate" disguised="1"/>
	<class name="Color" c:type="GitgColor" c:symbol-prefix="color" glib:type-name="GitgColor" glib:get-type="gitg_color_get_type" glib:type-struct="ColorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ColorPrivate" c:type="GitgColorPrivate*"/>
		</field>
		<field name="idx" writable="1">
			<type name="guint" c:type="guint"/>
		</field>
		<function name="reset" c:identifier="gitg_color_reset">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</function>
		<method name="components" c:identifier="gitg_color_components">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Color" c:type="GitgColor*"/>
				</instance-parameter>
				<parameter name="r" direction="out" transfer-ownership="full">
					<type name="gdouble" c:type="gdouble*"/>
				</parameter>
				<parameter name="g" direction="out" transfer-ownership="full">
					<type name="gdouble" c:type="gdouble*"/>
				</parameter>
				<parameter name="b" direction="out" transfer-ownership="full">
					<type name="gdouble" c:type="gdouble*"/>
				</parameter>
			</parameters>
		</method>
		<function name="next" c:identifier="gitg_color_next">
			<return-value transfer-ownership="full">
				<type name="Gitg.Color" c:type="GitgColor*"/>
			</return-value>
		</function>
		<method name="next_index" c:identifier="gitg_color_next_index">
			<return-value transfer-ownership="full">
				<type name="Gitg.Color" c:type="GitgColor*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Color" c:type="GitgColor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="copy" c:identifier="gitg_color_copy">
			<return-value transfer-ownership="full">
				<type name="Gitg.Color" c:type="GitgColor*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Color" c:type="GitgColor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_color_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Color" c:type="GitgColor*"/>
			</return-value>
		</constructor>
		<property name="r">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_r" c:identifier="gitg_color_get_r">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Color" c:type="GitgColor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="g">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_g" c:identifier="gitg_color_get_g">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Color" c:type="GitgColor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="b">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_b" c:identifier="gitg_color_get_b">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Color" c:type="GitgColor*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ColorClass" c:type="GitgColorClass" glib:is-gtype-struct-for="Color">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ColorPrivate" c:type="GitgColorPrivate" disguised="1"/>
	<class name="CommitListView" c:type="GitgCommitListView" c:symbol-prefix="commit_list_view" glib:type-name="GitgCommitListView" glib:get-type="gitg_commit_list_view_get_type" glib:type-struct="CommitListViewClass" parent="Gtk.TreeView">
		<implements name="Gtk.Buildable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.TreeView" c:type="GtkTreeView"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CommitListViewPrivate" c:type="GitgCommitListViewPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_commit_list_view_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.CommitListView" c:type="GitgCommitListView*"/>
			</return-value>
			<parameters>
				<parameter name="model" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="for_repository" c:identifier="gitg_commit_list_view_new_for_repository">
			<return-value transfer-ownership="none">
				<type name="Gitg.CommitListView" c:type="GitgCommitListView*"/>
			</return-value>
			<parameters>
				<parameter name="repository" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="find_cell_at_pos" c:identifier="gitg_commit_list_view_find_cell_at_pos">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitListView" c:type="GitgCommitListView*"/>
				</instance-parameter>
				<parameter name="column" transfer-ownership="none">
					<type name="Gtk.TreeViewColumn" c:type="GtkTreeViewColumn*"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="Gtk.TreePath" c:type="GtkTreePath*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="width" direction="out" transfer-ownership="full">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CommitListViewClass" c:type="GitgCommitListViewClass" glib:is-gtype-struct-for="CommitListView">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.TreeViewClass" c:type="GtkTreeViewClass"/>
		</field>
	</record>
	<record name="CommitListViewPrivate" c:type="GitgCommitListViewPrivate" disguised="1"/>
	<class name="CommitModel" c:type="GitgCommitModel" c:symbol-prefix="commit_model" glib:type-name="GitgCommitModel" glib:get-type="gitg_commit_model_get_type" glib:type-struct="CommitModelClass" parent="GObject.Object">
		<implements name="Gtk.TreeModel"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CommitModelPrivate" c:type="GitgCommitModelPrivate*"/>
		</field>
		<method name="get_permanent_lanes" c:identifier="gitg_commit_model_get_permanent_lanes">
			<return-value transfer-ownership="full">
				<array length="0" c:type="GgitOId**">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_permanent_lanes" c:identifier="gitg_commit_model_set_permanent_lanes">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<array length="1" c:type="GgitOId**">
						<type name="Ggit.OId" c:type="GgitOId*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_commit_model_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
			</return-value>
			<parameters>
				<parameter name="repository" transfer-ownership="none" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="reload" c:identifier="gitg_commit_model_reload">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="size" c:identifier="gitg_commit_model_size">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="gitg_commit_model_get">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="idx" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_include" c:identifier="gitg_commit_model_set_include">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="ids" transfer-ownership="none">
					<array length="1" c:type="GgitOId**">
						<type name="Ggit.OId" c:type="GgitOId*"/>
					</array>
				</parameter>
				<parameter name="ids_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_include" c:identifier="gitg_commit_model_get_include">
			<return-value transfer-ownership="full">
				<array length="0" c:type="GgitOId**">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_exclude" c:identifier="gitg_commit_model_set_exclude">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="ids" transfer-ownership="none">
					<array length="1" c:type="GgitOId**">
						<type name="Ggit.OId" c:type="GgitOId*"/>
					</array>
				</parameter>
				<parameter name="ids_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_from_iter" c:identifier="gitg_commit_model_commit_from_iter">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="iter" transfer-ownership="none">
					<type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
				</parameter>
			</parameters>
		</method>
		<method name="path_from_commit" c:identifier="gitg_commit_model_path_from_commit">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.TreePath" c:type="GtkTreePath*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="commit" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_from_path" c:identifier="gitg_commit_model_commit_from_path">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="Gtk.TreePath" c:type="GtkTreePath*"/>
				</parameter>
			</parameters>
		</method>
		<property name="limit" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_limit" c:identifier="gitg_commit_model_get_limit">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_limit" c:identifier="gitg_commit_model_set_limit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="sort-mode" writable="1">
			<type name="Ggit.SortMode" c:type="GgitSortMode"/>
		</property>
		<method name="get_sort_mode" c:identifier="gitg_commit_model_get_sort_mode">
			<return-value transfer-ownership="none">
				<type name="Ggit.SortMode" c:type="GgitSortMode"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_sort_mode" c:identifier="gitg_commit_model_set_sort_mode">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Ggit.SortMode" c:type="GgitSortMode"/>
				</parameter>
			</parameters>
		</method>
		<property name="repository" writable="1">
			<type name="Gitg.Repository" c:type="GitgRepository*"/>
		</property>
		<method name="get_repository" c:identifier="gitg_commit_model_get_repository">
			<return-value transfer-ownership="none">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_repository" c:identifier="gitg_commit_model_set_repository">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CommitModel" c:type="GitgCommitModel*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="started">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="update">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="added" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="begin-clear">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="end-clear">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="CommitModelClass" c:type="GitgCommitModelClass" glib:is-gtype-struct-for="CommitModel">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CommitModelPrivate" c:type="GitgCommitModelPrivate" disguised="1"/>
	<class name="Commit" c:type="GitgCommit" c:symbol-prefix="commit" glib:type-name="GitgCommit" glib:get-type="gitg_commit_get_type" glib:type-struct="CommitClass" parent="Ggit.Commit">
		<field name="parent_instance" readable="0" private="1">
			<type name="Ggit.Commit" c:type="GgitCommit"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CommitPrivate" c:type="GitgCommitPrivate*"/>
		</field>
		<method name="get_lanes" c:identifier="gitg_commit_get_lanes">
			<return-value transfer-ownership="none">
				<type name="GLib.SList" c:type="GSList*">
					<type name="Gitg.Lane" c:type="GitgLane*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="insert_lane" c:identifier="gitg_commit_insert_lane">
			<return-value transfer-ownership="none">
				<type name="GLib.SList" c:type="GSList*">
					<type name="Gitg.Lane" c:type="GitgLane*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
				<parameter name="lane" transfer-ownership="none">
					<type name="Gitg.Lane" c:type="GitgLane*"/>
				</parameter>
				<parameter name="idx" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_lane" c:identifier="gitg_commit_remove_lane">
			<return-value transfer-ownership="none">
				<type name="GLib.SList" c:type="GSList*">
					<type name="Gitg.Lane" c:type="GitgLane*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
				<parameter name="lane" transfer-ownership="none">
					<type name="Gitg.Lane" c:type="GitgLane*"/>
				</parameter>
			</parameters>
		</method>
		<method name="update_lanes" c:identifier="gitg_commit_update_lanes">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
				<parameter name="lanes" transfer-ownership="full">
					<type name="GLib.SList" c:type="GSList*">
						<type name="Gitg.Lane" c:type="GitgLane*"/>
					</type>
				</parameter>
				<parameter name="mylane" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_diff" c:identifier="gitg_commit_get_diff">
			<return-value transfer-ownership="full">
				<type name="Ggit.Diff" c:type="GgitDiff*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Ggit.DiffOptions" c:type="GgitDiffOptions*"/>
				</parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_note" c:identifier="gitg_commit_get_note">
			<return-value transfer-ownership="full">
				<type name="Ggit.Note" c:type="GgitNote*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_commit_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
		</constructor>
		<property name="tag" writable="1">
			<type name="Gitg.LaneTag" c:type="GitgLaneTag"/>
		</property>
		<method name="get_tag" c:identifier="gitg_commit_get_tag">
			<return-value transfer-ownership="none">
				<type name="Gitg.LaneTag" c:type="GitgLaneTag"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_tag" c:identifier="gitg_commit_set_tag">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.LaneTag" c:type="GitgLaneTag"/>
				</parameter>
			</parameters>
		</method>
		<property name="mylane" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_mylane" c:identifier="gitg_commit_get_mylane">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_mylane" c:identifier="gitg_commit_set_mylane">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="lane">
			<type name="Gitg.Lane" c:type="GitgLane*"/>
		</property>
		<method name="get_lane" c:identifier="gitg_commit_get_lane">
			<return-value transfer-ownership="none">
				<type name="Gitg.Lane" c:type="GitgLane*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="format-patch-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_format_patch_name" c:identifier="gitg_commit_get_format_patch_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="committer-date-for-display">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_committer_date_for_display" c:identifier="gitg_commit_get_committer_date_for_display">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="author-date-for-display">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_author_date_for_display" c:identifier="gitg_commit_get_author_date_for_display">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="CommitClass" c:type="GitgCommitClass" glib:is-gtype-struct-for="Commit">
		<field name="parent_class" readable="0" private="1">
			<type name="Ggit.CommitClass" c:type="GgitCommitClass"/>
		</field>
	</record>
	<record name="CommitPrivate" c:type="GitgCommitPrivate" disguised="1"/>
	<class name="CredentialsManager" c:type="GitgCredentialsManager" c:symbol-prefix="credentials_manager" glib:type-name="GitgCredentialsManager" glib:get-type="gitg_credentials_manager_get_type" glib:type-struct="CredentialsManagerClass" glib:fundamental="1" glib:ref-func="gitg_credentials_manager_ref" glib:unref-func="gitg_credentials_manager_unref" glib:set-value-func="gitg_value_set_credentials_manager" glib:get-value-func="gitg_value_get_credentials_manager">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CredentialsManagerPrivate" c:type="GitgCredentialsManagerPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_credentials_manager_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.CredentialsManager" c:type="GitgCredentialsManager*"/>
			</return-value>
			<parameters>
				<parameter name="config" transfer-ownership="none" nullable="1">
					<type name="Ggit.Config" c:type="GgitConfig*"/>
				</parameter>
				<parameter name="window" transfer-ownership="none">
					<type name="Gtk.Window" c:type="GtkWindow*"/>
				</parameter>
				<parameter name="save_user_in_config" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="credentials" c:identifier="gitg_credentials_manager_credentials" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Cred" c:type="GgitCred*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CredentialsManager" c:type="GitgCredentialsManager*"/>
				</instance-parameter>
				<parameter name="url" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="username" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="allowed_types" transfer-ownership="none">
					<type name="Ggit.Credtype" c:type="GgitCredtype"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CredentialsManagerClass" c:type="GitgCredentialsManagerClass" glib:is-gtype-struct-for="CredentialsManager">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="CredentialsManagerPrivate" c:type="GitgCredentialsManagerPrivate" disguised="1"/>
	<class name="Date" c:type="GitgDate" c:symbol-prefix="date" glib:type-name="GitgDate" glib:get-type="gitg_date_get_type" glib:type-struct="DateClass" parent="GObject.Object">
		<implements name="Gio.Initable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DatePrivate" c:type="GitgDatePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_date_new" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Date" c:type="GitgDate*"/>
			</return-value>
			<parameters>
				<parameter name="date" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="for_display" c:identifier="gitg_date_for_display">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Date" c:type="GitgDate*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="for_date_time" c:identifier="gitg_date_new_for_date_time">
			<return-value transfer-ownership="full">
				<type name="Gitg.Date" c:type="GitgDate*"/>
			</return-value>
			<parameters>
				<parameter name="dt" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</constructor>
		<function name="parse" c:identifier="gitg_date_parse" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<parameter name="date" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<property name="date-string" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_date_string" c:identifier="gitg_date_get_date_string">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Date" c:type="GitgDate*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_date_string" c:identifier="gitg_date_set_date_string">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Date" c:type="GitgDate*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="date">
			<type name="GLib.DateTime" c:type="GDateTime*"/>
		</property>
		<method name="get_date" c:identifier="gitg_date_get_date">
			<return-value transfer-ownership="none">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Date" c:type="GitgDate*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DateClass" c:type="GitgDateClass" glib:is-gtype-struct-for="Date">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DatePrivate" c:type="GitgDatePrivate" disguised="1"/>
	<class name="DiffStat" c:type="GitgDiffStat" c:symbol-prefix="diff_stat" glib:type-name="GitgDiffStat" glib:get-type="gitg_diff_stat_get_type" glib:type-struct="DiffStatClass" parent="Gtk.DrawingArea">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DiffStatPrivate" c:type="GitgDiffStatPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_diff_stat_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.DiffStat" c:type="GitgDiffStat*"/>
			</return-value>
		</constructor>
		<property name="added" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_added" c:identifier="gitg_diff_stat_get_added">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffStat" c:type="GitgDiffStat*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_added" c:identifier="gitg_diff_stat_set_added">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffStat" c:type="GitgDiffStat*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="removed" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_removed" c:identifier="gitg_diff_stat_get_removed">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffStat" c:type="GitgDiffStat*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_removed" c:identifier="gitg_diff_stat_set_removed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffStat" c:type="GitgDiffStat*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DiffStatClass" c:type="GitgDiffStatClass" glib:is-gtype-struct-for="DiffStat">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
		</field>
	</record>
	<record name="DiffStatPrivate" c:type="GitgDiffStatPrivate" disguised="1"/>
	<class name="DiffViewOptions" c:type="GitgDiffViewOptions" c:symbol-prefix="diff_view_options" glib:type-name="GitgDiffViewOptions" glib:get-type="gitg_diff_view_options_get_type" glib:type-struct="DiffViewOptionsClass" parent="Gtk.Toolbar">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Toolbar" c:type="GtkToolbar"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DiffViewOptionsPrivate" c:type="GitgDiffViewOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_diff_view_options_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.DiffViewOptions" c:type="GitgDiffViewOptions*"/>
			</return-value>
			<parameters>
				<parameter name="view" transfer-ownership="none" nullable="1">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="context-lines" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_context_lines" c:identifier="gitg_diff_view_options_get_context_lines">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffViewOptions" c:type="GitgDiffViewOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_context_lines" c:identifier="gitg_diff_view_options_set_context_lines">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffViewOptions" c:type="GitgDiffViewOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="view" writable="1" construct="1">
			<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
		</property>
		<method name="get_view" c:identifier="gitg_diff_view_options_get_view">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffViewOptions" c:type="GitgDiffViewOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_view" c:identifier="gitg_diff_view_options_set_view">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffViewOptions" c:type="GitgDiffViewOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DiffViewOptionsClass" c:type="GitgDiffViewOptionsClass" glib:is-gtype-struct-for="DiffViewOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ToolbarClass" c:type="GtkToolbarClass"/>
		</field>
	</record>
	<record name="DiffViewOptionsPrivate" c:type="GitgDiffViewOptionsPrivate" disguised="1"/>
	<class name="DiffView" c:type="GitgDiffView" c:symbol-prefix="diff_view" glib:type-name="GitgDiffView" glib:get-type="gitg_diff_view_get_type" glib:type-struct="DiffViewClass" parent="Gtk.Grid">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Grid" c:type="GtkGrid"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DiffViewPrivate" c:type="GitgDiffViewPrivate*"/>
		</field>
		<method name="apply_link_tags" c:identifier="gitg_diff_view_apply_link_tags">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="buffer" transfer-ownership="none">
					<type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
				</parameter>
				<parameter name="regex" transfer-ownership="none">
					<type name="GLib.Regex" c:type="GRegex*"/>
				</parameter>
				<parameter name="replacement" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="custom_color_link" transfer-ownership="none">
					<type name="Gdk.RGBA" c:type="GdkRGBA*"/>
				</parameter>
				<parameter name="is_custom_color" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="is_custom_link" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="follow_if_link" c:identifier="gitg_diff_view_follow_if_link">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="texview" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
				<parameter name="iter" transfer-ownership="none">
					<type name="Gtk.TextIter" c:type="GtkTextIter*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_selection" c:identifier="gitg_diff_view_get_selection">
			<return-value transfer-ownership="full">
				<array length="0" c:type="GitgPatchSet**">
					<type name="Gitg.PatchSet" c:type="GitgPatchSet*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="clear_selection" c:identifier="gitg_diff_view_clear_selection">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_diff_view_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
			</return-value>
		</constructor>
		<property name="options">
			<type name="Ggit.DiffOptions" c:type="GgitDiffOptions*"/>
		</property>
		<method name="get_options" c:identifier="gitg_diff_view_get_options">
			<return-value transfer-ownership="none">
				<type name="Ggit.DiffOptions" c:type="GgitDiffOptions*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="has-selection" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_has_selection" c:identifier="gitg_diff_view_get_has_selection">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="diff" writable="1">
			<type name="Ggit.Diff" c:type="GgitDiff*"/>
		</property>
		<method name="get_diff" c:identifier="gitg_diff_view_get_diff">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Ggit.Diff" c:type="GgitDiff*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_diff" c:identifier="gitg_diff_view_set_diff">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Ggit.Diff" c:type="GgitDiff*"/>
				</parameter>
			</parameters>
		</method>
		<property name="commit" writable="1">
			<type name="Gitg.Commit" c:type="GitgCommit*"/>
		</property>
		<method name="get_commit" c:identifier="gitg_diff_view_get_commit">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_commit" c:identifier="gitg_diff_view_set_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</method>
		<property name="wrap-lines" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_wrap_lines" c:identifier="gitg_diff_view_get_wrap_lines">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_wrap_lines" c:identifier="gitg_diff_view_set_wrap_lines">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="staged" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_staged" c:identifier="gitg_diff_view_get_staged">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_staged" c:identifier="gitg_diff_view_set_staged">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="unstaged" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_unstaged" c:identifier="gitg_diff_view_get_unstaged">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_unstaged" c:identifier="gitg_diff_view_set_unstaged">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="show-parents" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_show_parents" c:identifier="gitg_diff_view_get_show_parents">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_show_parents" c:identifier="gitg_diff_view_set_show_parents">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="default-collapse-all" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_default_collapse_all" c:identifier="gitg_diff_view_get_default_collapse_all">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_default_collapse_all" c:identifier="gitg_diff_view_set_default_collapse_all">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="use-gravatar" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_use_gravatar" c:identifier="gitg_diff_view_get_use_gravatar">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_use_gravatar" c:identifier="gitg_diff_view_set_use_gravatar">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="tab-width" writable="1" construct="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_tab_width" c:identifier="gitg_diff_view_get_tab_width">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_tab_width" c:identifier="gitg_diff_view_set_tab_width">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="handle-selection" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_handle_selection" c:identifier="gitg_diff_view_get_handle_selection">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_handle_selection" c:identifier="gitg_diff_view_set_handle_selection">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="highlight" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_highlight" c:identifier="gitg_diff_view_get_highlight">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_highlight" c:identifier="gitg_diff_view_set_highlight">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="repository" writable="1">
			<type name="Gitg.Repository" c:type="GitgRepository*"/>
		</property>
		<method name="get_repository" c:identifier="gitg_diff_view_get_repository">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_repository" c:identifier="gitg_diff_view_set_repository">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</method>
		<property name="new-is-workdir" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_new_is_workdir" c:identifier="gitg_diff_view_get_new_is_workdir">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_new_is_workdir" c:identifier="gitg_diff_view_set_new_is_workdir">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignore-whitespace" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_ignore_whitespace" c:identifier="gitg_diff_view_get_ignore_whitespace">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_ignore_whitespace" c:identifier="gitg_diff_view_set_ignore_whitespace">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="changes-inline" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_changes_inline" c:identifier="gitg_diff_view_get_changes_inline">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_changes_inline" c:identifier="gitg_diff_view_set_changes_inline">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="context-lines" writable="1" construct="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_context_lines" c:identifier="gitg_diff_view_get_context_lines">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_context_lines" c:identifier="gitg_diff_view_set_context_lines">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="options_changed" invoker="options_changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="options-changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="DiffViewClass" c:type="GitgDiffViewClass" glib:is-gtype-struct-for="DiffView">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.GridClass" c:type="GtkGridClass"/>
		</field>
		<field name="options_changed">
			<callback name="diff_view_options_changed" c:type="diff_view_options_changed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.DiffView" c:type="GitgDiffView*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="DiffViewPrivate" c:type="GitgDiffViewPrivate" disguised="1"/>
	<class name="FontManager" c:type="GitgFontManager" c:symbol-prefix="font_manager" glib:type-name="GitgFontManager" glib:get-type="gitg_font_manager_get_type" glib:type-struct="FontManagerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FontManagerPrivate" c:type="GitgFontManagerPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_font_manager_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.FontManager" c:type="GitgFontManager*"/>
			</return-value>
			<parameters>
				<parameter name="text_view" transfer-ownership="none">
					<type name="Gtk.TextView" c:type="GtkTextView*"/>
				</parameter>
				<parameter name="plugin" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="FontManagerClass" c:type="GitgFontManagerClass" glib:is-gtype-struct-for="FontManager">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FontManagerPrivate" c:type="GitgFontManagerPrivate" disguised="1"/>
	<class name="GPGUtils" c:type="GitgGPGUtils" c:symbol-prefix="gpg_utils" glib:type-name="GitgGPGUtils" glib:get-type="gitg_gpg_utils_get_type" glib:type-struct="GPGUtilsClass" glib:fundamental="1" glib:ref-func="gitg_gpg_utils_ref" glib:unref-func="gitg_gpg_utils_unref" glib:set-value-func="gitg_value_set_gpg_utils" glib:get-value-func="gitg_value_get_gpg_utils">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GPGUtilsPrivate" c:type="GitgGPGUtilsPrivate*"/>
		</field>
		<function name="sign_commit_object" c:identifier="gitg_gpg_utils_sign_commit_object" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="commit_content" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="signing_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gitg_gpg_utils_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.GPGUtils" c:type="GitgGPGUtils*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GPGUtilsClass" c:type="GitgGPGUtilsClass" glib:is-gtype-struct-for="GPGUtils">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GPGUtilsPrivate" c:type="GitgGPGUtilsPrivate" disguised="1"/>
	<class name="Hook" c:type="GitgHook" c:symbol-prefix="hook" glib:type-name="GitgHook" glib:get-type="gitg_hook_get_type" glib:type-struct="HookClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="HookPrivate" c:type="GitgHookPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_hook_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Hook" c:type="GitgHook*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add_argument" c:identifier="gitg_hook_add_argument">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="arg" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="exists_in" c:identifier="gitg_hook_exists_in">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="repository" transfer-ownership="none">
					<type name="Ggit.Repository" c:type="GgitRepository*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_sync" c:identifier="gitg_hook_run_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="repository" transfer-ownership="none">
					<type name="Ggit.Repository" c:type="GgitRepository*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run" c:identifier="gitg_hook_run">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="repository" transfer-ownership="none">
					<type name="Ggit.Repository" c:type="GgitRepository*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_finish" c:identifier="gitg_hook_run_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="environment" writable="1">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_environment" c:identifier="gitg_hook_get_environment">
			<return-value transfer-ownership="none">
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_environment" c:identifier="gitg_hook_set_environment">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gee.HashMap" c:type="GeeHashMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gitg_hook_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_name" c:identifier="gitg_hook_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="working-directory" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_working_directory" c:identifier="gitg_hook_get_working_directory">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_working_directory" c:identifier="gitg_hook_set_working_directory">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<property name="output">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_output" c:identifier="gitg_hook_get_output">
			<return-value transfer-ownership="full">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Hook" c:type="GitgHook*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="HookClass" c:type="GitgHookClass" glib:is-gtype-struct-for="Hook">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="HookPrivate" c:type="GitgHookPrivate" disguised="1"/>
	<class name="LabelRenderer" c:type="GitgLabelRenderer" c:symbol-prefix="label_renderer" glib:type-name="GitgLabelRenderer" glib:get-type="gitg_label_renderer_get_type" glib:type-struct="LabelRendererClass" glib:fundamental="1" glib:ref-func="gitg_label_renderer_ref" glib:unref-func="gitg_label_renderer_unref" glib:set-value-func="gitg_value_set_label_renderer" glib:get-value-func="gitg_value_get_label_renderer">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LabelRendererPrivate" c:type="GitgLabelRendererPrivate*"/>
		</field>
		<function name="width" c:identifier="gitg_label_renderer_width">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
				<parameter name="font" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="PangoFontDescription*"/>
				</parameter>
				<parameter name="labels" transfer-ownership="none">
					<type name="GLib.SList" c:type="GSList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</parameter>
			</parameters>
		</function>
		<function name="draw" c:identifier="gitg_label_renderer_draw">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
				<parameter name="font" transfer-ownership="none">
					<type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
				</parameter>
				<parameter name="context" transfer-ownership="none">
					<type name="cairo.Context" c:type="cairo_t*"/>
				</parameter>
				<parameter name="labels" transfer-ownership="none">
					<type name="GLib.SList" c:type="GSList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</parameter>
				<parameter name="area" transfer-ownership="none">
					<type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_ref_at_pos" c:identifier="gitg_label_renderer_get_ref_at_pos">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
				<parameter name="font" transfer-ownership="none">
					<type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
				</parameter>
				<parameter name="labels" transfer-ownership="none">
					<type name="GLib.SList" c:type="GSList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="hot_x" direction="out" transfer-ownership="full">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<function name="render_ref" c:identifier="gitg_label_renderer_render_ref">
			<return-value transfer-ownership="full">
				<type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
			</return-value>
			<parameters>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
				<parameter name="font" transfer-ownership="none">
					<type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
				</parameter>
				<parameter name="r" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="minwidth" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gitg_label_renderer_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.LabelRenderer" c:type="GitgLabelRenderer*"/>
			</return-value>
		</constructor>
	</class>
	<record name="LabelRendererClass" c:type="GitgLabelRendererClass" glib:is-gtype-struct-for="LabelRenderer">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="LabelRendererPrivate" c:type="GitgLabelRendererPrivate" disguised="1"/>
	<class name="Lanes" c:type="GitgLanes" c:symbol-prefix="lanes" glib:type-name="GitgLanes" glib:get-type="gitg_lanes_get_type" glib:type-struct="LanesClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LanesPrivate" c:type="GitgLanesPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_lanes_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Lanes" c:type="GitgLanes*"/>
			</return-value>
		</constructor>
		<method name="reset" c:identifier="gitg_lanes_reset">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
				<parameter name="reserved" transfer-ownership="none" nullable="1">
					<array length="1" c:type="GgitOId**">
						<type name="Ggit.OId" c:type="GgitOId*"/>
					</array>
				</parameter>
				<parameter name="reserved_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="roots" transfer-ownership="none" nullable="1">
					<type name="Gee.HashSet" c:type="GeeHashSet*">
						<type name="Ggit.OId" c:type="GgitOId*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="next" c:identifier="gitg_lanes_next">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
				<parameter name="next" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
				<parameter name="lanes" direction="out" transfer-ownership="full">
					<type name="GLib.SList" c:type="GSList**">
						<type name="Gitg.Lane" c:type="GitgLane*"/>
					</type>
				</parameter>
				<parameter name="nextpos" direction="out" transfer-ownership="full">
					<type name="gint" c:type="gint*"/>
				</parameter>
				<parameter name="save_miss" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="inactive-max" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_inactive_max" c:identifier="gitg_lanes_get_inactive_max">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_inactive_max" c:identifier="gitg_lanes_set_inactive_max">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="inactive-collapse" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_inactive_collapse" c:identifier="gitg_lanes_get_inactive_collapse">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_inactive_collapse" c:identifier="gitg_lanes_set_inactive_collapse">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="inactive-gap" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_inactive_gap" c:identifier="gitg_lanes_get_inactive_gap">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_inactive_gap" c:identifier="gitg_lanes_set_inactive_gap">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="inactive-enabled" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_inactive_enabled" c:identifier="gitg_lanes_get_inactive_enabled">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_inactive_enabled" c:identifier="gitg_lanes_set_inactive_enabled">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="miss-commits" writable="1">
			<type name="Gee.LinkedList" c:type="GeeLinkedList*">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</type>
		</property>
		<method name="get_miss_commits" c:identifier="gitg_lanes_get_miss_commits">
			<return-value transfer-ownership="none">
				<type name="Gee.LinkedList" c:type="GeeLinkedList*">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_miss_commits" c:identifier="gitg_lanes_set_miss_commits">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lanes" c:type="GitgLanes*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gee.LinkedList" c:type="GeeLinkedList*">
						<type name="Gitg.Commit" c:type="GitgCommit*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="LanesClass" c:type="GitgLanesClass" glib:is-gtype-struct-for="Lanes">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LanesPrivate" c:type="GitgLanesPrivate" disguised="1"/>
	<class name="Lane" c:type="GitgLane" c:symbol-prefix="lane" glib:type-name="GitgLane" glib:get-type="gitg_lane_get_type" glib:type-struct="LaneClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LanePrivate" c:type="GitgLanePrivate*"/>
		</field>
		<field name="color" writable="1">
			<type name="Gitg.Color" c:type="GitgColor*"/>
		</field>
		<field name="from" writable="1">
			<type name="GLib.SList" c:type="GSList*">
				<type name="gint" c:type="gint"/>
			</type>
		</field>
		<field name="tag" writable="1">
			<type name="Gitg.LaneTag" c:type="GitgLaneTag"/>
		</field>
		<field name="boundary_id" writable="1" nullable="1">
			<type name="Ggit.OId" c:type="GgitOId*"/>
		</field>
		<constructor name="new" c:identifier="gitg_lane_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Lane" c:type="GitgLane*"/>
			</return-value>
		</constructor>
		<constructor name="with_color" c:identifier="gitg_lane_new_with_color">
			<return-value transfer-ownership="full">
				<type name="Gitg.Lane" c:type="GitgLane*"/>
			</return-value>
			<parameters>
				<parameter name="color" transfer-ownership="none" nullable="1">
					<type name="Gitg.Color" c:type="GitgColor*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="copy" c:identifier="gitg_lane_copy">
			<return-value transfer-ownership="full">
				<type name="Gitg.Lane" c:type="GitgLane*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lane" c:type="GitgLane*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="dup" c:identifier="gitg_lane_dup">
			<return-value transfer-ownership="full">
				<type name="Gitg.Lane" c:type="GitgLane*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Lane" c:type="GitgLane*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LaneClass" c:type="GitgLaneClass" glib:is-gtype-struct-for="Lane">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LanePrivate" c:type="GitgLanePrivate" disguised="1"/>
	<class name="ProgressBin" c:type="GitgProgressBin" c:symbol-prefix="progress_bin" glib:type-name="GitgProgressBin" glib:get-type="gitg_progress_bin_get_type" glib:type-struct="ProgressBinClass" parent="Gtk.Bin">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Bin" c:type="GtkBin"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProgressBinPrivate" c:type="GitgProgressBinPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_progress_bin_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.ProgressBin" c:type="GitgProgressBin*"/>
			</return-value>
		</constructor>
		<property name="fraction" writable="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_fraction" c:identifier="gitg_progress_bin_get_fraction">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ProgressBin" c:type="GitgProgressBin*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_fraction" c:identifier="gitg_progress_bin_set_fraction">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ProgressBin" c:type="GitgProgressBin*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ProgressBinClass" c:type="GitgProgressBinClass" glib:is-gtype-struct-for="ProgressBin">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.BinClass" c:type="GtkBinClass"/>
		</field>
	</record>
	<record name="ProgressBinPrivate" c:type="GitgProgressBinPrivate" disguised="1"/>
	<class name="RefBase" c:type="GitgRefBase" c:symbol-prefix="ref_base" glib:type-name="GitgRefBase" glib:get-type="gitg_ref_base_get_type" glib:type-struct="RefBaseClass" parent="Ggit.Ref">
		<implements name="Gitg.Ref"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Ggit.Ref" c:type="GgitRef"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="RefBasePrivate" c:type="GitgRefBasePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_ref_base_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.RefBase" c:type="GitgRefBase*"/>
			</return-value>
		</constructor>
	</class>
	<record name="RefBaseClass" c:type="GitgRefBaseClass" glib:is-gtype-struct-for="RefBase">
		<field name="parent_class" readable="0" private="1">
			<type name="Ggit.RefClass" c:type="GgitRefClass"/>
		</field>
	</record>
	<record name="RefBasePrivate" c:type="GitgRefBasePrivate" disguised="1"/>
	<class name="ParsedRefName" c:type="GitgParsedRefName" c:symbol-prefix="parsed_ref_name" glib:type-name="GitgParsedRefName" glib:get-type="gitg_parsed_ref_name_get_type" glib:type-struct="ParsedRefNameClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ParsedRefNamePrivate" c:type="GitgParsedRefNamePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_parsed_ref_name_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="rtype" writable="1">
			<type name="Gitg.RefType" c:type="GitgRefType"/>
		</property>
		<method name="get_rtype" c:identifier="gitg_parsed_ref_name_get_rtype">
			<return-value transfer-ownership="none">
				<type name="Gitg.RefType" c:type="GitgRefType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gitg_parsed_ref_name_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="shortname">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_shortname" c:identifier="gitg_parsed_ref_name_get_shortname">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="remote-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_remote_name" c:identifier="gitg_parsed_ref_name_get_remote_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="remote-branch">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_remote_branch" c:identifier="gitg_parsed_ref_name_get_remote_branch">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gitg_parsed_ref_name_get_prefix">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ParsedRefNameClass" c:type="GitgParsedRefNameClass" glib:is-gtype-struct-for="ParsedRefName">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ParsedRefNamePrivate" c:type="GitgParsedRefNamePrivate" disguised="1"/>
	<class name="Remote" c:type="GitgRemote" c:symbol-prefix="remote" glib:type-name="GitgRemote" glib:get-type="gitg_remote_get_type" glib:type-struct="RemoteClass" parent="Ggit.Remote">
		<field name="parent_instance" readable="0" private="1">
			<type name="Ggit.Remote" c:type="GgitRemote"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="RemotePrivate" c:type="GitgRemotePrivate*"/>
		</field>
		<method name="connect" c:identifier="gitg_remote_connect">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="direction" transfer-ownership="none">
					<type name="Ggit.Direction" c:type="GgitDirection"/>
				</parameter>
				<parameter name="callbacks" transfer-ownership="none" nullable="1">
					<type name="Ggit.RemoteCallbacks" c:type="GgitRemoteCallbacks*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="connect_finish" c:identifier="gitg_remote_connect_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disconnect" c:identifier="gitg_remote_disconnect">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disconnect_finish" c:identifier="gitg_remote_disconnect_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="download" c:identifier="gitg_remote_download">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="callbacks" transfer-ownership="none" nullable="1">
					<type name="Ggit.RemoteCallbacks" c:type="GgitRemoteCallbacks*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="download_finish" c:identifier="gitg_remote_download_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="push" c:identifier="gitg_remote_push">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="branch" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callbacks" transfer-ownership="none" nullable="1">
					<type name="Ggit.RemoteCallbacks" c:type="GgitRemoteCallbacks*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="push_finish" c:identifier="gitg_remote_push_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="fetch" c:identifier="gitg_remote_fetch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callbacks" transfer-ownership="none" nullable="1">
					<type name="Ggit.RemoteCallbacks" c:type="GgitRemoteCallbacks*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="fetch_finish" c:identifier="gitg_remote_fetch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_remote_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Remote" c:type="GitgRemote*"/>
			</return-value>
		</constructor>
		<property name="transfer-progress">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_transfer_progress" c:identifier="gitg_remote_get_transfer_progress">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="state" writable="1">
			<type name="Gitg.RemoteState" c:type="GitgRemoteState"/>
		</property>
		<method name="get_state" c:identifier="gitg_remote_get_state">
			<return-value transfer-ownership="none">
				<type name="Gitg.RemoteState" c:type="GitgRemoteState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="fetch-specs" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_fetch_specs" c:identifier="gitg_remote_get_fetch_specs">
			<return-value transfer-ownership="full" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_fetch_specs" c:identifier="gitg_remote_set_fetch_specs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="push-specs" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_push_specs" c:identifier="gitg_remote_get_push_specs">
			<return-value transfer-ownership="full" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_push_specs" c:identifier="gitg_remote_set_push_specs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="credentials-provider" writable="1">
			<type name="Gitg.CredentialsProvider" c:type="GitgCredentialsProvider*"/>
		</property>
		<method name="get_credentials_provider" c:identifier="gitg_remote_get_credentials_provider">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gitg.CredentialsProvider" c:type="GitgCredentialsProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_credentials_provider" c:identifier="gitg_remote_set_credentials_provider">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.CredentialsProvider" c:type="GitgCredentialsProvider*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="tip-updated">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="refname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="a" transfer-ownership="none">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</parameter>
				<parameter name="b" transfer-ownership="none">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="RemoteClass" c:type="GitgRemoteClass" glib:is-gtype-struct-for="Remote">
		<field name="parent_class" readable="0" private="1">
			<type name="Ggit.RemoteClass" c:type="GgitRemoteClass"/>
		</field>
	</record>
	<record name="RemotePrivate" c:type="GitgRemotePrivate" disguised="1"/>
	<class name="RepositoryListBox" c:type="GitgRepositoryListBox" c:symbol-prefix="repository_list_box" glib:type-name="GitgRepositoryListBox" glib:get-type="gitg_repository_list_box_get_type" glib:type-struct="RepositoryListBoxClass" parent="Gtk.ListBox">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.ListBox" c:type="GtkListBox"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="RepositoryListBoxPrivate" c:type="GitgRepositoryListBoxPrivate*"/>
		</field>
		<method name="populate_bookmarks" c:identifier="gitg_repository_list_box_populate_bookmarks">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="end_cloning" c:identifier="gitg_repository_list_box_end_cloning">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="row" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</parameter>
				<parameter name="repository" transfer-ownership="none" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</method>
		<method name="begin_cloning" c:identifier="gitg_repository_list_box_begin_cloning">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="location" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_repository" c:identifier="gitg_repository_list_box_add_repository">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="repository" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
				<parameter name="visited" transfer-ownership="none" nullable="1">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_selection" c:identifier="gitg_repository_list_box_get_selection">
			<return-value transfer-ownership="full">
				<array length="0" c:type="GitgRepositoryListBoxRow**">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="filter_text" c:identifier="gitg_repository_list_box_filter_text">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="text" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_repository_list_box_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
			</return-value>
		</constructor>
		<property name="mode" writable="1">
			<type name="Gitg.SelectionMode" c:type="GitgSelectionMode"/>
		</property>
		<method name="get_mode" c:identifier="gitg_repository_list_box_get_mode">
			<return-value transfer-ownership="none">
				<type name="Gitg.SelectionMode" c:type="GitgSelectionMode"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_mode" c:identifier="gitg_repository_list_box_set_mode">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.SelectionMode" c:type="GitgSelectionMode"/>
				</parameter>
			</parameters>
		</method>
		<property name="bookmarks-from-recent-files" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_bookmarks_from_recent_files" c:identifier="gitg_repository_list_box_get_bookmarks_from_recent_files">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_bookmarks_from_recent_files" c:identifier="gitg_repository_list_box_set_bookmarks_from_recent_files">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_location" c:identifier="gitg_repository_list_box_get_location">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_location" c:identifier="gitg_repository_list_box_set_location">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<property name="has-selection">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_has_selection" c:identifier="gitg_repository_list_box_get_has_selection">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBox" c:type="GitgRepositoryListBox*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="repository-activated">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="repository" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="show-error">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="primary_message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="RepositoryListBoxClass" c:type="GitgRepositoryListBoxClass" glib:is-gtype-struct-for="RepositoryListBox">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ListBoxClass" c:type="GtkListBoxClass"/>
		</field>
	</record>
	<record name="RepositoryListBoxPrivate" c:type="GitgRepositoryListBoxPrivate" disguised="1"/>
	<class name="RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow" c:symbol-prefix="row" glib:type-name="GitgRepositoryListBoxRow" glib:get-type="gitg_repository_list_box_row_get_type" glib:type-struct="RepositoryListBoxRowClass" parent="Gtk.ListBoxRow">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.ListBoxRow" c:type="GtkListBoxRow"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="RepositoryListBoxRowPrivate" c:type="GitgRepositoryListBoxRowPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_repository_list_box_row_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
			</return-value>
			<parameters>
				<parameter name="repository" transfer-ownership="none" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
				<parameter name="dirname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="mode" writable="1">
			<type name="Gitg.SelectionMode" c:type="GitgSelectionMode"/>
		</property>
		<method name="get_mode" c:identifier="gitg_repository_list_box_row_get_mode">
			<return-value transfer-ownership="none">
				<type name="Gitg.SelectionMode" c:type="GitgSelectionMode"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_mode" c:identifier="gitg_repository_list_box_row_set_mode">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.SelectionMode" c:type="GitgSelectionMode"/>
				</parameter>
			</parameters>
		</method>
		<property name="selected" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_selected" c:identifier="gitg_repository_list_box_row_get_selected">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_selected" c:identifier="gitg_repository_list_box_row_set_selected">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="repository" writable="1">
			<type name="Gitg.Repository" c:type="GitgRepository*"/>
		</property>
		<method name="get_repository" c:identifier="gitg_repository_list_box_row_get_repository">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_repository" c:identifier="gitg_repository_list_box_row_set_repository">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</method>
		<property name="can-remove" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_can_remove" c:identifier="gitg_repository_list_box_row_get_can_remove">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_can_remove" c:identifier="gitg_repository_list_box_row_set_can_remove">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="time" writable="1">
			<type name="GLib.DateTime" c:type="GDateTime*"/>
		</property>
		<method name="get_time" c:identifier="gitg_repository_list_box_row_get_time">
			<return-value transfer-ownership="none">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_time" c:identifier="gitg_repository_list_box_row_set_time">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</method>
		<property name="fraction" readable="0" writable="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="set_fraction" c:identifier="gitg_repository_list_box_row_set_fraction">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="repository-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_repository_name" c:identifier="gitg_repository_list_box_row_get_repository_name">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_repository_name" c:identifier="gitg_repository_list_box_row_set_repository_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="dirname" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_dirname" c:identifier="gitg_repository_list_box_row_get_dirname">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_dirname" c:identifier="gitg_repository_list_box_row_set_dirname">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="branch-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_branch_name" c:identifier="gitg_repository_list_box_row_get_branch_name">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_branch_name" c:identifier="gitg_repository_list_box_row_set_branch_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="loading" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_loading" c:identifier="gitg_repository_list_box_row_get_loading">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_loading" c:identifier="gitg_repository_list_box_row_set_loading">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.RepositoryListBoxRow" c:type="GitgRepositoryListBoxRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="request-remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="request-delete-source">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="RepositoryListBoxRowClass" c:type="GitgRepositoryListBoxRowClass" glib:is-gtype-struct-for="RepositoryListBoxRow">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
		</field>
	</record>
	<record name="RepositoryListBoxRowPrivate" c:type="GitgRepositoryListBoxRowPrivate" disguised="1"/>
	<class name="Repository" c:type="GitgRepository" c:symbol-prefix="repository" glib:type-name="GitgRepository" glib:get-type="gitg_repository_get_type" glib:type-struct="RepositoryClass" parent="Ggit.Repository">
		<field name="parent_instance" readable="0" private="1">
			<type name="Ggit.Repository" c:type="GgitRepository"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="RepositoryPrivate" c:type="GitgRepositoryPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_repository_new" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<parameter name="location" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="workdir" transfer-ownership="none" nullable="1">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="clear_refs_cache" c:identifier="gitg_repository_clear_refs_cache">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="refs_for_id" c:identifier="gitg_repository_refs_for_id">
			<return-value transfer-ownership="none">
				<type name="GLib.SList" c:type="GSList*">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup" c:identifier="gitg_repository_lookup" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_reference" c:identifier="gitg_repository_lookup_reference" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_reference_dwim" c:identifier="gitg_repository_lookup_reference_dwim" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="short_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_branch" c:identifier="gitg_repository_create_branch" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Branch" c:type="GitgBranch*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="obj" transfer-ownership="none">
					<type name="Ggit.Object" c:type="GgitObject*"/>
				</parameter>
				<parameter name="flags" transfer-ownership="none">
					<type name="Ggit.CreateFlags" c:type="GgitCreateFlags"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_reference" c:identifier="gitg_repository_create_reference" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="oid" transfer-ownership="none">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_symbolic_reference" c:identifier="gitg_repository_create_symbolic_reference" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_head" c:identifier="gitg_repository_get_head" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
			</parameters>
		</method>
		<function name="init_repository" c:identifier="gitg_repository_init_repository" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<parameter name="location" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="is_bare" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<method name="get_signature_with_environment" c:identifier="gitg_repository_get_signature_with_environment" throws="1">
			<return-value transfer-ownership="full">
				<type name="Ggit.Signature" c:type="GgitSignature*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
				<parameter name="env" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
				<parameter name="envname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gitg_repository_get_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="stage">
			<type name="Gitg.Stage" c:type="GitgStage*"/>
		</property>
		<method name="get_stage" c:identifier="gitg_repository_get_stage">
			<return-value transfer-ownership="full">
				<type name="Gitg.Stage" c:type="GitgStage*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="RepositoryClass" c:type="GitgRepositoryClass" glib:is-gtype-struct-for="Repository">
		<field name="parent_class" readable="0" private="1">
			<type name="Ggit.RepositoryClass" c:type="GgitRepositoryClass"/>
		</field>
	</record>
	<record name="RepositoryPrivate" c:type="GitgRepositoryPrivate" disguised="1"/>
	<class name="Resource" c:type="GitgResource" c:symbol-prefix="resource" glib:type-name="GitgResource" glib:get-type="gitg_resource_get_type" glib:type-struct="ResourceClass" glib:fundamental="1" glib:ref-func="gitg_resource_ref" glib:unref-func="gitg_resource_unref" glib:set-value-func="gitg_value_set_resource" glib:get-value-func="gitg_value_get_resource">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ResourcePrivate" c:type="GitgResourcePrivate*"/>
		</field>
		<function name="load_css" c:identifier="gitg_resource_load_css">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.CssProvider" c:type="GtkCssProvider*"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gitg_resource_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Resource" c:type="GitgResource*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ResourceClass" c:type="GitgResourceClass" glib:is-gtype-struct-for="Resource">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="ResourcePrivate" c:type="GitgResourcePrivate" disguised="1"/>
	<class name="SidebarStore" c:type="GitgSidebarStore" c:symbol-prefix="sidebar_store" glib:type-name="GitgSidebarStore" glib:get-type="gitg_sidebar_store_get_type" glib:type-struct="SidebarStoreClass" parent="Gtk.TreeStore">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.TreeStore" c:type="GtkTreeStore"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SidebarStorePrivate" c:type="GitgSidebarStorePrivate*"/>
		</field>
		<method name="append_dummy" c:identifier="gitg_sidebar_store_append_dummy">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="append" c:identifier="gitg_sidebar_store_append">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</parameter>
			</parameters>
		</method>
		<method name="begin_header" c:identifier="gitg_sidebar_store_begin_header">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarStoreSidebarHeader" c:type="GitgSidebarStoreSidebarHeader*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="end_header" c:identifier="gitg_sidebar_store_end_header">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="begin_section" c:identifier="gitg_sidebar_store_begin_section">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="end_section" c:identifier="gitg_sidebar_store_end_section">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="clear" c:identifier="gitg_sidebar_store_clear">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="item_for_iter" c:identifier="gitg_sidebar_store_item_for_iter">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
				<parameter name="iter" transfer-ownership="none">
					<type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
				</parameter>
			</parameters>
		</method>
		<method name="activate" c:identifier="gitg_sidebar_store_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
				<parameter name="iter" transfer-ownership="none">
					<type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
				</parameter>
				<parameter name="numclick" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_sidebar_store_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
			</return-value>
		</constructor>
		<property name="clearing">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_clearing" c:identifier="gitg_sidebar_store_get_clearing">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SidebarStoreClass" c:type="GitgSidebarStoreClass" glib:is-gtype-struct-for="SidebarStore">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.TreeStoreClass" c:type="GtkTreeStoreClass"/>
		</field>
	</record>
	<record name="SidebarStorePrivate" c:type="GitgSidebarStorePrivate" disguised="1"/>
	<class name="SidebarStoreSidebarText" c:type="GitgSidebarStoreSidebarText" c:symbol-prefix="sidebar_text" glib:type-name="GitgSidebarStoreSidebarText" glib:get-type="gitg_sidebar_store_sidebar_text_get_type" glib:type-struct="SidebarStoreSidebarTextClass" parent="GObject.Object">
		<implements name="Gitg.SidebarItem"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SidebarStoreSidebarTextPrivate" c:type="GitgSidebarStoreSidebarTextPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_sidebar_store_sidebar_text_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarStoreSidebarText" c:type="GitgSidebarStoreSidebarText*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="SidebarStoreSidebarTextClass" c:type="GitgSidebarStoreSidebarTextClass" glib:is-gtype-struct-for="SidebarStoreSidebarText">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SidebarStoreSidebarTextPrivate" c:type="GitgSidebarStoreSidebarTextPrivate" disguised="1"/>
	<class name="SidebarStoreSidebarHeader" c:type="GitgSidebarStoreSidebarHeader" c:symbol-prefix="sidebar_header" glib:type-name="GitgSidebarStoreSidebarHeader" glib:get-type="gitg_sidebar_store_sidebar_header_get_type" glib:type-struct="SidebarStoreSidebarHeaderClass" parent="Gitg.SidebarStoreSidebarText">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gitg.SidebarStoreSidebarText" c:type="GitgSidebarStoreSidebarText"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SidebarStoreSidebarHeaderPrivate" c:type="GitgSidebarStoreSidebarHeaderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_sidebar_store_sidebar_header_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.SidebarStoreSidebarHeader" c:type="GitgSidebarStoreSidebarHeader*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="id">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_id" c:identifier="gitg_sidebar_store_sidebar_header_get_id">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarStoreSidebarHeader" c:type="GitgSidebarStoreSidebarHeader*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SidebarStoreSidebarHeaderClass" c:type="GitgSidebarStoreSidebarHeaderClass" glib:is-gtype-struct-for="SidebarStoreSidebarHeader">
		<field name="parent_class" readable="0" private="1">
			<type name="Gitg.SidebarStoreSidebarTextClass" c:type="GitgSidebarStoreSidebarTextClass"/>
		</field>
	</record>
	<record name="SidebarStoreSidebarHeaderPrivate" c:type="GitgSidebarStoreSidebarHeaderPrivate" disguised="1"/>
	<class name="Sidebar" c:type="GitgSidebar" c:symbol-prefix="sidebar" glib:type-name="GitgSidebar" glib:get-type="gitg_sidebar_get_type" glib:type-struct="SidebarClass" parent="Gtk.TreeView">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.TreeView" c:type="GtkTreeView"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SidebarPrivate" c:type="GitgSidebarPrivate*"/>
		</field>
		<method name="select_function" c:identifier="gitg_sidebar_select_function">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="sel" transfer-ownership="none">
					<type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
				</parameter>
				<parameter name="model" transfer-ownership="none">
					<type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="Gtk.TreePath" c:type="GtkTreePath*"/>
				</parameter>
				<parameter name="cursel" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select_function" invoker="select_function">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="sel" transfer-ownership="none">
					<type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
				</parameter>
				<parameter name="model" transfer-ownership="none">
					<type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="Gtk.TreePath" c:type="GtkTreePath*"/>
				</parameter>
				<parameter name="cursel" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="selection_changed" c:identifier="gitg_sidebar_selection_changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="sel" transfer-ownership="none">
					<type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="selection_changed" invoker="selection_changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="sel" transfer-ownership="none">
					<type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_selected_iter" c:identifier="gitg_sidebar_get_selected_iter">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="iter" direction="out" transfer-ownership="full">
					<type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_selected_item" c:identifier="gitg_sidebar_get_selected_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_selected_items" c:identifier="gitg_sidebar_get_selected_items">
			<return-value transfer-ownership="full">
				<array length="0" c:type="gpointer*">
					<type name="gpointer" c:type="gpointer"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="select" c:identifier="gitg_sidebar_select">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</parameter>
			</parameters>
		</method>
		<method name="is_selected" c:identifier="gitg_sidebar_is_selected">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_sidebar_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
			</return-value>
		</constructor>
		<property name="model" writable="1">
			<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
		</property>
		<method name="get_model" c:identifier="gitg_sidebar_get_model">
			<return-value transfer-ownership="none">
				<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_model" c:identifier="gitg_sidebar_set_model">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.SidebarStore" c:type="GitgSidebarStore*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="deselected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="populate-popup">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="menu" transfer-ownership="none">
					<type name="Gtk.Menu" c:type="GtkMenu*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="SidebarClass" c:type="GitgSidebarClass" glib:is-gtype-struct-for="Sidebar">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.TreeViewClass" c:type="GtkTreeViewClass"/>
		</field>
		<field name="select_function">
			<callback name="select_function" c:type="select_function">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
					</parameter>
					<parameter name="sel" transfer-ownership="none">
						<type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
					</parameter>
					<parameter name="model" transfer-ownership="none">
						<type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
					</parameter>
					<parameter name="path" transfer-ownership="none">
						<type name="Gtk.TreePath" c:type="GtkTreePath*"/>
					</parameter>
					<parameter name="cursel" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="selection_changed">
			<callback name="selection_changed" c:type="selection_changed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Sidebar" c:type="GitgSidebar*"/>
					</parameter>
					<parameter name="sel" transfer-ownership="none">
						<type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SidebarPrivate" c:type="GitgSidebarPrivate" disguised="1"/>
	<class name="StageStatusFile" c:type="GitgStageStatusFile" c:symbol-prefix="stage_status_file" glib:type-name="GitgStageStatusFile" glib:get-type="gitg_stage_status_file_get_type" glib:type-struct="StageStatusFileClass" parent="GObject.Object">
		<implements name="Gitg.StageStatusItem"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="StageStatusFilePrivate" c:type="GitgStageStatusFilePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_stage_status_file_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.StageStatusFile" c:type="GitgStageStatusFile*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="flags" transfer-ownership="none">
					<type name="Ggit.StatusFlags" c:type="GgitStatusFlags"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="flags">
			<type name="Ggit.StatusFlags" c:type="GgitStatusFlags"/>
		</property>
		<method name="get_flags" c:identifier="gitg_stage_status_file_get_flags">
			<return-value transfer-ownership="none">
				<type name="Ggit.StatusFlags" c:type="GgitStatusFlags"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusFile" c:type="GitgStageStatusFile*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="StageStatusFileClass" c:type="GitgStageStatusFileClass" glib:is-gtype-struct-for="StageStatusFile">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="StageStatusFilePrivate" c:type="GitgStageStatusFilePrivate" disguised="1"/>
	<class name="StageStatusSubmodule" c:type="GitgStageStatusSubmodule" c:symbol-prefix="stage_status_submodule" glib:type-name="GitgStageStatusSubmodule" glib:get-type="gitg_stage_status_submodule_get_type" glib:type-struct="StageStatusSubmoduleClass" parent="GObject.Object">
		<implements name="Gitg.StageStatusItem"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="StageStatusSubmodulePrivate" c:type="GitgStageStatusSubmodulePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_stage_status_submodule_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.StageStatusSubmodule" c:type="GitgStageStatusSubmodule*"/>
			</return-value>
			<parameters>
				<parameter name="submodule" transfer-ownership="none">
					<type name="Ggit.Submodule" c:type="GgitSubmodule*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="submodule">
			<type name="Ggit.Submodule" c:type="GgitSubmodule*"/>
		</property>
		<method name="get_submodule" c:identifier="gitg_stage_status_submodule_get_submodule">
			<return-value transfer-ownership="none">
				<type name="Ggit.Submodule" c:type="GgitSubmodule*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusSubmodule" c:type="GitgStageStatusSubmodule*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="is-dirty">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_dirty" c:identifier="gitg_stage_status_submodule_get_is_dirty">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusSubmodule" c:type="GitgStageStatusSubmodule*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="flags">
			<type name="Ggit.SubmoduleStatus" c:type="GgitSubmoduleStatus"/>
		</property>
		<method name="get_flags" c:identifier="gitg_stage_status_submodule_get_flags">
			<return-value transfer-ownership="none">
				<type name="Ggit.SubmoduleStatus" c:type="GgitSubmoduleStatus"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusSubmodule" c:type="GitgStageStatusSubmodule*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="StageStatusSubmoduleClass" c:type="GitgStageStatusSubmoduleClass" glib:is-gtype-struct-for="StageStatusSubmodule">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="StageStatusSubmodulePrivate" c:type="GitgStageStatusSubmodulePrivate" disguised="1"/>
	<class name="StageStatusEnumerator" c:type="GitgStageStatusEnumerator" c:symbol-prefix="stage_status_enumerator" glib:type-name="GitgStageStatusEnumerator" glib:get-type="gitg_stage_status_enumerator_get_type" glib:type-struct="StageStatusEnumeratorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="StageStatusEnumeratorPrivate" c:type="GitgStageStatusEnumeratorPrivate*"/>
		</field>
		<method name="cancel" c:identifier="gitg_stage_status_enumerator_cancel">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusEnumerator" c:type="GitgStageStatusEnumerator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="next_items" c:identifier="gitg_stage_status_enumerator_next_items">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusEnumerator" c:type="GitgStageStatusEnumerator*"/>
				</instance-parameter>
				<parameter name="num" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="next_items_finish" c:identifier="gitg_stage_status_enumerator_next_items_finish">
			<return-value transfer-ownership="full">
				<array length="1" c:type="GitgStageStatusItem**">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusEnumerator" c:type="GitgStageStatusEnumerator*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="StageStatusEnumeratorClass" c:type="GitgStageStatusEnumeratorClass" glib:is-gtype-struct-for="StageStatusEnumerator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="StageStatusEnumeratorPrivate" c:type="GitgStageStatusEnumeratorPrivate" disguised="1"/>
	<class name="PatchSet" c:type="GitgPatchSet" c:symbol-prefix="patch_set" glib:type-name="GitgPatchSet" glib:get-type="gitg_patch_set_get_type" glib:type-struct="PatchSetClass" glib:fundamental="1" glib:ref-func="gitg_patch_set_ref" glib:unref-func="gitg_patch_set_unref" glib:set-value-func="gitg_value_set_patch_set" glib:get-value-func="gitg_value_get_patch_set">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PatchSetPrivate" c:type="GitgPatchSetPrivate*"/>
		</field>
		<field name="filename" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="patches" writable="1">
			<array c:type="GitgPatchSetPatch*">
				<type name="Gitg.PatchSetPatch" c:type="GitgPatchSetPatch"/>
			</array>
		</field>
		<field name="patches_length1">
			<type name="gint" c:type="gint"/>
		</field>
		<method name="reversed" c:identifier="gitg_patch_set_reversed">
			<return-value transfer-ownership="full">
				<type name="Gitg.PatchSet" c:type="GitgPatchSet*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.PatchSet" c:type="GitgPatchSet*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_patch_set_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.PatchSet" c:type="GitgPatchSet*"/>
			</return-value>
		</constructor>
	</class>
	<record name="PatchSetClass" c:type="GitgPatchSetClass" glib:is-gtype-struct-for="PatchSet">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="PatchSetPrivate" c:type="GitgPatchSetPrivate" disguised="1"/>
	<enumeration name="PatchSetType" c:type="GitgPatchSetType" glib:type-name="GitgPatchSetType" glib:get-type="gitg_patch_set_type_get_type">
		<member name="add" c:identifier="GITG_PATCH_SET_TYPE_ADD" value="a"/>
		<member name="remove" c:identifier="GITG_PATCH_SET_TYPE_REMOVE" value="r"/>
	</enumeration>
	<record name="PatchSetPatch" c:type="GitgPatchSetPatch" c:symbol-prefix="patch" glib:type-name="GitgPatchSetPatch" glib:get-type="gitg_patch_set_patch_get_type">
		<field name="type" writable="1">
			<type name="Gitg.PatchSetType" c:type="GitgPatchSetType"/>
		</field>
		<field name="old_offset" writable="1">
			<type name="gulong" c:type="gsize"/>
		</field>
		<field name="new_offset" writable="1">
			<type name="gulong" c:type="gsize"/>
		</field>
		<field name="length" writable="1">
			<type name="gulong" c:type="gsize"/>
		</field>
	</record>
	<class name="Stage" c:type="GitgStage" c:symbol-prefix="stage" glib:type-name="GitgStage" glib:get-type="gitg_stage_get_type" glib:type-struct="StageClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="StagePrivate" c:type="GitgStagePrivate*"/>
		</field>
		<method name="refresh" c:identifier="gitg_stage_refresh">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="refresh_finish" c:identifier="gitg_stage_refresh_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_head_tree" c:identifier="gitg_stage_get_head_tree">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_head_tree_finish" c:identifier="gitg_stage_get_head_tree_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Tree" c:type="GgitTree*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="file_status" c:identifier="gitg_stage_file_status">
			<return-value transfer-ownership="full">
				<type name="Gitg.StageStatusEnumerator" c:type="GitgStageStatusEnumerator*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Ggit.StatusOptions" c:type="GgitStatusOptions*"/>
				</parameter>
			</parameters>
		</method>
		<method name="pre_commit_hook" c:identifier="gitg_stage_pre_commit_hook">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="author" transfer-ownership="none">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="pre_commit_hook_finish" c:identifier="gitg_stage_pre_commit_hook_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_index" c:identifier="gitg_stage_commit_index">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="Ggit.Index" c:type="GgitIndex*"/>
				</parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Ggit.Ref" c:type="GgitRef*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="author" transfer-ownership="none">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</parameter>
				<parameter name="committer" transfer-ownership="none">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</parameter>
				<parameter name="parents" transfer-ownership="none" nullable="1">
					<array length="6" c:type="GgitOId**">
						<type name="Ggit.OId" c:type="GgitOId*"/>
					</array>
				</parameter>
				<parameter name="parents_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="Gitg.StageCommitOptions" c:type="GitgStageCommitOptions"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_index_finish" c:identifier="gitg_stage_commit_index_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.OId" c:type="GgitOId*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_tree" c:identifier="gitg_stage_commit_tree">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="treeoid" transfer-ownership="none">
					<type name="Ggit.OId" c:type="GgitOId*"/>
				</parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Ggit.Ref" c:type="GgitRef*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="author" transfer-ownership="none">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</parameter>
				<parameter name="committer" transfer-ownership="none">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</parameter>
				<parameter name="parents" transfer-ownership="none" nullable="1">
					<array length="6" c:type="GgitOId**">
						<type name="Ggit.OId" c:type="GgitOId*"/>
					</array>
				</parameter>
				<parameter name="parents_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="Gitg.StageCommitOptions" c:type="GitgStageCommitOptions"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_tree_finish" c:identifier="gitg_stage_commit_tree_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.OId" c:type="GgitOId*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit" c:identifier="gitg_stage_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="author" transfer-ownership="none">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</parameter>
				<parameter name="committer" transfer-ownership="none">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="Gitg.StageCommitOptions" c:type="GitgStageCommitOptions"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="commit_finish" c:identifier="gitg_stage_commit_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.OId" c:type="GgitOId*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="revert" c:identifier="gitg_stage_revert">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="revert_finish" c:identifier="gitg_stage_revert_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="revert_path" c:identifier="gitg_stage_revert_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="revert_path_finish" c:identifier="gitg_stage_revert_path_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="revert_patch" c:identifier="gitg_stage_revert_patch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="patch" transfer-ownership="none">
					<type name="Gitg.PatchSet" c:type="GitgPatchSet*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="revert_patch_finish" c:identifier="gitg_stage_revert_patch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete" c:identifier="gitg_stage_delete">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_finish" c:identifier="gitg_stage_delete_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_path" c:identifier="gitg_stage_delete_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_path_finish" c:identifier="gitg_stage_delete_path_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage" c:identifier="gitg_stage_stage">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage_finish" c:identifier="gitg_stage_stage_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage_path" c:identifier="gitg_stage_stage_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage_path_finish" c:identifier="gitg_stage_stage_path_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage_commit" c:identifier="gitg_stage_stage_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="commit" transfer-ownership="none">
					<type name="Ggit.Commit" c:type="GgitCommit*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage_commit_finish" c:identifier="gitg_stage_stage_commit_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage_patch" c:identifier="gitg_stage_stage_patch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="patch" transfer-ownership="none">
					<type name="Gitg.PatchSet" c:type="GitgPatchSet*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stage_patch_finish" c:identifier="gitg_stage_stage_patch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unstage" c:identifier="gitg_stage_unstage">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unstage_finish" c:identifier="gitg_stage_unstage_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unstage_path" c:identifier="gitg_stage_unstage_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unstage_path_finish" c:identifier="gitg_stage_unstage_path_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unstage_patch" c:identifier="gitg_stage_unstage_patch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="patch" transfer-ownership="none">
					<type name="Gitg.PatchSet" c:type="GitgPatchSet*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unstage_patch_finish" c:identifier="gitg_stage_unstage_patch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_index_all" c:identifier="gitg_stage_diff_index_all">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="files" transfer-ownership="none" nullable="1">
					<array length="1" c:type="GitgStageStatusItem**">
						<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
					</array>
				</parameter>
				<parameter name="files_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="defopts" transfer-ownership="none" nullable="1">
					<type name="Ggit.DiffOptions" c:type="GgitDiffOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_index_all_finish" c:identifier="gitg_stage_diff_index_all_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Diff" c:type="GgitDiff*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_index" c:identifier="gitg_stage_diff_index">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</parameter>
				<parameter name="defopts" transfer-ownership="none" nullable="1">
					<type name="Ggit.DiffOptions" c:type="GgitDiffOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_index_finish" c:identifier="gitg_stage_diff_index_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Diff" c:type="GgitDiff*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_workdir_all" c:identifier="gitg_stage_diff_workdir_all">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="files" transfer-ownership="none">
					<array length="1" c:type="GitgStageStatusItem**">
						<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
					</array>
				</parameter>
				<parameter name="files_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="defopts" transfer-ownership="none" nullable="1">
					<type name="Ggit.DiffOptions" c:type="GgitDiffOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_workdir_all_finish" c:identifier="gitg_stage_diff_workdir_all_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Diff" c:type="GgitDiff*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_workdir" c:identifier="gitg_stage_diff_workdir">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</parameter>
				<parameter name="defopts" transfer-ownership="none" nullable="1">
					<type name="Ggit.DiffOptions" c:type="GgitDiffOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="diff_workdir_finish" c:identifier="gitg_stage_diff_workdir_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Diff" c:type="GgitDiff*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Stage" c:type="GitgStage*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="StageClass" c:type="GitgStageClass" glib:is-gtype-struct-for="Stage">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="StagePrivate" c:type="GitgStagePrivate" disguised="1"/>
	<class name="TextConv" c:type="GitgTextConv" c:symbol-prefix="text_conv" glib:type-name="GitgTextConv" glib:get-type="gitg_text_conv_get_type" glib:type-struct="TextConvClass" glib:fundamental="1" glib:ref-func="gitg_text_conv_ref" glib:unref-func="gitg_text_conv_unref" glib:set-value-func="gitg_value_set_text_conv" glib:get-value-func="gitg_value_get_text_conv">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TextConvPrivate" c:type="GitgTextConvPrivate*"/>
		</field>
		<function name="has_textconv_command" c:identifier="gitg_text_conv_has_textconv_command">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="repository" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Ggit.DiffFile" c:type="GgitDiffFile*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_textconv_content" c:identifier="gitg_text_conv_get_textconv_content">
			<return-value transfer-ownership="full">
				<array length="2" c:type="guint8*">
					<type name="guint8" c:type="guint8"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="repository" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Ggit.DiffFile" c:type="GgitDiffFile*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_textconv_content_from_raw" c:identifier="gitg_text_conv_get_textconv_content_from_raw">
			<return-value transfer-ownership="full">
				<array length="4" c:type="guint8*">
					<type name="guint8" c:type="guint8"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="repository" transfer-ownership="none">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Ggit.DiffFile" c:type="GgitDiffFile*"/>
				</parameter>
				<parameter name="raw_content" transfer-ownership="none" nullable="1">
					<array length="3" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="raw_content_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gitg_text_conv_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.TextConv" c:type="GitgTextConv*"/>
			</return-value>
		</constructor>
	</class>
	<record name="TextConvClass" c:type="GitgTextConvClass" glib:is-gtype-struct-for="TextConv">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="TextConvPrivate" c:type="GitgTextConvPrivate" disguised="1"/>
	<class name="Theme" c:type="GitgTheme" c:symbol-prefix="theme" glib:type-name="GitgTheme" glib:get-type="gitg_theme_get_type" glib:type-struct="ThemeClass" parent="Gtk.Widget">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Widget" c:type="GtkWidget"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ThemePrivate" c:type="GitgThemePrivate*"/>
		</field>
		<function name="instance" c:identifier="gitg_theme_instance">
			<return-value transfer-ownership="none">
				<type name="Gitg.Theme" c:type="GitgTheme*"/>
			</return-value>
		</function>
		<method name="is_theme_dark" c:identifier="gitg_theme_is_theme_dark">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Theme" c:type="GitgTheme*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_theme_new">
			<return-value transfer-ownership="none">
				<type name="Gitg.Theme" c:type="GitgTheme*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ThemeClass" c:type="GitgThemeClass" glib:is-gtype-struct-for="Theme">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
		</field>
	</record>
	<record name="ThemePrivate" c:type="GitgThemePrivate" disguised="1"/>
	<class name="Utils" c:type="GitgUtils" c:symbol-prefix="utils" glib:type-name="GitgUtils" glib:get-type="gitg_utils_get_type" glib:type-struct="UtilsClass" glib:fundamental="1" glib:ref-func="gitg_utils_ref" glib:unref-func="gitg_utils_unref" glib:set-value-func="gitg_value_set_utils" glib:get-value-func="gitg_value_get_utils">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="UtilsPrivate" c:type="GitgUtilsPrivate*"/>
		</field>
		<function name="replace_home_dir_with_tilde" c:identifier="gitg_utils_replace_home_dir_with_tilde">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</function>
		<function name="expand_home_dir" c:identifier="gitg_utils_expand_home_dir">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gitg_utils_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.Utils" c:type="GitgUtils*"/>
			</return-value>
		</constructor>
	</class>
	<record name="UtilsClass" c:type="GitgUtilsClass" glib:is-gtype-struct-for="Utils">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="UtilsPrivate" c:type="GitgUtilsPrivate" disguised="1"/>
	<class name="WhenMapped" c:type="GitgWhenMapped" c:symbol-prefix="when_mapped" glib:type-name="GitgWhenMapped" glib:get-type="gitg_when_mapped_get_type" glib:type-struct="WhenMappedClass" glib:fundamental="1" glib:ref-func="gitg_when_mapped_ref" glib:unref-func="gitg_when_mapped_unref" glib:set-value-func="gitg_value_set_when_mapped" glib:get-value-func="gitg_value_get_when_mapped">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="WhenMappedPrivate" c:type="GitgWhenMappedPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_when_mapped_new">
			<return-value transfer-ownership="full">
				<type name="Gitg.WhenMapped" c:type="GitgWhenMapped*"/>
			</return-value>
			<parameters>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="update" c:identifier="gitg_when_mapped_update">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.WhenMapped" c:type="GitgWhenMapped*"/>
				</instance-parameter>
				<parameter name="mapped" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Gitg.WhenMappedOnMapped" c:type="GitgWhenMappedOnMapped"/>
				</parameter>
				<parameter name="mapped_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="mapped_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="lifetime" transfer-ownership="none" nullable="1">
					<type name="GObject.Object" c:type="GObject*"/>
				</parameter>
			</parameters>
		</method>
		<callback name="OnMapped" c:type="GitgWhenMappedOnMapped">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</callback>
	</class>
	<record name="WhenMappedClass" c:type="GitgWhenMappedClass" glib:is-gtype-struct-for="WhenMapped">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="WhenMappedPrivate" c:type="GitgWhenMappedPrivate" disguised="1"/>
	<interface name="Branch" c:type="GitgBranch" c:symbol-prefix="branch" glib:type-name="GitgBranch" glib:get-type="gitg_branch_get_type" glib:type-struct="BranchIface">
		<prerequisite name="Ggit.Branch"/>
		<prerequisite name="Gitg.Ref"/>
		<method name="get_upstream" c:identifier="gitg_branch_get_upstream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Branch" c:type="GitgBranch*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_upstream" invoker="get_upstream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Branch" c:type="GitgBranch*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="BranchIface" c:type="GitgBranchIface" glib:is-gtype-struct-for="Branch">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_upstream">
			<callback name="get_upstream" c:type="get_upstream" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Branch" c:type="GitgBranch*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Ref" c:type="GitgRef" c:symbol-prefix="ref" glib:type-name="GitgRef" glib:get-type="gitg_ref_get_type" glib:type-struct="RefIface">
		<prerequisite name="Ggit.Ref"/>
		<method name="get_owner" c:identifier="gitg_ref_get_owner">
			<return-value transfer-ownership="full">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_owner" invoker="get_owner">
			<return-value transfer-ownership="full">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="d-parsed-name" writable="1">
			<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
		</property>
		<method name="get_d_parsed_name" c:identifier="gitg_ref_get_d_parsed_name">
			<return-value transfer-ownership="none">
				<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_d_parsed_name" invoker="get_d_parsed_name">
			<return-value transfer-ownership="none">
				<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_d_parsed_name" c:identifier="gitg_ref_set_d_parsed_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_d_parsed_name" invoker="set_d_parsed_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="d-pushes" writable="1">
			<type name="GLib.List" c:type="GList*">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</type>
		</property>
		<method name="get_d_pushes" c:identifier="gitg_ref_get_d_pushes">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.List" c:type="GList*">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_d_pushes" invoker="get_d_pushes">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.List" c:type="GList*">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_d_pushes" c:identifier="gitg_ref_set_d_pushes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="full" nullable="1">
					<type name="GLib.List" c:type="GList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_d_pushes" invoker="set_d_pushes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="full" nullable="1">
					<type name="GLib.List" c:type="GList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="state" writable="1">
			<type name="Gitg.RefState" c:type="GitgRefState"/>
		</property>
		<method name="get_state" c:identifier="gitg_ref_get_state">
			<return-value transfer-ownership="none">
				<type name="Gitg.RefState" c:type="GitgRefState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_state" invoker="get_state">
			<return-value transfer-ownership="none">
				<type name="Gitg.RefState" c:type="GitgRefState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_state" c:identifier="gitg_ref_set_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.RefState" c:type="GitgRefState"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_state" invoker="set_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.RefState" c:type="GitgRefState"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="working" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_working" c:identifier="gitg_ref_get_working">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_working" invoker="get_working">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_working" c:identifier="gitg_ref_set_working">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_working" invoker="set_working">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_parsed_name" c:identifier="gitg_ref_get_parsed_name">
			<return-value transfer-ownership="full">
				<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_pushes" c:identifier="gitg_ref_get_pushes">
			<return-value transfer-ownership="none">
				<type name="GLib.List" c:type="GList*">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</instance-parameter>
			</parameters>
		</method>
	</interface>
	<record name="RefIface" c:type="GitgRefIface" glib:is-gtype-struct-for="Ref">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_owner">
			<callback name="get_owner" c:type="get_owner">
				<return-value transfer-ownership="full">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_d_parsed_name">
			<callback name="get_d_parsed_name" c:type="get_d_parsed_name">
				<return-value transfer-ownership="none">
					<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_d_parsed_name">
			<callback name="set_d_parsed_name" c:type="set_d_parsed_name">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Gitg.ParsedRefName" c:type="GitgParsedRefName*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_d_pushes">
			<callback name="get_d_pushes" c:type="get_d_pushes">
				<return-value transfer-ownership="none" nullable="1">
					<type name="GLib.List" c:type="GList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_d_pushes">
			<callback name="set_d_pushes" c:type="set_d_pushes">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
					<parameter name="value" transfer-ownership="full" nullable="1">
						<type name="GLib.List" c:type="GList*">
							<type name="Gitg.Ref" c:type="GitgRef*"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_state">
			<callback name="get_state" c:type="get_state">
				<return-value transfer-ownership="none">
					<type name="Gitg.RefState" c:type="GitgRefState"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_state">
			<callback name="set_state" c:type="set_state">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Gitg.RefState" c:type="GitgRefState"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_working">
			<callback name="get_working" c:type="get_working">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_working">
			<callback name="set_working" c:type="set_working">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="CredentialsProvider" c:type="GitgCredentialsProvider" c:symbol-prefix="credentials_provider" glib:type-name="GitgCredentialsProvider" glib:get-type="gitg_credentials_provider_get_type" glib:type-struct="CredentialsProviderIface">
		<prerequisite name="GObject.Object"/>
		<method name="credentials" c:identifier="gitg_credentials_provider_credentials" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Cred" c:type="GgitCred*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CredentialsProvider" c:type="GitgCredentialsProvider*"/>
				</instance-parameter>
				<parameter name="url" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="username_from_url" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="allowed_types" transfer-ownership="none">
					<type name="Ggit.Credtype" c:type="GgitCredtype"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="credentials" invoker="credentials" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Cred" c:type="GgitCred*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.CredentialsProvider" c:type="GitgCredentialsProvider*"/>
				</instance-parameter>
				<parameter name="url" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="username_from_url" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="allowed_types" transfer-ownership="none">
					<type name="Ggit.Credtype" c:type="GgitCredtype"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="CredentialsProviderIface" c:type="GitgCredentialsProviderIface" glib:is-gtype-struct-for="CredentialsProvider">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="credentials">
			<callback name="credentials" c:type="credentials" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Ggit.Cred" c:type="GgitCred*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.CredentialsProvider" c:type="GitgCredentialsProvider*"/>
					</parameter>
					<parameter name="url" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="username_from_url" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="allowed_types" transfer-ownership="none">
						<type name="Ggit.Credtype" c:type="GgitCredtype"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SidebarItem" c:type="GitgSidebarItem" c:symbol-prefix="sidebar_item" glib:type-name="GitgSidebarItem" glib:get-type="gitg_sidebar_item_get_type" glib:type-struct="SidebarItemIface">
		<prerequisite name="GObject.Object"/>
		<method name="activate" c:identifier="gitg_sidebar_item_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</instance-parameter>
				<parameter name="numclick" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</instance-parameter>
				<parameter name="numclick" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="text">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_text" c:identifier="gitg_sidebar_item_get_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_text" invoker="get_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="icon-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_icon_name" c:identifier="gitg_sidebar_item_get_icon_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_icon_name" invoker="get_icon_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="activated">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="numclick" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="SidebarItemIface" c:type="GitgSidebarItemIface" glib:is-gtype-struct-for="SidebarItem">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
					</parameter>
					<parameter name="numclick" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_text">
			<callback name="get_text" c:type="get_text">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_icon_name">
			<callback name="get_icon_name" c:type="get_icon_name">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.SidebarItem" c:type="GitgSidebarItem*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="StageStatusItem" c:type="GitgStageStatusItem" c:symbol-prefix="stage_status_item" glib:type-name="GitgStageStatusItem" glib:get-type="gitg_stage_status_item_get_type" glib:type-struct="StageStatusItemIface">
		<prerequisite name="GObject.Object"/>
		<property name="path">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_path" c:identifier="gitg_stage_status_item_get_path">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_path" invoker="get_path">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="is-staged">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_staged" c:identifier="gitg_stage_status_item_get_is_staged">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_is_staged" invoker="get_is_staged">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="is-unstaged">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_unstaged" c:identifier="gitg_stage_status_item_get_is_unstaged">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_is_unstaged" invoker="get_is_unstaged">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="is-untracked">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_untracked" c:identifier="gitg_stage_status_item_get_is_untracked">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_is_untracked" invoker="get_is_untracked">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="icon-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_icon_name" c:identifier="gitg_stage_status_item_get_icon_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_icon_name" invoker="get_icon_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="StageStatusItemIface" c:type="GitgStageStatusItemIface" glib:is-gtype-struct-for="StageStatusItem">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_path">
			<callback name="get_path" c:type="get_path">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_staged">
			<callback name="get_is_staged" c:type="get_is_staged">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_unstaged">
			<callback name="get_is_unstaged" c:type="get_is_unstaged">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_untracked">
			<callback name="get_is_untracked" c:type="get_is_untracked">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_icon_name">
			<callback name="get_icon_name" c:type="get_icon_name">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Gitg.StageStatusItem" c:type="GitgStageStatusItem*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<function name="init" c:identifier="gitg_init" throws="1">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
	</function>
</namespace>
</repository>
