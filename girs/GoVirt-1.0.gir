<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Rest" version="1.0"/>
  <package name="govirt-1.0"/>
  <c:include name="govirt/govirt.h"/>
  <namespace name="GoVirt"
             version="1.0"
             shared-library="libgovirt.so.2"
             c:identifier-prefixes="Ovirt"
             c:symbol-prefixes="ovirt">
    <function-macro name="API" c:identifier="OVIRT_API" introspectable="0">
      <source-position filename="govirt/ovirt-api.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="API_CLASS"
                    c:identifier="OVIRT_API_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-api.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="API_GET_CLASS"
                    c:identifier="OVIRT_API_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-api.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Api"
           c:symbol-prefix="api"
           c:type="OvirtApi"
           parent="Resource"
           glib:type-name="OvirtApi"
           glib:get-type="ovirt_api_get_type"
           glib:type-struct="ApiClass">
      <source-position filename="govirt/ovirt-api.h" line="57"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_api_new">
        <source-position filename="govirt/ovirt-api.h" line="61"/>
        <return-value transfer-ownership="full">
          <type name="Api" c:type="OvirtApi*"/>
        </return-value>
      </constructor>
      <method name="get_clusters" c:identifier="ovirt_api_get_clusters">
        <doc xml:space="preserve"
             filename="govirt/ovirt-api.c"
             line="295">This method does not initiate any network activity, the collection
must be fetched with ovirt_collection_fetch() before having up-to-date
content.</doc>
        <source-position filename="govirt/ovirt-api.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="297">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data_centers"
              c:identifier="ovirt_api_get_data_centers">
        <doc xml:space="preserve"
             filename="govirt/ovirt-api.c"
             line="340">This method does not initiate any network activity, the collection
must be fetched with ovirt_collection_fetch() before having up-to-date
content.</doc>
        <source-position filename="govirt/ovirt-api.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="342">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hosts" c:identifier="ovirt_api_get_hosts">
        <doc xml:space="preserve"
             filename="govirt/ovirt-api.c"
             line="250">This method does not initiate any network activity, the collection
must be fetched with ovirt_collection_fetch() before having up-to-date
content.</doc>
        <source-position filename="govirt/ovirt-api.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="252">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_storage_domains"
              c:identifier="ovirt_api_get_storage_domains">
        <doc xml:space="preserve"
             filename="govirt/ovirt-api.c"
             line="205">This method does not initiate any network activity, the collection
must be fetched with ovirt_collection_fetch() before having up-to-date
content.</doc>
        <source-position filename="govirt/ovirt-api.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="207">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vm_pools" c:identifier="ovirt_api_get_vm_pools">
        <doc xml:space="preserve"
             filename="govirt/ovirt-api.c"
             line="160">This method does not initiate any network activity, the collection
must be fetched with ovirt_collection_fetch() before having up-to-date
content.</doc>
        <source-position filename="govirt/ovirt-api.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="162">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vms" c:identifier="ovirt_api_get_vms">
        <doc xml:space="preserve"
             filename="govirt/ovirt-api.c"
             line="116">This method does not initiate any network activity, the collection
must be fetched with ovirt_collection_fetch() before having up-to-date
content.</doc>
        <source-position filename="govirt/ovirt-api.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="118">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search_clusters" c:identifier="ovirt_api_search_clusters">
        <source-position filename="govirt/ovirt-api.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="322">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="323">search query</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_data_centers"
              c:identifier="ovirt_api_search_data_centers">
        <source-position filename="govirt/ovirt-api.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="367">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="368">search query</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_hosts" c:identifier="ovirt_api_search_hosts">
        <source-position filename="govirt/ovirt-api.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="277">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="278">search query</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_storage_domains"
              c:identifier="ovirt_api_search_storage_domains">
        <source-position filename="govirt/ovirt-api.h" line="70"/>
        <return-value transfer-ownership="full">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="232">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="233">search query</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_vm_pools" c:identifier="ovirt_api_search_vm_pools">
        <source-position filename="govirt/ovirt-api.h" line="74"/>
        <return-value transfer-ownership="full">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="187">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="188">search query</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_vms" c:identifier="ovirt_api_search_vms">
        <source-position filename="govirt/ovirt-api.h" line="72"/>
        <return-value transfer-ownership="full">
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="142">a #OvirtApi</doc>
            <type name="Api" c:type="OvirtApi*"/>
          </instance-parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-api.c"
                 line="143">search query</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="ApiPrivate" c:type="OvirtApiPrivate*"/>
      </field>
    </class>
    <record name="ApiClass"
            c:type="OvirtApiClass"
            glib:is-gtype-struct-for="Api">
      <source-position filename="govirt/ovirt-api.h" line="57"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="ApiPrivate"
            c:type="OvirtApiPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-api.h" line="40"/>
    </record>
    <function-macro name="CDROM" c:identifier="OVIRT_CDROM" introspectable="0">
      <source-position filename="govirt/ovirt-cdrom.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CDROM_CLASS"
                    c:identifier="OVIRT_CDROM_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cdrom.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CDROM_GET_CLASS"
                    c:identifier="OVIRT_CDROM_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cdrom.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLUSTER"
                    c:identifier="OVIRT_CLUSTER"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cluster.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLUSTER_CLASS"
                    c:identifier="OVIRT_CLUSTER_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cluster.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLUSTER_GET_CLASS"
                    c:identifier="OVIRT_CLUSTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cluster.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLLECTION"
                    c:identifier="OVIRT_COLLECTION"
                    introspectable="0">
      <source-position filename="govirt/ovirt-collection.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLLECTION_CLASS"
                    c:identifier="OVIRT_COLLECTION_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-collection.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLLECTION_GET_CLASS"
                    c:identifier="OVIRT_COLLECTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-collection.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Cdrom"
           c:symbol-prefix="cdrom"
           c:type="OvirtCdrom"
           parent="Resource"
           glib:type-name="OvirtCdrom"
           glib:get-type="ovirt_cdrom_get_type"
           glib:type-struct="CdromClass">
      <source-position filename="govirt/ovirt-cdrom.h" line="56"/>
      <implements name="Gio.Initable"/>
      <method name="update" c:identifier="ovirt_cdrom_update" throws="1">
        <source-position filename="govirt/ovirt-cdrom.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cdrom" transfer-ownership="none">
            <type name="Cdrom" c:type="OvirtCdrom*"/>
          </instance-parameter>
          <parameter name="current" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_async" c:identifier="ovirt_cdrom_update_async">
        <source-position filename="govirt/ovirt-cdrom.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cdrom" transfer-ownership="none">
            <type name="Cdrom" c:type="OvirtCdrom*"/>
          </instance-parameter>
          <parameter name="current" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_finish"
              c:identifier="ovirt_cdrom_update_finish"
              throws="1">
        <source-position filename="govirt/ovirt-cdrom.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cdrom" transfer-ownership="none">
            <type name="Cdrom" c:type="OvirtCdrom*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="file"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="CdromPrivate" c:type="OvirtCdromPrivate*"/>
      </field>
    </class>
    <record name="CdromClass"
            c:type="OvirtCdromClass"
            glib:is-gtype-struct-for="Cdrom">
      <source-position filename="govirt/ovirt-cdrom.h" line="56"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CdromPrivate"
            c:type="OvirtCdromPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-cdrom.h" line="39"/>
    </record>
    <class name="Cluster"
           c:symbol-prefix="cluster"
           c:type="OvirtCluster"
           parent="Resource"
           glib:type-name="OvirtCluster"
           glib:get-type="ovirt_cluster_get_type"
           glib:type-struct="ClusterClass">
      <source-position filename="govirt/ovirt-cluster.h" line="57"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_cluster_new">
        <source-position filename="govirt/ovirt-cluster.h" line="61"/>
        <return-value transfer-ownership="full">
          <type name="Cluster" c:type="OvirtCluster*"/>
        </return-value>
      </constructor>
      <method name="get_data_center"
              c:identifier="ovirt_cluster_get_data_center">
        <doc xml:space="preserve"
             filename="govirt/ovirt-cluster.c"
             line="222">Gets a #OvirtCluster representing the data center the cluster belongs
to. This method does not initiate any network activity, the remote data center must
be then be fetched using ovirt_resource_refresh() or
ovirt_resource_refresh_async().</doc>
        <source-position filename="govirt/ovirt-cluster.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="govirt/ovirt-cluster.c"
               line="231">a #OvirtDataCenter representing data center
the @host belongs to.</doc>
          <type name="DataCenter" c:type="OvirtDataCenter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cluster" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-cluster.c"
                 line="224">a #OvirtCluster</doc>
            <type name="Cluster" c:type="OvirtCluster*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hosts" c:identifier="ovirt_cluster_get_hosts">
        <doc xml:space="preserve"
             filename="govirt/ovirt-cluster.c"
             line="192">Gets a #OvirtCollection representing the list of remote hosts from a
cluster object. This method does not initiate any network
activity, the remote host list must be then be fetched using
ovirt_collection_fetch() or ovirt_collection_fetch_async().</doc>
        <source-position filename="govirt/ovirt-cluster.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-cluster.c"
               line="201">a #OvirtCollection representing the list
of hosts associated with @cluster.</doc>
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cluster" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-cluster.c"
                 line="194">a #OvirtCluster</doc>
            <type name="Cluster" c:type="OvirtCluster*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="data-center-href"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="data-center-id"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="ClusterPrivate" c:type="OvirtClusterPrivate*"/>
      </field>
    </class>
    <record name="ClusterClass"
            c:type="OvirtClusterClass"
            glib:is-gtype-struct-for="Cluster">
      <source-position filename="govirt/ovirt-cluster.h" line="57"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="ClusterPrivate"
            c:type="OvirtClusterPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-cluster.h" line="40"/>
    </record>
    <class name="Collection"
           c:symbol-prefix="collection"
           c:type="OvirtCollection"
           parent="GObject.Object"
           glib:type-name="OvirtCollection"
           glib:get-type="ovirt_collection_get_type"
           glib:type-struct="CollectionClass">
      <source-position filename="govirt/ovirt-collection.h" line="56"/>
      <method name="fetch" c:identifier="ovirt_collection_fetch" throws="1">
        <source-position filename="govirt/ovirt-collection.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="383">a #OvirtCollection</doc>
            <type name="Collection" c:type="OvirtCollection*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="384">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_async" c:identifier="ovirt_collection_fetch_async">
        <source-position filename="govirt/ovirt-collection.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="424">a #OvirtCollection</doc>
            <type name="Collection" c:type="OvirtCollection*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="425">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="426">completion callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="427">opaque data for callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_finish"
              c:identifier="ovirt_collection_fetch_finish"
              throws="1">
        <source-position filename="govirt/ovirt-collection.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-collection.c"
               line="457">TRUE if successful, FALSE otherwise, with @error set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="454">a #OvirtCollection</doc>
            <type name="Collection" c:type="OvirtCollection*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="455">async method result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_resources"
              c:identifier="ovirt_collection_get_resources"
              glib:get-property="resources">
        <source-position filename="govirt/ovirt-collection.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="Resource"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <type name="Collection" c:type="OvirtCollection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lookup_resource"
              c:identifier="ovirt_collection_lookup_resource">
        <doc xml:space="preserve"
             filename="govirt/ovirt-collection.c"
             line="471">Looks up a resource in @collection whose name is @name. If it cannot be
found, NULL is returned. This method does not initiate any network
activity, the remote collection content must have been fetched with
ovirt_collection_fetch() or ovirt_collection_fetch_async() before
calling this function.</doc>
        <source-position filename="govirt/ovirt-collection.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="govirt/ovirt-collection.c"
               line="482">a #OvirtResource whose name is @name
or NULL</doc>
          <type name="Resource" c:type="OvirtResource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="473">a #OvirtCollection</doc>
            <type name="Collection" c:type="OvirtCollection*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-collection.c"
                 line="474">name of the resource to lookup</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="collection-xml-name"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="href"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="resource-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <property name="resource-xml-name"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="resources"
                writable="1"
                transfer-ownership="none"
                getter="get_resources">
        <type name="GLib.HashTable">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CollectionPrivate" c:type="OvirtCollectionPrivate*"/>
      </field>
    </class>
    <record name="CollectionClass"
            c:type="OvirtCollectionClass"
            glib:is-gtype-struct-for="Collection">
      <source-position filename="govirt/ovirt-collection.h" line="56"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CollectionPrivate"
            c:type="OvirtCollectionPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-collection.h" line="39"/>
    </record>
    <function-macro name="DATA_CENTER"
                    c:identifier="OVIRT_DATA_CENTER"
                    introspectable="0">
      <source-position filename="govirt/ovirt-data-center.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CENTER_CLASS"
                    c:identifier="OVIRT_DATA_CENTER_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-data-center.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DATA_CENTER_GET_CLASS"
                    c:identifier="OVIRT_DATA_CENTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-data-center.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISK" c:identifier="OVIRT_DISK" introspectable="0">
      <source-position filename="govirt/ovirt-disk.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISK_CLASS"
                    c:identifier="OVIRT_DISK_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-disk.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DISK_GET_CLASS"
                    c:identifier="OVIRT_DISK_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-disk.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="DataCenter"
           c:symbol-prefix="data_center"
           c:type="OvirtDataCenter"
           parent="Resource"
           glib:type-name="OvirtDataCenter"
           glib:get-type="ovirt_data_center_get_type"
           glib:type-struct="DataCenterClass">
      <source-position filename="govirt/ovirt-data-center.h" line="57"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_data_center_new">
        <source-position filename="govirt/ovirt-data-center.h" line="61"/>
        <return-value transfer-ownership="full">
          <type name="DataCenter" c:type="OvirtDataCenter*"/>
        </return-value>
      </constructor>
      <method name="get_clusters"
              c:identifier="ovirt_data_center_get_clusters">
        <doc xml:space="preserve"
             filename="govirt/ovirt-data-center.c"
             line="82">Gets a #OvirtCollection representing the list of remote clusters from a
data center object. This method does not initiate any network
activity, the remote cluster list must be then be fetched using
ovirt_collection_fetch() or ovirt_collection_fetch_async().</doc>
        <source-position filename="govirt/ovirt-data-center.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-data-center.c"
               line="91">a #OvirtCollection representing the list
of clusters associated with @data_center.</doc>
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_center" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-data-center.c"
                 line="84">a #OvirtDataCenter</doc>
            <type name="DataCenter" c:type="OvirtDataCenter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_storage_domains"
              c:identifier="ovirt_data_center_get_storage_domains">
        <doc xml:space="preserve"
             filename="govirt/ovirt-data-center.c"
             line="112">Gets a #OvirtCollection representing the list of remote storage domains from a
data center object. This method does not initiate any network
activity, the remote storage domain list must be then be fetched using
ovirt_collection_fetch() or ovirt_collection_fetch_async().</doc>
        <source-position filename="govirt/ovirt-data-center.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-data-center.c"
               line="121">a #OvirtCollection representing the list
of storage_domains associated with @data_center.</doc>
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_center" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-data-center.c"
                 line="114">a #OvirtDataCenter</doc>
            <type name="DataCenter" c:type="OvirtDataCenter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="DataCenterPrivate" c:type="OvirtDataCenterPrivate*"/>
      </field>
    </class>
    <record name="DataCenterClass"
            c:type="OvirtDataCenterClass"
            glib:is-gtype-struct-for="DataCenter">
      <source-position filename="govirt/ovirt-data-center.h" line="57"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DataCenterPrivate"
            c:type="OvirtDataCenterPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-data-center.h" line="40"/>
    </record>
    <class name="Disk"
           c:symbol-prefix="disk"
           c:type="OvirtDisk"
           parent="Resource"
           glib:type-name="OvirtDisk"
           glib:get-type="ovirt_disk_get_type"
           glib:type-struct="DiskClass">
      <source-position filename="govirt/ovirt-disk.h" line="68"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_disk_new">
        <source-position filename="govirt/ovirt-disk.h" line="72"/>
        <return-value transfer-ownership="full">
          <type name="Disk" c:type="OvirtDisk*"/>
        </return-value>
      </constructor>
      <property name="content-type"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="OVIRT_DISK_CONTENT_TYPE_DATA">
        <type/>
      </property>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="DiskPrivate" c:type="OvirtDiskPrivate*"/>
      </field>
    </class>
    <record name="DiskClass"
            c:type="OvirtDiskClass"
            glib:is-gtype-struct-for="Disk">
      <source-position filename="govirt/ovirt-disk.h" line="68"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DiskContentType" c:type="OvirtDiskContentType">
      <source-position filename="govirt/ovirt-disk.h" line="49"/>
      <member name="data"
              value="0"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_DATA">
      </member>
      <member name="hosted_engine"
              value="1"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_HOSTED_ENGINE">
      </member>
      <member name="hosted_engine_configuration"
              value="2"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_HOSTED_ENGINE_CONFIGURATION">
      </member>
      <member name="hosted_engine_metadata"
              value="3"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_HOSTED_ENGINE_METADATA">
      </member>
      <member name="hosted_engine_sanlock"
              value="4"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_HOSTED_ENGINE_SANLOCK">
      </member>
      <member name="iso" value="5" c:identifier="OVIRT_DISK_CONTENT_TYPE_ISO">
      </member>
      <member name="memory_dump_volume"
              value="6"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_MEMORY_DUMP_VOLUME">
      </member>
      <member name="metadata_volume"
              value="7"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_METADATA_VOLUME">
      </member>
      <member name="ovf_store"
              value="8"
              c:identifier="OVIRT_DISK_CONTENT_TYPE_OVF_STORE">
      </member>
    </enumeration>
    <record name="DiskPrivate"
            c:type="OvirtDiskPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-disk.h" line="51"/>
    </record>
    <enumeration name="Error"
                 c:type="OvirtError"
                 glib:error-domain="ovirt-error-quark">
      <source-position filename="govirt/ovirt-error.h" line="35"/>
      <member name="failed" value="0" c:identifier="OVIRT_ERROR_FAILED">
      </member>
      <member name="parsing_failed"
              value="1"
              c:identifier="OVIRT_ERROR_PARSING_FAILED">
      </member>
      <member name="not_supported"
              value="2"
              c:identifier="OVIRT_ERROR_NOT_SUPPORTED">
      </member>
      <member name="action_failed"
              value="3"
              c:identifier="OVIRT_ERROR_ACTION_FAILED">
      </member>
      <member name="bad_uri" value="4" c:identifier="OVIRT_ERROR_BAD_URI">
      </member>
    </enumeration>
    <function-macro name="HOST" c:identifier="OVIRT_HOST" introspectable="0">
      <source-position filename="govirt/ovirt-host.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="HOST_CLASS"
                    c:identifier="OVIRT_HOST_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-host.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="HOST_GET_CLASS"
                    c:identifier="OVIRT_HOST_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-host.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Host"
           c:symbol-prefix="host"
           c:type="OvirtHost"
           parent="Resource"
           glib:type-name="OvirtHost"
           glib:get-type="ovirt_host_get_type"
           glib:type-struct="HostClass">
      <source-position filename="govirt/ovirt-host.h" line="57"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_host_new">
        <source-position filename="govirt/ovirt-host.h" line="61"/>
        <return-value transfer-ownership="full">
          <type name="Host" c:type="OvirtHost*"/>
        </return-value>
      </constructor>
      <method name="get_cluster" c:identifier="ovirt_host_get_cluster">
        <doc xml:space="preserve"
             filename="govirt/ovirt-host.c"
             line="223">Gets a #OvirtCluster representing the cluster the host belongs
to. This method does not initiate any network activity, the remote host must
be then be fetched using ovirt_resource_refresh() or
ovirt_resource_refresh_async().</doc>
        <source-position filename="govirt/ovirt-host.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="govirt/ovirt-host.c"
               line="232">a #OvirtCluster representing cluster the @host
belongs to.</doc>
          <type name="Cluster" c:type="OvirtCluster*"/>
        </return-value>
        <parameters>
          <instance-parameter name="host" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-host.c"
                 line="225">a #OvirtHost</doc>
            <type name="Host" c:type="OvirtHost*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vms" c:identifier="ovirt_host_get_vms">
        <doc xml:space="preserve"
             filename="govirt/ovirt-host.c"
             line="193">Gets a #OvirtCollection representing the list of remote vms from a
host object. This method does not initiate any network
activity, the remote vm list must be then be fetched using
ovirt_collection_fetch() or ovirt_collection_fetch_async().</doc>
        <source-position filename="govirt/ovirt-host.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-host.c"
               line="202">a #OvirtCollection representing the list
of vms associated with @host.</doc>
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="host" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-host.c"
                 line="195">a #OvirtHost</doc>
            <type name="Host" c:type="OvirtHost*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="cluster-href"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="cluster-id"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="HostPrivate" c:type="OvirtHostPrivate*"/>
      </field>
    </class>
    <record name="HostClass"
            c:type="OvirtHostClass"
            glib:is-gtype-struct-for="Host">
      <source-position filename="govirt/ovirt-host.h" line="57"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="HostPrivate"
            c:type="OvirtHostPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-host.h" line="40"/>
    </record>
    <function-macro name="IS_API"
                    c:identifier="OVIRT_IS_API"
                    introspectable="0">
      <source-position filename="govirt/ovirt-api.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_API_CLASS"
                    c:identifier="OVIRT_IS_API_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-api.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CDROM"
                    c:identifier="OVIRT_IS_CDROM"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cdrom.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CDROM_CLASS"
                    c:identifier="OVIRT_IS_CDROM_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cdrom.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLUSTER"
                    c:identifier="OVIRT_IS_CLUSTER"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cluster.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLUSTER_CLASS"
                    c:identifier="OVIRT_IS_CLUSTER_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-cluster.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLLECTION"
                    c:identifier="OVIRT_IS_COLLECTION"
                    introspectable="0">
      <source-position filename="govirt/ovirt-collection.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLLECTION_CLASS"
                    c:identifier="OVIRT_IS_COLLECTION_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-collection.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CENTER"
                    c:identifier="OVIRT_IS_DATA_CENTER"
                    introspectable="0">
      <source-position filename="govirt/ovirt-data-center.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DATA_CENTER_CLASS"
                    c:identifier="OVIRT_IS_DATA_CENTER_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-data-center.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DISK"
                    c:identifier="OVIRT_IS_DISK"
                    introspectable="0">
      <source-position filename="govirt/ovirt-disk.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DISK_CLASS"
                    c:identifier="OVIRT_IS_DISK_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-disk.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_HOST"
                    c:identifier="OVIRT_IS_HOST"
                    introspectable="0">
      <source-position filename="govirt/ovirt-host.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_HOST_CLASS"
                    c:identifier="OVIRT_IS_HOST_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-host.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROXY"
                    c:identifier="OVIRT_IS_PROXY"
                    introspectable="0">
      <source-position filename="govirt/ovirt-proxy.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROXY_CLASS"
                    c:identifier="OVIRT_IS_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-proxy.h" line="43"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RESOURCE"
                    c:identifier="OVIRT_IS_RESOURCE"
                    introspectable="0">
      <source-position filename="govirt/ovirt-resource.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RESOURCE_CLASS"
                    c:identifier="OVIRT_IS_RESOURCE_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-resource.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_DOMAIN"
                    c:identifier="OVIRT_IS_STORAGE_DOMAIN"
                    introspectable="0">
      <source-position filename="govirt/ovirt-storage-domain.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_DOMAIN_CLASS"
                    c:identifier="OVIRT_IS_STORAGE_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-storage-domain.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VM" c:identifier="OVIRT_IS_VM" introspectable="0">
      <source-position filename="govirt/ovirt-vm.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VM_CLASS"
                    c:identifier="OVIRT_IS_VM_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VM_DISPLAY"
                    c:identifier="OVIRT_IS_VM_DISPLAY"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-display.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VM_DISPLAY_CLASS"
                    c:identifier="OVIRT_IS_VM_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-display.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VM_POOL"
                    c:identifier="OVIRT_IS_VM_POOL"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-pool.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VM_POOL_CLASS"
                    c:identifier="OVIRT_IS_VM_POOL_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-pool.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROXY" c:identifier="OVIRT_PROXY" introspectable="0">
      <source-position filename="govirt/ovirt-proxy.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROXY_CLASS"
                    c:identifier="OVIRT_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-proxy.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROXY_GET_CLASS"
                    c:identifier="OVIRT_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-proxy.h" line="46"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Proxy"
           c:symbol-prefix="proxy"
           c:type="OvirtProxy"
           parent="Rest.Proxy"
           glib:type-name="OvirtProxy"
           glib:get-type="ovirt_proxy_get_type"
           glib:type-struct="ProxyClass">
      <source-position filename="govirt/ovirt-proxy.h" line="60"/>
      <constructor name="new" c:identifier="ovirt_proxy_new">
        <source-position filename="govirt/ovirt-proxy.h" line="64"/>
        <return-value transfer-ownership="full">
          <type name="Proxy" c:type="OvirtProxy*"/>
        </return-value>
        <parameters>
          <parameter name="host" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="fetch_api" c:identifier="ovirt_proxy_fetch_api" throws="1">
        <source-position filename="govirt/ovirt-proxy.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="Api" c:type="OvirtApi*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy.c"
                 line="1125">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fetch_api_async"
              c:identifier="ovirt_proxy_fetch_api_async">
        <source-position filename="govirt/ovirt-proxy.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy.c"
                 line="1162">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy.c"
                 line="1163">completion callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy.c"
                 line="1164">opaque data for callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_api_finish"
              c:identifier="ovirt_proxy_fetch_api_finish"
              throws="1">
        <source-position filename="govirt/ovirt-proxy.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-proxy.c"
               line="1190">an #OvirtApi instance to interact with
oVirt/RHEV REST API.</doc>
          <type name="Api" c:type="OvirtApi*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy.c"
                 line="1187">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy.c"
                 line="1188">async method result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_ca_certificate"
              c:identifier="ovirt_proxy_fetch_ca_certificate"
              throws="1">
        <source-position filename="govirt/ovirt-proxy.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fetch_ca_certificate_async"
              c:identifier="ovirt_proxy_fetch_ca_certificate_async">
        <source-position filename="govirt/ovirt-proxy.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_ca_certificate_finish"
              c:identifier="ovirt_proxy_fetch_ca_certificate_finish"
              throws="1">
        <source-position filename="govirt/ovirt-proxy.h" line="91"/>
        <return-value transfer-ownership="full">
          <array name="GLib.ByteArray" c:type="GByteArray*">
            <type name="guint8" c:type="guint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_vms" c:identifier="ovirt_proxy_fetch_vms" throws="1">
        <source-position filename="govirt/ovirt-proxy.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fetch_vms_async"
              c:identifier="ovirt_proxy_fetch_vms_async">
        <source-position filename="govirt/ovirt-proxy.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy-deprecated.c"
                 line="84">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy-deprecated.c"
                 line="85">completion callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy-deprecated.c"
                 line="86">opaque data for callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_vms_finish"
              c:identifier="ovirt_proxy_fetch_vms_finish"
              throws="1">
        <source-position filename="govirt/ovirt-proxy.h" line="82"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="govirt/ovirt-proxy-deprecated.c"
               line="123">the list of
#OvirtVm associated with #OvirtProxy.
The returned list should be freed with g_list_free(), and can become
invalid any time a #OvirtProxy call completes.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Vm"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy-deprecated.c"
                 line="120">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy-deprecated.c"
                 line="121">async method result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_api" c:identifier="ovirt_proxy_get_api">
        <doc xml:space="preserve"
             filename="govirt/ovirt-proxy.c"
             line="1208">Gets the api entry point to access remote oVirt resources and collections.
This method does not initiate any network activity, the remote API entry point
must have been fetched with ovirt_proxy_fetch_api() or
ovirt_proxy_fetch_api_async() before calling this function.</doc>
        <source-position filename="govirt/ovirt-proxy.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-proxy.c"
               line="1216">an #OvirtApi instance used to interact with
oVirt REST API.</doc>
          <type name="Api" c:type="OvirtApi*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vms" c:identifier="ovirt_proxy_get_vms">
        <doc xml:space="preserve"
             filename="govirt/ovirt-proxy-deprecated.c"
             line="174">Gets the list of remote VMs from the proxy object.
This method does not initiate any network activity, the remote VM list
must have been fetched with ovirt_proxy_fetch_vms() or
ovirt_proxy_fetch_vms_async() before calling this function.</doc>
        <source-position filename="govirt/ovirt-proxy.h" line="70"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="govirt/ovirt-proxy-deprecated.c"
               line="182">the list of
#OvirtVm associated with #OvirtProxy.
The returned list should be freed with g_list_free(), and can become
invalid any time a #OvirtProxy call completes.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Vm"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lookup_vm" c:identifier="ovirt_proxy_lookup_vm">
        <doc xml:space="preserve"
             filename="govirt/ovirt-proxy-deprecated.c"
             line="142">Looks up a virtual machine whose name is @name. If it cannot be found,
NULL is returned. This method does not initiate any network activity,
the remote VM list must have been fetched with ovirt_proxy_fetch_vms()
or ovirt_proxy_fetch_vms_async() before calling this function.</doc>
        <source-position filename="govirt/ovirt-proxy.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="govirt/ovirt-proxy-deprecated.c"
               line="152">a #OvirtVm whose name is @name or NULL</doc>
          <type name="Vm" c:type="OvirtVm*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy-deprecated.c"
                 line="144">a #OvirtProxy</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </instance-parameter>
          <parameter name="vm_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-proxy-deprecated.c"
                 line="145">name of the virtual machine to lookup</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="admin"
                version="0.0.2"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="govirt/ovirt-proxy.c"
             line="865">Indicates whether to connect to the REST API as an admin, or as a regular user.
Different content will be shown for the same user depending on if they connect as
an admin or not. Connecting as an admin requires to have admin priviledges on the
oVirt instance.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="ca-cert" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="govirt/ovirt-proxy.c"
             line="850">Path to a file containing the CA certificates to use for the HTTPS
REST API communication with the oVirt instance</doc>
        <array name="GLib.ByteArray">
          <type name="guint8" c:type="guint8"/>
        </array>
      </property>
      <property name="session-id"
                version="0.3.1"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="govirt/ovirt-proxy.c"
             line="883">jsessionid cookie value. This allows to use the REST API without
authenticating first. This was used by oVirt 3.6 and is now replaced
by OvirtProxy:sso-token.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="sso-token"
                version="0.3.4"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="govirt/ovirt-proxy.c"
             line="901">Token to use for SSO. This allows to use the REST API without
authenticating first. This is used starting with oVirt 4.0.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Rest.Proxy" c:type="RestProxy"/>
      </field>
      <field name="priv">
        <type name="ProxyPrivate" c:type="OvirtProxyPrivate*"/>
      </field>
    </class>
    <record name="ProxyClass"
            c:type="OvirtProxyClass"
            glib:is-gtype-struct-for="Proxy">
      <source-position filename="govirt/ovirt-proxy.h" line="60"/>
      <field name="parent_class">
        <type name="Rest.ProxyClass" c:type="RestProxyClass"/>
      </field>
    </record>
    <record name="ProxyPrivate"
            c:type="OvirtProxyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-proxy.h" line="50"/>
    </record>
    <function-macro name="RESOURCE"
                    c:identifier="OVIRT_RESOURCE"
                    introspectable="0">
      <source-position filename="govirt/ovirt-resource.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RESOURCE_CLASS"
                    c:identifier="OVIRT_RESOURCE_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-resource.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RESOURCE_GET_CLASS"
                    c:identifier="OVIRT_RESOURCE_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-resource.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Resource"
           c:symbol-prefix="resource"
           c:type="OvirtResource"
           parent="GObject.Object"
           glib:type-name="OvirtResource"
           glib:get-type="ovirt_resource_get_type"
           glib:type-struct="ResourceClass">
      <source-position filename="govirt/ovirt-resource.h" line="68"/>
      <implements name="Gio.Initable"/>
      <virtual-method name="init_from_xml" throws="1">
        <source-position filename="govirt/ovirt-resource.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="Rest.XmlNode" c:type="RestXmlNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="to_xml">
        <source-position filename="govirt/ovirt-resource.h" line="60"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="delete" c:identifier="ovirt_resource_delete" throws="1">
        <source-position filename="govirt/ovirt-resource.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-resource.c"
               line="958">TRUE if the call was successful, FALSE otherwise.

Sends an HTTP DELETE request to @resource.

The calling thread is blocked until this request is processed, see
ovirt_resource_delete_async() for the asynchronous version of this method.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="955">an #OvirtResource.</doc>
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="956">an #OvirtProxy.</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_async" c:identifier="ovirt_resource_delete_async">
        <doc xml:space="preserve"
             filename="govirt/ovirt-resource.c"
             line="1005">Asynchronously send an HTTP DELETE request to @resource.

When the call is complete, @callback will be invoked. You can then call
ovirt_resource_delete_finish() to get the result of the call.</doc>
        <source-position filename="govirt/ovirt-resource.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="1007">an #OvirtResource.</doc>
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="1008">an #OvirtProxy.</doc>
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="1009">a #GCancellable or NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="1010">a #GAsyncReadyCallback to call when the call completes, or NULL
if you don't care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="1012">data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_finish"
              c:identifier="ovirt_resource_delete_finish"
              throws="1">
        <source-position filename="govirt/ovirt-resource.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-resource.c"
               line="1051">TRUE if the call was successful, FALSE otherwise.

Finishes an asynchronous HTTP DELETE request on @resource.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="1048">an #OvirtResource.</doc>
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-resource.c"
                 line="1049">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sub_collection"
              c:identifier="ovirt_resource_get_sub_collection">
        <source-position filename="govirt/ovirt-resource.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="sub_collection" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh" c:identifier="ovirt_resource_refresh" throws="1">
        <source-position filename="govirt/ovirt-resource.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_async" c:identifier="ovirt_resource_refresh_async">
        <source-position filename="govirt/ovirt-resource.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_finish"
              c:identifier="ovirt_resource_refresh_finish"
              throws="1">
        <source-position filename="govirt/ovirt-resource.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update" c:identifier="ovirt_resource_update" throws="1">
        <source-position filename="govirt/ovirt-resource.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_async" c:identifier="ovirt_resource_update_async">
        <source-position filename="govirt/ovirt-resource.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_finish"
              c:identifier="ovirt_resource_update_finish"
              throws="1">
        <source-position filename="govirt/ovirt-resource.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <type name="Resource" c:type="OvirtResource*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="guid"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="href"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="xml-node"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Rest.XmlNode"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ResourcePrivate" c:type="OvirtResourcePrivate*"/>
      </field>
    </class>
    <record name="ResourceClass"
            c:type="OvirtResourceClass"
            glib:is-gtype-struct-for="Resource">
      <source-position filename="govirt/ovirt-resource.h" line="68"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="init_from_xml">
        <callback name="init_from_xml" throws="1">
          <source-position filename="govirt/ovirt-resource.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="resource" transfer-ownership="none">
              <type name="Resource" c:type="OvirtResource*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="Rest.XmlNode" c:type="RestXmlNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_xml">
        <callback name="to_xml">
          <source-position filename="govirt/ovirt-resource.h" line="60"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="resource" transfer-ownership="none">
              <type name="Resource" c:type="OvirtResource*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding0">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="18">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="ResourcePrivate"
            c:type="OvirtResourcePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-resource.h" line="41"/>
    </record>
    <enumeration name="RestCallError"
                 c:type="OvirtRestCallError"
                 glib:error-domain="ovirt-rest-call">
      <source-position filename="govirt/ovirt-rest-call-error.h" line="30"/>
      <member name="xml" value="0" c:identifier="OVIRT_REST_CALL_ERROR_XML">
      </member>
      <member name="cancelled"
              value="1"
              c:identifier="OVIRT_REST_CALL_ERROR_CANCELLED">
      </member>
    </enumeration>
    <function-macro name="STORAGE_DOMAIN"
                    c:identifier="OVIRT_STORAGE_DOMAIN"
                    introspectable="0">
      <source-position filename="govirt/ovirt-storage-domain.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_DOMAIN_CLASS"
                    c:identifier="OVIRT_STORAGE_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-storage-domain.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_DOMAIN_GET_CLASS"
                    c:identifier="OVIRT_STORAGE_DOMAIN_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-storage-domain.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="StorageDomain"
           c:symbol-prefix="storage_domain"
           c:type="OvirtStorageDomain"
           parent="Resource"
           glib:type-name="OvirtStorageDomain"
           glib:get-type="ovirt_storage_domain_get_type"
           glib:type-struct="StorageDomainClass">
      <source-position filename="govirt/ovirt-storage-domain.h" line="94"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_storage_domain_new">
        <source-position filename="govirt/ovirt-storage-domain.h" line="98"/>
        <return-value transfer-ownership="full">
          <type name="StorageDomain" c:type="OvirtStorageDomain*"/>
        </return-value>
      </constructor>
      <method name="get_disks" c:identifier="ovirt_storage_domain_get_disks">
        <doc xml:space="preserve"
             filename="govirt/ovirt-storage-domain.c"
             line="428">Gets a #OvirtCollection representing the list of remote disks from a
storage domain object.  This method does not initiate any network
activity, the remote file list must be then be fetched using
ovirt_collection_fetch() or ovirt_collection_fetch_async().</doc>
        <source-position filename="govirt/ovirt-storage-domain.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-storage-domain.c"
               line="437">a #OvirtCollection representing the list
of disks associated with @domain.</doc>
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-storage-domain.c"
                 line="430">a #OvirtStorageDomain</doc>
            <type name="StorageDomain" c:type="OvirtStorageDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_files" c:identifier="ovirt_storage_domain_get_files">
        <doc xml:space="preserve"
             filename="govirt/ovirt-storage-domain.c"
             line="402">Gets a #OvirtCollection representing the list of remote files from a
storage domain object.  This method does not initiate any network
activity, the remote file list must be then be fetched using
ovirt_collection_fetch() or ovirt_collection_fetch_async().</doc>
        <source-position filename="govirt/ovirt-storage-domain.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-storage-domain.c"
               line="411">a #OvirtCollection representing the list
of files associated with @domain.</doc>
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-storage-domain.c"
                 line="404">a #OvirtStorageDomain</doc>
            <type name="StorageDomain" c:type="OvirtStorageDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="available"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="committed"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="data-center-href"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="data-center-id"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="data-center-ids" writable="1" transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="master"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="state"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="OVIRT_STORAGE_DOMAIN_STATE_UNKNOWN">
        <type/>
      </property>
      <property name="storage-type"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_NFS">
        <type/>
      </property>
      <property name="type"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="OVIRT_STORAGE_DOMAIN_TYPE_DATA">
        <type/>
      </property>
      <property name="used"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="version"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="OVIRT_STORAGE_DOMAIN_FORMAT_VERSION_V1">
        <type/>
      </property>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="StorageDomainPrivate" c:type="OvirtStorageDomainPrivate*"/>
      </field>
    </class>
    <record name="StorageDomainClass"
            c:type="OvirtStorageDomainClass"
            glib:is-gtype-struct-for="StorageDomain">
      <source-position filename="govirt/ovirt-storage-domain.h" line="94"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="StorageDomainFormatVersion"
                 c:type="OvirtStorageDomainFormatVersion">
      <source-position filename="govirt/ovirt-storage-domain.h" line="46"/>
      <member name="v1"
              value="0"
              c:identifier="OVIRT_STORAGE_DOMAIN_FORMAT_VERSION_V1">
      </member>
      <member name="v2"
              value="1"
              c:identifier="OVIRT_STORAGE_DOMAIN_FORMAT_VERSION_V2">
      </member>
      <member name="v3"
              value="2"
              c:identifier="OVIRT_STORAGE_DOMAIN_FORMAT_VERSION_V3">
      </member>
      <member name="v4"
              value="3"
              c:identifier="OVIRT_STORAGE_DOMAIN_FORMAT_VERSION_V4">
      </member>
      <member name="v5"
              value="4"
              c:identifier="OVIRT_STORAGE_DOMAIN_FORMAT_VERSION_V5">
      </member>
    </enumeration>
    <record name="StorageDomainPrivate"
            c:type="OvirtStorageDomainPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-storage-domain.h" line="77"/>
    </record>
    <enumeration name="StorageDomainState" c:type="OvirtStorageDomainState">
      <source-position filename="govirt/ovirt-storage-domain.h" line="56"/>
      <member name="active"
              value="0"
              c:identifier="OVIRT_STORAGE_DOMAIN_STATE_ACTIVE">
      </member>
      <member name="inactive"
              value="1"
              c:identifier="OVIRT_STORAGE_DOMAIN_STATE_INACTIVE">
      </member>
      <member name="locked"
              value="2"
              c:identifier="OVIRT_STORAGE_DOMAIN_STATE_LOCKED">
      </member>
      <member name="mixed"
              value="3"
              c:identifier="OVIRT_STORAGE_DOMAIN_STATE_MIXED">
      </member>
      <member name="unattached"
              value="4"
              c:identifier="OVIRT_STORAGE_DOMAIN_STATE_UNATTACHED">
      </member>
      <member name="maintenance"
              value="5"
              c:identifier="OVIRT_STORAGE_DOMAIN_STATE_MAINTENANCE">
      </member>
      <member name="unknown"
              value="6"
              c:identifier="OVIRT_STORAGE_DOMAIN_STATE_UNKNOWN">
      </member>
    </enumeration>
    <enumeration name="StorageDomainStorageType"
                 c:type="OvirtStorageDomainStorageType">
      <source-position filename="govirt/ovirt-storage-domain.h" line="75"/>
      <member name="cinder"
              value="0"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_CINDER">
      </member>
      <member name="fcp"
              value="1"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_FCP">
      </member>
      <member name="glance"
              value="2"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_GLANCE">
      </member>
      <member name="glusterfs"
              value="3"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_GLUSTERFS">
      </member>
      <member name="iscsi"
              value="4"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_ISCSI">
      </member>
      <member name="localfs"
              value="5"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_LOCALFS">
      </member>
      <member name="managed_block_storage"
              value="6"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_MANAGED_BLOCK_STORAGE">
      </member>
      <member name="nfs"
              value="7"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_NFS">
      </member>
      <member name="posixfs"
              value="8"
              c:identifier="OVIRT_STORAGE_DOMAIN_STORAGE_TYPE_POSIXFS">
      </member>
    </enumeration>
    <enumeration name="StorageDomainType" c:type="OvirtStorageDomainType">
      <source-position filename="govirt/ovirt-storage-domain.h" line="63"/>
      <member name="data"
              value="0"
              c:identifier="OVIRT_STORAGE_DOMAIN_TYPE_DATA">
      </member>
      <member name="iso"
              value="1"
              c:identifier="OVIRT_STORAGE_DOMAIN_TYPE_ISO">
      </member>
      <member name="export"
              value="2"
              c:identifier="OVIRT_STORAGE_DOMAIN_TYPE_EXPORT">
      </member>
      <member name="image"
              value="3"
              c:identifier="OVIRT_STORAGE_DOMAIN_TYPE_IMAGE">
      </member>
    </enumeration>
    <function-macro name="VM" c:identifier="OVIRT_VM" introspectable="0">
      <source-position filename="govirt/ovirt-vm.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_CLASS"
                    c:identifier="OVIRT_VM_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_DISPLAY"
                    c:identifier="OVIRT_VM_DISPLAY"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-display.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_DISPLAY_CLASS"
                    c:identifier="OVIRT_VM_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-display.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_DISPLAY_GET_CLASS"
                    c:identifier="OVIRT_VM_DISPLAY_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-display.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_GET_CLASS"
                    c:identifier="OVIRT_VM_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_POOL"
                    c:identifier="OVIRT_VM_POOL"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-pool.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_POOL_CLASS"
                    c:identifier="OVIRT_VM_POOL_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-pool.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VM_POOL_GET_CLASS"
                    c:identifier="OVIRT_VM_POOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="govirt/ovirt-vm-pool.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Vm"
           c:symbol-prefix="vm"
           c:type="OvirtVm"
           parent="Resource"
           glib:type-name="OvirtVm"
           glib:get-type="ovirt_vm_get_type"
           glib:type-struct="VmClass">
      <source-position filename="govirt/ovirt-vm.h" line="57"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_vm_new">
        <source-position filename="govirt/ovirt-vm.h" line="80"/>
        <return-value transfer-ownership="full">
          <type name="Vm" c:type="OvirtVm*"/>
        </return-value>
      </constructor>
      <method name="get_cdroms" c:identifier="ovirt_vm_get_cdroms">
        <doc xml:space="preserve"
             filename="govirt/ovirt-vm.c"
             line="455">Gets a #OvirtCollection representing the list of remote cdroms from a
virtual machine object.  This method does not initiate any network
activity, the remote cdrom list must be then be fetched using
ovirt_collection_fetch() or ovirt_collection_fetch_async().</doc>
        <source-position filename="govirt/ovirt-vm.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-vm.c"
               line="464">a #OvirtCollection representing the list
of cdroms associated with @vm.</doc>
          <type name="Collection" c:type="OvirtCollection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-vm.c"
                 line="457">a #OvirtVm</doc>
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cluster" c:identifier="ovirt_vm_get_cluster">
        <doc xml:space="preserve"
             filename="govirt/ovirt-vm.c"
             line="502">Gets a #OvirtCluster representing the cluster the virtual machine belongs
to. This method does not initiate any network activity, the remote host must
be then be fetched using ovirt_resource_refresh() or
ovirt_resource_refresh_async().</doc>
        <source-position filename="govirt/ovirt-vm.h" line="120"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="govirt/ovirt-vm.c"
               line="511">a #OvirtCluster representing cluster the @vm
belongs to.</doc>
          <type name="Cluster" c:type="OvirtCluster*"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-vm.c"
                 line="504">a #OvirtVm</doc>
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_host" c:identifier="ovirt_vm_get_host">
        <doc xml:space="preserve"
             filename="govirt/ovirt-vm.c"
             line="482">Gets a #OvirtHost representing the host the virtual machine belongs to.
This method does not initiate any network activity, the remote host must be
then be fetched using ovirt_resource_refresh() or
ovirt_resource_refresh_async().</doc>
        <source-position filename="govirt/ovirt-vm.h" line="119"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="govirt/ovirt-vm.c"
               line="491">a #OvirtHost representing host the @vm
belongs to.</doc>
          <type name="Host" c:type="OvirtHost*"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="govirt/ovirt-vm.c"
                 line="484">a #OvirtVm</doc>
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ticket" c:identifier="ovirt_vm_get_ticket" throws="1">
        <source-position filename="govirt/ovirt-vm.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ticket_async" c:identifier="ovirt_vm_get_ticket_async">
        <source-position filename="govirt/ovirt-vm.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ticket_finish"
              c:identifier="ovirt_vm_get_ticket_finish"
              throws="1">
        <source-position filename="govirt/ovirt-vm.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_async" c:identifier="ovirt_vm_refresh_async">
        <source-position filename="govirt/ovirt-vm.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_finish"
              c:identifier="ovirt_vm_refresh_finish"
              throws="1">
        <source-position filename="govirt/ovirt-vm.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start" c:identifier="ovirt_vm_start" throws="1">
        <source-position filename="govirt/ovirt-vm.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_async" c:identifier="ovirt_vm_start_async">
        <source-position filename="govirt/ovirt-vm.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_finish"
              c:identifier="ovirt_vm_start_finish"
              throws="1">
        <source-position filename="govirt/ovirt-vm.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop" c:identifier="ovirt_vm_stop" throws="1">
        <source-position filename="govirt/ovirt-vm.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_async" c:identifier="ovirt_vm_stop_async">
        <source-position filename="govirt/ovirt-vm.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_finish"
              c:identifier="ovirt_vm_stop_finish"
              throws="1">
        <source-position filename="govirt/ovirt-vm.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm" transfer-ownership="none">
            <type name="Vm" c:type="OvirtVm*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="cluster-href"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="cluster-id"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="display" writable="1" transfer-ownership="none">
        <type name="VmDisplay"/>
      </property>
      <property name="host-href"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="host-id"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="state"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="OVIRT_VM_STATE_UNKNOWN">
        <type/>
      </property>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="VmPrivate" c:type="OvirtVmPrivate*"/>
      </field>
    </class>
    <record name="VmClass" c:type="OvirtVmClass" glib:is-gtype-struct-for="Vm">
      <source-position filename="govirt/ovirt-vm.h" line="57"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="VmDisplay"
           c:symbol-prefix="vm_display"
           c:type="OvirtVmDisplay"
           parent="GObject.Object"
           glib:type-name="OvirtVmDisplay"
           glib:get-type="ovirt_vm_display_get_type"
           glib:type-struct="VmDisplayClass">
      <source-position filename="govirt/ovirt-vm-display.h" line="55"/>
      <constructor name="new" c:identifier="ovirt_vm_display_new">
        <source-position filename="govirt/ovirt-vm-display.h" line="64"/>
        <return-value transfer-ownership="full">
          <type name="VmDisplay" c:type="OvirtVmDisplay*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="ovirt_vm_display_new_from_xml">
        <source-position filename="govirt/ovirt-vm-display.h" line="65"/>
        <return-value transfer-ownership="full">
          <type name="VmDisplay" c:type="OvirtVmDisplay*"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <type name="Rest.XmlNode" c:type="RestXmlNode*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="address"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="allow-override"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="ca-cert" writable="1" transfer-ownership="none">
        <array name="GLib.ByteArray">
          <type name="guint8" c:type="guint8"/>
        </array>
      </property>
      <property name="expiry"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="host-subject"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="monitor-count"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="port"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="proxy-url"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="secure-port"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="smartcard"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="ticket"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="type"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="OVIRT_VM_DISPLAY_INVALID">
        <type/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="VmDisplayPrivate" c:type="OvirtVmDisplayPrivate*"/>
      </field>
    </class>
    <record name="VmDisplayClass"
            c:type="OvirtVmDisplayClass"
            glib:is-gtype-struct-for="VmDisplay">
      <source-position filename="govirt/ovirt-vm-display.h" line="55"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="VmDisplayPrivate"
            c:type="OvirtVmDisplayPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-vm-display.h" line="38"/>
    </record>
    <enumeration name="VmDisplayType" c:type="OvirtVmDisplayType">
      <source-position filename="govirt/ovirt-vm-display.h" line="61"/>
      <member name="spice" value="0" c:identifier="OVIRT_VM_DISPLAY_SPICE">
      </member>
      <member name="vnc" value="1" c:identifier="OVIRT_VM_DISPLAY_VNC">
      </member>
      <member name="invalid" value="2" c:identifier="OVIRT_VM_DISPLAY_INVALID">
      </member>
    </enumeration>
    <class name="VmPool"
           c:symbol-prefix="vm_pool"
           c:type="OvirtVmPool"
           parent="Resource"
           glib:type-name="OvirtVmPool"
           glib:get-type="ovirt_vm_pool_get_type"
           glib:type-struct="VmPoolClass">
      <source-position filename="govirt/ovirt-vm-pool.h" line="55"/>
      <implements name="Gio.Initable"/>
      <constructor name="new" c:identifier="ovirt_vm_pool_new">
        <source-position filename="govirt/ovirt-vm-pool.h" line="58"/>
        <return-value transfer-ownership="full">
          <type name="VmPool" c:type="OvirtVmPool*"/>
        </return-value>
      </constructor>
      <method name="allocate_vm"
              c:identifier="ovirt_vm_pool_allocate_vm"
              throws="1">
        <source-position filename="govirt/ovirt-vm-pool.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm_pool" transfer-ownership="none">
            <type name="VmPool" c:type="OvirtVmPool*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
        </parameters>
      </method>
      <method name="allocate_vm_async"
              c:identifier="ovirt_vm_pool_allocate_vm_async">
        <source-position filename="govirt/ovirt-vm-pool.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm_pool" transfer-ownership="none">
            <type name="VmPool" c:type="OvirtVmPool*"/>
          </instance-parameter>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Proxy" c:type="OvirtProxy*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="allocate_vm_finish"
              c:identifier="ovirt_vm_pool_allocate_vm_finish"
              throws="1">
        <source-position filename="govirt/ovirt-vm-pool.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="vm_pool" transfer-ownership="none">
            <type name="VmPool" c:type="OvirtVmPool*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="max-user-vms"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="prestarted-vms"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="size"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="Resource" c:type="OvirtResource"/>
      </field>
      <field name="priv">
        <type name="VmPoolPrivate" c:type="OvirtVmPoolPrivate*"/>
      </field>
    </class>
    <record name="VmPoolClass"
            c:type="OvirtVmPoolClass"
            glib:is-gtype-struct-for="VmPool">
      <source-position filename="govirt/ovirt-vm-pool.h" line="55"/>
      <field name="parent_class">
        <type name="ResourceClass" c:type="OvirtResourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="VmPoolPrivate"
            c:type="OvirtVmPoolPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="govirt/ovirt-vm-pool.h" line="38"/>
    </record>
    <record name="VmPrivate" c:type="OvirtVmPrivate" disguised="1" opaque="1">
      <source-position filename="govirt/ovirt-vm.h" line="40"/>
    </record>
    <enumeration name="VmState" c:type="OvirtVmState">
      <source-position filename="govirt/ovirt-vm.h" line="77"/>
      <member name="down" value="0" c:identifier="OVIRT_VM_STATE_DOWN">
      </member>
      <member name="up" value="1" c:identifier="OVIRT_VM_STATE_UP">
      </member>
      <member name="rebooting"
              value="2"
              c:identifier="OVIRT_VM_STATE_REBOOTING">
      </member>
      <member name="powering_up"
              value="3"
              c:identifier="OVIRT_VM_STATE_POWERING_UP">
      </member>
      <member name="powered_down"
              value="4"
              c:identifier="OVIRT_VM_STATE_POWERED_DOWN">
      </member>
      <member name="paused" value="5" c:identifier="OVIRT_VM_STATE_PAUSED">
      </member>
      <member name="migrating"
              value="6"
              c:identifier="OVIRT_VM_STATE_MIGRATING">
      </member>
      <member name="unknown" value="7" c:identifier="OVIRT_VM_STATE_UNKNOWN">
      </member>
      <member name="not_responding"
              value="8"
              c:identifier="OVIRT_VM_STATE_NOT_RESPONDING">
      </member>
      <member name="wait_for_launch"
              value="9"
              c:identifier="OVIRT_VM_STATE_WAIT_FOR_LAUNCH">
      </member>
      <member name="reboot_in_progress"
              value="10"
              c:identifier="OVIRT_VM_STATE_REBOOT_IN_PROGRESS">
      </member>
      <member name="saving_state"
              value="11"
              c:identifier="OVIRT_VM_STATE_SAVING_STATE">
      </member>
      <member name="restoring_state"
              value="12"
              c:identifier="OVIRT_VM_STATE_RESTORING_STATE">
      </member>
      <member name="suspended"
              value="13"
              c:identifier="OVIRT_VM_STATE_SUSPENDED">
      </member>
      <member name="image_locked"
              value="14"
              c:identifier="OVIRT_VM_STATE_IMAGE_LOCKED">
      </member>
      <member name="powering_down"
              value="15"
              c:identifier="OVIRT_VM_STATE_POWERING_DOWN">
      </member>
    </enumeration>
    <function name="error_quark" c:identifier="ovirt_error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="get_option_group"
              c:identifier="ovirt_get_option_group"
              introspectable="0">
      <source-position filename="govirt/ovirt-options.h" line="26"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="govirt/ovirt-options.c"
             line="43">a #GOptionGroup for the commandline
arguments specific to libgovirt.  You have to call
ovirt_set_proxy_options() after to set the options on a
#OvirtProxy.</doc>
        <type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
      </return-value>
    </function>
    <function name="rest_call_error_quark"
              c:identifier="ovirt_rest_call_error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="set_proxy_options" c:identifier="ovirt_set_proxy_options">
      <doc xml:space="preserve"
           filename="govirt/ovirt-options.c"
           line="97">Set various properties on @proxy, according to the commandline
arguments given to ovirt_get_option_group() option group.</doc>
      <source-position filename="govirt/ovirt-options.h" line="27"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="govirt/ovirt-options.c"
               line="99">a #OvirtProxy to set options upon</doc>
          <type name="Proxy" c:type="OvirtProxy*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
