<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Clutter" version="1.0"/>
  <include name="Gdk" version="3.0"/>
  <package name="clutter-gdk-1.0"/>
  <c:include name="clutter/gdk/clutter-gdk.h"/>
  <namespace name="ClutterGdk"
             version="1.0"
             shared-library="libclutter-1.0.so.0"
             c:identifier-prefixes="ClutterGdk"
             c:symbol-prefixes="clutter_gdk">
    <docsection name="clutter-gdk">
      <doc xml:space="preserve"
           filename="clutter-gdk.h"
           line="26">The GDK backend for Clutter provides some specific API, allowing
integration with the GDK API for manipulating the stage window and
handling events outside of Clutter.</doc>
    </docsection>
    <function name="disable_event_retrieval"
              c:identifier="clutter_gdk_disable_event_retrieval"
              version="1.10">
      <doc xml:space="preserve"
           filename="clutter-backend-gdk.c"
           line="461">Disable the event retrieval in Clutter.

Callers of this function have to set up an event filter using the
GDK API, and call clutter_gdk_handle_event().

This function should only be used when embedding Clutter into
a GDK based toolkit.</doc>
      <source-position filename="clutter-gdk.h" line="62"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="get_default_display"
              c:identifier="clutter_gdk_get_default_display"
              version="0.6">
      <doc xml:space="preserve"
           filename="clutter-backend-gdk.c"
           line="404">Retrieves the pointer to the default display.</doc>
      <source-position filename="clutter-gdk.h" line="45"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="clutter-backend-gdk.c"
             line="409">the default display</doc>
        <type name="Gdk.Display" c:type="GdkDisplay*"/>
      </return-value>
    </function>
    <function name="get_stage_from_window"
              c:identifier="clutter_gdk_get_stage_from_window"
              version="1.10">
      <doc xml:space="preserve"
           filename="clutter-stage-gdk.c"
           line="813">Gets the stage for a particular X window.</doc>
      <source-position filename="clutter-gdk.h" line="59"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="clutter-stage-gdk.c"
             line="819">A #ClutterStage, or% NULL if a stage
  does not exist for the window</doc>
        <type name="Clutter.Stage" c:type="ClutterStage*"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="clutter-stage-gdk.c"
               line="815">a #GtkWindow</doc>
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_stage_window"
              c:identifier="clutter_gdk_get_stage_window"
              version="1.10">
      <doc xml:space="preserve"
           filename="clutter-stage-gdk.c"
           line="786">Gets the stages GdkWindow.</doc>
      <source-position filename="clutter-gdk.h" line="50"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="clutter-stage-gdk.c"
             line="792">A GdkWindow* for the stage window.</doc>
        <type name="Gdk.Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="stage" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="clutter-stage-gdk.c"
               line="788">a #ClutterStage</doc>
          <type name="Clutter.Stage" c:type="ClutterStage*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_visual"
              c:identifier="clutter_gdk_get_visual"
              version="1.22">
      <doc xml:space="preserve"
           filename="clutter-backend-gdk.c"
           line="487">Retrieves the #GdkVisual used by Clutter.

This function should be used when embedding Clutter inside GDK-based
foreign toolkits, to ensure that the visual applied to the #GdkWindow
used to render the #ClutterStage is the correct one.</doc>
      <source-position filename="clutter-gdk.h" line="65"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="clutter-backend-gdk.c"
             line="496">a #GdkVisual instance</doc>
        <type name="Gdk.Visual" c:type="GdkVisual*"/>
      </return-value>
    </function>
    <function name="handle_event" c:identifier="clutter_gdk_handle_event">
      <doc xml:space="preserve"
           filename="clutter-event-gdk.c"
           line="48">This function processes a single GDK event; it can be used to hook
into external event processing</doc>
      <source-position filename="clutter-gdk.h" line="56"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="clutter-event-gdk.c"
             line="55">#GdkFilterReturn. %GDK_FILTER_REMOVE indicates that
 Clutter has internally handled the event and the caller should do
 no further processing. %GDK_FILTER_CONTINUE indicates that Clutter
 is either not interested in the event, or has used the event to
 update internal state without taking any exclusive action.
 %GDK_FILTER_TRANSLATE will not occur.</doc>
        <type name="Gdk.FilterReturn" c:type="GdkFilterReturn"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="clutter-event-gdk.c"
               line="50">a #GdkEvent</doc>
          <type name="Gdk.Event" c:type="GdkEvent*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_display"
              c:identifier="clutter_gdk_set_display"
              version="0.8">
      <doc xml:space="preserve"
           filename="clutter-backend-gdk.c"
           line="433">Sets the display connection Clutter should use; must be called
before clutter_init(), clutter_init_with_args() or other functions
pertaining Clutter's initialization process.

If you are parsing the command line arguments by retrieving Clutter's
#GOptionGroup with clutter_get_option_group() and calling
g_option_context_parse() yourself, you should also call
clutter_gdk_set_display() before g_option_context_parse().</doc>
      <source-position filename="clutter-gdk.h" line="47"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="clutter-backend-gdk.c"
               line="435">pointer to a GDK display connection.</doc>
          <type name="Gdk.Display" c:type="GdkDisplay*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_stage_foreign"
              c:identifier="clutter_gdk_set_stage_foreign"
              version="1.10">
      <doc xml:space="preserve"
           filename="clutter-stage-gdk.c"
           line="858">Target the #ClutterStage to use an existing external #GdkWindow</doc>
      <source-position filename="clutter-gdk.h" line="52"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="clutter-stage-gdk.c"
             line="865">%TRUE if foreign window is valid</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stage" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="clutter-stage-gdk.c"
               line="860">a #ClutterStage</doc>
          <type name="Clutter.Stage" c:type="ClutterStage*"/>
        </parameter>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="clutter-stage-gdk.c"
               line="861">an existing #GdkWindow</doc>
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
