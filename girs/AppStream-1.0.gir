<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="appstream"/>
  <c:include name="appstream.h"/>
  <namespace name="AppStream"
             version="1.0"
             shared-library="libappstream.so.5"
             c:identifier-prefixes="As"
             c:symbol-prefixes="as">
    <class name="Agreement"
           c:symbol-prefix="agreement"
           c:type="AsAgreement"
           parent="GObject.Object"
           glib:type-name="AsAgreement"
           glib:get-type="as_agreement_get_type"
           glib:type-struct="AgreementClass">
      <source-position filename="src/as-agreement.h" line="50"/>
      <constructor name="new" c:identifier="as_agreement_new" version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="430">Creates a new #AsAgreement.</doc>
        <source-position filename="src/as-agreement.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="435">a #AsAgreement</doc>
          <type name="Agreement" c:type="AsAgreement*"/>
        </return-value>
      </constructor>
      <method name="add_section" c:identifier="as_agreement_add_section">
        <source-position filename="src/as-agreement.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement" transfer-ownership="none">
            <type name="Agreement" c:type="AsAgreement*"/>
          </instance-parameter>
          <parameter name="agreement_section" transfer-ownership="none">
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="as_agreement_get_kind"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="126">Gets the agreement kind.</doc>
        <source-position filename="src/as-agreement.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="132">a string, e.g. %AS_AGREEMENT_KIND_EULA</doc>
          <type name="AgreementKind" c:type="AsAgreementKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="128">a #AsAgreement instance.</doc>
            <type name="Agreement" c:type="AsAgreement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_section_default"
              c:identifier="as_agreement_get_section_default"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="209">Gets the first section in the agreement.</doc>
        <source-position filename="src/as-agreement.h" line="83"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="215">agreement section, or %NULL</doc>
          <type name="AgreementSection" c:type="AsAgreementSection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="211">a #AsAgreement instance.</doc>
            <type name="Agreement" c:type="AsAgreement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sections"
              c:identifier="as_agreement_get_sections"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="192">Gets all the sections in the agreement.</doc>
        <source-position filename="src/as-agreement.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="198">array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="AgreementSection"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="agreement" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="194">a #AsAgreement instance.</doc>
            <type name="Agreement" c:type="AsAgreement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_id"
              c:identifier="as_agreement_get_version_id"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="159">Gets the agreement version_id.</doc>
        <source-position filename="src/as-agreement.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="165">a string, e.g. "1.4a", or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="161">a #AsAgreement instance.</doc>
            <type name="Agreement" c:type="AsAgreement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="as_agreement_set_kind"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="143">Sets the agreement kind.</doc>
        <source-position filename="src/as-agreement.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="145">a #AsAgreement instance.</doc>
            <type name="Agreement" c:type="AsAgreement*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="146">the agreement kind, e.g. %AS_AGREEMENT_KIND_EULA</doc>
            <type name="AgreementKind" c:type="AsAgreementKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_id"
              c:identifier="as_agreement_set_version_id"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="176">Sets the agreement version identifier.</doc>
        <source-position filename="src/as-agreement.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="178">a #AsAgreement instance.</doc>
            <type name="Agreement" c:type="AsAgreement*"/>
          </instance-parameter>
          <parameter name="version_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="179">the agreement version ID, e.g. "1.4a"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="AgreementClass"
            c:type="AsAgreementClass"
            glib:is-gtype-struct-for="Agreement">
      <source-position filename="src/as-agreement.h" line="50"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-agreement.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-agreement.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-agreement.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-agreement.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-agreement.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-agreement.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved7" introspectable="0">
        <callback name="_as_reserved7">
          <source-position filename="src/as-agreement.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved8" introspectable="0">
        <callback name="_as_reserved8">
          <source-position filename="src/as-agreement.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="AgreementKind"
                 glib:type-name="AsAgreementKind"
                 glib:get-type="as_agreement_kind_get_type"
                 c:type="AsAgreementKind">
      <doc xml:space="preserve"
           filename="src/as-agreement.h"
           line="52">The kind of the agreement.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_AGREEMENT_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_AGREEMENT_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-agreement.h"
             line="54">Unknown value</doc>
      </member>
      <member name="generic"
              value="1"
              c:identifier="AS_AGREEMENT_KIND_GENERIC"
              glib:nick="generic"
              glib:name="AS_AGREEMENT_KIND_GENERIC">
        <doc xml:space="preserve"
             filename="src/as-agreement.h"
             line="55">A generic agreement without a specific type</doc>
      </member>
      <member name="eula"
              value="2"
              c:identifier="AS_AGREEMENT_KIND_EULA"
              glib:nick="eula"
              glib:name="AS_AGREEMENT_KIND_EULA">
        <doc xml:space="preserve"
             filename="src/as-agreement.h"
             line="56">An End User License Agreement</doc>
      </member>
      <member name="privacy"
              value="3"
              c:identifier="AS_AGREEMENT_KIND_PRIVACY"
              glib:nick="privacy"
              glib:name="AS_AGREEMENT_KIND_PRIVACY">
        <doc xml:space="preserve"
             filename="src/as-agreement.h"
             line="57">A privacy agreement, typically a GDPR statement</doc>
      </member>
      <function name="from_string"
                c:identifier="as_agreement_kind_from_string"
                version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="102">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-agreement.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="108">a #AsAgreementKind or %AS_AGREEMENT_KIND_UNKNOWN for unknown</doc>
          <type name="AgreementKind" c:type="AsAgreementKind"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="104">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_agreement_kind_to_string"
                version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="80">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-agreement.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="86">string version of @value</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement.c"
                 line="82">the #AsAgreementKind.</doc>
            <type name="AgreementKind" c:type="AsAgreementKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="AgreementSection"
           c:symbol-prefix="agreement_section"
           c:type="AsAgreementSection"
           parent="GObject.Object"
           glib:type-name="AsAgreementSection"
           glib:get-type="as_agreement_section_get_type"
           glib:type-struct="AgreementSectionClass">
      <source-position filename="src/as-agreement-section.h" line="48"/>
      <constructor name="new"
                   c:identifier="as_agreement_section_new"
                   version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="433">Creates a new #AsAgreementSection.</doc>
        <source-position filename="src/as-agreement-section.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-agreement-section.c"
               line="438">a #AsAgreementSection</doc>
          <type name="AgreementSection" c:type="AsAgreementSection*"/>
        </return-value>
      </constructor>
      <method name="get_active_locale"
              c:identifier="as_agreement_section_get_active_locale">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="241">Get the current active locale, which
is used to get localized messages.</doc>
        <source-position filename="src/as-agreement-section.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="as_agreement_section_get_description"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="164">Gets the agreement section desc.</doc>
        <source-position filename="src/as-agreement-section.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement-section.c"
               line="170">a string, e.g. "GDPR", or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="166">a #AsAgreementSection instance.</doc>
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="as_agreement_section_get_kind"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="88">Gets the agreement section kind.</doc>
        <source-position filename="src/as-agreement-section.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement-section.c"
               line="94">a string, e.g. "GDPR", or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="90">a #AsAgreementSection instance.</doc>
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="as_agreement_section_get_name"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="123">Gets the agreement section name.</doc>
        <source-position filename="src/as-agreement-section.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement-section.c"
               line="129">a string, e.g. "GDPR", or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="125">a #AsAgreementSection instance.</doc>
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active_locale"
              c:identifier="as_agreement_section_set_active_locale">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="266">Set the current active locale, which
is used to get localized messages.</doc>
        <source-position filename="src/as-agreement-section.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="268">an #AsAgreement</doc>
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="269">a POSIX or BCP47 locale, or %NULL. e.g. "de_DE"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="as_agreement_section_set_description"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="184">Sets the agreement section desc.</doc>
        <source-position filename="src/as-agreement-section.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="186">a #AsAgreementSection instance.</doc>
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
          <parameter name="desc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="188">the agreement description, e.g. "GDPR"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="187">the locale in BCP47 format. e.g. "en-GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="as_agreement_section_set_kind"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="105">Sets the agreement section kind.</doc>
        <source-position filename="src/as-agreement-section.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="107">a #AsAgreementSection instance.</doc>
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="108">the agreement kind, e.g. "GDPR"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="as_agreement_section_set_name"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-agreement-section.c"
             line="143">Sets the agreement section name.</doc>
        <source-position filename="src/as-agreement-section.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="agreement_section"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="145">a #AsAgreementSection instance.</doc>
            <type name="AgreementSection" c:type="AsAgreementSection*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="146">the agreement name, e.g. "GDPR"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-agreement-section.c"
                 line="147">the locale. e.g. "en_GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="AgreementSectionClass"
            c:type="AsAgreementSectionClass"
            glib:is-gtype-struct-for="AgreementSection">
      <source-position filename="src/as-agreement-section.h" line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-agreement-section.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-agreement-section.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-agreement-section.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-agreement-section.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-agreement-section.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-agreement-section.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved7" introspectable="0">
        <callback name="_as_reserved7">
          <source-position filename="src/as-agreement-section.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved8" introspectable="0">
        <callback name="_as_reserved8">
          <source-position filename="src/as-agreement-section.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="Artifact"
           c:symbol-prefix="artifact"
           c:type="AsArtifact"
           parent="GObject.Object"
           glib:type-name="AsArtifact"
           glib:get-type="as_artifact_get_type"
           glib:type-struct="ArtifactClass">
      <source-position filename="src/as-artifact.h" line="47"/>
      <constructor name="new" c:identifier="as_artifact_new">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="655">Creates a new #AsArtifact.</doc>
        <source-position filename="src/as-artifact.h" line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="660">a #AsArtifact</doc>
          <type name="Artifact" c:type="AsArtifact*"/>
        </return-value>
      </constructor>
      <method name="add_checksum" c:identifier="as_artifact_add_checksum">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="254">Add a checksum for the file associated with this artifact.</doc>
        <source-position filename="src/as-artifact.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="256">An instance of #AsArtifact.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="cs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="257">The #AsChecksum.</doc>
            <type name="Checksum" c:type="AsChecksum*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_location" c:identifier="as_artifact_add_location">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="205">Adds a artifact location.</doc>
        <source-position filename="src/as-artifact.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="207">An URL of the download location</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bundle_kind"
              c:identifier="as_artifact_get_bundle_kind">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="332">Gets the bundle kind of this artifact.</doc>
        <source-position filename="src/as-artifact.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="338">the #AsBundleKind</doc>
          <type name="BundleKind" c:type="AsBundleKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="334">an #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_checksum" c:identifier="as_artifact_get_checksum">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="232">Gets the artifact checksum</doc>
        <source-position filename="src/as-artifact.h" line="100"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="238">an #AsChecksum, or %NULL for not set or invalid</doc>
          <type name="Checksum" c:type="AsChecksum*"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="234">a #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <type name="ChecksumKind" c:type="AsChecksumKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_checksums" c:identifier="as_artifact_get_checksums">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="218">Get a list of all checksums we have for this artifact.</doc>
        <source-position filename="src/as-artifact.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="223">an array of #AsChecksum objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Checksum"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename" c:identifier="as_artifact_get_filename">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="361">Gets a suggested filename for the downloaded artifact,
or %NULL if none is suggested.</doc>
        <source-position filename="src/as-artifact.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="368">The platform triplet or identifier string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="363">a #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_artifact_get_kind">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="175">Gets the artifact kind.</doc>
        <source-position filename="src/as-artifact.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="181">the #AsArtifactKind</doc>
          <type name="ArtifactKind" c:type="AsArtifactKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="177">a #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locations" c:identifier="as_artifact_get_locations">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="191">Gets the artifact locations, typically URLs.</doc>
        <source-position filename="src/as-artifact.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="196">list of locations</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_platform" c:identifier="as_artifact_get_platform">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="303">Gets the artifact platform string (e.g. a triplet like "x86_64-linux-gnu").</doc>
        <source-position filename="src/as-artifact.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="309">The platform triplet or identifier string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="305">a #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="as_artifact_get_size">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="268">Gets the artifact size.</doc>
        <source-position filename="src/as-artifact.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="275">The size of the given kind of this artifact.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="270">a #AsArtifact instance</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="271">a #AsSizeKind</doc>
            <type name="SizeKind" c:type="AsSizeKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bundle_kind"
              c:identifier="as_artifact_set_bundle_kind">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="347">Sets the bundle kind for this release artifact.</doc>
        <source-position filename="src/as-artifact.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="349">an #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="350">the #AsBundleKind, e.g. %AS_BUNDLE_KIND_TARBALL.</doc>
            <type name="BundleKind" c:type="AsBundleKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_filename" c:identifier="as_artifact_set_filename">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="377">Sets a suggested filename for this artifact after it has been downloaded.</doc>
        <source-position filename="src/as-artifact.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="379">a #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="380">the file name suggestion.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_artifact_set_kind">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="160">Sets the artifact kind.</doc>
        <source-position filename="src/as-artifact.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="162">a #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="163">the #AsArtifactKind, e.g. %AS_ARTIFACT_KIND_SOURCE.</doc>
            <type name="ArtifactKind" c:type="AsArtifactKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_platform" c:identifier="as_artifact_set_platform">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="318">Sets the artifact platform triplet or identifier string.</doc>
        <source-position filename="src/as-artifact.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="320">a #AsArtifact instance.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="321">the platform triplet.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="as_artifact_set_size">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="285">Sets the artifact size for the given kind.</doc>
        <source-position filename="src/as-artifact.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="287">a #AsArtifact instance</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="288">a size in bytes, or 0 for unknown</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="289">a #AsSizeKind</doc>
            <type name="SizeKind" c:type="AsSizeKind"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ArtifactClass"
            c:type="AsArtifactClass"
            glib:is-gtype-struct-for="Artifact">
      <source-position filename="src/as-artifact.h" line="47"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-artifact.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-artifact.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-artifact.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-artifact.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-artifact.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-artifact.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ArtifactKind"
                 glib:type-name="AsArtifactKind"
                 glib:get-type="as_artifact_kind_get_type"
                 c:type="AsArtifactKind">
      <doc xml:space="preserve"
           filename="src/as-artifact.h"
           line="70">The artifact type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_ARTIFACT_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_ARTIFACT_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-artifact.h"
             line="72">Type invalid or not known</doc>
      </member>
      <member name="source"
              value="1"
              c:identifier="AS_ARTIFACT_KIND_SOURCE"
              glib:nick="source"
              glib:name="AS_ARTIFACT_KIND_SOURCE">
        <doc xml:space="preserve"
             filename="src/as-artifact.h"
             line="73">The artifact describes software sources.</doc>
      </member>
      <member name="binary"
              value="2"
              c:identifier="AS_ARTIFACT_KIND_BINARY"
              glib:nick="binary"
              glib:name="AS_ARTIFACT_KIND_BINARY">
        <doc xml:space="preserve"
             filename="src/as-artifact.h"
             line="74">The artifact describes a binary distribution of the component.</doc>
      </member>
      <function name="from_string" c:identifier="as_artifact_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="89">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-artifact.h" line="86"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="95">a #AsArtifactKind, or %AS_ARTIFACT_KIND_UNKNOWN for unknown.</doc>
          <type name="ArtifactKind" c:type="AsArtifactKind"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="91">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_artifact_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="108">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-artifact.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="114">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="110">the #AsArtifactKind.</doc>
            <type name="ArtifactKind" c:type="AsArtifactKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Branding"
           c:symbol-prefix="branding"
           c:type="AsBranding"
           parent="GObject.Object"
           glib:type-name="AsBranding"
           glib:get-type="as_branding_get_type"
           glib:type-struct="BrandingClass">
      <source-position filename="src/as-branding.h" line="45"/>
      <constructor name="new" c:identifier="as_branding_new" version="0.10">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="543">Creates a new #AsBranding.</doc>
        <source-position filename="src/as-branding.h" line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="548">a #AsBranding</doc>
          <type name="Branding" c:type="AsBranding*"/>
        </return-value>
      </constructor>
      <method name="get_color"
              c:identifier="as_branding_get_color"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="331">Retrieve a color of the given @kind that matches @scheme_kind.
If a color has no scheme preference defined, it will be returned for either scheme type,
unless a more suitable color was found.</doc>
        <source-position filename="src/as-branding.h" line="111"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="341">The HTML color code of the found color, or %NULL if no color was found.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="branding" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="333">an #AsBranding instance.</doc>
            <type name="Branding" c:type="AsBranding*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="334">the #AsColorKind, e.g. %AS_COLOR_KIND_PRIMARY.</doc>
            <type name="ColorKind" c:type="AsColorKind"/>
          </parameter>
          <parameter name="scheme_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="335">Color scheme preference for the color, e.g. %AS_COLOR_SCHEME_KIND_LIGHT</doc>
            <type name="ColorSchemeKind" c:type="AsColorSchemeKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_color"
              c:identifier="as_branding_remove_color"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="228">Deletes a color that matches the given type and scheme preference.</doc>
        <source-position filename="src/as-branding.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="branding" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="230">an #AsBranding instance.</doc>
            <type name="Branding" c:type="AsBranding*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="231">the #AsColorKind, e.g. %AS_COLOR_KIND_PRIMARY.</doc>
            <type name="ColorKind" c:type="AsColorKind"/>
          </parameter>
          <parameter name="scheme_preference" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="232">Type of color scheme preferred for this color, e.g. %AS_COLOR_SCHEME_KIND_LIGHT</doc>
            <type name="ColorSchemeKind" c:type="AsColorSchemeKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="as_branding_set_color"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="192">Sets a new accent color. If a color of the given kind with the given scheme preference already exists,
it will be overriden with the new color code.</doc>
        <source-position filename="src/as-branding.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="branding" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="194">an #AsBranding instance.</doc>
            <type name="Branding" c:type="AsBranding*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="195">the #AsColorKind, e.g. %AS_COLOR_KIND_PRIMARY.</doc>
            <type name="ColorKind" c:type="AsColorKind"/>
          </parameter>
          <parameter name="scheme_preference" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="196">Type of color scheme preferred for this color, e.g. %AS_COLOR_SCHEME_KIND_LIGHT</doc>
            <type name="ColorSchemeKind" c:type="AsColorSchemeKind"/>
          </parameter>
          <parameter name="colorcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="197">a HTML color code.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="BrandingClass"
            c:type="AsBrandingClass"
            glib:is-gtype-struct-for="Branding">
      <source-position filename="src/as-branding.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-branding.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-branding.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-branding.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-branding.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-branding.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-branding.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BrandingColorIter" c:type="AsBrandingColorIter">
      <doc xml:space="preserve"
           filename="src/as-branding.c"
           line="44">A #AsBrandingColorIter structure represents an iterator that can be used
to iterate over the accent colors of an #AsBranding object.
#AsBrandingColorIter structures are typically allocated on the stack and
then initialized with as_branding_color_iter_init().</doc>
      <source-position filename="src/as-branding.h" line="56"/>
      <field name="dummy1" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="dummy2" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="dummy3" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="dummy4" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="dummy5" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="dummy6" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <method name="init" c:identifier="as_branding_color_iter_init">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="255">Initializes a color iterator for the accent color list and associates it
it with @branding.
The #AsBrandingColorIter structure is typically allocated on the stack
and does not need to be freed explicitly.</doc>
        <source-position filename="src/as-branding.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="257">an uninitialized #AsBrandingColorIter</doc>
            <type name="BrandingColorIter" c:type="AsBrandingColorIter*"/>
          </instance-parameter>
          <parameter name="branding" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="258">an #AsBranding</doc>
            <type name="Branding" c:type="AsBranding*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next" c:identifier="as_branding_color_iter_next">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="277">Returns the current color entry and advances the iterator.
Example:
|[&lt;!-- language="C" --&gt;
AsBrandingColorIter iter;
AsColorKind ckind;
AsColorSchemeKind scheme_preference;
const gchar *color_value;

as_branding_color_iter_init (&amp;iter, branding);
while (as_branding_color_iter_next (&amp;iter, &amp;ckind, &amp;scheme_preference, &amp;color_value)) {
    // do something with the color data
}
]|</doc>
        <source-position filename="src/as-branding.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="298">%FALSE if the last entry has been reached.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="279">an initialized #AsBrandingColorIter</doc>
            <type name="BrandingColorIter" c:type="AsBrandingColorIter*"/>
          </instance-parameter>
          <parameter name="kind"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="280">Destination of the returned color kind.</doc>
            <type name="ColorKind" c:type="AsColorKind*"/>
          </parameter>
          <parameter name="scheme_preference"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="281">Destination of the returned color's scheme preference.</doc>
            <type name="ColorSchemeKind" c:type="AsColorSchemeKind*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="282">Destination of the returned color code.</doc>
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="Bundle"
           c:symbol-prefix="bundle"
           c:type="AsBundle"
           parent="GObject.Object"
           glib:type-name="AsBundle"
           glib:get-type="as_bundle_get_type"
           glib:type-struct="BundleClass">
      <source-position filename="src/as-bundle.h" line="45"/>
      <constructor name="new" c:identifier="as_bundle_new" version="0.10">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="305">Creates a new #AsBundle.</doc>
        <source-position filename="src/as-bundle.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-bundle.c"
               line="310">a #AsBundle</doc>
          <type name="Bundle" c:type="AsBundle*"/>
        </return-value>
      </constructor>
      <method name="get_id" c:identifier="as_bundle_get_id" version="0.10">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="126">Gets the ID for this bundle.</doc>
        <source-position filename="src/as-bundle.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-bundle.c"
               line="132">ID, e.g. "foobar-1.0.2"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="bundle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="128">an #AsBundle instance.</doc>
            <type name="Bundle" c:type="AsBundle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_bundle_get_kind" version="0.10">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="160">Gets the bundle kind.</doc>
        <source-position filename="src/as-bundle.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-bundle.c"
               line="166">the #AsBundleKind</doc>
          <type name="BundleKind" c:type="AsBundleKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="bundle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="162">an #AsBundle instance.</doc>
            <type name="Bundle" c:type="AsBundle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_id" c:identifier="as_bundle_set_id" version="0.10">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="143">Sets the ID for this bundle.</doc>
        <source-position filename="src/as-bundle.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="bundle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="145">an #AsBundle instance.</doc>
            <type name="Bundle" c:type="AsBundle*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="146">the URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_bundle_set_kind" version="0.10">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="177">Sets the bundle kind.</doc>
        <source-position filename="src/as-bundle.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="bundle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="179">an #AsBundle instance.</doc>
            <type name="Bundle" c:type="AsBundle*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="180">the #AsBundleKind, e.g. %AS_BUNDLE_KIND_LIMBA.</doc>
            <type name="BundleKind" c:type="AsBundleKind"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="BundleClass"
            c:type="AsBundleClass"
            glib:is-gtype-struct-for="Bundle">
      <source-position filename="src/as-bundle.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-bundle.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-bundle.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-bundle.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-bundle.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-bundle.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-bundle.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="BundleKind"
                 glib:type-name="AsBundleKind"
                 glib:get-type="as_bundle_kind_get_type"
                 c:type="AsBundleKind">
      <doc xml:space="preserve"
           filename="src/as-bundle.h"
           line="47">The bundle type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_BUNDLE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_BUNDLE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="49">Type invalid or not known</doc>
      </member>
      <member name="package"
              value="1"
              c:identifier="AS_BUNDLE_KIND_PACKAGE"
              glib:nick="package"
              glib:name="AS_BUNDLE_KIND_PACKAGE">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="50">A native package (currently not used)</doc>
      </member>
      <member name="limba"
              value="2"
              c:identifier="AS_BUNDLE_KIND_LIMBA"
              glib:nick="limba"
              glib:name="AS_BUNDLE_KIND_LIMBA">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="51">A Limba bundle</doc>
      </member>
      <member name="flatpak"
              value="3"
              c:identifier="AS_BUNDLE_KIND_FLATPAK"
              glib:nick="flatpak"
              glib:name="AS_BUNDLE_KIND_FLATPAK">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="52">A Flatpak bundle</doc>
      </member>
      <member name="appimage"
              value="4"
              c:identifier="AS_BUNDLE_KIND_APPIMAGE"
              glib:nick="appimage"
              glib:name="AS_BUNDLE_KIND_APPIMAGE">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="53">An AppImageKit bundle</doc>
      </member>
      <member name="snap"
              value="5"
              c:identifier="AS_BUNDLE_KIND_SNAP"
              glib:nick="snap"
              glib:name="AS_BUNDLE_KIND_SNAP">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="54">A Snap/Snappy bundle</doc>
      </member>
      <member name="tarball"
              value="6"
              c:identifier="AS_BUNDLE_KIND_TARBALL"
              glib:nick="tarball"
              glib:name="AS_BUNDLE_KIND_TARBALL">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="55">A (maybe compressed) tarball.</doc>
      </member>
      <member name="cabinet"
              value="7"
              c:identifier="AS_BUNDLE_KIND_CABINET"
              glib:nick="cabinet"
              glib:name="AS_BUNDLE_KIND_CABINET">
        <doc xml:space="preserve"
             filename="src/as-bundle.h"
             line="56">Cabinet firmware deployment</doc>
      </member>
      <function name="from_string" c:identifier="as_bundle_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="75">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-bundle.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-bundle.c"
               line="81">a #AsBundleKind or %AS_BUNDLE_KIND_UNKNOWN for unknown</doc>
          <type name="BundleKind" c:type="AsBundleKind"/>
        </return-value>
        <parameters>
          <parameter name="bundle_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="77">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_bundle_kind_to_string"
                version="0.8.0">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="45">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-bundle.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-bundle.c"
               line="51">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-bundle.c"
                 line="47">the %AsBundleKind.</doc>
            <type name="BundleKind" c:type="AsBundleKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <function-macro name="CHECK_VERSION"
                    c:identifier="AS_CHECK_VERSION"
                    introspectable="0">
      <source-position filename="src/as-version.h" line="41"/>
      <parameters>
        <parameter name="major">
        </parameter>
        <parameter name="minor">
        </parameter>
        <parameter name="micro">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="CacheFlags"
              glib:type-name="AsCacheFlags"
              glib:get-type="as_cache_flags_get_type"
              c:type="AsCacheFlags">
      <doc xml:space="preserve"
           filename="src/as-pool.h"
           line="76">Flags on how caching should be used.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_CACHE_FLAG_NONE"
              glib:nick="none"
              glib:name="AS_CACHE_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="78">No flags.</doc>
      </member>
      <member name="use_user"
              value="1"
              c:identifier="AS_CACHE_FLAG_USE_USER"
              glib:nick="use-user"
              glib:name="AS_CACHE_FLAG_USE_USER">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="79">Create an user-specific metadata cache.</doc>
      </member>
      <member name="use_system"
              value="2"
              c:identifier="AS_CACHE_FLAG_USE_SYSTEM"
              glib:nick="use-system"
              glib:name="AS_CACHE_FLAG_USE_SYSTEM">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="80">Use and - if possible - update the system metadata cache.</doc>
      </member>
      <member name="no_clear"
              value="4"
              c:identifier="AS_CACHE_FLAG_NO_CLEAR"
              glib:nick="no-clear"
              glib:name="AS_CACHE_FLAG_NO_CLEAR">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="81">Don't clear the cache when opening it.</doc>
      </member>
      <member name="refresh_system"
              value="8"
              c:identifier="AS_CACHE_FLAG_REFRESH_SYSTEM"
              glib:nick="refresh-system"
              glib:name="AS_CACHE_FLAG_REFRESH_SYSTEM">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="82">Refresh the system cache that is shared between applications.</doc>
      </member>
    </bitfield>
    <class name="Category"
           c:symbol-prefix="category"
           c:type="AsCategory"
           parent="GObject.Object"
           glib:type-name="AsCategory"
           glib:get-type="as_category_get_type"
           glib:type-struct="CategoryClass">
      <source-position filename="src/as-category.h" line="45"/>
      <constructor name="new" c:identifier="as_category_new">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="730">Creates a new #AsCategory.</doc>
        <source-position filename="src/as-category.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="735">a new #AsCategory</doc>
          <type name="Category" c:type="AsCategory*"/>
        </return-value>
      </constructor>
      <method name="add_child" c:identifier="as_category_add_child">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="462">Add a subcategory to this category.</doc>
        <source-position filename="src/as-category.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="464">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="subcat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="465">A subcategory to add.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_component" c:identifier="as_category_add_component">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="605">Add a component to this category.</doc>
        <source-position filename="src/as-category.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="607">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="608">The #AsComponent to add.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_desktop_group"
              c:identifier="as_category_add_desktop_group">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="575">Add a desktop-file category to this #AsCategory.</doc>
        <source-position filename="src/as-category.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="577">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="group_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="578">A subcategory to add.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="as_category_get_children"
              glib:get-property="children">
        <source-position filename="src/as-category.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="453">A list of subcategories.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Category"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="451">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_components" c:identifier="as_category_get_components">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="590">Get list of components which have been sorted into this category.</doc>
        <source-position filename="src/as-category.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="596">List of #AsCategory</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="592">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_desktop_groups"
              c:identifier="as_category_get_desktop_groups">
        <source-position filename="src/as-category.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="566">A list of desktop-file categories.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="564">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="as_category_get_icon"
              glib:get-property="icon">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="534">Get the stock icon name for this category.</doc>
        <source-position filename="src/as-category.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="536">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="as_category_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="393">Get the ID of this category.</doc>
        <source-position filename="src/as-category.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="395">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="as_category_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="421">Get the name of this category.</doc>
        <source-position filename="src/as-category.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="423">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="as_category_get_summary"
              glib:get-property="summary">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="505">Get the summary (short description) of this category.</doc>
        <source-position filename="src/as-category.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="507">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_children" c:identifier="as_category_has_children">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="490">Test for sub-categories.</doc>
        <source-position filename="src/as-category.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="496">%TRUE if this category has any subcategory</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="492">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_component" c:identifier="as_category_has_component">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="620">Check if the exact #AsComponent @cpt is a member of this
category already.</doc>
        <source-position filename="src/as-category.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="628">%TRUE if the component is present.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="622">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="623">The #AsComponent to look for.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_child" c:identifier="as_category_remove_child">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="476">Drop a subcategory from this #AsCategory.</doc>
        <source-position filename="src/as-category.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="478">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="subcat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="479">A subcategory to remove.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon"
              c:identifier="as_category_set_icon"
              glib:set-property="icon">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="547">Set the stock icon name for this category.</doc>
        <source-position filename="src/as-category.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="549">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="as_category_set_id"
              glib:set-property="id">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="406">Set the ID of this category.</doc>
        <source-position filename="src/as-category.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="408">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="as_category_set_name"
              glib:set-property="name">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="434">Set the name of this category.</doc>
        <source-position filename="src/as-category.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="436">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary" c:identifier="as_category_set_summary">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="518">Get the summary (short description) of this category.</doc>
        <source-position filename="src/as-category.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="520">An instance of #AsCategory.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-category.c"
                 line="521">A new short summary of this category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="children"
                transfer-ownership="none"
                getter="get_children">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="icon"
                writable="1"
                transfer-ownership="none"
                setter="set_icon"
                getter="get_icon"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                transfer-ownership="none"
                setter="set_id"
                getter="get_id"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary"
                transfer-ownership="none"
                getter="get_summary"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="CategoryClass"
            c:type="AsCategoryClass"
            glib:is-gtype-struct-for="Category">
      <source-position filename="src/as-category.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-category.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-category.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-category.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-category.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="CheckResult"
                 glib:type-name="AsCheckResult"
                 glib:get-type="as_check_result_get_type"
                 c:type="AsCheckResult">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="51">Result of a check operation.</doc>
      <member name="error"
              value="0"
              c:identifier="AS_CHECK_RESULT_ERROR"
              glib:nick="error"
              glib:name="AS_CHECK_RESULT_ERROR">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="53">The check failed.</doc>
      </member>
      <member name="unknown"
              value="1"
              c:identifier="AS_CHECK_RESULT_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_CHECK_RESULT_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="54">The outcome could not be determined.</doc>
      </member>
      <member name="false"
              value="2"
              c:identifier="AS_CHECK_RESULT_FALSE"
              glib:nick="false"
              glib:name="AS_CHECK_RESULT_FALSE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="55">False/No</doc>
      </member>
      <member name="true"
              value="3"
              c:identifier="AS_CHECK_RESULT_TRUE"
              glib:nick="true"
              glib:name="AS_CHECK_RESULT_TRUE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="56">True/Yes</doc>
      </member>
    </enumeration>
    <class name="Checksum"
           c:symbol-prefix="checksum"
           c:type="AsChecksum"
           parent="GObject.Object"
           glib:type-name="AsChecksum"
           glib:get-type="as_checksum_get_type"
           glib:type-struct="ChecksumClass">
      <source-position filename="src/as-checksum.h" line="45"/>
      <constructor name="new" c:identifier="as_checksum_new">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="285">Creates a new #AsChecksum.</doc>
        <source-position filename="src/as-checksum.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="290">an #AsChecksum</doc>
          <type name="Checksum" c:type="AsChecksum*"/>
        </return-value>
      </constructor>
      <constructor name="new_for_kind_value"
                   c:identifier="as_checksum_new_for_kind_value"
                   version="0.12.11">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="266">Creates a new #AsChecksum with the given hash
function and hash value.</doc>
        <source-position filename="src/as-checksum.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="272">an #AsChecksum</doc>
          <type name="Checksum" c:type="AsChecksum*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="ChecksumKind" c:type="AsChecksumKind"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_kind" c:identifier="as_checksum_get_kind">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="117">Gets the checksum type.</doc>
        <source-position filename="src/as-checksum.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="123">the #AsChecksumKind</doc>
          <type name="ChecksumKind" c:type="AsChecksumKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="cs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="119">a #AsChecksum instance.</doc>
            <type name="Checksum" c:type="AsChecksum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="as_checksum_get_value">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="146">Gets the checksum, usually in its hexadecimal form.</doc>
        <source-position filename="src/as-checksum.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="152">the checksum.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="148">a #AsChecksum instance.</doc>
            <type name="Checksum" c:type="AsChecksum*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_checksum_set_kind">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="132">Sets the checksum type.</doc>
        <source-position filename="src/as-checksum.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="134">a #AsChecksum instance.</doc>
            <type name="Checksum" c:type="AsChecksum*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="135">the #AsChecksumKind, e.g. %AS_CHECKSUM_KIND_SHA256.</doc>
            <type name="ChecksumKind" c:type="AsChecksumKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="as_checksum_set_value">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="161">Sets the checksum value filename.</doc>
        <source-position filename="src/as-checksum.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="163">a #AsChecksum instance.</doc>
            <type name="Checksum" c:type="AsChecksum*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="164">the new value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ChecksumClass"
            c:type="AsChecksumClass"
            glib:is-gtype-struct-for="Checksum">
      <source-position filename="src/as-checksum.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-checksum.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-checksum.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-checksum.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-checksum.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-checksum.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-checksum.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ChecksumKind"
                 glib:type-name="AsChecksumKind"
                 glib:get-type="as_checksum_kind_get_type"
                 c:type="AsChecksumKind">
      <doc xml:space="preserve"
           filename="src/as-checksum.h"
           line="47">Checksums supported by #AsRelease</doc>
      <member name="none"
              value="0"
              c:identifier="AS_CHECKSUM_KIND_NONE"
              glib:nick="none"
              glib:name="AS_CHECKSUM_KIND_NONE">
        <doc xml:space="preserve"
             filename="src/as-checksum.h"
             line="49">No checksum</doc>
      </member>
      <member name="sha1"
              value="1"
              c:identifier="AS_CHECKSUM_KIND_SHA1"
              glib:nick="sha1"
              glib:name="AS_CHECKSUM_KIND_SHA1">
        <doc xml:space="preserve"
             filename="src/as-checksum.h"
             line="50">SHA1 checksum</doc>
      </member>
      <member name="sha256"
              value="2"
              c:identifier="AS_CHECKSUM_KIND_SHA256"
              glib:nick="sha256"
              glib:name="AS_CHECKSUM_KIND_SHA256">
        <doc xml:space="preserve"
             filename="src/as-checksum.h"
             line="51">SHA256 checksum</doc>
      </member>
      <member name="blake2b"
              value="3"
              c:identifier="AS_CHECKSUM_KIND_BLAKE2B"
              glib:nick="blake2b"
              glib:name="AS_CHECKSUM_KIND_BLAKE2B">
        <doc xml:space="preserve"
             filename="src/as-checksum.h"
             line="52">BLAKE2b checksum</doc>
      </member>
      <member name="blake2s"
              value="4"
              c:identifier="AS_CHECKSUM_KIND_BLAKE2S"
              glib:nick="blake2s"
              glib:name="AS_CHECKSUM_KIND_BLAKE2S">
        <doc xml:space="preserve"
             filename="src/as-checksum.h"
             line="53">BLAKE2s checksum</doc>
      </member>
      <function name="from_string" c:identifier="as_checksum_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="68">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-checksum.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="74">a #AsChecksumKind or %AS_CHECKSUM_KIND_NONE for unknown</doc>
          <type name="ChecksumKind" c:type="AsChecksumKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="70">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_checksum_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="44">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-checksum.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="50">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-checksum.c"
                 line="46">the %AsChecksumKind.</doc>
            <type name="ChecksumKind" c:type="AsChecksumKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ColorKind"
                 glib:type-name="AsColorKind"
                 glib:get-type="as_color_kind_get_type"
                 c:type="AsColorKind">
      <doc xml:space="preserve"
           filename="src/as-branding.h"
           line="58">A branding color type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_COLOR_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_COLOR_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-branding.h"
             line="60">Color type invalid or not known</doc>
      </member>
      <member name="primary"
              value="1"
              c:identifier="AS_COLOR_KIND_PRIMARY"
              glib:nick="primary"
              glib:name="AS_COLOR_KIND_PRIMARY">
        <doc xml:space="preserve"
             filename="src/as-branding.h"
             line="61">Primary accent color</doc>
      </member>
      <function name="from_string"
                c:identifier="as_color_kind_from_string"
                version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="108">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-branding.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="114">a #AsColorKind or %AS_COLOR_KIND_UNKNOWN for unknown.</doc>
          <type name="ColorKind" c:type="AsColorKind"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="110">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_color_kind_to_string"
                version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="90">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-branding.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="96">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="92">the %AsColorKind.</doc>
            <type name="ColorKind" c:type="AsColorKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ColorSchemeKind"
                 glib:type-name="AsColorSchemeKind"
                 glib:get-type="as_color_scheme_kind_get_type"
                 c:type="AsColorSchemeKind">
      <doc xml:space="preserve"
           filename="src/as-branding.h"
           line="72">A color scheme type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_COLOR_SCHEME_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_COLOR_SCHEME_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-branding.h"
             line="74">Color scheme invalid or not known</doc>
      </member>
      <member name="light"
              value="1"
              c:identifier="AS_COLOR_SCHEME_KIND_LIGHT"
              glib:nick="light"
              glib:name="AS_COLOR_SCHEME_KIND_LIGHT">
        <doc xml:space="preserve"
             filename="src/as-branding.h"
             line="75">A light color scheme</doc>
      </member>
      <member name="dark"
              value="2"
              c:identifier="AS_COLOR_SCHEME_KIND_DARK"
              glib:nick="dark"
              glib:name="AS_COLOR_SCHEME_KIND_DARK">
        <doc xml:space="preserve"
             filename="src/as-branding.h"
             line="76">A dark color scheme</doc>
      </member>
      <function name="from_string"
                c:identifier="as_color_scheme_kind_from_string"
                version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="146">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-branding.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="152">a #AsColorKind or %AS_COLOR_SCHEME_KIND_UNKNOWN for unknown.</doc>
          <type name="ColorSchemeKind" c:type="AsColorSchemeKind"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="148">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_color_scheme_kind_to_string"
                version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="126">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-branding.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="132">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-branding.c"
                 line="128">the %AsColorSchemeKind.</doc>
            <type name="ColorSchemeKind" c:type="AsColorSchemeKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Component"
           c:symbol-prefix="component"
           c:type="AsComponent"
           parent="GObject.Object"
           glib:type-name="AsComponent"
           glib:get-type="as_component_get_type"
           glib:type-struct="ComponentClass">
      <source-position filename="src/as-component.h" line="62"/>
      <constructor name="new" c:identifier="as_component_new">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6673">Creates a new #AsComponent.</doc>
        <source-position filename="src/as-component.h" line="219"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="6678">a new #AsComponent</doc>
          <type name="Component" c:type="AsComponent*"/>
        </return-value>
      </constructor>
      <method name="add_addon"
              c:identifier="as_component_add_addon"
              version="0.9.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="949">Add a reference to the addon that is enhancing this component.</doc>
        <source-position filename="src/as-component.h" line="381"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="951">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="addon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="952">The #AsComponent that extends @cpt</doc>
            <type name="Component" c:type="AsComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_agreement"
              c:identifier="as_component_add_agreement"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3819">Adds an agreement to the software component.</doc>
        <source-position filename="src/as-component.h" line="453"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3821">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="agreement" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3822">an #AsAgreement instance.</doc>
            <type name="Agreement" c:type="AsAgreement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_bundle"
              c:identifier="as_component_add_bundle"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1022">Adds a bundle to the component.</doc>
        <source-position filename="src/as-component.h" line="400"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1024">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="bundle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1025">The #AsBundle to add.</doc>
            <type name="Bundle" c:type="AsBundle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_category" c:identifier="as_component_add_category">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1858">Add a category.</doc>
        <source-position filename="src/as-component.h" line="314"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1860">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1861">the categories name to add.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_content_rating"
              c:identifier="as_component_add_content_rating"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3608">Adds a content rating to this component.</doc>
        <source-position filename="src/as-component.h" line="439"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3610">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3611">a #AsContentRating instance.</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_extends"
              c:identifier="as_component_add_extends"
              version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="906">Add a reference to the extended component</doc>
        <source-position filename="src/as-component.h" line="377"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="908">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="cpt_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="909">The id of a component which is extended by this component</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_icon" c:identifier="as_component_add_icon">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1831">Add an icon to this component.</doc>
        <source-position filename="src/as-component.h" line="339"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1833">an #AsComponent instance</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1834">the valid #AsIcon instance to add.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_keyword" c:identifier="as_component_add_keyword">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1705">Add a new keyword to the keywords list for the given locale. This function does not
check for duplicate keywords.</doc>
        <source-position filename="src/as-component.h" line="328"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1707">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="keyword" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1708">The new keyword to add.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1709">BCP47 locale of the values, or %NULL to use current locale.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_language"
              c:identifier="as_component_add_language"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2477">Adds a language to the component.</doc>
        <source-position filename="src/as-component.h" line="387"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2479">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2480">the BCP47 locale, or %NULL. e.g. "en-GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="percentage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2481">the percentage completion of the translation, 0 for locales with unknown amount of translation</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_launchable"
              c:identifier="as_component_add_launchable"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3666">Adds a #AsLaunchable containing launchables entries for this component.</doc>
        <source-position filename="src/as-component.h" line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3668">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="launchable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3669">a #AsLaunchable instance.</doc>
            <type name="Launchable" c:type="AsLaunchable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_provided"
              c:identifier="as_component_add_provided"
              version="0.6.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2276">Add a set of provided items to this component.</doc>
        <source-position filename="src/as-component.h" line="343"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2278">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="prov" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2279">a #AsProvided instance.</doc>
            <type name="Provided" c:type="AsProvided*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_provided_item"
              c:identifier="as_component_add_provided_item">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2309">Adds a provided item to the component with the given @kind, creating a new
@AsProvided for this kind internally if necessary.</doc>
        <source-position filename="src/as-component.h" line="347"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2311">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2312">the kind of the provided item (e.g. %AS_PROVIDED_KIND_MEDIATYPE)</doc>
            <type name="ProvidedKind" c:type="AsProvidedKind"/>
          </parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2313">the item to add.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_relation"
              c:identifier="as_component_add_relation"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3736">Adds a #AsRelation to set a recommends or requires relation of
component @cpt on the item mentioned in the #AsRelation.</doc>
        <source-position filename="src/as-component.h" line="445"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3738">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3739">a #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_release" c:identifier="as_component_add_release">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="766">Add an #AsRelease to this component.</doc>
        <source-position filename="src/as-component.h" line="365"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="768">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="769">The #AsRelease to add</doc>
            <type name="Release" c:type="AsRelease*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_replaces" c:identifier="as_component_add_replaces">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3783">Add the component ID of a component that gets replaced by the current component.</doc>
        <source-position filename="src/as-component.h" line="449"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3785">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="cid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3786">an AppStream component ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_review"
              c:identifier="as_component_add_review"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3550">Adds a user review to a software component.</doc>
        <source-position filename="src/as-component.h" line="483"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3552">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3553">a #AsReview instance.</doc>
            <type name="Review" c:type="AsReview*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_screenshot" c:identifier="as_component_add_screenshot">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="594">Add an #AsScreenshot to this component.</doc>
        <source-position filename="src/as-component.h" line="320"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="596">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="sshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="597">The #AsScreenshot to add</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_suggested" c:identifier="as_component_add_suggested">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2338">Add an #AsSuggested to this component.</doc>
        <source-position filename="src/as-component.h" line="404"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2340">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="suggested" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2341">The #AsSuggested</doc>
            <type name="Suggested" c:type="AsSuggested*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_tag"
              c:identifier="as_component_add_tag"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2034">Add a tag to this component.</doc>
        <source-position filename="src/as-component.h" line="463"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2042">%TRUE if the tag was added.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2036">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2037">The namespace the tag belongs to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2038">The tag name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_translation"
              c:identifier="as_component_add_translation"
              version="0.9.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2630">Assign an #AsTranslation object describing the translation system used
by this component.</doc>
        <source-position filename="src/as-component.h" line="393"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2632">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="tr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2633">an #AsTranslation instance.</doc>
            <type name="Translation" c:type="AsTranslation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_url"
              c:identifier="as_component_add_url"
              version="0.6.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="867">Adds some URL data to the component.</doc>
        <source-position filename="src/as-component.h" line="353"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="869">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="url_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="870">the URL kind, e.g. %AS_URL_KIND_HOMEPAGE</doc>
            <type name="UrlKind" c:type="AsUrlKind"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="871">the full URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_keywords" c:identifier="as_component_clear_keywords">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1738">Remove all keywords for the given locale.</doc>
        <source-position filename="src/as-component.h" line="331"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1740">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1741">BCP47 locale of the values, or %NULL to use current locale.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_languages"
              c:identifier="as_component_clear_languages"
              version="0.14.5">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2543">Remove all registered language translation information.</doc>
        <source-position filename="src/as-component.h" line="390"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2545">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clear_tags"
              c:identifier="as_component_clear_tags"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2019">Remove all tags associated with this component.</doc>
        <source-position filename="src/as-component.h" line="462"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2021">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_active_locale"
              c:identifier="as_component_get_active_locale">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1459">Get the current active locale for this component, which
is used to get localized messages.</doc>
        <source-position filename="src/as-component.h" line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1466">the current active locale.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1461">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_addons"
              c:identifier="as_component_get_addons"
              version="0.9.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="929">Returns a list of #AsComponent objects which
are addons extending this component in functionality.

This is the reverse of %as_component_get_extends()</doc>
        <source-position filename="src/as-component.h" line="380"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="938">An array of #AsComponent.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="931">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_agreement_by_kind"
              c:identifier="as_component_get_agreement_by_kind"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3835">Gets an agreement the component has specified for the particular kind.</doc>
        <source-position filename="src/as-component.h" line="455"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3842">a #AsAgreement or %NULL for not found</doc>
          <type name="Agreement" c:type="AsAgreement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3837">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3838">an agreement kind, e.g. %AS_AGREEMENT_KIND_EULA</doc>
            <type name="AgreementKind" c:type="AsAgreementKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_agreements"
              c:identifier="as_component_get_agreements"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3802">Get a list of all agreements registered with this software component.</doc>
        <source-position filename="src/as-component.h" line="452"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3808">An array of #AsAgreement.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Agreement"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3804">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_branch"
              c:identifier="as_component_get_branch"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1398">Gets the branch for the application.</doc>
        <source-position filename="src/as-component.h" line="250"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1404">string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1400">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_branding"
              c:identifier="as_component_get_branding"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3860">Get the branding associated with this component, or %NULL
in case this component has no special branding.</doc>
        <source-position filename="src/as-component.h" line="458"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3867">An #AsBranding.</doc>
          <type name="Branding" c:type="AsBranding*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3862">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bundle"
              c:identifier="as_component_get_bundle"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="996">Gets a bundle identifier string.</doc>
        <source-position filename="src/as-component.h" line="398"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1003">An #AsBundle, or %NULL if not set.</doc>
          <type name="Bundle" c:type="AsBundle*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="998">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="bundle_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="999">the bundle kind, e.g. %AS_BUNDLE_KIND_LIMBA.</doc>
            <type name="BundleKind" c:type="AsBundleKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bundles"
              c:identifier="as_component_get_bundles"
              version="0.10">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="965">Get a list of all software bundles associated with this component.</doc>
        <source-position filename="src/as-component.h" line="397"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="971">A list of #AsBundle.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Bundle"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="967">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_categories"
              c:identifier="as_component_get_categories"
              glib:get-property="categories">
        <source-position filename="src/as-component.h" line="313"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1849">String array of categories</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1847">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_compulsory_for_desktops"
              c:identifier="as_component_get_compulsory_for_desktops">
        <source-position filename="src/as-component.h" line="307"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2190">A list of desktops where this component is compulsory</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2188">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_rating"
              c:identifier="as_component_get_content_rating"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3583">Gets a content ratings of a specific type that are defined for this component.</doc>
        <source-position filename="src/as-component.h" line="437"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3590">a #AsContentRating or %NULL if not found</doc>
          <type name="ContentRating" c:type="AsContentRating*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3585">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3586">a ratings kind, e.g. "oars-1.0"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_content_ratings"
              c:identifier="as_component_get_content_ratings"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3566">Gets all content ratings defined for this software.</doc>
        <source-position filename="src/as-component.h" line="436"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3572">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="ContentRating"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3568">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_context"
              c:identifier="as_component_get_context"
              version="0.11.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3959">Get the #AsContext associated with this component.
This function may return %NULL if no context is set
(which will be the case if the component was not loaded from
a file or cache but constructed in memory).</doc>
        <source-position filename="src/as-component.h" line="486"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3968">the associated #AsContext or %NULL</doc>
          <type name="Context" c:type="AsContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3961">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom"
              c:identifier="as_component_get_custom"
              version="0.10.5">
        <source-position filename="src/as-component.h" line="429"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3481">Hash table of custom user defined data fields.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3479">An #AsComponent.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom_value"
              c:identifier="as_component_get_custom_value"
              version="0.10.5">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3492">Retrieve value for a custom data entry with the given key.</doc>
        <source-position filename="src/as-component.h" line="430"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3494">An #AsComponent.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3495">Field name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data_id" c:identifier="as_component_get_data_id">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1328">Get a unique identifier for this metadata set.
This unique ID is only valid for the current session,
as opposed to the AppStream ID which uniquely identifies
a software component.

The format of the unique id usually is:
%{scope}/%{origin}/%{distribution_system}/%{appstream_id}

For example:
system/os/package/org.example.FooBar</doc>
        <source-position filename="src/as-component.h" line="233"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1343">the unique session-specific identifier.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1330">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_date_eol"
              c:identifier="as_component_get_date_eol"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1109">Gets the end-of-life date for the entire component.</doc>
        <source-position filename="src/as-component.h" line="241"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1115">The EOL date as string in ISO8601 format.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1111">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="as_component_get_description"
              glib:get-property="description">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1586">Get the localized long description of this component.</doc>
        <source-position filename="src/as-component.h" line="279"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1592">the description.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1588">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_developer_name"
              c:identifier="as_component_get_developer_name"
              glib:get-property="developer-name">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1983">Get the component's developer or development team name.</doc>
        <source-position filename="src/as-component.h" line="302"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1989">the developer name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1985">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_extends"
              c:identifier="as_component_get_extends"
              version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="886">Returns a string list of IDs of components which
are extended by this addon.

See %as_component_get_extends() for the reverse.</doc>
        <source-position filename="src/as-component.h" line="376"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="895">A #GPtrArray or %NULL if not set.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="888">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_by_size"
              c:identifier="as_component_get_icon_by_size">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1771">Gets an icon matching the size constraints.
The icons are not filtered by type, and the first icon
which matches the size is returned.
If you want more control over which icons you use for displaying,
use the %as_component_get_icons() function to get a list of all icons.

Note that this function is not HiDPI aware! It will never return an icon with
a scaling factor &gt; 1.</doc>
        <source-position filename="src/as-component.h" line="335"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1786">An icon matching the given width/height, or %NULL if not found.</doc>
          <type name="Icon" c:type="AsIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1773">an #AsComponent instance</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1774">The icon width in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1775">the icon height in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon_stock" c:identifier="as_component_get_icon_stock">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1807">Gets a stock icon for this component if one is associated with it.
Will return %NULL otherwise.</doc>
        <source-position filename="src/as-component.h" line="338"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1814">An stock icon, or %NULL if none found.</doc>
          <type name="Icon" c:type="AsIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1809">an #AsComponent instance</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icons"
              c:identifier="as_component_get_icons"
              glib:get-property="icons">
        <source-position filename="src/as-component.h" line="334"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1762">A #GPtrArray of all icons for this component.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Icon"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1760">an #AsComponent instance</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="as_component_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1291">Get the unique AppStream identifier for this component.
This ID is unique for the described component, but does
not uniquely identify the metadata set.

For a unique ID for this metadata set in the current
session, use %as_component_get_data_id()</doc>
        <source-position filename="src/as-component.h" line="229"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1302">the unique AppStream identifier.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1293">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_keywords"
              c:identifier="as_component_get_keywords"
              glib:get-property="keywords">
        <source-position filename="src/as-component.h" line="323"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1628">String array of keywords</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1626">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_keywords_table"
              c:identifier="as_component_get_keywords_table">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1653">Retrieve the internal hash table mapping languages to
keword arrays.</doc>
        <source-position filename="src/as-component.h" line="490"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1660">Hash table locale-&gt;keyword arrays</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1655">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="as_component_get_kind"
              glib:get-property="kind">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1078">Returns the #AsComponentKind of this component.</doc>
        <source-position filename="src/as-component.h" line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1084">the kind of #this.</doc>
          <type name="ComponentKind" c:type="AsComponentKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1080">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_language"
              c:identifier="as_component_get_language"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2499">Gets the translation coverage in percent for a specific locale</doc>
        <source-position filename="src/as-component.h" line="385"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2506">a percentage value, -1 if locale was not found</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2501">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2502">the BCP47 locale, or %NULL. e.g. "en-GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_languages"
              c:identifier="as_component_get_languages"
              version="0.7.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2526">Get a list of all languages.</doc>
        <source-position filename="src/as-component.h" line="384"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2532">list of locales</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2528">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_launchable"
              c:identifier="as_component_get_launchable"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3625">Gets a #AsLaunchable of a specific type that contains launchable entries for
this component.</doc>
        <source-position filename="src/as-component.h" line="285"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3633">a #AsLaunchable or %NULL if not found</doc>
          <type name="Launchable" c:type="AsLaunchable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3627">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3628">a launch kind, e.g. %AS_LAUNCHABLE_KIND_DESKTOP_ID</doc>
            <type name="LaunchableKind" c:type="AsLaunchableKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_launchables"
              c:identifier="as_component_get_launchables"
              version="0.11.0">
        <source-position filename="src/as-component.h" line="284"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3655">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Launchable"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3653">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_merge_kind"
              c:identifier="as_component_get_merge_kind"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2368">Get the merge method which should apply to duplicate components
with this ID.</doc>
        <source-position filename="src/as-component.h" line="413"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2375">the #AsMergeKind of this component.</doc>
          <type name="MergeKind" c:type="AsMergeKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2370">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata_license"
              c:identifier="as_component_get_metadata_license">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1895">The license the metadata iself is subjected to.</doc>
        <source-position filename="src/as-component.h" line="290"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1901">the license.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1897">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="as_component_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1510">A human-readable name for this component.</doc>
        <source-position filename="src/as-component.h" line="269"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1516">the name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1512">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name_table" c:identifier="as_component_get_name_table">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2575">Get the internal locale to component name
mapping table.</doc>
        <source-position filename="src/as-component.h" line="488"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2582">locale-&gt;names map</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2577">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name_variant_suffix"
              c:identifier="as_component_get_name_variant_suffix"
              version="0.12.10">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2123">Get variant suffix for the component name
(only to be displayed if two components have the same name).</doc>
        <source-position filename="src/as-component.h" line="473"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2130">the variant suffix</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2125">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin" c:identifier="as_component_get_origin">
        <source-position filename="src/as-component.h" line="246"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1374">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pkgname" c:identifier="as_component_get_pkgname">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1203">Get the first package name of the list of packages that need to be installed
for this component to be present on the system.
Since most components consist of only one package, this is safe to use for
about 90% of all cases.

However, to support a component fully, please use %as_component_get_pkgnames() for
getting all packages that need to be installed, and use this method only to
e.g. get the main package to perform a quick "is it installed?" check.</doc>
        <source-position filename="src/as-component.h" line="258"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1216">String array of package names</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1205">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pkgnames"
              c:identifier="as_component_get_pkgnames"
              glib:get-property="pkgnames">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1187">Get a list of package names which this component consists of.
This usually is just one package name.</doc>
        <source-position filename="src/as-component.h" line="259"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1194">String array of package names</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1189">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority"
              c:identifier="as_component_get_priority"
              version="0.6.1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2402">Returns the priority of this component.
This method is used internally.</doc>
        <source-position filename="src/as-component.h" line="425"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2404">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_project_group"
              c:identifier="as_component_get_project_group"
              glib:get-property="project-group">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1954">Get the component's project group.</doc>
        <source-position filename="src/as-component.h" line="298"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1960">the project group.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1956">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_project_license"
              c:identifier="as_component_get_project_license"
              glib:get-property="project-license">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1924">Get the license of the project this component belongs to.</doc>
        <source-position filename="src/as-component.h" line="294"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1930">the license.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1926">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_provided" c:identifier="as_component_get_provided">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2261">Get a list of #AsProvided objects associated with this component.</doc>
        <source-position filename="src/as-component.h" line="342"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2267">A list of #AsProvided objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Provided"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2263">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_provided_for_kind"
              c:identifier="as_component_get_provided_for_kind">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2237">Get an #AsProvided object for the given interface type,
containing information about the public interfaces (mimetypes, firmware, DBus services, ...)
this component provides.</doc>
        <source-position filename="src/as-component.h" line="345"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2246">#AsProvided containing the items this component provides, or %NULL.</doc>
          <type name="Provided" c:type="AsProvided*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2239">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2240">kind of the provided item, e.g. %AS_PROVIDED_KIND_MIMETYPE</doc>
            <type name="ProvidedKind" c:type="AsProvidedKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_recommends"
              c:identifier="as_component_get_recommends"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3701">Get an array of items that are recommended by this component.</doc>
        <source-position filename="src/as-component.h" line="443"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3707">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Relation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3703">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_releases" c:identifier="as_component_get_releases">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="745">Get an array of the #AsRelease items this component
provides.</doc>
        <source-position filename="src/as-component.h" line="364"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="752">A list of releases</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="747">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_releases_kind"
              c:identifier="as_component_get_releases_kind"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="780">Returns the #AsReleasesKind of the release metadata
associated with this component.</doc>
        <source-position filename="src/as-component.h" line="368"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="787">The kind.</doc>
          <type name="ReleasesKind" c:type="AsReleasesKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="782">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_releases_url"
              c:identifier="as_component_get_releases_url"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="815">Get a remote URL to obtain release information for the component.</doc>
        <source-position filename="src/as-component.h" line="372"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="821">The URL of external release data.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="817">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_replaces" c:identifier="as_component_get_replaces">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3766">Get a list of component IDs of components that this software replaces entirely.</doc>
        <source-position filename="src/as-component.h" line="448"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3772">an array of component-IDs</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3768">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_requires"
              c:identifier="as_component_get_requires"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3684">Get an array of items that are required by this component.</doc>
        <source-position filename="src/as-component.h" line="442"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3690">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Relation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3686">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reviews"
              c:identifier="as_component_get_reviews"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3533">Gets any reviews associated with the component.</doc>
        <source-position filename="src/as-component.h" line="482"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3539">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Review"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3535">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scope"
              c:identifier="as_component_get_scope"
              version="0.10.2">
        <source-position filename="src/as-component.h" line="254"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2653">the #AsComponentScope of this component.</doc>
          <type name="ComponentScope" c:type="AsComponentScope"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2651">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_screenshots"
              c:identifier="as_component_get_screenshots"
              glib:get-property="screenshots">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2171">Get a list of associated screenshots.</doc>
        <source-position filename="src/as-component.h" line="319"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2177">an array of #AsScreenshot instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Screenshot"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2173">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_tokens"
              c:identifier="as_component_get_search_tokens"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3351">Returns all search tokens for this component.</doc>
        <source-position filename="src/as-component.h" line="407"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3357">The string search tokens</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3353">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sort_score"
              c:identifier="as_component_get_sort_score"
              version="0.12.11">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2435">Returns the sorting priority of this component.

This will only return a valid value if this component
was the result of or involved in a search operation which
returned sorted results.
In most cases you will not need to access this value explicitly,
as all results of search operations in AppStream are already sorted
from best match to worst.

The returned value is an arbitrary integer value, valid only for
the search terms involved in the search operation that yielded
this component as a result.</doc>
        <source-position filename="src/as-component.h" line="478"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2437">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source_pkgname"
              c:identifier="as_component_get_source_pkgname">
        <source-position filename="src/as-component.h" line="265"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1270">the source package name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1268">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_suggested" c:identifier="as_component_get_suggested">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2353">Get a list of associated suggestions.</doc>
        <source-position filename="src/as-component.h" line="403"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2359">an array of #AsSuggested instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Suggested"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2355">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="as_component_get_summary"
              glib:get-property="summary">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1548">Get a short description of this component.</doc>
        <source-position filename="src/as-component.h" line="274"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1554">the summary.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1550">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary_table"
              c:identifier="as_component_get_summary_table">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2591">Get the internal locale to component summary
mapping table.</doc>
        <source-position filename="src/as-component.h" line="489"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2598">locale-&gt;summary map</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2593">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_supports"
              c:identifier="as_component_get_supports"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3718">Get an array of items that are supported by this component,
e.g. to indicate support for a specific piece of hardware.</doc>
        <source-position filename="src/as-component.h" line="444"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3725">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Relation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3720">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp_eol"
              c:identifier="as_component_get_timestamp_eol"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1142">Gets the UNIX timestamp for the date when this component
is out of support (end-of-life) and will receive no more
updates, not even security fixes.</doc>
        <source-position filename="src/as-component.h" line="244"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1150">UNIX timestamp, or 0 for unset or invalid.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1144">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_translations"
              c:identifier="as_component_get_translations"
              version="0.9.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2607">Get a #GPtrArray of #AsTranslation objects describing the
translation systems and translation-ids (e.g. Gettext domains) used
by this software component.

Only set for metainfo files.</doc>
        <source-position filename="src/as-component.h" line="392"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2617">An array of #AsTranslation objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Translation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2609">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="as_component_get_url"
              version="0.6.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="848">Gets a URL.</doc>
        <source-position filename="src/as-component.h" line="351"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="855">string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="850">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="url_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="851">the URL kind, e.g. %AS_URL_KIND_HOMEPAGE.</doc>
            <type name="UrlKind" c:type="AsUrlKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_flags"
              c:identifier="as_component_get_value_flags">
        <source-position filename="src/as-component.h" line="221"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3398">The #AsValueFlags that are set on @cpt.</doc>
          <type name="ValueFlags" c:type="AsValueFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3396">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_bundle" c:identifier="as_component_has_bundle">
        <source-position filename="src/as-component.h" line="396"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1044">%TRUE if this component has a bundle associated.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1042">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_category" c:identifier="as_component_has_category">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1879">Check if component is in the specified category.</doc>
        <source-position filename="src/as-component.h" line="316"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="1886">%TRUE if the component is in the specified category.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1881">an #AsComponent object</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1882">the specified category to check</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_tag"
              c:identifier="as_component_has_tag"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2096">Test if the component is tagged with the selected
tag.</doc>
        <source-position filename="src/as-component.h" line="469"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2105">%TRUE if tag exists.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2098">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2099">The namespace the tag belongs to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2100">The tag name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_custom_value"
              c:identifier="as_component_insert_custom_value"
              version="0.10.5">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3510">Add a key and value pair to the custom data table.</doc>
        <source-position filename="src/as-component.h" line="432"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3518">%TRUE if the key did not exist yet.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3512">An #AsComponent.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3513">Key name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3514">A string value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_compulsory_for_desktop"
              c:identifier="as_component_is_compulsory_for_desktop">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2221">Check if this component is compulsory for the given desktop.</doc>
        <source-position filename="src/as-component.h" line="310"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2228">%TRUE if compulsory, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2223">an #AsComponent object</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="desktop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2224">the desktop-id to test for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_free"
              c:identifier="as_component_is_free"
              version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3898">Returns %TRUE if this component is free and open source software.
To determine this status, this function will check if it comes
from a vetted free-software-only source or whether its licenses
are only free software licenses.</doc>
        <source-position filename="src/as-component.h" line="492"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3907">%TRUE if this component is free software.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3900">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_ignored"
              c:identifier="as_component_is_ignored"
              version="0.10.2">
        <source-position filename="src/as-component.h" line="420"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3466">Whether this component's metadata should be ignored.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3464">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_member_of_category"
              c:identifier="as_component_is_member_of_category">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3425">Test if the component @cpt is a member of category @category.</doc>
        <source-position filename="src/as-component.h" line="417"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3427">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3428">The category to test.</doc>
            <type name="Category" c:type="AsCategory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_valid" c:identifier="as_component_is_valid">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="527">Check if the essential properties of this Component are
populated with useful data.</doc>
        <source-position filename="src/as-component.h" line="422"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="534">TRUE if the component data was validated successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="529">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_from_bytes"
              c:identifier="as_component_load_from_bytes"
              version="0.14.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6338">Load metadata for this component from an XML string.
You normally do not want to use this method directly and instead use the more
convenient API of #AsMetadata to create and update components.

If this function returns %TRUE, a valid component is returned unless the selected
format was %AS_FORMAT_KIND_DESKTOP_ENTRY, in which case a component ID will have to
be set explicitly by the caller in order to make the component valid.</doc>
        <source-position filename="src/as-component.h" line="494"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="6354">%TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="6340">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="6341">an #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="6342">the format of the data to load, e.g. %AS_FORMAT_KIND_XML</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="6343">the data to load.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_releases"
              c:identifier="as_component_load_releases"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="658">Load data from an external source, possibly a local file
or a network resource.</doc>
        <source-position filename="src/as-component.h" line="360"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="668">%TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="660">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="reload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="661">set to %TRUE to discard existing data and reload.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="allow_net" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="662">allow fetching release data from the internet.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_releases_from_bytes"
              c:identifier="as_component_load_releases_from_bytes"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="611">Load release information from XML bytes.</doc>
        <source-position filename="src/as-component.h" line="357"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="619">%TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="613">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="614">the release XML data as #GBytes</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_tag"
              c:identifier="as_component_remove_tag"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2067">Remove a tag from this component</doc>
        <source-position filename="src/as-component.h" line="466"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="2075">%TRUE if the tag was removed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2069">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2070">The namespace the tag belongs to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2071">The tag name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_matches"
              c:identifier="as_component_search_matches"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3263">Searches component data for a specific keyword.</doc>
        <source-position filename="src/as-component.h" line="408"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3270">a match scrore, where 0 is no match and 100 is the best match.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3265">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="term" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3266">the search term.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_matches_all"
              c:identifier="as_component_search_matches_all"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3308">Searches component data for all the specific keywords.</doc>
        <source-position filename="src/as-component.h" line="410"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="3315">a match score, where 0 is no match and larger numbers are better
matches.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3310">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="terms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3311">the search terms.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_active_locale"
              c:identifier="as_component_set_active_locale">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1487">Set the current active locale for this component, which
is used to get localized messages.
If the #AsComponent was fetched from a localized database, usually only
one locale is available.</doc>
        <source-position filename="src/as-component.h" line="226"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1489">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1490">a POSIX or BCP47 locale, or %NULL. e.g. "en_GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_branch"
              c:identifier="as_component_set_branch"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1415">Set the branch that the component instance was sourced from.</doc>
        <source-position filename="src/as-component.h" line="251"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1417">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="branch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1418">the branch, e.g. "master" or "3-16".</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_branding"
              c:identifier="as_component_set_branding"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="3878">Set branding for this component.</doc>
        <source-position filename="src/as-component.h" line="459"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3880">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="branding" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3881">an #AsBranding instance.</doc>
            <type name="Branding" c:type="AsBranding*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_compulsory_for_desktop"
              c:identifier="as_component_set_compulsory_for_desktop">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2199">Mark this component to be compulsory for the specified desktop environment.</doc>
        <source-position filename="src/as-component.h" line="308"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2201">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="desktop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2202">The name of the desktop.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_data_id" c:identifier="as_component_set_data_id">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1354">Set the session-specific unique metadata identifier for this
component.
If two components have a different data_id but the same ID,
they will be treated as independent sets of metadata describing
the same component type.</doc>
        <source-position filename="src/as-component.h" line="234"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1356">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1357">the unique session-specific identifier.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_date_eol"
              c:identifier="as_component_set_date_eol"
              version="0.15.2">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1126">Sets an end-of-life date for this component.</doc>
        <source-position filename="src/as-component.h" line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1128">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1129">the EOL date in ISO8601 format.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="as_component_set_description"
              glib:set-property="description">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1604">Set long description for this component.</doc>
        <source-position filename="src/as-component.h" line="280"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1606">A valid #AsComponent</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1607">The long description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1608">The BCP47 locale for this value, or %NULL to use the current active one.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_developer_name"
              c:identifier="as_component_set_developer_name"
              glib:set-property="developer-name">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2001">Set the the component's developer or development team name.</doc>
        <source-position filename="src/as-component.h" line="303"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2003">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2004">the developer or developer team name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2005">the BCP47 locale, or %NULL. e.g. "en-GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="as_component_set_id"
              glib:set-property="id">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1311">Set the AppStream identifier for this component.</doc>
        <source-position filename="src/as-component.h" line="230"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1313">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1314">the unique identifier.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keywords"
              c:identifier="as_component_set_keywords"
              glib:set-property="keywords">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1669">Set keywords for this component, replacing all existing ones for the selected locale.</doc>
        <source-position filename="src/as-component.h" line="324"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1671">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="new_keywords" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1672">Array of keywords</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1673">BCP47 locale of the values, or %NULL to use current locale.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="deep_copy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1674">Set to %TRUE if the keywords array should be copied, %FALSE to set by reference.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="as_component_set_kind"
              glib:set-property="kind">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1093">Sets the #AsComponentKind of this component.</doc>
        <source-position filename="src/as-component.h" line="238"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1095">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1096">the #AsComponentKind.</doc>
            <type name="ComponentKind" c:type="AsComponentKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_merge_kind"
              c:identifier="as_component_set_merge_kind"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2386">Sets the #AsMergeKind for this component.</doc>
        <source-position filename="src/as-component.h" line="414"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2388">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2389">the #AsMergeKind.</doc>
            <type name="MergeKind" c:type="AsMergeKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_metadata_license"
              c:identifier="as_component_set_metadata_license">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1910">Set the license this metadata is licensed under.</doc>
        <source-position filename="src/as-component.h" line="291"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1912">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1913">the metadata license.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="as_component_set_name"
              glib:set-property="name">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1528">Set a human-readable name for this component.</doc>
        <source-position filename="src/as-component.h" line="270"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1530">A valid #AsComponent</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1531">The name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1532">The BCP47 locale for this value, or %NULL to use the current active one.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name_variant_suffix"
              c:identifier="as_component_set_name_variant_suffix"
              version="0.12.10">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2146">Set a variant suffix for the component name
(only to be displayed if components have the same name).</doc>
        <source-position filename="src/as-component.h" line="474"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2148">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2149">the developer or developer team name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2150">the BCP47 locale, or %NULL. e.g. "en-GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_origin" c:identifier="as_component_set_origin">
        <source-position filename="src/as-component.h" line="247"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1387">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="origin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1388">the origin.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pkgname"
              c:identifier="as_component_set_pkgname"
              version="0.14.5">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1247">Set the package name that provides this component.</doc>
        <source-position filename="src/as-component.h" line="262"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1249">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="pkgname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1250">the package name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pkgnames"
              c:identifier="as_component_set_pkgnames"
              glib:set-property="pkgnames">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1227">Set a list of package names this component consists of.
(This should usually be just one package name)</doc>
        <source-position filename="src/as-component.h" line="260"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1229">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="packages" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_priority"
              c:identifier="as_component_set_priority"
              version="0.6.1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2418">Sets the priority of this component.
This method is used internally.</doc>
        <source-position filename="src/as-component.h" line="426"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2420">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2421">the given priority</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_project_group"
              c:identifier="as_component_set_project_group"
              glib:set-property="project-group">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1969">Set the component's project group.</doc>
        <source-position filename="src/as-component.h" line="299"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1971">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1972">the project group.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_project_license"
              c:identifier="as_component_set_project_license"
              glib:set-property="project-license">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1939">Set the project license.</doc>
        <source-position filename="src/as-component.h" line="295"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1941">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1942">the project license.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_releases_kind"
              c:identifier="as_component_set_releases_kind"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="798">Sets the #AsReleasesKind of the release metadata
associated with this component.</doc>
        <source-position filename="src/as-component.h" line="369"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="800">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="801">the #AsComponentKind.</doc>
            <type name="ReleasesKind" c:type="AsReleasesKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_releases_url"
              c:identifier="as_component_set_releases_url"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="832">Set a remote URL pointing to an AppStream release info file.</doc>
        <source-position filename="src/as-component.h" line="373"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="834">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="835">the web URL where release data is found.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scope" c:identifier="as_component_set_scope">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2664">Sets the #AsComponentScope of this component.</doc>
        <source-position filename="src/as-component.h" line="255"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2666">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="scope" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2667">the #AsComponentKind.</doc>
            <type name="ComponentScope" c:type="AsComponentScope"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sort_score"
              c:identifier="as_component_set_sort_score"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="2461">Sets the sorting score of this component.</doc>
        <source-position filename="src/as-component.h" line="479"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2463">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="score" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="2464">the given sorting score</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source_pkgname"
              c:identifier="as_component_set_source_pkgname">
        <source-position filename="src/as-component.h" line="266"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1281">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="spkgname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1282">the source package name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary"
              c:identifier="as_component_set_summary"
              glib:set-property="summary">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="1566">Set a short description for this component.</doc>
        <source-position filename="src/as-component.h" line="275"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1568">A valid #AsComponent</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1569">The summary</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="1570">The BCP47 locale for this value, or %NULL to use the current active one.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_flags"
              c:identifier="as_component_set_value_flags">
        <source-position filename="src/as-component.h" line="222"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3383">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="3384">#AsValueFlags to set on @cpt.</doc>
            <type name="ValueFlags" c:type="AsValueFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="as_component_to_string">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="563">Returns a string identifying this component.
(useful for debugging)</doc>
        <source-position filename="src/as-component.h" line="423"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="570">A descriptive string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="565">a #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_xml_data"
              c:identifier="as_component_to_xml_data"
              version="0.12.10"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6419">Serialize this component into an XML string.
You normally do not want to use this method directly and instead use the more
convenient API of #AsMetadata to serialize components.</doc>
        <source-position filename="src/as-component.h" line="499"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="6429">%TRUE on success.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="6421">an #AsComponent instance.</doc>
            <type name="Component" c:type="AsComponent*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="6422">an #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </parameter>
        </parameters>
      </method>
      <property name="categories"
                transfer-ownership="none"
                getter="get_categories">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6631">string array of categories</doc>
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="description"
                writable="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6599">the description</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="developer-name"
                writable="1"
                transfer-ownership="none"
                setter="set_developer_name"
                getter="get_developer_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6655">the developer name</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icons" transfer-ownership="none" getter="get_icons">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6615">hash map of icon urls and sizes</doc>
        <type name="GLib.List" c:type="gpointer">
          <type name="Icon"/>
        </type>
      </property>
      <property name="id"
                writable="1"
                transfer-ownership="none"
                setter="set_id"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6575">the unique identifier</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="keywords"
                writable="1"
                transfer-ownership="none"
                setter="set_keywords"
                getter="get_keywords">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6607">string array of keywords</doc>
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="kind"
                writable="1"
                transfer-ownership="none"
                setter="set_kind"
                getter="get_kind"
                default-value="AS_COMPONENT_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6559">the #AsComponentKind of this component</doc>
        <type name="ComponentKind"/>
      </property>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6583">the name</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="pkgnames"
                writable="1"
                transfer-ownership="none"
                setter="set_pkgnames"
                getter="get_pkgnames">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6567">string array of packages name</doc>
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="project-group"
                writable="1"
                transfer-ownership="none"
                setter="set_project_group"
                getter="get_project_group"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6647">the project group</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="project-license"
                writable="1"
                transfer-ownership="none"
                setter="set_project_license"
                getter="get_project_license"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6639">the project license</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="screenshots"
                transfer-ownership="none"
                getter="get_screenshots">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6663">An array of #AsScreenshot instances</doc>
        <array name="GLib.PtrArray">
          <type name="Screenshot"/>
        </array>
      </property>
      <property name="summary"
                writable="1"
                transfer-ownership="none"
                setter="set_summary"
                getter="get_summary"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6591">the summary</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="urls" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="6623">the urls associated with this component</doc>
        <type name="GLib.HashTable">
          <type name="UrlKind"/>
          <type name="utf8"/>
        </type>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ComponentClass"
            c:type="AsComponentClass"
            glib:is-gtype-struct-for="Component">
      <source-position filename="src/as-component.h" line="62"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-component.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-component.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-component.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-component.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-component.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-component.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ComponentKind"
                 glib:type-name="AsComponentKind"
                 glib:get-type="as_component_kind_get_type"
                 c:type="AsComponentKind">
      <doc xml:space="preserve"
           filename="src/as-component.h"
           line="64">The type of an #AsComponent.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_COMPONENT_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_COMPONENT_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="66">Type invalid or not known</doc>
      </member>
      <member name="generic"
              value="1"
              c:identifier="AS_COMPONENT_KIND_GENERIC"
              glib:nick="generic"
              glib:name="AS_COMPONENT_KIND_GENERIC">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="67">A generic (= without specialized type) component</doc>
      </member>
      <member name="desktop_app"
              value="2"
              c:identifier="AS_COMPONENT_KIND_DESKTOP_APP"
              glib:nick="desktop-app"
              glib:name="AS_COMPONENT_KIND_DESKTOP_APP">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="68">An application with a .desktop-file</doc>
      </member>
      <member name="console_app"
              value="3"
              c:identifier="AS_COMPONENT_KIND_CONSOLE_APP"
              glib:nick="console-app"
              glib:name="AS_COMPONENT_KIND_CONSOLE_APP">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="69">A console application</doc>
      </member>
      <member name="web_app"
              value="4"
              c:identifier="AS_COMPONENT_KIND_WEB_APP"
              glib:nick="web-app"
              glib:name="AS_COMPONENT_KIND_WEB_APP">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="70">A web application</doc>
      </member>
      <member name="addon"
              value="5"
              c:identifier="AS_COMPONENT_KIND_ADDON"
              glib:nick="addon"
              glib:name="AS_COMPONENT_KIND_ADDON">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="71">An extension of existing software, which does not run standalone</doc>
      </member>
      <member name="font"
              value="6"
              c:identifier="AS_COMPONENT_KIND_FONT"
              glib:nick="font"
              glib:name="AS_COMPONENT_KIND_FONT">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="72">A font</doc>
      </member>
      <member name="codec"
              value="7"
              c:identifier="AS_COMPONENT_KIND_CODEC"
              glib:nick="codec"
              glib:name="AS_COMPONENT_KIND_CODEC">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="73">A multimedia codec</doc>
      </member>
      <member name="input_method"
              value="8"
              c:identifier="AS_COMPONENT_KIND_INPUT_METHOD"
              glib:nick="input-method"
              glib:name="AS_COMPONENT_KIND_INPUT_METHOD">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="74">An input-method provider</doc>
      </member>
      <member name="firmware"
              value="9"
              c:identifier="AS_COMPONENT_KIND_FIRMWARE"
              glib:nick="firmware"
              glib:name="AS_COMPONENT_KIND_FIRMWARE">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="75">Firmware</doc>
      </member>
      <member name="driver"
              value="10"
              c:identifier="AS_COMPONENT_KIND_DRIVER"
              glib:nick="driver"
              glib:name="AS_COMPONENT_KIND_DRIVER">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="76">A driver</doc>
      </member>
      <member name="localization"
              value="11"
              c:identifier="AS_COMPONENT_KIND_LOCALIZATION"
              glib:nick="localization"
              glib:name="AS_COMPONENT_KIND_LOCALIZATION">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="77">Software localization (usually l10n resources)</doc>
      </member>
      <member name="service"
              value="12"
              c:identifier="AS_COMPONENT_KIND_SERVICE"
              glib:nick="service"
              glib:name="AS_COMPONENT_KIND_SERVICE">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="78">A system service launched by the init system</doc>
      </member>
      <member name="repository"
              value="13"
              c:identifier="AS_COMPONENT_KIND_REPOSITORY"
              glib:nick="repository"
              glib:name="AS_COMPONENT_KIND_REPOSITORY">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="79">A remote software or data source</doc>
      </member>
      <member name="operating_system"
              value="14"
              c:identifier="AS_COMPONENT_KIND_OPERATING_SYSTEM"
              glib:nick="operating-system"
              glib:name="AS_COMPONENT_KIND_OPERATING_SYSTEM">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="80">A computer operating system</doc>
      </member>
      <member name="icon_theme"
              value="15"
              c:identifier="AS_COMPONENT_KIND_ICON_THEME"
              glib:nick="icon-theme"
              glib:name="AS_COMPONENT_KIND_ICON_THEME">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="81">An icon theme following the XDG specification</doc>
      </member>
      <member name="runtime"
              value="16"
              c:identifier="AS_COMPONENT_KIND_RUNTIME"
              glib:nick="runtime"
              glib:name="AS_COMPONENT_KIND_RUNTIME">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="82">An application runtime platform</doc>
      </member>
      <function name="from_string"
                c:identifier="as_component_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="204">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-component.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="210">a #AsComponentKind or %AS_COMPONENT_KIND_UNKNOWN for unknown</doc>
          <type name="ComponentKind" c:type="AsComponentKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="206">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_component_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="158">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-component.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="164">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="160">the #AsComponentKind.</doc>
            <type name="ComponentKind" c:type="AsComponentKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ComponentScope"
                 glib:type-name="AsComponentScope"
                 glib:get-type="as_component_scope_get_type"
                 c:type="AsComponentScope">
      <doc xml:space="preserve"
           filename="src/as-component.h"
           line="135">Scope of the #AsComponent (system-wide or user-scope)</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_COMPONENT_SCOPE_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_COMPONENT_SCOPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="137">Unknown scope</doc>
      </member>
      <member name="system"
              value="1"
              c:identifier="AS_COMPONENT_SCOPE_SYSTEM"
              glib:nick="system"
              glib:name="AS_COMPONENT_SCOPE_SYSTEM">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="138">System scope</doc>
      </member>
      <member name="user"
              value="2"
              c:identifier="AS_COMPONENT_SCOPE_USER"
              glib:nick="user"
              glib:name="AS_COMPONENT_SCOPE_USER">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="139">User scope</doc>
      </member>
      <function name="from_string"
                c:identifier="as_component_scope_from_string">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="319">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-component.h" line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="325">a #AsComponentScope or %AS_COMPONENT_SCOPE_UNKNOWN for unknown</doc>
          <type name="ComponentScope" c:type="AsComponentScope"/>
        </return-value>
        <parameters>
          <parameter name="scope_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="321">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_component_scope_to_string">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="301">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-component.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="307">string version of @scope</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="scope" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="303">the #AsComponentScope.</doc>
            <type name="ComponentScope" c:type="AsComponentScope"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="ContentRating"
           c:symbol-prefix="content_rating"
           c:type="AsContentRating"
           parent="GObject.Object"
           glib:type-name="AsContentRating"
           glib:get-type="as_content_rating_get_type"
           glib:type-struct="ContentRatingClass">
      <source-position filename="src/as-content-rating.h" line="47"/>
      <constructor name="new"
                   c:identifier="as_content_rating_new"
                   version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1565">Creates a new #AsContentRating.</doc>
        <source-position filename="src/as-content-rating.h" line="136"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="1570">a #AsContentRating</doc>
          <type name="ContentRating" c:type="AsContentRating*"/>
        </return-value>
      </constructor>
      <function name="attribute_from_csm_age"
                c:identifier="as_content_rating_attribute_from_csm_age"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1290">Gets the highest #AsContentRatingValue which is allowed to be seen by the
given Common Sense Media @age for the given subsection @id.

For example, if the CSM age mappings for `violence-bloodshed` are:
 * age ≥ 0 for %AS_CONTENT_RATING_VALUE_NONE
 * age ≥ 9 for %AS_CONTENT_RATING_VALUE_MILD
 * age ≥ 11 for %AS_CONTENT_RATING_VALUE_MODERATE
 * age ≥ 18 for %AS_CONTENT_RATING_VALUE_INTENSE
then calling this function with `violence-bloodshed` and @age set to 17 would
return %AS_CONTENT_RATING_VALUE_MODERATE. Calling it with age 18 would
return %AS_CONTENT_RATING_VALUE_INTENSE.</doc>
        <source-position filename="src/as-content-rating.h" line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="1307">the #AsContentRatingValue, or %AS_CONTENT_RATING_VALUE_UNKNOWN if
   unknown</doc>
          <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1292">the subsection ID e.g. `violence-cartoon`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="age" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1293">the CSM age</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="attribute_get_description"
                c:identifier="as_content_rating_attribute_get_description"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1141">Get a human-readable description of what content would be expected to
require the content rating attribute given by @id and @value.</doc>
        <source-position filename="src/as-content-rating.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="1149">a human-readable description of @id and @value</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1143">the subsection ID e.g. `violence-cartoon`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1144">the #AsContentRatingValue, e.g. %AS_CONTENT_RATING_VALUE_INTENSE</doc>
            <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
          </parameter>
        </parameters>
      </function>
      <function name="attribute_to_csm_age"
                c:identifier="as_content_rating_attribute_to_csm_age"
                version="0.12.10">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1249">Gets the Common Sense Media approved age for a specific rating level.</doc>
        <source-position filename="src/as-content-rating.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="1256">The age in years, or 0 for no details.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1251">the subsection ID e.g. `violence-cartoon`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1252">the #AsContentRatingValue, e.g. %AS_CONTENT_RATING_VALUE_INTENSE</doc>
            <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_all_rating_ids"
                c:identifier="as_content_rating_get_all_rating_ids"
                version="0.12.10">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1332">Returns a list of all the valid OARS content rating attribute IDs as could
be passed to as_content_rating_add_attribute() or
as_content_rating_attribute_to_csm_age().</doc>
        <source-position filename="src/as-content-rating.h" line="119"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="1339">a %NULL-terminated
   array of IDs, to be freed with g_free() (the element values are owned by
   libappstream and must not be freed)</doc>
          <array c:type="const gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </function>
      <method name="add_attribute"
              c:identifier="as_content_rating_add_attribute"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="496">Adds an attribute value to the content rating.</doc>
        <source-position filename="src/as-content-rating.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="498">a #AsContentRating instance.</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="499">a content rating ID, e.g. `money-gambling`.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="500">a #AsContentRatingValue, e.g. %AS_CONTENT_RATING_VALUE_MODERATE.</doc>
            <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="as_content_rating_get_kind"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1398">Gets the content_rating kind.</doc>
        <source-position filename="src/as-content-rating.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="1404">a string, e.g. "oars-1.0", or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1400">a #AsContentRating instance.</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_minimum_age"
              c:identifier="as_content_rating_get_minimum_age"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1356">Gets the lowest Common Sense Media approved age for the content_rating block.
NOTE: these numbers are based on the data and descriptions available from
https://www.commonsensemedia.org/about-us/our-mission/about-our-ratings and
you may disagree with them.

You're free to disagree with these, and of course you should use your own
brain to work our if your child is able to cope with the concepts enumerated
here. Some 13 year olds may be fine with the concept of mutilation of body
parts; others may get nightmares.</doc>
        <source-position filename="src/as-content-rating.h" line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="1370">The age in years, 0 for no rating, or G_MAXUINT for no details.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1358">a #AsContentRating</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rating_ids"
              c:identifier="as_content_rating_get_rating_ids"
              version="0.12.10">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="99">Gets the set of ratings IDs which are present in this @content_rating. An
example of a ratings ID is `violence-bloodshed`.

The IDs are returned in lexicographical order.</doc>
        <source-position filename="src/as-content-rating.h" line="150"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="108">%NULL-terminated
   array of ratings IDs; each ratings ID is owned by the #AsContentRating and
   must not be freed, but the container must be freed with g_free()</doc>
          <array c:type="const gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="101">a #AsContentRating</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="as_content_rating_get_value"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="159">Gets the value of a content rating key.</doc>
        <source-position filename="src/as-content-rating.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="166">the #AsContentRatingValue, or %AS_CONTENT_RATING_VALUE_UNKNOWN</doc>
          <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="161">a #AsContentRating</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="162">A ratings ID, e.g. `violence-bloodshed`.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="as_content_rating_set_kind"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="1416">Sets the content rating kind.</doc>
        <source-position filename="src/as-content-rating.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1418">a #AsContentRating instance.</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="1419">the rating kind, e.g. "oars-1.0"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="as_content_rating_set_value"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="134">Sets the value of a content rating key.</doc>
        <source-position filename="src/as-content-rating.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content_rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="136">a #AsContentRating</doc>
            <type name="ContentRating" c:type="AsContentRating*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="137">A ratings ID, e.g. `violence-bloodshed`.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="138">A #AsContentRatingValue, e.g. %AS_CONTENT_RATING_VALUE_INTENSE</doc>
            <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ContentRatingClass"
            c:type="AsContentRatingClass"
            glib:is-gtype-struct-for="ContentRating">
      <source-position filename="src/as-content-rating.h" line="47"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-content-rating.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-content-rating.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-content-rating.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-content-rating.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-content-rating.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-content-rating.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ContentRatingSystem"
                 version="0.12.12"
                 glib:type-name="AsContentRatingSystem"
                 glib:get-type="as_content_rating_system_get_type"
                 c:type="AsContentRatingSystem">
      <doc xml:space="preserve"
           filename="src/as-content-rating.h"
           line="49">A content rating system for a particular territory.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_CONTENT_RATING_SYSTEM_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_CONTENT_RATING_SYSTEM_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="51">Unknown ratings system</doc>
      </member>
      <member name="incaa"
              value="1"
              c:identifier="AS_CONTENT_RATING_SYSTEM_INCAA"
              glib:nick="incaa"
              glib:name="AS_CONTENT_RATING_SYSTEM_INCAA">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="52">INCAA</doc>
      </member>
      <member name="acb"
              value="2"
              c:identifier="AS_CONTENT_RATING_SYSTEM_ACB"
              glib:nick="acb"
              glib:name="AS_CONTENT_RATING_SYSTEM_ACB">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="53">ACB</doc>
      </member>
      <member name="djctq"
              value="3"
              c:identifier="AS_CONTENT_RATING_SYSTEM_DJCTQ"
              glib:nick="djctq"
              glib:name="AS_CONTENT_RATING_SYSTEM_DJCTQ">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="54">DJCTQ</doc>
      </member>
      <member name="gsrr"
              value="4"
              c:identifier="AS_CONTENT_RATING_SYSTEM_GSRR"
              glib:nick="gsrr"
              glib:name="AS_CONTENT_RATING_SYSTEM_GSRR">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="55">GSRR</doc>
      </member>
      <member name="pegi"
              value="5"
              c:identifier="AS_CONTENT_RATING_SYSTEM_PEGI"
              glib:nick="pegi"
              glib:name="AS_CONTENT_RATING_SYSTEM_PEGI">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="56">PEGI</doc>
      </member>
      <member name="kavi"
              value="6"
              c:identifier="AS_CONTENT_RATING_SYSTEM_KAVI"
              glib:nick="kavi"
              glib:name="AS_CONTENT_RATING_SYSTEM_KAVI">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="57">KAVI</doc>
      </member>
      <member name="usk"
              value="7"
              c:identifier="AS_CONTENT_RATING_SYSTEM_USK"
              glib:nick="usk"
              glib:name="AS_CONTENT_RATING_SYSTEM_USK">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="58">USK</doc>
      </member>
      <member name="esra"
              value="8"
              c:identifier="AS_CONTENT_RATING_SYSTEM_ESRA"
              glib:nick="esra"
              glib:name="AS_CONTENT_RATING_SYSTEM_ESRA">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="59">ESRA</doc>
      </member>
      <member name="cero"
              value="9"
              c:identifier="AS_CONTENT_RATING_SYSTEM_CERO"
              glib:nick="cero"
              glib:name="AS_CONTENT_RATING_SYSTEM_CERO">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="60">CERO</doc>
      </member>
      <member name="oflcnz"
              value="10"
              c:identifier="AS_CONTENT_RATING_SYSTEM_OFLCNZ"
              glib:nick="oflcnz"
              glib:name="AS_CONTENT_RATING_SYSTEM_OFLCNZ">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="61">OFLCNZ</doc>
      </member>
      <member name="russia"
              value="11"
              c:identifier="AS_CONTENT_RATING_SYSTEM_RUSSIA"
              glib:nick="russia"
              glib:name="AS_CONTENT_RATING_SYSTEM_RUSSIA">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="62">Russia</doc>
      </member>
      <member name="mda"
              value="12"
              c:identifier="AS_CONTENT_RATING_SYSTEM_MDA"
              glib:nick="mda"
              glib:name="AS_CONTENT_RATING_SYSTEM_MDA">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="63">MDA</doc>
      </member>
      <member name="grac"
              value="13"
              c:identifier="AS_CONTENT_RATING_SYSTEM_GRAC"
              glib:nick="grac"
              glib:name="AS_CONTENT_RATING_SYSTEM_GRAC">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="64">GRAC</doc>
      </member>
      <member name="esrb"
              value="14"
              c:identifier="AS_CONTENT_RATING_SYSTEM_ESRB"
              glib:nick="esrb"
              glib:name="AS_CONTENT_RATING_SYSTEM_ESRB">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="65">ESRB</doc>
      </member>
      <member name="iarc"
              value="15"
              c:identifier="AS_CONTENT_RATING_SYSTEM_IARC"
              glib:nick="iarc"
              glib:name="AS_CONTENT_RATING_SYSTEM_IARC">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="66">IARC</doc>
      </member>
      <function name="format_age"
                c:identifier="as_content_rating_system_format_age"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="293">Format @age as a human-readable string in the given rating @system. This is
the way to present system-specific strings in a UI.</doc>
        <source-position filename="src/as-content-rating.h" line="122"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="301">a newly allocated formatted version of
   @age, or %NULL if the given @system has no representation for @age</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="295">an #AsContentRatingSystem</doc>
            <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
          </parameter>
          <parameter name="age" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="296">a CSM age to format</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_locale"
                c:identifier="as_content_rating_system_from_locale"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="683">Determine the most appropriate #AsContentRatingSystem for the given @locale.
Content rating systems are selected by territory. If no content rating system
seems suitable, %AS_CONTENT_RATING_SYSTEM_IARC is returned.</doc>
        <source-position filename="src/as-content-rating.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="691">the most relevant #AsContentRatingSystem</doc>
          <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
        </return-value>
        <parameters>
          <parameter name="locale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="685">a locale, in the format described in `man 3 setlocale`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_csm_ages"
                c:identifier="as_content_rating_system_get_csm_ages"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="580">Get the CSM ages corresponding to the entries returned by
as_content_rating_system_get_formatted_ages() for this @system.</doc>
        <source-position filename="src/as-content-rating.h" line="128"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="589">an array of CSM ages</doc>
          <array length="1" zero-terminated="0" c:type="const guint*">
            <type name="guint" c:type="guint"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="582">an #AsContentRatingSystem</doc>
            <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
          </parameter>
          <parameter name="length_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="583">return location for the length of the
   returned array</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_formatted_ages"
                c:identifier="as_content_rating_system_get_formatted_ages"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="523">Get an array of all the possible return values of
as_content_rating_system_format_age() for the given @system. The array is
sorted with youngest CSM age first.</doc>
        <source-position filename="src/as-content-rating.h" line="127"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="531">%NULL-terminated array of human-readable age strings</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="525">an #AsContentRatingSystem</doc>
            <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_content_rating_system_to_string"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="263">Get a human-readable string to identify @system. %NULL will be returned for
%AS_CONTENT_RATING_SYSTEM_UNKNOWN.</doc>
        <source-position filename="src/as-content-rating.h" line="121"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="270">a human-readable string for @system, or %NULL if unknown</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="system" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="265">an #AsContentRatingSystem</doc>
            <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ContentRatingValue"
                 glib:type-name="AsContentRatingValue"
                 glib:get-type="as_content_rating_value_get_type"
                 c:type="AsContentRatingValue">
      <doc xml:space="preserve"
           filename="src/as-content-rating.h"
           line="93">The specified level of an content_rating rating ID.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_CONTENT_RATING_VALUE_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_CONTENT_RATING_VALUE_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="95">Unknown value</doc>
      </member>
      <member name="none"
              value="1"
              c:identifier="AS_CONTENT_RATING_VALUE_NONE"
              glib:nick="none"
              glib:name="AS_CONTENT_RATING_VALUE_NONE">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="96">None</doc>
      </member>
      <member name="mild"
              value="2"
              c:identifier="AS_CONTENT_RATING_VALUE_MILD"
              glib:nick="mild"
              glib:name="AS_CONTENT_RATING_VALUE_MILD">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="97">A small amount</doc>
      </member>
      <member name="moderate"
              value="3"
              c:identifier="AS_CONTENT_RATING_VALUE_MODERATE"
              glib:nick="moderate"
              glib:name="AS_CONTENT_RATING_VALUE_MODERATE">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="98">A moderate amount</doc>
      </member>
      <member name="intense"
              value="4"
              c:identifier="AS_CONTENT_RATING_VALUE_INTENSE"
              glib:nick="intense"
              glib:name="AS_CONTENT_RATING_VALUE_INTENSE">
        <doc xml:space="preserve"
             filename="src/as-content-rating.h"
             line="99">An intense amount</doc>
      </member>
      <function name="from_string"
                c:identifier="as_content_rating_value_from_string"
                version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="219">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-content-rating.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="225">a #AsContentRatingValue or %AS_CONTENT_RATING_VALUE_UNKNOWN for unknown</doc>
          <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="221">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_content_rating_value_to_string"
                version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="195">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-content-rating.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="201">string version of @value</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-content-rating.c"
                 line="197">the #AsContentRatingValue.</doc>
            <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Context"
           c:symbol-prefix="context"
           c:type="AsContext"
           parent="GObject.Object"
           glib:type-name="AsContext"
           glib:get-type="as_context_get_type"
           glib:type-struct="ContextClass">
      <source-position filename="src/as-context.h" line="46"/>
      <constructor name="new" c:identifier="as_context_new">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="521">Creates a new #AsContext.</doc>
        <source-position filename="src/as-context.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="526">an #AsContext</doc>
          <type name="Context" c:type="AsContext*"/>
        </return-value>
      </constructor>
      <method name="get_filename" c:identifier="as_context_get_filename">
        <source-position filename="src/as-context.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="367">The name of the file the data originates from.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="365">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_format_version"
              c:identifier="as_context_get_format_version">
        <source-position filename="src/as-context.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="143">The AppStream format version.</doc>
          <type name="FormatVersion" c:type="AsFormatVersion"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="141">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale" c:identifier="as_context_get_locale">
        <source-position filename="src/as-context.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="251">The active locale.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="249">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale_all_enabled"
              c:identifier="as_context_get_locale_all_enabled">
        <source-position filename="src/as-context.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="287">%TRUE if all locale should be parsed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="285">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_baseurl"
              c:identifier="as_context_get_media_baseurl">
        <source-position filename="src/as-context.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="313">The media base URL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="311">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin" c:identifier="as_context_get_origin">
        <source-position filename="src/as-context.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="224">The data origin.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="222">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority" c:identifier="as_context_get_priority">
        <source-position filename="src/as-context.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="197">The data priority.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="195">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_style" c:identifier="as_context_get_style">
        <source-position filename="src/as-context.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="170">The document style.</doc>
          <type name="FormatStyle" c:type="AsFormatStyle"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="168">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_media_baseurl"
              c:identifier="as_context_has_media_baseurl">
        <source-position filename="src/as-context.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="300">%TRUE if a media base URL is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="298">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_filename" c:identifier="as_context_set_filename">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="376">Sets the file name we are loading data from.</doc>
        <source-position filename="src/as-context.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="378">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
          <parameter name="fname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="379">the new file name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_format_version"
              c:identifier="as_context_set_format_version">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="152">Sets the AppStream format version.</doc>
        <source-position filename="src/as-context.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="154">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
          <parameter name="ver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="155">the new format version.</doc>
            <type name="FormatVersion" c:type="AsFormatVersion"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale" c:identifier="as_context_set_locale">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="260">Sets the active locale.</doc>
        <source-position filename="src/as-context.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="262">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="263">the new value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_media_baseurl"
              c:identifier="as_context_set_media_baseurl">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="322">Sets the media base URL.</doc>
        <source-position filename="src/as-context.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="324">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="325">the new value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_origin" c:identifier="as_context_set_origin">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="233">Sets the data origin.</doc>
        <source-position filename="src/as-context.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="235">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="236">the new value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_priority" c:identifier="as_context_set_priority">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="206">Sets the data priority.</doc>
        <source-position filename="src/as-context.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="208">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="209">the new priority.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_style" c:identifier="as_context_set_style">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="179">Sets the AppStream document style.</doc>
        <source-position filename="src/as-context.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="181">a #AsContext instance.</doc>
            <type name="Context" c:type="AsContext*"/>
          </instance-parameter>
          <parameter name="style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="182">the new document style.</doc>
            <type name="FormatStyle" c:type="AsFormatStyle"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ContextClass"
            c:type="AsContextClass"
            glib:is-gtype-struct-for="Context">
      <source-position filename="src/as-context.h" line="46"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-context.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-context.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-context.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-context.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-context.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-context.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ControlKind"
                 glib:type-name="AsControlKind"
                 glib:get-type="as_control_kind_get_type"
                 c:type="AsControlKind">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="141">Kind of an input method for users to control software</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_CONTROL_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_CONTROL_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="143">Unknown kind</doc>
      </member>
      <member name="pointing"
              value="1"
              c:identifier="AS_CONTROL_KIND_POINTING"
              glib:nick="pointing"
              glib:name="AS_CONTROL_KIND_POINTING">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="144">Mouse/cursors/other pointing device</doc>
      </member>
      <member name="keyboard"
              value="2"
              c:identifier="AS_CONTROL_KIND_KEYBOARD"
              glib:nick="keyboard"
              glib:name="AS_CONTROL_KIND_KEYBOARD">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="145">Keyboard input</doc>
      </member>
      <member name="console"
              value="3"
              c:identifier="AS_CONTROL_KIND_CONSOLE"
              glib:nick="console"
              glib:name="AS_CONTROL_KIND_CONSOLE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="146">Console / command-line interface</doc>
      </member>
      <member name="touch"
              value="4"
              c:identifier="AS_CONTROL_KIND_TOUCH"
              glib:nick="touch"
              glib:name="AS_CONTROL_KIND_TOUCH">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="147">Touch input</doc>
      </member>
      <member name="gamepad"
              value="5"
              c:identifier="AS_CONTROL_KIND_GAMEPAD"
              glib:nick="gamepad"
              glib:name="AS_CONTROL_KIND_GAMEPAD">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="148">Gamepad input (any game controller with wheels/buttons/joysticks)</doc>
      </member>
      <member name="voice"
              value="6"
              c:identifier="AS_CONTROL_KIND_VOICE"
              glib:nick="voice"
              glib:name="AS_CONTROL_KIND_VOICE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="149">Control via voice recognition/activation</doc>
      </member>
      <member name="vision"
              value="7"
              c:identifier="AS_CONTROL_KIND_VISION"
              glib:nick="vision"
              glib:name="AS_CONTROL_KIND_VISION">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="150">Computer vision / visual object and sign detection</doc>
      </member>
      <member name="tv_remote"
              value="8"
              c:identifier="AS_CONTROL_KIND_TV_REMOTE"
              glib:nick="tv-remote"
              glib:name="AS_CONTROL_KIND_TV_REMOTE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="151">Input via a television remote</doc>
      </member>
      <member name="tablet"
              value="9"
              c:identifier="AS_CONTROL_KIND_TABLET"
              glib:nick="tablet"
              glib:name="AS_CONTROL_KIND_TABLET">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="152">Graphics tablet input</doc>
      </member>
      <function name="from_string"
                c:identifier="as_control_kind_from_string"
                version="0.12.11">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="329">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-relation.h" line="261"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="335">a #AsControlKind or %AS_CONTROL_KIND_UNKNOWN for unknown</doc>
          <type name="ControlKind" c:type="AsControlKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="331">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_control_kind_to_string"
                version="0.12.11">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="295">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-relation.h" line="260"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="301">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="297">the #AsControlKind.</doc>
            <type name="ControlKind" c:type="AsControlKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <bitfield name="DataIdMatchFlags"
              glib:type-name="AsDataIdMatchFlags"
              glib:get-type="as_data_id_match_flags_get_type"
              c:type="AsDataIdMatchFlags">
      <doc xml:space="preserve"
           filename="src/as-utils.h"
           line="47">The flags used when matching unique IDs.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_DATA_ID_MATCH_FLAG_NONE"
              glib:nick="none"
              glib:name="AS_DATA_ID_MATCH_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="49">No flags set</doc>
      </member>
      <member name="scope"
              value="1"
              c:identifier="AS_DATA_ID_MATCH_FLAG_SCOPE"
              glib:nick="scope"
              glib:name="AS_DATA_ID_MATCH_FLAG_SCOPE">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="50">Scope, e.g. a #AsComponentScope</doc>
      </member>
      <member name="bundle_kind"
              value="2"
              c:identifier="AS_DATA_ID_MATCH_FLAG_BUNDLE_KIND"
              glib:nick="bundle-kind"
              glib:name="AS_DATA_ID_MATCH_FLAG_BUNDLE_KIND">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="51">Bundle kind, e.g. a #AsBundleKind</doc>
      </member>
      <member name="origin"
              value="4"
              c:identifier="AS_DATA_ID_MATCH_FLAG_ORIGIN"
              glib:nick="origin"
              glib:name="AS_DATA_ID_MATCH_FLAG_ORIGIN">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="52">Origin</doc>
      </member>
      <member name="id"
              value="8"
              c:identifier="AS_DATA_ID_MATCH_FLAG_ID"
              glib:nick="id"
              glib:name="AS_DATA_ID_MATCH_FLAG_ID">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="53">Component AppStream ID</doc>
      </member>
      <member name="branch"
              value="16"
              c:identifier="AS_DATA_ID_MATCH_FLAG_BRANCH"
              glib:nick="branch"
              glib:name="AS_DATA_ID_MATCH_FLAG_BRANCH">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="54">Branch</doc>
      </member>
    </bitfield>
    <enumeration name="DisplayLengthKind"
                 glib:type-name="AsDisplayLengthKind"
                 glib:get-type="as_display_length_kind_get_type"
                 c:type="AsDisplayLengthKind">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="187">A rough estimate of how large a given display length is.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_DISPLAY_LENGTH_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_DISPLAY_LENGTH_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="189">Unknown</doc>
      </member>
      <member name="xsmall"
              value="1"
              c:identifier="AS_DISPLAY_LENGTH_KIND_XSMALL"
              glib:nick="xsmall"
              glib:name="AS_DISPLAY_LENGTH_KIND_XSMALL">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="190">Very small display</doc>
      </member>
      <member name="small"
              value="2"
              c:identifier="AS_DISPLAY_LENGTH_KIND_SMALL"
              glib:nick="small"
              glib:name="AS_DISPLAY_LENGTH_KIND_SMALL">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="191">Small display</doc>
      </member>
      <member name="medium"
              value="3"
              c:identifier="AS_DISPLAY_LENGTH_KIND_MEDIUM"
              glib:nick="medium"
              glib:name="AS_DISPLAY_LENGTH_KIND_MEDIUM">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="192">Medium display</doc>
      </member>
      <member name="large"
              value="4"
              c:identifier="AS_DISPLAY_LENGTH_KIND_LARGE"
              glib:nick="large"
              glib:name="AS_DISPLAY_LENGTH_KIND_LARGE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="193">Large display</doc>
      </member>
      <member name="xlarge"
              value="5"
              c:identifier="AS_DISPLAY_LENGTH_KIND_XLARGE"
              glib:nick="xlarge"
              glib:name="AS_DISPLAY_LENGTH_KIND_XLARGE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="194">Very large display</doc>
      </member>
      <function name="from_string"
                c:identifier="as_display_length_kind_from_string"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="459">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-relation.h" line="267"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="465">a #AsDisplayLengthKind or %AS_DISPLAY_LENGTH_KIND_UNKNOWN for unknown</doc>
          <type name="DisplayLengthKind" c:type="AsDisplayLengthKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="461">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_display_length_kind_to_string"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="485">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-relation.h" line="266"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="491">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="487">the #AsDisplayLengthKind.</doc>
            <type name="DisplayLengthKind" c:type="AsDisplayLengthKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="DisplaySideKind"
                 glib:type-name="AsDisplaySideKind"
                 glib:get-type="as_display_side_kind_get_type"
                 c:type="AsDisplaySideKind">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="171">Side a display_length requirement is for.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_DISPLAY_SIDE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_DISPLAY_SIDE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="173">Unknown</doc>
      </member>
      <member name="shortest"
              value="1"
              c:identifier="AS_DISPLAY_SIDE_KIND_SHORTEST"
              glib:nick="shortest"
              glib:name="AS_DISPLAY_SIDE_KIND_SHORTEST">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="174">Shortest side of the display rectangle.</doc>
      </member>
      <member name="longest"
              value="2"
              c:identifier="AS_DISPLAY_SIDE_KIND_LONGEST"
              glib:nick="longest"
              glib:name="AS_DISPLAY_SIDE_KIND_LONGEST">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="175">Longest side of the display rectangle.</doc>
      </member>
      <function name="from_string"
                c:identifier="as_display_side_kind_from_string"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="383">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-relation.h" line="264"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="389">a #AsDisplaySideKind or %AS_DISPLAY_SIDE_KIND_UNKNOWN for unknown</doc>
          <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="385">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_display_side_kind_to_string"
                version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="363">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-relation.h" line="263"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="369">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="365">the #AsDisplaySideKind.</doc>
            <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="FormatKind"
                 glib:type-name="AsFormatKind"
                 glib:get-type="as_format_kind_get_type"
                 c:type="AsFormatKind">
      <doc xml:space="preserve"
           filename="src/as-enums.h"
           line="57">Format of the AppStream metadata.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_FORMAT_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_FORMAT_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="59">Unknown metadata format.</doc>
      </member>
      <member name="xml"
              value="1"
              c:identifier="AS_FORMAT_KIND_XML"
              glib:nick="xml"
              glib:name="AS_FORMAT_KIND_XML">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="60">AppStream XML metadata.</doc>
      </member>
      <member name="yaml"
              value="2"
              c:identifier="AS_FORMAT_KIND_YAML"
              glib:nick="yaml"
              glib:name="AS_FORMAT_KIND_YAML">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="61">AppStream YAML (DEP-11) metadata.</doc>
      </member>
      <member name="desktop_entry"
              value="3"
              c:identifier="AS_FORMAT_KIND_DESKTOP_ENTRY"
              glib:nick="desktop-entry"
              glib:name="AS_FORMAT_KIND_DESKTOP_ENTRY">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="62">XDG Desktop Entry data.</doc>
      </member>
      <function name="from_string"
                c:identifier="as_format_kind_from_string"
                version="0.10">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="49">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-enums.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="55">a #AsFormatKind or %AS_FORMAT_KIND_UNKNOWN for unknown</doc>
          <type name="FormatKind" c:type="AsFormatKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-enums.c"
                 line="51">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_format_kind_to_string"
                version="0.10">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="29">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-enums.h" line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="35">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-enums.c"
                 line="31">the #AsFormatKind.</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="FormatStyle"
                 glib:type-name="AsFormatStyle"
                 glib:get-type="as_format_style_get_type"
                 c:type="AsFormatStyle">
      <doc xml:space="preserve"
           filename="src/as-enums.h"
           line="38">There are a few differences between AppStream's metainfo files (shipped by upstream projects)
and the catalog metadata (shipped by distributors).
The data source kind indicates which style we should process.
Usually you do not want to set this explicitly.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_FORMAT_STYLE_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_FORMAT_STYLE_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="40">The format style is unknown.</doc>
      </member>
      <member name="metainfo"
              value="1"
              c:identifier="AS_FORMAT_STYLE_METAINFO"
              glib:nick="metainfo"
              glib:name="AS_FORMAT_STYLE_METAINFO">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="41">Parse AppStream upstream metadata (metainfo files)</doc>
      </member>
      <member name="catalog"
              value="2"
              c:identifier="AS_FORMAT_STYLE_CATALOG"
              glib:nick="catalog"
              glib:name="AS_FORMAT_STYLE_CATALOG">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="42">Parse AppStream metadata catalog (shipped by software distributors)</doc>
      </member>
    </enumeration>
    <enumeration name="FormatVersion"
                 glib:type-name="AsFormatVersion"
                 glib:get-type="as_format_version_get_type"
                 c:type="AsFormatVersion">
      <doc xml:space="preserve"
           filename="src/as-context.h"
           line="48">Format version / API level of the AppStream metadata.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_FORMAT_VERSION_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_FORMAT_VERSION_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-context.h"
             line="50">Unknown format version</doc>
      </member>
      <member name="v1_0"
              value="1"
              c:identifier="AS_FORMAT_VERSION_V1_0"
              glib:nick="v1-0"
              glib:name="AS_FORMAT_VERSION_V1_0">
        <doc xml:space="preserve"
             filename="src/as-context.h"
             line="51">1.0</doc>
      </member>
      <function name="from_string"
                c:identifier="as_format_version_from_string"
                version="0.10">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="82">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-context.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="88">a #AsFormatVersion. For unknown, the highest version
number is assumed.</doc>
          <type name="FormatVersion" c:type="AsFormatVersion"/>
        </return-value>
        <parameters>
          <parameter name="version_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="84">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_format_version_to_string"
                version="0.10">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="64">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-context.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="70">string version of @version</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-context.c"
                 line="66">the #AsFormatKind.</doc>
            <type name="FormatVersion" c:type="AsFormatVersion"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Icon"
           c:symbol-prefix="icon"
           c:type="AsIcon"
           parent="GObject.Object"
           glib:type-name="AsIcon"
           glib:get-type="as_icon_get_type"
           glib:type-struct="IconClass">
      <source-position filename="src/as-icon.h" line="45"/>
      <constructor name="new" c:identifier="as_icon_new">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="467">Creates a new #AsIcon.</doc>
        <source-position filename="src/as-icon.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="472">a #AsIcon</doc>
          <type name="Icon" c:type="AsIcon*"/>
        </return-value>
      </constructor>
      <method name="get_filename" c:identifier="as_icon_get_filename">
        <source-position filename="src/as-icon.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="229">The absolute path for the icon on disk.
This is only set for icons of kind %AS_ICON_KIND_LOCAL or
%AS_ICON_KIND_CACHED.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="227">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height" c:identifier="as_icon_get_height">
        <source-position filename="src/as-icon.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="290">The icon height in pixels, or 0 if unknown.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="288">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_icon_get_kind">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="126">Gets the icon kind.</doc>
        <source-position filename="src/as-icon.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="132">the #AsIconKind</doc>
          <type name="IconKind" c:type="AsIconKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="128">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="as_icon_get_name">
        <source-position filename="src/as-icon.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="159">the stock name of the icon. In case the icon is not of kind
"stock", the basename of the icon filename or URL is returned.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="157">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scale"
              c:identifier="as_icon_get_scale"
              version="0.11.0">
        <source-position filename="src/as-icon.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="317">The icon scaling factor.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="315">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="as_icon_get_url">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="191">Gets the icon URL, pointing at a remote location. HTTPS and FTP urls are allowed.
This property is only set for icons of type %AS_ICON_KIND_REMOTE</doc>
        <source-position filename="src/as-icon.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="198">the URL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="193">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width" c:identifier="as_icon_get_width">
        <source-position filename="src/as-icon.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="263">The icon width in pixels, or 0 if unknown.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="261">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_filename" c:identifier="as_icon_set_filename">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="240">Sets the icon absolute filename.</doc>
        <source-position filename="src/as-icon.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="242">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="243">the new icon URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_height" c:identifier="as_icon_set_height">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="299">Sets the icon height.</doc>
        <source-position filename="src/as-icon.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="301">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="302">the height in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_icon_set_kind">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="141">Sets the icon kind.</doc>
        <source-position filename="src/as-icon.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="143">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="144">the #AsIconKind, e.g. %AS_ICON_KIND_CACHED.</doc>
            <type name="IconKind" c:type="AsIconKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="as_icon_set_name">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="177">Sets the stock name or basename to use for the icon.</doc>
        <source-position filename="src/as-icon.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="179">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="180">the icon stock name, e.g. "gwenview"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scale"
              c:identifier="as_icon_set_scale"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="328">Sets the icon scaling factor used for HiDPI displays.</doc>
        <source-position filename="src/as-icon.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="330">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="331">the icon scaling factor.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="as_icon_set_url">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="211">Sets the icon URL.</doc>
        <source-position filename="src/as-icon.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="213">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="214">the new icon URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width" c:identifier="as_icon_set_width">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="272">Sets the icon width.</doc>
        <source-position filename="src/as-icon.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="274">a #AsIcon instance.</doc>
            <type name="Icon" c:type="AsIcon*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="275">the width in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="IconClass"
            c:type="AsIconClass"
            glib:is-gtype-struct-for="Icon">
      <source-position filename="src/as-icon.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-icon.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-icon.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-icon.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-icon.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-icon.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-icon.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="IconKind"
                 glib:type-name="AsIconKind"
                 glib:get-type="as_icon_kind_get_type"
                 c:type="AsIconKind">
      <doc xml:space="preserve"
           filename="src/as-icon.h"
           line="47">The icon type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_ICON_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_ICON_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-icon.h"
             line="49">Unknown icon kind</doc>
      </member>
      <member name="cached"
              value="1"
              c:identifier="AS_ICON_KIND_CACHED"
              glib:nick="cached"
              glib:name="AS_ICON_KIND_CACHED">
        <doc xml:space="preserve"
             filename="src/as-icon.h"
             line="50">Icon in the internal caches</doc>
      </member>
      <member name="stock"
              value="2"
              c:identifier="AS_ICON_KIND_STOCK"
              glib:nick="stock"
              glib:name="AS_ICON_KIND_STOCK">
        <doc xml:space="preserve"
             filename="src/as-icon.h"
             line="51">Stock icon name</doc>
      </member>
      <member name="local"
              value="3"
              c:identifier="AS_ICON_KIND_LOCAL"
              glib:nick="local"
              glib:name="AS_ICON_KIND_LOCAL">
        <doc xml:space="preserve"
             filename="src/as-icon.h"
             line="52">Local icon name</doc>
      </member>
      <member name="remote"
              value="4"
              c:identifier="AS_ICON_KIND_REMOTE"
              glib:nick="remote"
              glib:name="AS_ICON_KIND_REMOTE">
        <doc xml:space="preserve"
             filename="src/as-icon.h"
             line="53">Remote icon URL</doc>
      </member>
      <function name="from_string" c:identifier="as_icon_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="68">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-icon.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="74">a #AsIconKind or %AS_ICON_KIND_UNKNOWN for unknown</doc>
          <type name="IconKind" c:type="AsIconKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="70">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_icon_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="46">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-icon.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="52">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-icon.c"
                 line="48">the %AsIconKind.</doc>
            <type name="IconKind" c:type="AsIconKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Image"
           c:symbol-prefix="image"
           c:type="AsImage"
           parent="GObject.Object"
           glib:type-name="AsImage"
           glib:get-type="as_image_get_type"
           glib:type-struct="ImageClass">
      <source-position filename="src/as-image.h" line="45"/>
      <constructor name="new" c:identifier="as_image_new">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="484">Creates a new #AsImage.</doc>
        <source-position filename="src/as-image.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="489">a #AsImage</doc>
          <type name="Image" c:type="AsImage*"/>
        </return-value>
      </constructor>
      <method name="get_height" c:identifier="as_image_get_height">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="205">Gets the image height.</doc>
        <source-position filename="src/as-image.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="211">height in pixels</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="207">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_image_get_kind">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="127">Gets the image kind.</doc>
        <source-position filename="src/as-image.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="133">the #AsImageKind</doc>
          <type name="ImageKind" c:type="AsImageKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="129">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale"
              c:identifier="as_image_get_locale"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="236">Get locale for this image.</doc>
        <source-position filename="src/as-image.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="242">Locale string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="238">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="as_image_get_url">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="143">Gets the full qualified URL for the image, usually pointing at some mirror.</doc>
        <source-position filename="src/as-image.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="149">URL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="145">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width" c:identifier="as_image_get_width">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="174">Gets the image width.</doc>
        <source-position filename="src/as-image.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="180">width in pixels</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="176">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_height" c:identifier="as_image_set_height">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="221">Sets the image height.</doc>
        <source-position filename="src/as-image.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="223">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="224">the height in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_image_set_kind">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="112">Sets the image kind.</doc>
        <source-position filename="src/as-image.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="114">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="115">the #AsImageKind, e.g. %AS_IMAGE_KIND_THUMBNAIL.</doc>
            <type name="ImageKind" c:type="AsImageKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale"
              c:identifier="as_image_set_locale"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="253">Sets the locale for this image.</doc>
        <source-position filename="src/as-image.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="255">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
          <parameter name="locale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="256">the BCP47 locale string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="as_image_set_url">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="159">Sets the fully-qualified mirror URL to use for the image.</doc>
        <source-position filename="src/as-image.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="161">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="162">the URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width" c:identifier="as_image_set_width">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="190">Sets the image width.</doc>
        <source-position filename="src/as-image.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="192">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="193">the width in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ImageClass"
            c:type="AsImageClass"
            glib:is-gtype-struct-for="Image">
      <source-position filename="src/as-image.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-image.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-image.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-image.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-image.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-image.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-image.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ImageKind"
                 glib:type-name="AsImageKind"
                 glib:get-type="as_image_kind_get_type"
                 c:type="AsImageKind">
      <doc xml:space="preserve"
           filename="src/as-image.h"
           line="47">The image type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_IMAGE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_IMAGE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-image.h"
             line="49">Type invalid or not known</doc>
      </member>
      <member name="source"
              value="1"
              c:identifier="AS_IMAGE_KIND_SOURCE"
              glib:nick="source"
              glib:name="AS_IMAGE_KIND_SOURCE">
        <doc xml:space="preserve"
             filename="src/as-image.h"
             line="50">The source image at full resolution</doc>
      </member>
      <member name="thumbnail"
              value="2"
              c:identifier="AS_IMAGE_KIND_THUMBNAIL"
              glib:nick="thumbnail"
              glib:name="AS_IMAGE_KIND_THUMBNAIL">
        <doc xml:space="preserve"
             filename="src/as-image.h"
             line="51">A thumbnail at reduced resolution</doc>
      </member>
      <function name="from_string" c:identifier="as_image_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="74">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-image.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="80">a #AsImageKind, or %AS_IMAGE_KIND_UNKNOWN for unknown.</doc>
          <type name="ImageKind" c:type="AsImageKind"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="76">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_image_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="93">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-image.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="99">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-image.c"
                 line="95">the #AsImageKind.</doc>
            <type name="ImageKind" c:type="AsImageKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="InternetKind"
                 version="0.15.5"
                 glib:type-name="AsInternetKind"
                 glib:get-type="as_internet_kind_get_type"
                 c:type="AsInternetKind">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="209">Different internet connectivity requirements or recommendations for an
application.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_INTERNET_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_INTERNET_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="211">Unknown</doc>
      </member>
      <member name="always"
              value="1"
              c:identifier="AS_INTERNET_KIND_ALWAYS"
              glib:nick="always"
              glib:name="AS_INTERNET_KIND_ALWAYS">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="212">Always requires/recommends internet</doc>
      </member>
      <member name="offline_only"
              value="2"
              c:identifier="AS_INTERNET_KIND_OFFLINE_ONLY"
              glib:nick="offline-only"
              glib:name="AS_INTERNET_KIND_OFFLINE_ONLY">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="213">Application is offline-only</doc>
      </member>
      <member name="first_run"
              value="3"
              c:identifier="AS_INTERNET_KIND_FIRST_RUN"
              glib:nick="first-run"
              glib:name="AS_INTERNET_KIND_FIRST_RUN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="214">Requires/Recommends internet on first run only</doc>
      </member>
      <function name="from_string"
                c:identifier="as_internet_kind_from_string"
                version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="511">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-relation.h" line="270"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="517">a #AsInternetKind or %AS_INTERNET_KIND_UNKNOWN for unknown</doc>
          <type name="InternetKind" c:type="AsInternetKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="513">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_internet_kind_to_string"
                version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="533">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-relation.h" line="269"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="539">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="535">the #AsInternetKind.</doc>
            <type name="InternetKind" c:type="AsInternetKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Issue"
           c:symbol-prefix="issue"
           c:type="AsIssue"
           parent="GObject.Object"
           glib:type-name="AsIssue"
           glib:get-type="as_issue_get_type"
           glib:type-struct="IssueClass">
      <source-position filename="src/as-issue.h" line="45"/>
      <constructor name="new" c:identifier="as_issue_new">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="335">Creates a new #AsIssue.</doc>
        <source-position filename="src/as-issue.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="340">an #AsIssue</doc>
          <type name="Issue" c:type="AsIssue*"/>
        </return-value>
      </constructor>
      <method name="get_id" c:identifier="as_issue_get_id">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="138">Gets the issue ID (usually a bug number or CVE ID)</doc>
        <source-position filename="src/as-issue.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="144">the ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="140">a #AsIssue instance.</doc>
            <type name="Issue" c:type="AsIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_issue_get_kind">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="109">Gets the issue type.</doc>
        <source-position filename="src/as-issue.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="115">the #AsIssueKind</doc>
          <type name="IssueKind" c:type="AsIssueKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="111">a #AsIssue instance.</doc>
            <type name="Issue" c:type="AsIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="as_issue_get_url">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="168">Gets the URL associacted with this issue, usually
referencing a bug report or issue description.</doc>
        <source-position filename="src/as-issue.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="175">the URL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="170">a #AsIssue instance.</doc>
            <type name="Issue" c:type="AsIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_id" c:identifier="as_issue_set_id">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="153">Sets the issue ID.</doc>
        <source-position filename="src/as-issue.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="155">a #AsIssue instance.</doc>
            <type name="Issue" c:type="AsIssue*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="156">the new ID.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_issue_set_kind">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="124">Sets the issue type.</doc>
        <source-position filename="src/as-issue.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="126">a #AsIssue instance.</doc>
            <type name="Issue" c:type="AsIssue*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="127">the #AsIssueKind, e.g. %AS_ISSUE_KIND_SHA256.</doc>
            <type name="IssueKind" c:type="AsIssueKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="as_issue_set_url">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="189">Sets an URL describing this issue.</doc>
        <source-position filename="src/as-issue.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="191">a #AsIssue instance.</doc>
            <type name="Issue" c:type="AsIssue*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="192">the new URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="IssueClass"
            c:type="AsIssueClass"
            glib:is-gtype-struct-for="Issue">
      <source-position filename="src/as-issue.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-issue.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-issue.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-issue.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-issue.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-issue.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-issue.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="IssueKind"
                 glib:type-name="AsIssueKind"
                 glib:get-type="as_issue_kind_get_type"
                 c:type="AsIssueKind">
      <doc xml:space="preserve"
           filename="src/as-issue.h"
           line="47">Checksums supported by #AsRelease</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_ISSUE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_ISSUE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-issue.h"
             line="49">Unknown issue type</doc>
      </member>
      <member name="generic"
              value="1"
              c:identifier="AS_ISSUE_KIND_GENERIC"
              glib:nick="generic"
              glib:name="AS_ISSUE_KIND_GENERIC">
        <doc xml:space="preserve"
             filename="src/as-issue.h"
             line="50">Generic issue type</doc>
      </member>
      <member name="cve"
              value="2"
              c:identifier="AS_ISSUE_KIND_CVE"
              glib:nick="cve"
              glib:name="AS_ISSUE_KIND_CVE">
        <doc xml:space="preserve"
             filename="src/as-issue.h"
             line="51">Common Vulnerabilities and Exposures issue</doc>
      </member>
      <function name="from_string" c:identifier="as_issue_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="63">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-issue.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="69">a #AsIssueKind or %AS_ISSUE_KIND_UNKNOWN for unknown</doc>
          <type name="IssueKind" c:type="AsIssueKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="65">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_issue_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="45">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-issue.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="51">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-issue.c"
                 line="47">the %AsIssueKind.</doc>
            <type name="IssueKind" c:type="AsIssueKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="IssueSeverity"
                 glib:type-name="AsIssueSeverity"
                 glib:get-type="as_issue_severity_get_type"
                 c:type="AsIssueSeverity">
      <doc xml:space="preserve"
           filename="src/as-validator-issue.h"
           line="47">The severity of an issue found by #AsValidator</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_ISSUE_SEVERITY_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_ISSUE_SEVERITY_UNKNOWN">
      </member>
      <member name="error"
              value="1"
              c:identifier="AS_ISSUE_SEVERITY_ERROR"
              glib:nick="error"
              glib:name="AS_ISSUE_SEVERITY_ERROR">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.h"
             line="49">There is a serious, fatal error in your metadata</doc>
      </member>
      <member name="warning"
              value="2"
              c:identifier="AS_ISSUE_SEVERITY_WARNING"
              glib:nick="warning"
              glib:name="AS_ISSUE_SEVERITY_WARNING">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.h"
             line="50">Something metadata issue which should be fixed as soon as possible.</doc>
      </member>
      <member name="info"
              value="3"
              c:identifier="AS_ISSUE_SEVERITY_INFO"
              glib:nick="info"
              glib:name="AS_ISSUE_SEVERITY_INFO">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.h"
             line="51">Non-essential information on how to improve metadata, no immediate action needed.</doc>
      </member>
      <member name="pedantic"
              value="4"
              c:identifier="AS_ISSUE_SEVERITY_PEDANTIC"
              glib:nick="pedantic"
              glib:name="AS_ISSUE_SEVERITY_PEDANTIC">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.h"
             line="52">Pedantic information about ways to improve the data, but could also be ignored.</doc>
      </member>
      <function name="from_string"
                c:identifier="as_issue_severity_from_string">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="49">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-validator-issue.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="55">a #AsIssueSeverity, or %AS_ISSUE_SEVERITY_UNKNOWN for unknown.</doc>
          <type name="IssueSeverity" c:type="AsIssueSeverity"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="51">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_issue_severity_to_string">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="72">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-validator-issue.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="78">string version of @severity</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="severity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="74">the #AsIssueSeverity.</doc>
            <type name="IssueSeverity" c:type="AsIssueSeverity"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Launchable"
           c:symbol-prefix="launchable"
           c:type="AsLaunchable"
           parent="GObject.Object"
           glib:type-name="AsLaunchable"
           glib:get-type="as_launchable_get_type"
           glib:type-struct="LaunchableClass">
      <source-position filename="src/as-launchable.h" line="45"/>
      <constructor name="new"
                   c:identifier="as_launchable_new"
                   version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="268">Creates a new #AsLaunchable.</doc>
        <source-position filename="src/as-launchable.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-launchable.c"
               line="273">a #AsLaunchable</doc>
          <type name="Launchable" c:type="AsLaunchable*"/>
        </return-value>
      </constructor>
      <method name="add_entry"
              c:identifier="as_launchable_add_entry"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="184">Add a new launchable entry.</doc>
        <source-position filename="src/as-launchable.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="launch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-launchable.c"
                 line="186">a #AsLaunchable instance.</doc>
            <type name="Launchable" c:type="AsLaunchable*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_entries"
              c:identifier="as_launchable_get_entries"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="167">Get an array of launchable entries.</doc>
        <source-position filename="src/as-launchable.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-launchable.c"
               line="173">An string list of launch entries.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="launch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-launchable.c"
                 line="169">a #AsLaunchable instance.</doc>
            <type name="Launchable" c:type="AsLaunchable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="as_launchable_get_kind"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="132">The launch system for the entries this #AsLaunchable
object stores.</doc>
        <source-position filename="src/as-launchable.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-launchable.c"
               line="139">an enum of type #AsLaunchableKind</doc>
          <type name="LaunchableKind" c:type="AsLaunchableKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="launch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-launchable.c"
                 line="134">a #AsLaunchable instance.</doc>
            <type name="Launchable" c:type="AsLaunchable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="as_launchable_set_kind"
              version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="150">Set the launch system for the entries this #AsLaunchable
object stores.</doc>
        <source-position filename="src/as-launchable.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="launch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-launchable.c"
                 line="152">a #AsLaunchable instance.</doc>
            <type name="Launchable" c:type="AsLaunchable*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-launchable.c"
                 line="153">the new #AsLaunchableKind</doc>
            <type name="LaunchableKind" c:type="AsLaunchableKind"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="LaunchableClass"
            c:type="AsLaunchableClass"
            glib:is-gtype-struct-for="Launchable">
      <source-position filename="src/as-launchable.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-launchable.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-launchable.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-launchable.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-launchable.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-launchable.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-launchable.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="LaunchableKind"
                 glib:type-name="AsLaunchableKind"
                 glib:get-type="as_launchable_kind_get_type"
                 c:type="AsLaunchableKind">
      <doc xml:space="preserve"
           filename="src/as-launchable.h"
           line="47">Type of launch system the entries belong to.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_LAUNCHABLE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_LAUNCHABLE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-launchable.h"
             line="49">Unknown kind</doc>
      </member>
      <member name="desktop_id"
              value="1"
              c:identifier="AS_LAUNCHABLE_KIND_DESKTOP_ID"
              glib:nick="desktop-id"
              glib:name="AS_LAUNCHABLE_KIND_DESKTOP_ID">
        <doc xml:space="preserve"
             filename="src/as-launchable.h"
             line="50">Launch by desktop-id</doc>
      </member>
      <member name="service"
              value="2"
              c:identifier="AS_LAUNCHABLE_KIND_SERVICE"
              glib:nick="service"
              glib:name="AS_LAUNCHABLE_KIND_SERVICE">
        <doc xml:space="preserve"
             filename="src/as-launchable.h"
             line="51">A systemd/SysV-init service name</doc>
      </member>
      <member name="cockpit_manifest"
              value="3"
              c:identifier="AS_LAUNCHABLE_KIND_COCKPIT_MANIFEST"
              glib:nick="cockpit-manifest"
              glib:name="AS_LAUNCHABLE_KIND_COCKPIT_MANIFEST">
        <doc xml:space="preserve"
             filename="src/as-launchable.h"
             line="52">A Cockpit manifest / package name</doc>
      </member>
      <member name="url"
              value="4"
              c:identifier="AS_LAUNCHABLE_KIND_URL"
              glib:nick="url"
              glib:name="AS_LAUNCHABLE_KIND_URL">
        <doc xml:space="preserve"
             filename="src/as-launchable.h"
             line="53">A web HTTPS URL to launch a web application from</doc>
      </member>
      <function name="from_string"
                c:identifier="as_launchable_kind_from_string"
                version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="72">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-launchable.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-launchable.c"
               line="78">a #AsLaunchableKind or %AS_LAUNCHABLE_KIND_UNKNOWN for unknown</doc>
          <type name="LaunchableKind" c:type="AsLaunchableKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-launchable.c"
                 line="74">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_launchable_kind_to_string"
                version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="48">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-launchable.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-launchable.c"
               line="54">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-launchable.c"
                 line="50">the #AsLaunchableKind.</doc>
            <type name="LaunchableKind" c:type="AsLaunchableKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <constant name="MAJOR_VERSION" value="1" c:type="AS_MAJOR_VERSION">
      <source-position filename="src/as-version.h" line="34"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION" value="0" c:type="AS_MICRO_VERSION">
      <source-position filename="src/as-version.h" line="36"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION" value="0" c:type="AS_MINOR_VERSION">
      <source-position filename="src/as-version.h" line="35"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <enumeration name="MergeKind"
                 glib:type-name="AsMergeKind"
                 glib:get-type="as_merge_kind_get_type"
                 c:type="AsMergeKind">
      <doc xml:space="preserve"
           filename="src/as-component.h"
           line="113">Defines how #AsComponent data should be merged if the component is
set for merge.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_MERGE_KIND_NONE"
              glib:nick="none"
              glib:name="AS_MERGE_KIND_NONE">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="115">No merge is happening.</doc>
      </member>
      <member name="replace"
              value="1"
              c:identifier="AS_MERGE_KIND_REPLACE"
              glib:nick="replace"
              glib:name="AS_MERGE_KIND_REPLACE">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="116">Merge replacing data of target.</doc>
      </member>
      <member name="append"
              value="2"
              c:identifier="AS_MERGE_KIND_APPEND"
              glib:nick="append"
              glib:name="AS_MERGE_KIND_APPEND">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="117">Merge appending data to target.</doc>
      </member>
      <member name="remove_component"
              value="3"
              c:identifier="AS_MERGE_KIND_REMOVE_COMPONENT"
              glib:nick="remove-component"
              glib:name="AS_MERGE_KIND_REMOVE_COMPONENT">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="118">Remove the entire component if it matches.</doc>
      </member>
      <function name="from_string" c:identifier="as_merge_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="280">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-component.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="286">a #AsMergeKind or %AS_MERGE_KIND_NONE for unknown</doc>
          <type name="MergeKind" c:type="AsMergeKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="282">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_merge_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="257">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-component.h" line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="263">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="259">the #AsMergeKind.</doc>
            <type name="MergeKind" c:type="AsMergeKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Metadata"
           c:symbol-prefix="metadata"
           c:type="AsMetadata"
           parent="GObject.Object"
           glib:type-name="AsMetadata"
           glib:get-type="as_metadata_get_type"
           glib:type-struct="MetadataClass">
      <source-position filename="src/as-metadata.h" line="50"/>
      <constructor name="new" c:identifier="as_metadata_new">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1640">Creates a new #AsMetadata.</doc>
        <source-position filename="src/as-metadata.h" line="88"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1645">a #AsMetadata</doc>
          <type name="Metadata" c:type="AsMetadata*"/>
        </return-value>
      </constructor>
      <function name="file_guess_style"
                c:identifier="as_metadata_file_guess_style"
                version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="72">Guesses the AppStream metadata style (metainfo or catalog) based on
the filename.</doc>
        <source-position filename="src/as-metadata.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="79">An #AsFormatStyle, e.g. %AS_FORMAT_STYLE_METAINFO.</doc>
          <type name="FormatStyle" c:type="AsFormatStyle"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="74">a file name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_component" c:identifier="as_metadata_add_component">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1302">Add an #AsComponent to the list of components.
This can be used to add multiple components in order to
produce a distro-XML AppStream metadata file.</doc>
        <source-position filename="src/as-metadata.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="cpt" transfer-ownership="none">
            <type name="Component" c:type="AsComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_components"
              c:identifier="as_metadata_clear_components">
        <source-position filename="src/as-metadata.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="component_to_metainfo"
              c:identifier="as_metadata_component_to_metainfo"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1011">Convert an #AsComponent to metainfo data.
This will always be XML, YAML is no valid format for metainfo files.

The amount of localization included in the metadata depends on how the #AsComponent
was initially loaded and whether it contains data for all locale.

The first #AsComponent added to the internal list will be transformed.
In case no component is present, %NULL is returned.</doc>
        <source-position filename="src/as-metadata.h" line="129"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1026">A string containing the XML metadata. Free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1013">An instance of #AsMetadata.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1014">The format to use (XML or YAML)</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="components_to_catalog"
              c:identifier="as_metadata_components_to_catalog"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1257">Serialize all #AsComponent instances into AppStream
catalog metadata.
%NULL is returned if there is nothing to serialize.</doc>
        <source-position filename="src/as-metadata.h" line="137"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1267">A string containing the YAML or XML data. Free with g_free()</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1259">An instance of #AsMetadata.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1260">The format to serialize the data to (XML or YAML).</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_architecture"
              c:identifier="as_metadata_get_architecture">
        <source-position filename="src/as-metadata.h" line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1460">The architecture of AppStream distro metadata</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1458">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_component" c:identifier="as_metadata_get_component">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1316">Gets the #AsComponent which has been parsed from the XML.
If the AppStream XML contained multiple components, return the first
component that has been parsed.</doc>
        <source-position filename="src/as-metadata.h" line="122"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1324">An #AsComponent or %NULL</doc>
          <type name="Component" c:type="AsComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1318">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_components" c:identifier="as_metadata_get_components">
        <source-position filename="src/as-metadata.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1340">A #GPtrArray of all parsed components</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1338">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_format_style"
              c:identifier="as_metadata_get_format_style">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1562">Get the metadata parsing mode.</doc>
        <source-position filename="src/as-metadata.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="FormatStyle" c:type="AsFormatStyle"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1564">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_format_version"
              c:identifier="as_metadata_get_format_version">
        <source-position filename="src/as-metadata.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1473">The AppStream metadata format version.</doc>
          <type name="FormatVersion" c:type="AsFormatVersion"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1471">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale" c:identifier="as_metadata_get_locale">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1368">Gets the current active locale for parsing metadata,
or "ALL" if all locales are read.</doc>
        <source-position filename="src/as-metadata.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1375">Locale used for metadata parsing.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1370">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_baseurl"
              c:identifier="as_metadata_get_media_baseurl">
        <source-position filename="src/as-metadata.h" line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1432">The media URL prefix.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1430">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin" c:identifier="as_metadata_get_origin">
        <source-position filename="src/as-metadata.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1403">The origin of AppStream distro metadata</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1401">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parse_flags"
              c:identifier="as_metadata_get_parse_flags">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1589">Get the metadata parse flags.</doc>
        <source-position filename="src/as-metadata.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="ParseFlags" c:type="AsParseFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1591">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_existing"
              c:identifier="as_metadata_get_update_existing">
        <source-position filename="src/as-metadata.h" line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1518">Whether existing components should be updates with the parsed data,
         instead of creating new ones.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1516">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_write_header"
              c:identifier="as_metadata_get_write_header">
        <source-position filename="src/as-metadata.h" line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1553">Whether we will write a header/root node in catalog metadata.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1551">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="parse_bytes"
              c:identifier="as_metadata_parse_bytes"
              version="0.14.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="556">Parses any AppStream metadata into one or more #AsComponent instances.</doc>
        <source-position filename="src/as-metadata.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="565">%TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="558">An instance of #AsMetadata.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="559">Metadata describing one or more software components.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="560">The format of the data (XML or YAML).</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_data"
              c:identifier="as_metadata_parse_data"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="533">Parses any AppStream metadata into one or more #AsComponent instances.</doc>
        <source-position filename="src/as-metadata.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="543">%TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="535">An instance of #AsMetadata.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="536">Metadata describing one or more software components as string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data_len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="537">Length of @data, or -1 if length is unknown and @data is NULL-terminated.</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="538">The format of the data (XML or YAML).</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_desktop_data"
              c:identifier="as_metadata_parse_desktop_data"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="582">Parses XDG Desktop Entry metadata and adds it to the list of parsed entities.

Please note that not every desktop-entry file will result in a valid component
being generated, even if parsing succeeds without error (The desktiop-entry file
may be valid but not generate a component on purpose).</doc>
        <source-position filename="src/as-metadata.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="596">%TRUE if the file was parsed without error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="584">An instance of #AsMetadata.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="cid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="585">The component-id the new #AsComponent should have.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="586">Metadata describing one or more software components.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="data_len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="587">The data length, or -1 if unknown and null-terminated.</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_file"
              c:identifier="as_metadata_parse_file"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="643">Parses an AppStream upstream metadata file.

If @file does not exist, %G_IO_ERROR_NOT_FOUND will be returned. Other
#GIOErrors and #AsMetadataErrors may be returned as appropriate.</doc>
        <source-position filename="src/as-metadata.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="655">%TRUE if the file was parsed without error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="645">A valid #AsMetadata instance</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="646">#GFile for the upstream metadata</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="647">The format the data is in, or %AS_FORMAT_KIND_UNKNOWN if not known.</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_releases_bytes"
              c:identifier="as_metadata_parse_releases_bytes"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="753">Parses any AppStream release metadata into #AsRelease objects.</doc>
        <source-position filename="src/as-metadata.h" line="112"/>
        <return-value transfer-ownership="container" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="761">A list of releases or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="755">An instance of #AsMetadata.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="756">Metadata describing release notes.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_releases_file"
              c:identifier="as_metadata_parse_releases_file"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="798">Parses any AppStream release metadata into #AsRelease objects
using the provided file.</doc>
        <source-position filename="src/as-metadata.h" line="115"/>
        <return-value transfer-ownership="container" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="807">A list of releases or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="800">A valid #AsMetadata instance</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="801">#GFile for the release metadata</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="releases_to_data"
              c:identifier="as_metadata_releases_to_data"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="841">Convert a list of #Asrelease entities into a release metadata XML representation.</doc>
        <source-position filename="src/as-metadata.h" line="118"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="849">The XML representation or %NULL on error.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="843">A valid #AsMetadata instance</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="releases" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="844">the list of #Asrelease to convert.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="Release"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="save_catalog"
              c:identifier="as_metadata_save_catalog"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="986">Serialize all #AsComponent instances to XML or YAML metadata and save
the data to a file.
An existing file at the same location will be overridden.</doc>
        <source-position filename="src/as-metadata.h" line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="995">%TRUE if the file was written without error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="988">An instance of #AsMetadata.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="fname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="989">The filename for the new metadata file.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_metainfo"
              c:identifier="as_metadata_save_metainfo"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="962">Serialize #AsComponent instance to XML and save it to file.
An existing file at the same location will be overridden.</doc>
        <source-position filename="src/as-metadata.h" line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="970">%TRUE if the file was written without error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="fname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="964">The filename for the new metadata file.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="965">The format to save this file in. Only XML is supported at time.</doc>
            <type name="FormatKind" c:type="AsFormatKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_architecture"
              c:identifier="as_metadata_set_architecture">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1441">Set the architecture the components in this metadata belong to.</doc>
        <source-position filename="src/as-metadata.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1443">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="arch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1444">an architecture string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_format_style"
              c:identifier="as_metadata_set_format_style">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1575">Sets the current metadata parsing mode.</doc>
        <source-position filename="src/as-metadata.h" line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1577">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1578">the #AsFormatStyle.</doc>
            <type name="FormatStyle" c:type="AsFormatStyle"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_format_version"
              c:identifier="as_metadata_set_format_version">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1482">Set the current AppStream format version that we should generate data for
or be able to read.</doc>
        <source-position filename="src/as-metadata.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1484">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1485">the AppStream metadata format version as #AsFormatVersion.</doc>
            <type name="FormatVersion" c:type="AsFormatVersion"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale" c:identifier="as_metadata_set_locale">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1349">Sets the locale which should be read when processing metadata.
All other locales are ignored, which increases parsing speed and
reduces memory usage.
If you set the locale to "ALL", all locales will be read.</doc>
        <source-position filename="src/as-metadata.h" line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1351">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="locale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1352">the BCP47 locale.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_media_baseurl"
              c:identifier="as_metadata_set_media_baseurl">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1412">Set the base URL for all media links referenced in the metadata,
or %NULL if every component has absolute URLs.</doc>
        <source-position filename="src/as-metadata.h" line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1414">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1415">the base URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_origin" c:identifier="as_metadata_set_origin">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1384">Set the origin of AppStream distro metadata</doc>
        <source-position filename="src/as-metadata.h" line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1386">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="origin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1387">the origin of AppStream distro metadata.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parse_flags"
              c:identifier="as_metadata_set_parse_flags">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1602">Sets the current metadata parse flags.</doc>
        <source-position filename="src/as-metadata.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1604">a #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1605">the #AsParseFlags.</doc>
            <type name="ParseFlags" c:type="AsParseFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_existing"
              c:identifier="as_metadata_set_update_existing">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1497">If set to %TRUE, the parser will not create new components but
instead update existing components in the pool with new metadata.

NOTE: Right now, this feature is only implemented for metainfo XML parsing!</doc>
        <source-position filename="src/as-metadata.h" line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1499">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="update" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1500">A boolean value.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_write_header"
              c:identifier="as_metadata_set_write_header">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1528">If set to %TRUE, tehe metadata writer will omit writing a DEP-11
header document when in YAML mode, and will not write a root components node
when writing XML data.
Please keep in mind that this will create an invalid DEP-11 YAML AppStream
catalog metadata file, and an invalid XML file.
This parameter should only be changed e.g. by the appstream-generator tool.

NOTE: Right now, this feature is only implemented for YAML!</doc>
        <source-position filename="src/as-metadata.h" line="166"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="metad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1530">an #AsMetadata instance.</doc>
            <type name="Metadata" c:type="AsMetadata*"/>
          </instance-parameter>
          <parameter name="wheader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-metadata.c"
                 line="1531">A boolean value.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="MetadataClass"
            c:type="AsMetadataClass"
            glib:is-gtype-struct-for="Metadata">
      <source-position filename="src/as-metadata.h" line="50"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-metadata.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-metadata.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-metadata.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-metadata.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-metadata.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-metadata.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="MetadataError"
                 glib:type-name="AsMetadataError"
                 glib:get-type="as_metadata_error_get_type"
                 c:type="AsMetadataError"
                 glib:error-domain="AsMetadataError">
      <doc xml:space="preserve"
           filename="src/as-metadata.h"
           line="64">A metadata processing error.</doc>
      <member name="failed"
              value="0"
              c:identifier="AS_METADATA_ERROR_FAILED"
              glib:nick="failed"
              glib:name="AS_METADATA_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="src/as-metadata.h"
             line="66">Generic failure.</doc>
      </member>
      <member name="parse"
              value="1"
              c:identifier="AS_METADATA_ERROR_PARSE"
              glib:nick="parse"
              glib:name="AS_METADATA_ERROR_PARSE">
        <doc xml:space="preserve"
             filename="src/as-metadata.h"
             line="67">Unable to parse the metadata file.</doc>
      </member>
      <member name="format_unexpected"
              value="2"
              c:identifier="AS_METADATA_ERROR_FORMAT_UNEXPECTED"
              glib:nick="format-unexpected"
              glib:name="AS_METADATA_ERROR_FORMAT_UNEXPECTED">
        <doc xml:space="preserve"
             filename="src/as-metadata.h"
             line="68">Expected catalog metadata but got metainfo metadata, or vice versa.</doc>
      </member>
      <member name="no_component"
              value="3"
              c:identifier="AS_METADATA_ERROR_NO_COMPONENT"
              glib:nick="no-component"
              glib:name="AS_METADATA_ERROR_NO_COMPONENT">
        <doc xml:space="preserve"
             filename="src/as-metadata.h"
             line="69">We expected a component in the pool, but couldn't find one.</doc>
      </member>
      <member name="value_missing"
              value="4"
              c:identifier="AS_METADATA_ERROR_VALUE_MISSING"
              glib:nick="value-missing"
              glib:name="AS_METADATA_ERROR_VALUE_MISSING">
        <doc xml:space="preserve"
             filename="src/as-metadata.h"
             line="70">A essential value is missing in the source document.</doc>
      </member>
      <function name="quark" c:identifier="as_metadata_error_quark">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-metadata.c"
               line="1629">An error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <enumeration name="MetadataLocation"
                 glib:type-name="AsMetadataLocation"
                 glib:get-type="as_metadata_location_get_type"
                 c:type="AsMetadataLocation">
      <doc xml:space="preserve"
           filename="src/as-utils.h"
           line="69">The flags used when installing and removing metadata files.</doc>
      <member name="shared"
              value="0"
              c:identifier="AS_METADATA_LOCATION_SHARED"
              glib:nick="shared"
              glib:name="AS_METADATA_LOCATION_SHARED">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="71">Installed by the vendor, shared</doc>
      </member>
      <member name="state"
              value="1"
              c:identifier="AS_METADATA_LOCATION_STATE"
              glib:nick="state"
              glib:name="AS_METADATA_LOCATION_STATE">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="72">Installed as metadata into /var/lib, shared</doc>
      </member>
      <member name="cache"
              value="2"
              c:identifier="AS_METADATA_LOCATION_CACHE"
              glib:nick="cache"
              glib:name="AS_METADATA_LOCATION_CACHE">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="73">Installed as metadata into /var/cache, shared</doc>
      </member>
      <member name="user"
              value="3"
              c:identifier="AS_METADATA_LOCATION_USER"
              glib:nick="user"
              glib:name="AS_METADATA_LOCATION_USER">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="74">Installed for the current user</doc>
      </member>
    </enumeration>
    <bitfield name="ParseFlags"
              glib:type-name="AsParseFlags"
              glib:get-type="as_parse_flags_get_type"
              c:type="AsParseFlags">
      <doc xml:space="preserve"
           filename="src/as-metadata.h"
           line="52">Influence certain aspects of how AppStream metadata is parsed.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_PARSE_FLAG_NONE"
              glib:nick="none"
              glib:name="AS_PARSE_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/as-metadata.h"
             line="54">No flags.</doc>
      </member>
      <member name="ignore_mediabaseurl"
              value="1"
              c:identifier="AS_PARSE_FLAG_IGNORE_MEDIABASEURL"
              glib:nick="ignore-mediabaseurl"
              glib:name="AS_PARSE_FLAG_IGNORE_MEDIABASEURL">
        <doc xml:space="preserve"
             filename="src/as-metadata.h"
             line="55">Do not process the media_baseurl document property.</doc>
      </member>
    </bitfield>
    <class name="Pool"
           c:symbol-prefix="pool"
           c:type="AsPool"
           parent="GObject.Object"
           glib:type-name="AsPool"
           glib:get-type="as_pool_get_type"
           glib:type-struct="PoolClass">
      <source-position filename="src/as-pool.h" line="48"/>
      <constructor name="new" c:identifier="as_pool_new">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2818">Creates a new #AsPool.</doc>
        <source-position filename="src/as-pool.h" line="117"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2823">a #AsPool</doc>
          <type name="Pool" c:type="AsPool*"/>
        </return-value>
      </constructor>
      <virtual-method name="changed">
        <source-position filename="src/as-pool.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_components"
              c:identifier="as_pool_add_components"
              version="0.15.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="937">Register a set of components with the pool temporarily.
Data from components added like this will not be cached.</doc>
        <source-position filename="src/as-pool.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="946">%TRUE if the new components were successfully added to the pool.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="939">An instance of #AsPool</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="cpts" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="940">Array of components to add to the pool.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="Component"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="add_extra_data_location"
              c:identifier="as_pool_add_extra_data_location">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2492">Add an additional non-standard location to the metadata pool where metadata will be read from.
If @directory contains a "xml", "xmls", "yaml" or "icons" subdirectory (or all of them),
those paths will be added to the search paths instead.</doc>
        <source-position filename="src/as-pool.h" line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2494">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="directory" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2495">An existing filesystem location.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="format_style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2496">The expected format style of the metadata, e.g. %AS_FORMAT_STYLE_CATALOG</doc>
            <type name="FormatStyle" c:type="AsFormatStyle"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_flags"
              c:identifier="as_pool_add_flags"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2690">Convenience function to add one or multiple #AsPoolFlags to
the flag set of this data pool.</doc>
        <source-position filename="src/as-pool.h" line="172"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2692">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2693">The #AsPoolFlags to add.</doc>
            <type name="PoolFlags" c:type="AsPoolFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_search_tokens"
              c:identifier="as_pool_build_search_tokens">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2243">Splits up a string into an array of tokens that are suitable for searching.
This includes stripping whitespaces, casefolding the terms and removing greylist words.

This function is usually called automatically when needed, you will only need to
run it explicitly when you need to check which search tokens the pool will actually
use internally for a given phrase.</doc>
        <source-position filename="src/as-pool.h" line="161"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2255">(array zero-terminated=1): Valid tokens to search for, or %NULL for error</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2245">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="search" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2246">the (user-provided) search phrase.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear" c:identifier="as_pool_clear">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="959">Remove all metadata from the pool, data will be reloaded
once %as_pool_load is called again.</doc>
        <source-position filename="src/as-pool.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="961">An #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_components"
              c:identifier="as_pool_get_components"
              shadowed-by="get_components_gi"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1813">Get a list of found components.</doc>
        <source-position filename="src/as-pool.h" line="140"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1819">an array of #AsComponent instances.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1815">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_components_by_bundle_id"
              c:identifier="as_pool_get_components_by_bundle_id"
              shadowed-by="get_components_by_bundle_id_gi"
              version="0.16.0"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2164">Find components that are provided by a bundle with a specific ID by its prefix.
For example, given a AS_BUNDLE_KIND_FLATPAK and a bundle_id "org.kde.dolphin/",
it will list all the components that bundle dolphin. If the bundle_id is
"org.kde.dolphin/x86_64" it will give those with also the architecture.</doc>
        <source-position filename="src/as-pool.h" line="155"/>
        <return-value>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="gpointer" c:type="gpointer"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2166">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2167">The kind of the bundle we are looking for</doc>
            <type name="BundleKind" c:type="AsBundleKind"/>
          </parameter>
          <parameter name="bundle_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2168">The bundle ID to match, as specified in #AsBundle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="match_prefix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2169">%TRUE to match the ID by prefix, %FALSE to perform an absolute match.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_bundle_id_gi"
              c:identifier="as_pool_get_components_by_bundle_id_gi"
              shadows="get_components_by_bundle_id"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2195">Find components that are provided by a bundle with a specific ID by its prefix.
For example, given a AS_BUNDLE_KIND_FLATPAK and a bundle_id "org.kde.dolphin/",
it will list all the components that bundle dolphin. If the bundle_id is
"org.kde.dolphin/x86_64" it will give those with also the architecture.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2210">an array of #AsComponent objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2197">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2198">The kind of the bundle we are looking for</doc>
            <type name="BundleKind" c:type="AsBundleKind"/>
          </parameter>
          <parameter name="bundle_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2199">The bundle ID to match, as specified in #AsBundle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="match_prefix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2200">%TRUE to match the ID by prefix, %FALSE to perform an absolute match.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_categories"
              c:identifier="as_pool_get_components_by_categories"
              shadowed-by="get_components_by_categories_gi"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2001">Return a list of components which are in all of the categories.</doc>
        <source-position filename="src/as-pool.h" line="148"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2008">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2003">An instance of #AsDatabase.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="categories" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2004">An array of XDG categories to include.</doc>
            <array c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_categories_gi"
              c:identifier="as_pool_get_components_by_categories_gi"
              shadows="get_components_by_categories">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2034">Return a list of components which are in one of the categories.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2044">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2036">An instance of #AsDatabase.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="categories" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2037">An array of XDG categories to include.</doc>
            <array c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_extends"
              c:identifier="as_pool_get_components_by_extends"
              shadowed-by="get_components_by_extends_gi"
              version="0.15.0"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2108">Find components extending the component with the given ID. They can then be registered to the
#AsComponent they extend via %as_component_add_addon.
If the %AS_POOL_FLAG_RESOLVE_ADDONS pool flag is set, addons are automatically resolved and
this explicit function is not needed, but overall query time will be increased (so only use
this flag if you will be resolving addon information later anyway).</doc>
        <source-position filename="src/as-pool.h" line="153"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2119">an array of #AsComponent objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2110">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="extended_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2111">The ID of the component to search extensions for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_extends_gi"
              c:identifier="as_pool_get_components_by_extends_gi"
              shadows="get_components_by_extends"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2140">Find components extending the component with the given ID. They can then be registered to the
#AsComponent they extend via %as_component_add_addon.
If the %AS_POOL_FLAG_RESOLVE_ADDONS pool flag is set, addons are automatically resolved and
this explicit function is not needed, but overall query time will be increased (so only use
this flag if you will be resolving addon information later anyway).

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2154">an array of #AsComponent objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2142">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="extended_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2143">The ID of the component to search extensions for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_id"
              c:identifier="as_pool_get_components_by_id"
              shadowed-by="get_components_by_id_gi"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1858">Get a specific component by its ID.
This function may contain multiple results if we have
data describing this component from multiple scopes/origin types.</doc>
        <source-position filename="src/as-pool.h" line="141"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1867">An #AsComponent</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1860">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="cid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1861">The AppStream-ID to look for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_id_gi"
              c:identifier="as_pool_get_components_by_id_gi"
              shadows="get_components_by_id">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1887">Get a specific component by its ID.
This function may contain multiple results if we have
data describing this component from multiple scopes/origin types.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="34"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1899">An #AsComponent</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1889">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="cid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1890">The AppStream-ID to look for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_kind"
              c:identifier="as_pool_get_components_by_kind"
              shadowed-by="get_components_by_kind_gi"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1957">Return a list of all components in the pool which are of a certain kind.</doc>
        <source-position filename="src/as-pool.h" line="146"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1964">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1959">An instance of #AsDatabase.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1960">An #AsComponentKind.</doc>
            <type name="ComponentKind" c:type="AsComponentKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_kind_gi"
              c:identifier="as_pool_get_components_by_kind_gi"
              shadows="get_components_by_kind">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1983">Return a list of all components in the pool which are of a certain kind.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1993">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1985">An instance of #AsDatabase.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1986">An #AsComponentKind.</doc>
            <type name="ComponentKind" c:type="AsComponentKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_launchable"
              c:identifier="as_pool_get_components_by_launchable"
              shadowed-by="get_components_by_launchable_gi"
              version="0.11.4"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2052">Find components in the AppStream data pool which provide a specific launchable.
See #AsLaunchable for details on launchables, or refer to the AppStream specification.</doc>
        <source-position filename="src/as-pool.h" line="150"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2061">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2054">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2055">An #AsLaunchableKind</doc>
            <type name="LaunchableKind" c:type="AsLaunchableKind"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2056">The ID of the launchable.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_launchable_gi"
              c:identifier="as_pool_get_components_by_launchable_gi"
              shadows="get_components_by_launchable"
              version="0.11.4">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2084">Find components in the AppStream data pool which provide a specific launchable.
See #AsLaunchable for details on launchables, or refer to the AppStream specification.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2096">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2086">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2087">An #AsLaunchableKind</doc>
            <type name="LaunchableKind" c:type="AsLaunchableKind"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2088">The ID of the launchable.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_provided_item"
              c:identifier="as_pool_get_components_by_provided_item"
              shadowed-by="get_components_by_provided_item_gi"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1907">Find components in the AppStream data pool which provide a certain item.</doc>
        <source-position filename="src/as-pool.h" line="143"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1915">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1909">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1910">An #AsProvidesKind</doc>
            <type name="ProvidedKind" c:type="AsProvidedKind"/>
          </parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1911">The value of the provided item.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_by_provided_item_gi"
              c:identifier="as_pool_get_components_by_provided_item_gi"
              shadows="get_components_by_provided_item">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1936">Find components in the AppStream data pool which provide a certain item.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1947">an array of #AsComponent objects which have been found.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1938">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1939">An #AsProvidesKind</doc>
            <type name="ProvidedKind" c:type="AsProvidedKind"/>
          </parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1940">The value of the provided item.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_components_gi"
              c:identifier="as_pool_get_components_gi"
              shadows="get_components">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1841">Get a list of found components.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1850">an array of #AsComponent instances.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1843">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags" c:identifier="as_pool_get_flags">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2658">Get the #AsPoolFlags for this data pool.</doc>
        <source-position filename="src/as-pool.h" line="169"/>
        <return-value transfer-ownership="none">
          <type name="PoolFlags" c:type="AsPoolFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2660">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale" c:identifier="as_pool_get_locale">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2476">Gets the currently used locale.</doc>
        <source-position filename="src/as-pool.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2482">Locale used for metadata parsing.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2478">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_empty" c:identifier="as_pool_is_empty">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="976">Check if this pool contains any data.</doc>
        <source-position filename="src/as-pool.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="982">%TRUE if the pool is empty.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="978">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="as_pool_load" throws="1">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1636">Builds an index of all found components in the watched locations.
The function will try to get as much data into the pool as possible, so even if
the update completes with %FALSE, it might still have added components to the pool.

The function will load from all possible data sources, preferring caches if they
are up to date.</doc>
        <source-position filename="src/as-pool.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1649">%TRUE if update completed without error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1638">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1639">a #GCancellable.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_async"
              c:identifier="as_pool_load_async"
              version="0.12.10">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1682">Asynchronously loads data from all registered locations.
Equivalent to as_pool_load() (but asynchronous)</doc>
        <source-position filename="src/as-pool.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1684">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1685">a #GCancellable.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1686">A #GAsyncReadyCallback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1687">Data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_finish"
              c:identifier="as_pool_load_finish"
              version="0.12.10"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="1707">Retrieve the result of as_pool_load_async().</doc>
        <source-position filename="src/as-pool.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="1715">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1709">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="1710">A #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_flags"
              c:identifier="as_pool_remove_flags"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2711">Convenience function to remove one or multiple #AsPoolFlags from
the flag set of this data pool.</doc>
        <source-position filename="src/as-pool.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2713">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2714">The #AsPoolFlags to remove.</doc>
            <type name="PoolFlags" c:type="AsPoolFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_extra_data_locations"
              c:identifier="as_pool_reset_extra_data_locations"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2524">Remove all explicitly added metadata locations.</doc>
        <source-position filename="src/as-pool.h" line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2526">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search"
              c:identifier="as_pool_search"
              shadowed-by="search_gi"
              version="0.9.7"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2324">Search for a list of components matching the search term.
The list will be ordered by match score.</doc>
        <source-position filename="src/as-pool.h" line="159"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2332">an array of the found #AsComponent objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2326">An instance of #AsPool</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="search" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2327">A search string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_gi"
              c:identifier="as_pool_search_gi"
              shadows="search"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2381">Search for a list of components matching the search term.
The list will be ordered by match score.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
        <source-position filename="src/as-pool-gi.h" line="50"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2392">an array of the found #AsComponent objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2383">An instance of #AsPool</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="search" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2384">A search string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags" c:identifier="as_pool_set_flags">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2672">Set the #AsPoolFlags for this data pool.</doc>
        <source-position filename="src/as-pool.h" line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2674">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2675">The new #AsPoolFlags.</doc>
            <type name="PoolFlags" c:type="AsPoolFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_load_std_data_locations"
              c:identifier="as_pool_set_load_std_data_locations"
              version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2732">This is a convenience function that enables or disables loading of metadata
from well-known standard locations by configuring the #AsPoolFlags of this
#AsPool accordingly.
Data affected by this includes the OS data catalog, metainfo, desktop-entry
files and Flatpak data.
If you need more fine-grained control, set the #AsPoolFlags explicitly.</doc>
        <source-position filename="src/as-pool.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2734">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2735">Whether loading of data from standard locations should be enabled.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale" c:identifier="as_pool_set_locale">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2456">Sets the current locale which should be used when parsing metadata.</doc>
        <source-position filename="src/as-pool.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2458">An instance of #AsPool.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </instance-parameter>
          <parameter name="locale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-pool.c"
                 line="2459">the BCP47 or POSIX locale to use for this pool.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="changed" when="last" version="0.15.0">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="428">The ::changed signal is emitted when components have been added
or removed from the metadata pool.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="PoolClass"
            c:type="AsPoolClass"
            glib:is-gtype-struct-for="Pool">
      <source-position filename="src/as-pool.h" line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="src/as-pool.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="Pool" c:type="AsPool*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-pool.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-pool.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-pool.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-pool.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-pool.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="PoolError"
                 glib:type-name="AsPoolError"
                 glib:get-type="as_pool_error_get_type"
                 c:type="AsPoolError"
                 glib:error-domain="AsPool">
      <doc xml:space="preserve"
           filename="src/as-pool.h"
           line="94">A metadata pool error.</doc>
      <member name="failed"
              value="0"
              c:identifier="AS_POOL_ERROR_FAILED"
              glib:nick="failed"
              glib:name="AS_POOL_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="96">Generic failure</doc>
      </member>
      <member name="target_not_writable"
              value="1"
              c:identifier="AS_POOL_ERROR_TARGET_NOT_WRITABLE"
              glib:nick="target-not-writable"
              glib:name="AS_POOL_ERROR_TARGET_NOT_WRITABLE">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="97">We do not have write-access to the cache target location.</doc>
      </member>
      <member name="incomplete"
              value="2"
              c:identifier="AS_POOL_ERROR_INCOMPLETE"
              glib:nick="incomplete"
              glib:name="AS_POOL_ERROR_INCOMPLETE">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="98">The pool was loaded, but we had to ignore some metadata.</doc>
      </member>
      <member name="collision"
              value="3"
              c:identifier="AS_POOL_ERROR_COLLISION"
              glib:nick="collision"
              glib:name="AS_POOL_ERROR_COLLISION">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="99">An AppStream-ID collision occured (a component with that ID already existed in the pool)</doc>
      </member>
      <member name="old_cache"
              value="4"
              c:identifier="AS_POOL_ERROR_OLD_CACHE"
              glib:nick="old-cache"
              glib:name="AS_POOL_ERROR_OLD_CACHE">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="100">Some issue with an old on-disk cache occured.</doc>
      </member>
      <function name="quark" c:identifier="as_pool_error_quark">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-pool.c"
               line="2807">An error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <bitfield name="PoolFlags"
              glib:type-name="AsPoolFlags"
              glib:get-type="as_pool_flags_get_type"
              c:type="AsPoolFlags">
      <doc xml:space="preserve"
           filename="src/as-pool.h"
           line="50">Flags controlling the metadata pool behavior.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_POOL_FLAG_NONE"
              glib:nick="none"
              glib:name="AS_POOL_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="52">No flags.</doc>
      </member>
      <member name="load_os_catalog"
              value="1"
              c:identifier="AS_POOL_FLAG_LOAD_OS_CATALOG"
              glib:nick="load-os-catalog"
              glib:name="AS_POOL_FLAG_LOAD_OS_CATALOG">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="53">Load AppStream catalog metadata from OS locations.</doc>
      </member>
      <member name="load_os_metainfo"
              value="2"
              c:identifier="AS_POOL_FLAG_LOAD_OS_METAINFO"
              glib:nick="load-os-metainfo"
              glib:name="AS_POOL_FLAG_LOAD_OS_METAINFO">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="54">Load MetaInfo data from OS locations.</doc>
      </member>
      <member name="load_os_desktop_files"
              value="4"
              c:identifier="AS_POOL_FLAG_LOAD_OS_DESKTOP_FILES"
              glib:nick="load-os-desktop-files"
              glib:name="AS_POOL_FLAG_LOAD_OS_DESKTOP_FILES">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="55">Load components from desktop-entry files in OS locations.</doc>
      </member>
      <member name="load_flatpak"
              value="8"
              c:identifier="AS_POOL_FLAG_LOAD_FLATPAK"
              glib:nick="load-flatpak"
              glib:name="AS_POOL_FLAG_LOAD_FLATPAK">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="56">Load AppStream catalog metadata from Flatpak.</doc>
      </member>
      <member name="ignore_cache_age"
              value="16"
              c:identifier="AS_POOL_FLAG_IGNORE_CACHE_AGE"
              glib:nick="ignore-cache-age"
              glib:name="AS_POOL_FLAG_IGNORE_CACHE_AGE">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="57">Load fresh data even if an up-o-date cache is available.</doc>
      </member>
      <member name="resolve_addons"
              value="32"
              c:identifier="AS_POOL_FLAG_RESOLVE_ADDONS"
              glib:nick="resolve-addons"
              glib:name="AS_POOL_FLAG_RESOLVE_ADDONS">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="58">Always resolve addons for returned components.</doc>
      </member>
      <member name="prefer_os_metainfo"
              value="64"
              c:identifier="AS_POOL_FLAG_PREFER_OS_METAINFO"
              glib:nick="prefer-os-metainfo"
              glib:name="AS_POOL_FLAG_PREFER_OS_METAINFO">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="59">Prefer local metainfo data over the system-provided catalog data. Useful for debugging.</doc>
      </member>
      <member name="monitor"
              value="128"
              c:identifier="AS_POOL_FLAG_MONITOR"
              glib:nick="monitor"
              glib:name="AS_POOL_FLAG_MONITOR">
        <doc xml:space="preserve"
             filename="src/as-pool.h"
             line="60">Monitor registered directories for changes, and auto-reload metadata if necessary.</doc>
      </member>
    </bitfield>
    <class name="Provided"
           c:symbol-prefix="provided"
           c:type="AsProvided"
           parent="GObject.Object"
           glib:type-name="AsProvided"
           glib:get-type="as_provided_get_type"
           glib:type-struct="ProvidedClass">
      <source-position filename="src/as-provided.h" line="45"/>
      <constructor name="new" c:identifier="as_provided_new">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="293">Creates a new #AsProvided.</doc>
        <source-position filename="src/as-provided.h" line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="298">a #AsProvided</doc>
          <type name="Provided" c:type="AsProvided*"/>
        </return-value>
      </constructor>
      <method name="add_item" c:identifier="as_provided_add_item">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="280">Add a new provided item.</doc>
        <source-position filename="src/as-provided.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prov" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="282">a #AsProvided instance.</doc>
            <type name="Provided" c:type="AsProvided*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_items" c:identifier="as_provided_get_items">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="265">Get an array of provided data.</doc>
        <source-position filename="src/as-provided.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="271">An string list of provided items.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="prov" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="267">a #AsProvided instance.</doc>
            <type name="Provided" c:type="AsProvided*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_provided_get_kind">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="205">The kind of items this #AsProvided object stores.</doc>
        <source-position filename="src/as-provided.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="211">an enum of type #AsProvidedKind</doc>
          <type name="ProvidedKind" c:type="AsProvidedKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="prov" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="207">a #AsProvided instance.</doc>
            <type name="Provided" c:type="AsProvided*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_item" c:identifier="as_provided_has_item">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="234">Check if the current #AsProvided contains an item
of the given name.</doc>
        <source-position filename="src/as-provided.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="242">%TRUE if found.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prov" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="236">a #AsProvided instance.</doc>
            <type name="Provided" c:type="AsProvided*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="237">the name of a provided item, e.g. "audio/x-vorbis" (in case the provided kind is a mimetype)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_provided_set_kind">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="220">Set the kind of items this #AsProvided object stores.</doc>
        <source-position filename="src/as-provided.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prov" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="222">a #AsProvided instance.</doc>
            <type name="Provided" c:type="AsProvided*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="223">the new #AsProvidedKind</doc>
            <type name="ProvidedKind" c:type="AsProvidedKind"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ProvidedClass"
            c:type="AsProvidedClass"
            glib:is-gtype-struct-for="Provided">
      <source-position filename="src/as-provided.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-provided.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-provided.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-provided.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-provided.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-provided.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-provided.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ProvidedKind"
                 glib:type-name="AsProvidedKind"
                 glib:get-type="as_provided_kind_get_type"
                 c:type="AsProvidedKind">
      <doc xml:space="preserve"
           filename="src/as-provided.h"
           line="47">Type of the public interface components can provide.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_PROVIDED_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_PROVIDED_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="49">Unknown kind</doc>
      </member>
      <member name="library"
              value="1"
              c:identifier="AS_PROVIDED_KIND_LIBRARY"
              glib:nick="library"
              glib:name="AS_PROVIDED_KIND_LIBRARY">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="50">A shared library</doc>
      </member>
      <member name="binary"
              value="2"
              c:identifier="AS_PROVIDED_KIND_BINARY"
              glib:nick="binary"
              glib:name="AS_PROVIDED_KIND_BINARY">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="51">A binary installed into a directory in PATH</doc>
      </member>
      <member name="mediatype"
              value="3"
              c:identifier="AS_PROVIDED_KIND_MEDIATYPE"
              glib:nick="mediatype"
              glib:name="AS_PROVIDED_KIND_MEDIATYPE">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="52">Provides a handler for a mimetype</doc>
      </member>
      <member name="font"
              value="4"
              c:identifier="AS_PROVIDED_KIND_FONT"
              glib:nick="font"
              glib:name="AS_PROVIDED_KIND_FONT">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="53">A font</doc>
      </member>
      <member name="modalias"
              value="5"
              c:identifier="AS_PROVIDED_KIND_MODALIAS"
              glib:nick="modalias"
              glib:name="AS_PROVIDED_KIND_MODALIAS">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="54">A modalias</doc>
      </member>
      <member name="python_2"
              value="6"
              c:identifier="AS_PROVIDED_KIND_PYTHON_2"
              glib:nick="python-2"
              glib:name="AS_PROVIDED_KIND_PYTHON_2">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="55">A Python2 module</doc>
      </member>
      <member name="python"
              value="7"
              c:identifier="AS_PROVIDED_KIND_PYTHON"
              glib:nick="python"
              glib:name="AS_PROVIDED_KIND_PYTHON">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="56">A Python3 module</doc>
      </member>
      <member name="dbus_system"
              value="8"
              c:identifier="AS_PROVIDED_KIND_DBUS_SYSTEM"
              glib:nick="dbus-system"
              glib:name="AS_PROVIDED_KIND_DBUS_SYSTEM">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="57">A DBus service name on the system bus.</doc>
      </member>
      <member name="dbus_user"
              value="9"
              c:identifier="AS_PROVIDED_KIND_DBUS_USER"
              glib:nick="dbus-user"
              glib:name="AS_PROVIDED_KIND_DBUS_USER">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="58">A DBus service name on the user/session bus.</doc>
      </member>
      <member name="firmware_runtime"
              value="10"
              c:identifier="AS_PROVIDED_KIND_FIRMWARE_RUNTIME"
              glib:nick="firmware-runtime"
              glib:name="AS_PROVIDED_KIND_FIRMWARE_RUNTIME">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="59">Firmware flashed at runtime.</doc>
      </member>
      <member name="firmware_flashed"
              value="11"
              c:identifier="AS_PROVIDED_KIND_FIRMWARE_FLASHED"
              glib:nick="firmware-flashed"
              glib:name="AS_PROVIDED_KIND_FIRMWARE_FLASHED">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="60">Firmware flashed permanently to the device.</doc>
      </member>
      <member name="id"
              value="12"
              c:identifier="AS_PROVIDED_KIND_ID"
              glib:nick="id"
              glib:name="AS_PROVIDED_KIND_ID">
        <doc xml:space="preserve"
             filename="src/as-provided.h"
             line="61">An AppStream component</doc>
      </member>
      <function name="from_string" c:identifier="as_provided_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="90">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-provided.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="96">a #AsProvidedKind or %AS_PROVIDED_KIND_UNKNOWN for unknown</doc>
          <type name="ProvidedKind" c:type="AsProvidedKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="92">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_l10n_string"
                c:identifier="as_provided_kind_to_l10n_string">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="128">Converts the enumerated value to a localized text representation,
using the plural forms (e.g. "Libraries" instead of "Library").

This can be useful when displaying provided items in GUI dialogs.</doc>
        <source-position filename="src/as-provided.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="137">Pluralized, l10n string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="130">the #AsProvidedKind.</doc>
            <type name="ProvidedKind" c:type="AsProvidedKind"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_provided_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="52">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-provided.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="58">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-provided.c"
                 line="54">the #AsProvidedKind.</doc>
            <type name="ProvidedKind" c:type="AsProvidedKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Relation"
           c:symbol-prefix="relation"
           c:type="AsRelation"
           parent="GObject.Object"
           glib:type-name="AsRelation"
           glib:get-type="as_relation_get_type"
           glib:type-struct="RelationClass">
      <source-position filename="src/as-relation.h" line="49"/>
      <constructor name="new" c:identifier="as_relation_new" version="0.11.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="1973">Creates a new #AsRelation.</doc>
        <source-position filename="src/as-relation.h" line="272"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="1978">a #AsRelation</doc>
          <type name="Relation" c:type="AsRelation*"/>
        </return-value>
      </constructor>
      <method name="get_compare"
              c:identifier="as_relation_get_compare"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="658">The version comparison type.</doc>
        <source-position filename="src/as-relation.h" line="282"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="664">an enum of type #AsRelationCompare</doc>
          <type name="RelationCompare" c:type="AsRelationCompare"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="660">a #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_side_kind"
              c:identifier="as_relation_get_display_side_kind"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="1046">Gets the display side kind, in case this item is of
kind %AS_RELATION_ITEM_KIND_DISPLAY_LENGTH</doc>
        <source-position filename="src/as-relation.h" line="302"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="1053">a #AsDisplaySideKind or %AS_DISPLAY_SIDE_KIND_UNKNOWN</doc>
          <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1048">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_item_kind"
              c:identifier="as_relation_get_item_kind"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="625">The kind of the item of this #AsRelation.</doc>
        <source-position filename="src/as-relation.h" line="278"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="631">an enum of type #AsRelationItemKind</doc>
          <type name="RelationItemKind" c:type="AsRelationItemKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="627">a #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="as_relation_get_kind"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="592">The type (and thereby strength) of this #AsRelation.</doc>
        <source-position filename="src/as-relation.h" line="274"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="598">an enum of type #AsRelationKind</doc>
          <type name="RelationKind" c:type="AsRelationKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="594">a #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_control_kind"
              c:identifier="as_relation_get_value_control_kind"
              version="0.12.11">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="835">Get the value of this #AsRelation item as #AsControlKind if the
type of this relation is %AS_RELATION_ITEM_KIND_CONTROL.
Otherwise return %AS_CONTROL_KIND_UNKNOWN</doc>
        <source-position filename="src/as-relation.h" line="298"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="843">a #AsControlKind or %AS_CONTROL_KIND_UNKNOWN in case the item is not of the right kind.</doc>
          <type name="ControlKind" c:type="AsControlKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="837">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_display_length_kind"
              c:identifier="as_relation_get_value_display_length_kind"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="1006">In case this #AsRelation is of kind %AS_RELATION_ITEM_KIND_DISPLAY_LENGTH,
return the #AsDisplayLengthKind.</doc>
        <source-position filename="src/as-relation.h" line="309"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="1013">The #AsDisplayLengthKind classification of the current pixel value, or %AS_DISPLAY_LENGTH_KIND_UNKNOWN on error.</doc>
          <type name="DisplayLengthKind" c:type="AsDisplayLengthKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1008">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_int"
              c:identifier="as_relation_get_value_int"
              version="0.12.0">
        <source-position filename="src/as-relation.h" line="294"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="798">The value of this #AsRelation item as an integer. Returns 0 if the value was no integer.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="796">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_internet_bandwidth"
              c:identifier="as_relation_get_value_internet_bandwidth"
              version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="911">If this #AsRelation is of kind %AS_RELATION_ITEM_KIND_INTERNET, return the
minimum bandwidth requirement of the component, if set.

If the relation is of a different kind, or the requirement isn’t set, this
returns `0`.</doc>
        <source-position filename="src/as-relation.h" line="316"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="921">The minimum bandwidth requirement, in Mbit/s.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="913">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_internet_kind"
              c:identifier="as_relation_get_value_internet_kind"
              version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="873">Get the value of this #AsRelation item as #AsInternetKind if the
type of this relation is %AS_RELATION_ITEM_KIND_INTERNET.
Otherwise return %AS_INTERNET_KIND_UNKNOWN</doc>
        <source-position filename="src/as-relation.h" line="313"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="881">a #AsInternetKind or %AS_INTERNET_KIND_UNKNOWN in case the item is not of the right kind.</doc>
          <type name="InternetKind" c:type="AsInternetKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="875">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_px"
              c:identifier="as_relation_get_value_px"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="960">In case this #AsRelation is of kind %AS_RELATION_ITEM_KIND_DISPLAY_LENGTH,
return the set logical pixel amount.</doc>
        <source-position filename="src/as-relation.h" line="306"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="967">The logical pixel amount for this display length, value &lt;= 0 on error.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="962">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_str"
              c:identifier="as_relation_get_value_str"
              version="0.12.12">
        <source-position filename="src/as-relation.h" line="290"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="761">The value of the item this #AsRelation is about, as a string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="759">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="as_relation_get_version"
              version="0.12.0">
        <source-position filename="src/as-relation.h" line="286"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="695">The version of the item this #AsRelation is about.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="693">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_satisfied"
              c:identifier="as_relation_is_satisfied"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="1604">Test if this relation is satisfied on the current system or with the
provided #AsPool. If no #AsSystemInfo is found, a temporary one will be
created. If no #AsPool is provided, any component relationships can not
be validated and an error will be thrown.</doc>
        <source-position filename="src/as-relation.h" line="324"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="1617">%AS_CHECK_RESULT_TRUE if the system satisfies the relation, %AS_CHECK_RESULT_ERROR on error</doc>
          <type name="CheckResult" c:type="AsCheckResult"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1606">a #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="system_info"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1607">an #AsSystemInfo to use for system information.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </parameter>
          <parameter name="pool"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1608">an #AsPool to find component dependencies in.</doc>
            <type name="Pool" c:type="AsPool*"/>
          </parameter>
          <parameter name="message"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1609">receive a localized status message.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_compare"
              c:identifier="as_relation_set_compare"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="675">Set the version comparison type of this #AsRelation.</doc>
        <source-position filename="src/as-relation.h" line="283"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="677">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="compare" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="678">the new #AsRelationCompare</doc>
            <type name="RelationCompare" c:type="AsRelationCompare"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_side_kind"
              c:identifier="as_relation_set_display_side_kind"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="1064">Sets the display side kind, in case this item is of
kind %AS_RELATION_ITEM_KIND_DISPLAY_LENGTH</doc>
        <source-position filename="src/as-relation.h" line="303"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1066">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1067">the new #AsDisplaySideKind.</doc>
            <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_item_kind"
              c:identifier="as_relation_set_item_kind"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="642">Set the kind of the item this #AsRelation is about.</doc>
        <source-position filename="src/as-relation.h" line="279"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="644">a #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="645">the new #AsRelationItemKind</doc>
            <type name="RelationItemKind" c:type="AsRelationItemKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="as_relation_set_kind"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="609">Set the kind of this #AsRelation.</doc>
        <source-position filename="src/as-relation.h" line="275"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="611">a #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="612">the new #AsRelationKind</doc>
            <type name="RelationKind" c:type="AsRelationKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_control_kind"
              c:identifier="as_relation_set_value_control_kind"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="858">Set relation item value from an #AsControlKind.</doc>
        <source-position filename="src/as-relation.h" line="299"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="860">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="861">an #AsControlKind</doc>
            <type name="ControlKind" c:type="AsControlKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_display_length_kind"
              c:identifier="as_relation_set_value_display_length_kind"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="1026">Sets the item value as display length placeholder value. This requires the relation
to be of item kind %AS_RELATION_ITEM_KIND_DISPLAY_LENGTH.</doc>
        <source-position filename="src/as-relation.h" line="310"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1028">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1029">the #AsDisplayLengthKind</doc>
            <type name="DisplayLengthKind" c:type="AsDisplayLengthKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_int"
              c:identifier="as_relation_set_value_int"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="814">Sets the item value as an integer, if the given item type
of this #AsRelation permits integer values.</doc>
        <source-position filename="src/as-relation.h" line="295"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="816">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="817">the new value.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_internet_bandwidth"
              c:identifier="as_relation_set_value_internet_bandwidth">
        <source-position filename="src/as-relation.h" line="317"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="bandwidth_mbitps" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_internet_kind"
              c:identifier="as_relation_set_value_internet_kind"
              version="0.15.5">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="896">Set relation item value from an #AsInternetKind.</doc>
        <source-position filename="src/as-relation.h" line="314"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="898">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="899">an #AsInternetKind</doc>
            <type name="InternetKind" c:type="AsInternetKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_px"
              c:identifier="as_relation_set_value_px"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="986">Sets the item value as logical pixel count. This requires the relation
to be of item kind %AS_RELATION_ITEM_KIND_DISPLAY_LENGTH.</doc>
        <source-position filename="src/as-relation.h" line="307"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="988">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="logical_px" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="989">logical pixel count.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_str"
              c:identifier="as_relation_set_value_str"
              version="0.12.12">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="774">Sets the item value as a string, if the given item type
of this #AsRelation permits string values.</doc>
        <source-position filename="src/as-relation.h" line="291"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="776">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="777">the new value.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version"
              c:identifier="as_relation_set_version"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="706">Sets the item version.</doc>
        <source-position filename="src/as-relation.h" line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="708">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="709">the new version.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="version_compare"
              c:identifier="as_relation_version_compare"
              version="0.12.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="1081">Tests whether the version number of this #AsRelation is fulfilled by
@version. Whether the given version is sufficient to fulfill the version
requirement of this #AsRelation is determined by its comparison resraint.</doc>
        <source-position filename="src/as-relation.h" line="320"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="1091">%TRUE if the version from the parameter is sufficient.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1083">an #AsRelation instance.</doc>
            <type name="Relation" c:type="AsRelation*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="1084">a version number, e.g. `1.2.0`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RelationClass"
            c:type="AsRelationClass"
            glib:is-gtype-struct-for="Relation">
      <source-position filename="src/as-relation.h" line="49"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-relation.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-relation.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-relation.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-relation.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-relation.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-relation.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="RelationCompare"
                 glib:type-name="AsRelationCompare"
                 glib:get-type="as_relation_compare_get_type"
                 c:type="AsRelationCompare">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="117">The relational comparison type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_RELATION_COMPARE_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_RELATION_COMPARE_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="119">Comparison predicate invalid or not known</doc>
      </member>
      <member name="eq"
              value="1"
              c:identifier="AS_RELATION_COMPARE_EQ"
              glib:nick="eq"
              glib:name="AS_RELATION_COMPARE_EQ">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="120">Equal to</doc>
      </member>
      <member name="ne"
              value="2"
              c:identifier="AS_RELATION_COMPARE_NE"
              glib:nick="ne"
              glib:name="AS_RELATION_COMPARE_NE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="121">Not equal to</doc>
      </member>
      <member name="lt"
              value="3"
              c:identifier="AS_RELATION_COMPARE_LT"
              glib:nick="lt"
              glib:name="AS_RELATION_COMPARE_LT">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="122">Less than</doc>
      </member>
      <member name="gt"
              value="4"
              c:identifier="AS_RELATION_COMPARE_GT"
              glib:nick="gt"
              glib:name="AS_RELATION_COMPARE_GT">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="123">Greater than</doc>
      </member>
      <member name="le"
              value="5"
              c:identifier="AS_RELATION_COMPARE_LE"
              glib:nick="le"
              glib:name="AS_RELATION_COMPARE_LE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="124">Less than or equal to</doc>
      </member>
      <member name="ge"
              value="6"
              c:identifier="AS_RELATION_COMPARE_GE"
              glib:nick="ge"
              glib:name="AS_RELATION_COMPARE_GE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="125">Greater than or equal to</doc>
      </member>
      <function name="from_string"
                c:identifier="as_relation_compare_from_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="187">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-relation.h" line="256"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="193">a #AsRelationCompare, or %AS_RELATION_COMPARE_UNKNOWN for unknown.</doc>
          <type name="RelationCompare" c:type="AsRelationCompare"/>
        </return-value>
        <parameters>
          <parameter name="compare_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="189">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_relation_compare_to_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="234">Converts the enumerated value to an text representation.
The enum is converted into a two-letter identifier ("eq", "ge", etc.)
for use in the XML representation.</doc>
        <source-position filename="src/as-relation.h" line="257"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="242">string version of @compare</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="compare" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="236">the #AsRelationCompare.</doc>
            <type name="RelationCompare" c:type="AsRelationCompare"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_symbols_string"
                c:identifier="as_relation_compare_to_symbols_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="264">Converts the enumerated value to an text representation.
The enum is converted into an identifier consisting of two
mathematical comparison operators ("==", "&gt;=", etc.)
for use in the YAML representation and user interfaces.</doc>
        <source-position filename="src/as-relation.h" line="258"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="273">string version of @compare</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="compare" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="266">the #AsRelationCompare.</doc>
            <type name="RelationCompare" c:type="AsRelationCompare"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="RelationError"
                 glib:type-name="AsRelationError"
                 glib:get-type="as_relation_error_get_type"
                 c:type="AsRelationError"
                 glib:error-domain="as-relation-error-quark">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="230">The error type.</doc>
      <member name="failed"
              value="0"
              c:identifier="AS_RELATION_ERROR_FAILED"
              glib:nick="failed"
              glib:name="AS_RELATION_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="232">Generic failure</doc>
      </member>
      <member name="bad_value"
              value="1"
              c:identifier="AS_RELATION_ERROR_BAD_VALUE"
              glib:nick="bad-value"
              glib:name="AS_RELATION_ERROR_BAD_VALUE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="233">A metadata value was bad.</doc>
      </member>
      <member name="not_implemented"
              value="2"
              c:identifier="AS_RELATION_ERROR_NOT_IMPLEMENTED"
              glib:nick="not-implemented"
              glib:name="AS_RELATION_ERROR_NOT_IMPLEMENTED">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="234">Some check was not (yet) implemented.</doc>
      </member>
      <function name="quark"
                c:identifier="as_relation_error_quark"
                version="0.16.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="69">An error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <enumeration name="RelationItemKind"
                 glib:type-name="AsRelationItemKind"
                 glib:get-type="as_relation_item_kind_get_type"
                 c:type="AsRelationItemKind">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="87">Type of the item an #AsRelation is for.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_RELATION_ITEM_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_RELATION_ITEM_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="89">Unknown kind</doc>
      </member>
      <member name="id"
              value="1"
              c:identifier="AS_RELATION_ITEM_KIND_ID"
              glib:nick="id"
              glib:name="AS_RELATION_ITEM_KIND_ID">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="90">A component ID</doc>
      </member>
      <member name="modalias"
              value="2"
              c:identifier="AS_RELATION_ITEM_KIND_MODALIAS"
              glib:nick="modalias"
              glib:name="AS_RELATION_ITEM_KIND_MODALIAS">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="91">A hardware modalias</doc>
      </member>
      <member name="kernel"
              value="3"
              c:identifier="AS_RELATION_ITEM_KIND_KERNEL"
              glib:nick="kernel"
              glib:name="AS_RELATION_ITEM_KIND_KERNEL">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="92">An operating system kernel (like Linux)</doc>
      </member>
      <member name="memory"
              value="4"
              c:identifier="AS_RELATION_ITEM_KIND_MEMORY"
              glib:nick="memory"
              glib:name="AS_RELATION_ITEM_KIND_MEMORY">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="93">A system RAM requirement</doc>
      </member>
      <member name="firmware"
              value="5"
              c:identifier="AS_RELATION_ITEM_KIND_FIRMWARE"
              glib:nick="firmware"
              glib:name="AS_RELATION_ITEM_KIND_FIRMWARE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="94">A device firmware requirement (used by fwupd)</doc>
      </member>
      <member name="control"
              value="6"
              c:identifier="AS_RELATION_ITEM_KIND_CONTROL"
              glib:nick="control"
              glib:name="AS_RELATION_ITEM_KIND_CONTROL">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="95">An input method for users to control software</doc>
      </member>
      <member name="display_length"
              value="7"
              c:identifier="AS_RELATION_ITEM_KIND_DISPLAY_LENGTH"
              glib:nick="display-length"
              glib:name="AS_RELATION_ITEM_KIND_DISPLAY_LENGTH">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="96">Display edge length</doc>
      </member>
      <member name="hardware"
              value="8"
              c:identifier="AS_RELATION_ITEM_KIND_HARDWARE"
              glib:nick="hardware"
              glib:name="AS_RELATION_ITEM_KIND_HARDWARE">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="97">A Computer Hardware ID (CHID) to depend on system hardware</doc>
      </member>
      <member name="internet"
              value="9"
              c:identifier="AS_RELATION_ITEM_KIND_INTERNET"
              glib:nick="internet"
              glib:name="AS_RELATION_ITEM_KIND_INTERNET">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="98">Internet connectivity (Since: 0.15.5)</doc>
      </member>
      <function name="from_string"
                c:identifier="as_relation_item_kind_from_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="153">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-relation.h" line="254"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="159">a #AsRelationItemKind or %AS_RELATION_ITEM_KIND_UNKNOWN for unknown</doc>
          <type name="RelationItemKind" c:type="AsRelationItemKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="155">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_relation_item_kind_to_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="119">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-relation.h" line="253"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="125">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="121">the #AsRelationKind.</doc>
            <type name="RelationItemKind" c:type="AsRelationItemKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="RelationKind"
                 glib:type-name="AsRelationKind"
                 glib:get-type="as_relation_kind_get_type"
                 c:type="AsRelationKind">
      <doc xml:space="preserve"
           filename="src/as-relation.h"
           line="69">Type of a component's relation to other items.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_RELATION_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_RELATION_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="71">Unknown kind</doc>
      </member>
      <member name="requires"
              value="1"
              c:identifier="AS_RELATION_KIND_REQUIRES"
              glib:nick="requires"
              glib:name="AS_RELATION_KIND_REQUIRES">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="72">The referenced item is required by the component</doc>
      </member>
      <member name="recommends"
              value="2"
              c:identifier="AS_RELATION_KIND_RECOMMENDS"
              glib:nick="recommends"
              glib:name="AS_RELATION_KIND_RECOMMENDS">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="73">The referenced item is recommended</doc>
      </member>
      <member name="supports"
              value="3"
              c:identifier="AS_RELATION_KIND_SUPPORTS"
              glib:nick="supports"
              glib:name="AS_RELATION_KIND_SUPPORTS">
        <doc xml:space="preserve"
             filename="src/as-relation.h"
             line="74">The referenced item is supported</doc>
      </member>
      <function name="from_string"
                c:identifier="as_relation_kind_from_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="97">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-relation.h" line="251"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="103">a #AsRelationKind or %AS_RELATION_KIND_UNKNOWN for unknown</doc>
          <type name="RelationKind" c:type="AsRelationKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="99">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_relation_kind_to_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="75">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-relation.h" line="250"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="81">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-relation.c"
                 line="77">the #AsRelationKind.</doc>
            <type name="RelationKind" c:type="AsRelationKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Release"
           c:symbol-prefix="release"
           c:type="AsRelease"
           parent="GObject.Object"
           glib:type-name="AsRelease"
           glib:get-type="as_release_get_type"
           glib:type-struct="ReleaseClass">
      <source-position filename="src/as-release.h" line="48"/>
      <constructor name="new" c:identifier="as_release_new">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="1156">Creates a new #AsRelease.</doc>
        <source-position filename="src/as-release.h" line="90"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="1161">a #AsRelease</doc>
          <type name="Release" c:type="AsRelease*"/>
        </return-value>
      </constructor>
      <method name="add_artifact"
              c:identifier="as_release_add_artifact"
              version="0.12.6">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="612">Add an artifact (binary / source download) for this release.</doc>
        <source-position filename="src/as-release.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="614">An instance of #AsRelease.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="artifact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="615">The #AsArtifact.</doc>
            <type name="Artifact" c:type="AsArtifact*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_issue"
              c:identifier="as_release_add_issue"
              version="0.12.9">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="649">Add information about a (resolved) issue to this release.</doc>
        <source-position filename="src/as-release.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="651">An instance of #AsRelease.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="652">The #AsIssue.</doc>
            <type name="Issue" c:type="AsIssue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_active_locale"
              c:identifier="as_release_get_active_locale">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="537">Get the current active locale, which
is used to get localized messages.</doc>
        <source-position filename="src/as-release.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="544">the current active locale</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="539">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_artifacts"
              c:identifier="as_release_get_artifacts"
              version="0.12.6">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="594">Get a list of all downloadable artifacts that are associated with
this release.</doc>
        <source-position filename="src/as-release.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="600">an array of #AsArtifact objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Artifact"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_date"
              c:identifier="as_release_get_date"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="322">Gets the release date.</doc>
        <source-position filename="src/as-release.h" line="107"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="328">The date in ISO8601 format.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="324">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_date_eol"
              c:identifier="as_release_get_date_eol"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="369">Gets the end-of-life date for this release.</doc>
        <source-position filename="src/as-release.h" line="114"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="375">The EOL date in ISO8601 format.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="371">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description" c:identifier="as_release_get_description">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="498">Gets the release description markup for a given locale.</doc>
        <source-position filename="src/as-release.h" line="121"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="504">markup, or %NULL for not set or invalid</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="500">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_issues"
              c:identifier="as_release_get_issues"
              version="0.12.9">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="632">Get a list of all issues resolved by this release.</doc>
        <source-position filename="src/as-release.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="637">an array of #AsIssue objects.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Issue"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="as_release_get_kind"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="202">Gets the type of the release.
(development or stable release)</doc>
        <source-position filename="src/as-release.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="ReleaseKind" c:type="AsReleaseKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="204">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp" c:identifier="as_release_get_timestamp">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="286">Gets the release timestamp.</doc>
        <source-position filename="src/as-release.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="292">timestamp, or 0 for unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="288">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp_eol"
              c:identifier="as_release_get_timestamp_eol"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="405">Gets the UNIX timestamp for the date when this
release is out of support (end-of-life).</doc>
        <source-position filename="src/as-release.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="412">UNIX timestamp, or 0 for unset or invalid.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="407">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_urgency"
              c:identifier="as_release_get_urgency"
              version="0.6.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="462">Gets the urgency of the release
(showing how important it is to update to a more recent release)</doc>
        <source-position filename="src/as-release.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="469">#AsUrgencyKind, or %AS_URGENCY_KIND_UNKNOWN for not set</doc>
          <type name="UrgencyKind" c:type="AsUrgencyKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="464">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="as_release_get_url"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="669">Gets an URL.</doc>
        <source-position filename="src/as-release.h" line="138"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="676">string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="671">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="url_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="672">the URL kind, e.g. %AS_RELEASE_URL_KIND_DETAILS.</doc>
            <type name="ReleaseUrlKind" c:type="AsReleaseUrlKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_version" c:identifier="as_release_get_version">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="237">Gets the release version.</doc>
        <source-position filename="src/as-release.h" line="100"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="243">string, or %NULL for not set or invalid</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="239">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active_locale"
              c:identifier="as_release_set_active_locale">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="567">Set the current active locale, which
is used to get localized messages.
If the #AsComponent linking this #AsRelease was fetched
from a localized database, usually only
one locale is available.</doc>
        <source-position filename="src/as-release.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="569">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="570">a POSIX or BCP47 locale, or %NULL. e.g. "de_DE"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_date"
              c:identifier="as_release_set_date"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="340">Sets the release date.</doc>
        <source-position filename="src/as-release.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="342">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="343">the date in ISO8601 format.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_date_eol"
              c:identifier="as_release_set_date_eol"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="387">Sets the end-of-life date for this release.</doc>
        <source-position filename="src/as-release.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="389">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="390">the EOL date in ISO8601 format.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description" c:identifier="as_release_set_description">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="517">Sets the description release markup.</doc>
        <source-position filename="src/as-release.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="519">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="520">the description markup.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="521">the BCP47 locale, or %NULL. e.g. "en-GB".</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="as_release_set_kind"
              version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="219">Sets the release kind to distinguish between end-user ready
stable releases and development prereleases..</doc>
        <source-position filename="src/as-release.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="221">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="222">the #AsReleaseKind</doc>
            <type name="ReleaseKind" c:type="AsReleaseKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp" c:identifier="as_release_set_timestamp">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="302">Sets the release timestamp.</doc>
        <source-position filename="src/as-release.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="304">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="305">the timestamp value.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp_eol"
              c:identifier="as_release_set_timestamp_eol"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="436">Sets the UNIX timestamp for the date when this
release is out of support (end-of-life).</doc>
        <source-position filename="src/as-release.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="438">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="439">the timestamp value.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_urgency"
              c:identifier="as_release_set_urgency"
              version="0.6.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="481">Sets the release urgency.</doc>
        <source-position filename="src/as-release.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="483">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="urgency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="484">the urgency of this release/update (as #AsUrgencyKind)</doc>
            <type name="UrgencyKind" c:type="AsUrgencyKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url"
              c:identifier="as_release_set_url"
              version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="692">Sets an URL for this release.</doc>
        <source-position filename="src/as-release.h" line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="694">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="url_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="695">the URL kind, e.g. %AS_RELEASE_URL_KIND_DETAILS</doc>
            <type name="ReleaseUrlKind" c:type="AsReleaseUrlKind"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="696">the full URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version" c:identifier="as_release_set_version">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="253">Sets the release version.</doc>
        <source-position filename="src/as-release.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="255">a #AsRelease instance.</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="256">the version string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="vercmp" c:identifier="as_release_vercmp">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="268">Compare the version numbers of two releases.</doc>
        <source-position filename="src/as-release.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="275">1 if @rel1 version is higher than @rel2, 0 if versions are equal, -1 if @rel2 version is higher than @rel1.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="rel1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="270">an #AsRelease</doc>
            <type name="Release" c:type="AsRelease*"/>
          </instance-parameter>
          <parameter name="rel2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="271">an #AsRelease</doc>
            <type name="Release" c:type="AsRelease*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ReleaseClass"
            c:type="AsReleaseClass"
            glib:is-gtype-struct-for="Release">
      <source-position filename="src/as-release.h" line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-release.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-release.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-release.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-release.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-release.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-release.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ReleaseKind"
                 version="0.12.0"
                 glib:type-name="AsReleaseKind"
                 glib:get-type="as_release_kind_get_type"
                 c:type="AsReleaseKind">
      <doc xml:space="preserve"
           filename="src/as-release.h"
           line="50">The release kind.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_RELEASE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_RELEASE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-release.h"
             line="52">Unknown release type</doc>
      </member>
      <member name="stable"
              value="1"
              c:identifier="AS_RELEASE_KIND_STABLE"
              glib:nick="stable"
              glib:name="AS_RELEASE_KIND_STABLE">
        <doc xml:space="preserve"
             filename="src/as-release.h"
             line="53">A stable release for end-users</doc>
      </member>
      <member name="development"
              value="2"
              c:identifier="AS_RELEASE_KIND_DEVELOPMENT"
              glib:nick="development"
              glib:name="AS_RELEASE_KIND_DEVELOPMENT">
        <doc xml:space="preserve"
             filename="src/as-release.h"
             line="54">A development release or pre-release for testing</doc>
      </member>
      <function name="from_string"
                c:identifier="as_release_kind_from_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="91">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-release.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="97">an #AsReleaseKind or %AS_RELEASE_KIND_UNKNOWN for unknown</doc>
          <type name="ReleaseKind" c:type="AsReleaseKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="93">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_release_kind_to_string"
                version="0.12.0">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="71">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-release.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="77">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="73">the #AsReleaseKind.</doc>
            <type name="ReleaseKind" c:type="AsReleaseKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ReleaseUrlKind"
                 version="0.12.5"
                 glib:type-name="AsReleaseUrlKind"
                 glib:get-type="as_release_url_kind_get_type"
                 c:type="AsReleaseUrlKind">
      <doc xml:space="preserve"
           filename="src/as-release.h"
           line="71">@AS_RELEASE_URL_KIND_UNKNOWN		Unknown release web URL type
The release URL kinds.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_RELEASE_URL_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_RELEASE_URL_KIND_UNKNOWN">
      </member>
      <member name="details"
              value="1"
              c:identifier="AS_RELEASE_URL_KIND_DETAILS"
              glib:nick="details"
              glib:name="AS_RELEASE_URL_KIND_DETAILS">
        <doc xml:space="preserve"
             filename="src/as-release.h"
             line="74">Weblink to detailed release notes.</doc>
      </member>
      <function name="from_string"
                c:identifier="as_release_url_kind_from_string"
                version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="129">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-release.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="135">an #AsReleaseUrlKind or %AS_RELEASE_URL_KIND_UNKNOWN for unknown</doc>
          <type name="ReleaseUrlKind" c:type="AsReleaseUrlKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="131">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_release_url_kind_to_string"
                version="0.12.5">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="111">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-release.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="117">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-release.c"
                 line="113">the #AsReleaseUrlKind.</doc>
            <type name="ReleaseUrlKind" c:type="AsReleaseUrlKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ReleasesKind"
                 version="0.16.0"
                 glib:type-name="AsReleasesKind"
                 glib:get-type="as_releases_kind_get_type"
                 c:type="AsReleasesKind">
      <doc xml:space="preserve"
           filename="src/as-component.h"
           line="198">The kind of a releases block.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_RELEASES_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_RELEASES_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="200">Unknown releases type</doc>
      </member>
      <member name="embedded"
              value="1"
              c:identifier="AS_RELEASES_KIND_EMBEDDED"
              glib:nick="embedded"
              glib:name="AS_RELEASES_KIND_EMBEDDED">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="201">Release info is embedded in metainfo file</doc>
      </member>
      <member name="external"
              value="2"
              c:identifier="AS_RELEASES_KIND_EXTERNAL"
              glib:nick="external"
              glib:name="AS_RELEASES_KIND_EXTERNAL">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="202">Release info is split to a separate file</doc>
      </member>
      <function name="from_string"
                c:identifier="as_releases_kind_from_string"
                version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="357">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-component.h" line="217"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="363">an #AsReleaseKind or %AS_RELEASE_KIND_UNKNOWN for unknown</doc>
          <type name="ReleasesKind" c:type="AsReleasesKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="359">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_releases_kind_to_string"
                version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="337">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-component.h" line="216"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="343">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-component.c"
                 line="339">the #AsReleaseKind.</doc>
            <type name="ReleasesKind" c:type="AsReleasesKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Review"
           c:symbol-prefix="review"
           c:type="AsReview"
           parent="GObject.Object"
           glib:type-name="AsReview"
           glib:get-type="as_review_get_type"
           glib:type-struct="ReviewClass">
      <source-position filename="src/as-review.h" line="48"/>
      <constructor name="new" c:identifier="as_review_new" version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="1003">Creates a new #AsReview.</doc>
        <source-position filename="src/as-review.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="1008">a #AsReview</doc>
          <type name="Review" c:type="AsReview*"/>
        </return-value>
      </constructor>
      <method name="add_flags"
              c:identifier="as_review_add_flags"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="589">Adds flags to an existing review without replacing the other flags.</doc>
        <source-position filename="src/as-review.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="591">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="592">a #AsReviewFlags, e.g. %AS_REVIEW_FLAG_SELF</doc>
            <type name="ReviewFlags" c:type="AsReviewFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_metadata"
              c:identifier="as_review_add_metadata"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="783">Adds metadata to the review object.
It is left for the the plugin to use this method as required, but a
typical use would be to store some secure authentication token.</doc>
        <source-position filename="src/as-review.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="785">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="786">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="787">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="as_review_equal" version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="805">Checks if two reviews are the same.</doc>
        <source-position filename="src/as-review.h" line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="812">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="review1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="807">a #AsReview instance.</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="review2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="808">a #AsReview instance.</doc>
            <type name="Review" c:type="AsReview*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_date"
              c:identifier="as_review_get_date"
              glib:get-property="date"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="718">Gets the date the review was originally submitted.</doc>
        <source-position filename="src/as-review.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="724">the #GDateTime, or %NULL for unset</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="720">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="as_review_get_description"
              glib:get-property="description"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="437">Gets the multi-line review text that forms the body of the review.</doc>
        <source-position filename="src/as-review.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="443">the string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="439">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="as_review_get_flags"
              glib:get-property="flags"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="548">Gets any flags set on the review, for example if the user has already
voted on the review or if the user wrote the review themselves.</doc>
        <source-position filename="src/as-review.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="555">a #AsReviewFlags, e.g. %AS_REVIEW_FLAG_SELF</doc>
          <type name="ReviewFlags" c:type="AsReviewFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="550">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="as_review_get_id"
              glib:get-property="id"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="365">Gets the review id.</doc>
        <source-position filename="src/as-review.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="371">the review identifier, e.g. "deadbeef"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="367">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale"
              c:identifier="as_review_get_locale"
              glib:get-property="locale"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="473">Gets the locale for the review.</doc>
        <source-position filename="src/as-review.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="479">the string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="475">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata_item"
              c:identifier="as_review_get_metadata_item"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="761">Gets some metadata from a review object.
It is left for the the plugin to use this method as required, but a
typical use would be to retrieve some secure authentication token.</doc>
        <source-position filename="src/as-review.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="770">A string value, or %NULL for not found</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="763">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="764">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_priority"
              c:identifier="as_review_get_priority"
              glib:get-property="priority"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="324">This allows the UI to sort reviews into the correct order.
Higher numbers indicate a more important or relevant review.</doc>
        <source-position filename="src/as-review.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="331">the review priority, or 0 for unset.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="326">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rating"
              c:identifier="as_review_get_rating"
              glib:get-property="rating"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="509">Gets the star rating of the review, where 100 is 5 stars.</doc>
        <source-position filename="src/as-review.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="515">integer as a percentage, or 0 for unset</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="511">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reviewer_id"
              c:identifier="as_review_get_reviewer_id"
              glib:get-property="reviewer-id"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="610">Gets the name of the reviewer.</doc>
        <source-position filename="src/as-review.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="616">the reviewer ID, e.g. "deadbeef", or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="612">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reviewer_name"
              c:identifier="as_review_get_reviewer_name"
              glib:get-property="reviewer-name"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="628">Gets the name of the reviewer.</doc>
        <source-position filename="src/as-review.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="634">the reviewer name, e.g. "David Smith", or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="630">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="as_review_get_summary"
              glib:get-property="summary"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="383">Gets the review summary.</doc>
        <source-position filename="src/as-review.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="389">the one-line summary, e.g. "Awesome application"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="385">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="as_review_get_version"
              glib:get-property="version"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="700">Gets the version string for the application being reviewed..</doc>
        <source-position filename="src/as-review.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-review.c"
               line="706">the version string, e.g. "0.1.2", or %NULL for unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="702">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_date"
              c:identifier="as_review_set_date"
              glib:set-property="date"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="736">Sets the date the review was originally submitted.</doc>
        <source-position filename="src/as-review.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="738">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="739">a #GDateTime, or %NULL</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="as_review_set_description"
              glib:set-property="description"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="455">Sets the multi-line review text that forms the body of the review.</doc>
        <source-position filename="src/as-review.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="457">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="458">multi-line description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="as_review_set_flags"
              glib:set-property="flags"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="567">Gets any flags set on the review, for example if the user has already
voted on the review or if the user wrote the review themselves.</doc>
        <source-position filename="src/as-review.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="569">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="570">a #AsReviewFlags, e.g. %AS_REVIEW_FLAG_SELF</doc>
            <type name="ReviewFlags" c:type="AsReviewFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="as_review_set_id"
              glib:set-property="id"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="401">Sets the review identifier that is unique to each review.</doc>
        <source-position filename="src/as-review.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="403">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="404">review identifier, e.g. "deadbeef"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale"
              c:identifier="as_review_set_locale"
              glib:set-property="locale"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="491">Sets the locale for the review.</doc>
        <source-position filename="src/as-review.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="493">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="locale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="494">a BCP47 locale, e.g. "en-GB"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_priority"
              c:identifier="as_review_set_priority"
              glib:set-property="priority"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="343">Sets the priority for the review, where positive numbers indicate
a better review for the specific user.</doc>
        <source-position filename="src/as-review.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="345">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="346">a priority value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rating"
              c:identifier="as_review_set_rating"
              glib:set-property="rating"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="527">Sets the star rating of the review, where 100 is 5 stars..</doc>
        <source-position filename="src/as-review.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="529">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="rating" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="530">a integer as a percentage, or 0 for unset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reviewer_id"
              c:identifier="as_review_set_reviewer_id"
              glib:set-property="reviewer-id"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="646">Sets the name of the reviewer, which can be left unset.</doc>
        <source-position filename="src/as-review.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="648">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="reviewer_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="649">the reviewer ID, e.g. "deadbeef"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reviewer_name"
              c:identifier="as_review_set_reviewer_name"
              glib:set-property="reviewer-name"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="664">Sets the name of the reviewer, which can be left unset.</doc>
        <source-position filename="src/as-review.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="666">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="reviewer_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="667">the reviewer name, e.g. "David Smith"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary"
              c:identifier="as_review_set_summary"
              glib:set-property="summary"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="419">Sets the one-line summary that may be displayed in bold.</doc>
        <source-position filename="src/as-review.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="421">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="summary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="422">a one-line summary, e.g. "Awesome application"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version"
              c:identifier="as_review_set_version"
              glib:set-property="version"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="682">Sets the version string for the application being reviewed.</doc>
        <source-position filename="src/as-review.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="review" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="684">a #AsReview</doc>
            <type name="Review" c:type="AsReview*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-review.c"
                 line="685">a version string, e.g. "0.1.2"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="date"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_date"
                getter="get_date">
        <type name="Review"/>
      </property>
      <property name="description"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="flags"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_flags"
                getter="get_flags"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="id"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_id"
                getter="get_id"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="locale"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_locale"
                getter="get_locale"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="priority"
                version="0.15.6"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_priority"
                getter="get_priority"
                default-value="0">
        <doc xml:space="preserve"
             filename="src/as-review.c"
             line="246">The priority for the review, where positive numbers indicate
a better review for the specific user.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="rating"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_rating"
                getter="get_rating"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="reviewer-id"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_reviewer_id"
                getter="get_reviewer_id"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="reviewer-name"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_reviewer_name"
                getter="get_reviewer_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_summary"
                getter="get_summary"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="version"
                version="0.14.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_version"
                getter="get_version"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ReviewClass"
            c:type="AsReviewClass"
            glib:is-gtype-struct-for="Review">
      <source-position filename="src/as-review.h" line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-review.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-review.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-review.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-review.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-review.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-review.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved7" introspectable="0">
        <callback name="_as_reserved7">
          <source-position filename="src/as-review.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved8" introspectable="0">
        <callback name="_as_reserved8">
          <source-position filename="src/as-review.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <bitfield name="ReviewFlags"
              version="0.14.0"
              glib:type-name="AsReviewFlags"
              glib:get-type="as_review_flags_get_type"
              c:type="AsReviewFlags">
      <doc xml:space="preserve"
           filename="src/as-review.h"
           line="50">The flags for the review.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_REVIEW_FLAG_NONE"
              glib:nick="none"
              glib:name="AS_REVIEW_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/as-review.h"
             line="52">No special flags set</doc>
      </member>
      <member name="self"
              value="1"
              c:identifier="AS_REVIEW_FLAG_SELF"
              glib:nick="self"
              glib:name="AS_REVIEW_FLAG_SELF">
        <doc xml:space="preserve"
             filename="src/as-review.h"
             line="53">The user wrote the review themselves</doc>
      </member>
      <member name="voted"
              value="2"
              c:identifier="AS_REVIEW_FLAG_VOTED"
              glib:nick="voted"
              glib:name="AS_REVIEW_FLAG_VOTED">
        <doc xml:space="preserve"
             filename="src/as-review.h"
             line="54">The user voted on the review</doc>
      </member>
    </bitfield>
    <class name="Screenshot"
           c:symbol-prefix="screenshot"
           c:type="AsScreenshot"
           parent="GObject.Object"
           glib:type-name="AsScreenshot"
           glib:get-type="as_screenshot_get_type"
           glib:type-struct="ScreenshotClass">
      <source-position filename="src/as-screenshot.h" line="49"/>
      <constructor name="new" c:identifier="as_screenshot_new">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="743">Creates a new #AsScreenshot.</doc>
        <source-position filename="src/as-screenshot.h" line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="748">a #AsScreenshot</doc>
          <type name="Screenshot" c:type="AsScreenshot*"/>
        </return-value>
      </constructor>
      <method name="add_image" c:identifier="as_screenshot_add_image">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="250">Adds an image to the screenshot.</doc>
        <source-position filename="src/as-screenshot.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="252">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="253">a #AsImage instance.</doc>
            <type name="Image" c:type="AsImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_video" c:identifier="as_screenshot_add_video">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="318">Adds a video to the screenshot.</doc>
        <source-position filename="src/as-screenshot.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="320">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
          <parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="321">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_images"
              c:identifier="as_screenshot_clear_images"
              version="0.15.4">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="267">Remove all images associated with this screenshot.</doc>
        <source-position filename="src/as-screenshot.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="269">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_active_locale"
              c:identifier="as_screenshot_get_active_locale">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="418">Get the current active locale, which
is used to get localized messages.</doc>
        <source-position filename="src/as-screenshot.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_caption" c:identifier="as_screenshot_get_caption">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="336">Gets the image caption</doc>
        <source-position filename="src/as-screenshot.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="342">the caption</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="338">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image"
              c:identifier="as_screenshot_get_image"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="209">Gets the AsImage closest to the target size. The #AsImage may not actually
be the requested size, and the application may have to pad / rescale the
image to make it fit.
Only images for the current active locale (or fallback, if images are not localized)
are considered.</doc>
        <source-position filename="src/as-screenshot.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="221">an #AsImage, or %NULL</doc>
          <type name="Image" c:type="AsImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="211">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="212">target width</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="213">target height</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_images" c:identifier="as_screenshot_get_images">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="191">Gets the images for this screenshots. Only images valid for the current
language are returned. We return all sizes.</doc>
        <source-position filename="src/as-screenshot.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="198">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Image"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="193">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_images_all"
              c:identifier="as_screenshot_get_images_all"
              version="0.10">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="469">Returns an array of all images we have, regardless of their
size and language.</doc>
        <source-position filename="src/as-screenshot.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="476">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Image"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="471">an #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_screenshot_get_kind">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="147">Gets the screenshot kind.</doc>
        <source-position filename="src/as-screenshot.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="153">a #AsScreenshotKind</doc>
          <type name="ScreenshotKind" c:type="AsScreenshotKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="149">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_kind"
              c:identifier="as_screenshot_get_media_kind">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="176">Gets the screenshot media kind.</doc>
        <source-position filename="src/as-screenshot.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="182">a #AsScreenshotMediaKind</doc>
          <type name="ScreenshotMediaKind" c:type="AsScreenshotMediaKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="178">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_videos" c:identifier="as_screenshot_get_videos">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="300">Gets the videos for this screenshots. Only videos valid for the current
language selection are returned. We return all sizes.</doc>
        <source-position filename="src/as-screenshot.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="307">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Video"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="302">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_videos_all"
              c:identifier="as_screenshot_get_videos_all">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="284">Returns an array of all screencast videos we have, regardless of their
size and locale.</doc>
        <source-position filename="src/as-screenshot.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="291">an array</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Video"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="286">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_valid" c:identifier="as_screenshot_is_valid">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="371">Performs a quick validation on this screenshot</doc>
        <source-position filename="src/as-screenshot.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="377">TRUE if the screenshot is a complete #AsScreenshot</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="373">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active_locale"
              c:identifier="as_screenshot_set_active_locale">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="442">Set the current active locale, which
is used to get localized messages.
If the #AsComponent linking this #AsScreenshot was fetched
from a localized database, usually only
one locale is available.</doc>
        <source-position filename="src/as-screenshot.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="444">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="445">a POSIX or BCP47 locale, or %NULL. e.g. "de_DE"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caption" c:identifier="as_screenshot_set_caption">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="354">Sets a caption on the screenshot</doc>
        <source-position filename="src/as-screenshot.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="356">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
          <parameter name="caption" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="357">the caption text.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="locale" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_screenshot_set_kind">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="162">Sets the screenshot kind.</doc>
        <source-position filename="src/as-screenshot.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="164">a #AsScreenshot instance.</doc>
            <type name="Screenshot" c:type="AsScreenshot*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="165">the #AsScreenshotKind.</doc>
            <type name="ScreenshotKind" c:type="AsScreenshotKind"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ScreenshotClass"
            c:type="AsScreenshotClass"
            glib:is-gtype-struct-for="Screenshot">
      <source-position filename="src/as-screenshot.h" line="49"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-screenshot.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-screenshot.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-screenshot.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-screenshot.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-screenshot.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-screenshot.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ScreenshotKind"
                 glib:type-name="AsScreenshotKind"
                 glib:get-type="as_screenshot_kind_get_type"
                 c:type="AsScreenshotKind">
      <doc xml:space="preserve"
           filename="src/as-screenshot.h"
           line="51">The screenshot type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_SCREENSHOT_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_SCREENSHOT_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-screenshot.h"
             line="53">Type invalid or not known</doc>
      </member>
      <member name="default"
              value="1"
              c:identifier="AS_SCREENSHOT_KIND_DEFAULT"
              glib:nick="default"
              glib:name="AS_SCREENSHOT_KIND_DEFAULT">
        <doc xml:space="preserve"
             filename="src/as-screenshot.h"
             line="54">The primary screenshot to show by default</doc>
      </member>
      <member name="extra"
              value="2"
              c:identifier="AS_SCREENSHOT_KIND_EXTRA"
              glib:nick="extra"
              glib:name="AS_SCREENSHOT_KIND_EXTRA">
        <doc xml:space="preserve"
             filename="src/as-screenshot.h"
             line="55">Optional screenshot</doc>
      </member>
      <function name="from_string"
                c:identifier="as_screenshot_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="109">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-screenshot.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="115">a %AsScreenshotKind, or %AS_SCREENSHOT_KIND_UNKNOWN if not known.</doc>
          <type name="ScreenshotKind" c:type="AsScreenshotKind"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="111">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_screenshot_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="129">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-screenshot.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="135">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-screenshot.c"
                 line="131">the #AsScreenshotKind.</doc>
            <type name="ScreenshotKind" c:type="AsScreenshotKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ScreenshotMediaKind"
                 glib:type-name="AsScreenshotMediaKind"
                 glib:get-type="as_screenshot_media_kind_get_type"
                 c:type="AsScreenshotMediaKind">
      <doc xml:space="preserve"
           filename="src/as-screenshot.h"
           line="67">The media kind contained in this screenshot.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_SCREENSHOT_MEDIA_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_SCREENSHOT_MEDIA_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-screenshot.h"
             line="69">Media kind is unknown</doc>
      </member>
      <member name="image"
              value="1"
              c:identifier="AS_SCREENSHOT_MEDIA_KIND_IMAGE"
              glib:nick="image"
              glib:name="AS_SCREENSHOT_MEDIA_KIND_IMAGE">
        <doc xml:space="preserve"
             filename="src/as-screenshot.h"
             line="70">The screenshot contains images</doc>
      </member>
      <member name="video"
              value="2"
              c:identifier="AS_SCREENSHOT_MEDIA_KIND_VIDEO"
              glib:nick="video"
              glib:name="AS_SCREENSHOT_MEDIA_KIND_VIDEO">
        <doc xml:space="preserve"
             filename="src/as-screenshot.h"
             line="71">The screenshot contains videos</doc>
      </member>
    </enumeration>
    <bitfield name="SearchTokenMatch" c:type="AsSearchTokenMatch">
      <doc xml:space="preserve"
           filename="src/as-component.h"
           line="169">The token match kind, which we want to be exactly 16 bits for storage
reasons.</doc>
      <source-position filename="src/as-component.h" line="196"/>
      <member name="none" value="0" c:identifier="AS_SEARCH_TOKEN_MATCH_NONE">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="171">No token matching</doc>
      </member>
      <member name="mediatype"
              value="1"
              c:identifier="AS_SEARCH_TOKEN_MATCH_MEDIATYPE">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="172">Use the component mediatypes</doc>
      </member>
      <member name="pkgname"
              value="2"
              c:identifier="AS_SEARCH_TOKEN_MATCH_PKGNAME">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="173">Use the component package name</doc>
      </member>
      <member name="origin"
              value="4"
              c:identifier="AS_SEARCH_TOKEN_MATCH_ORIGIN">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="174">Use the app origin</doc>
      </member>
      <member name="description"
              value="8"
              c:identifier="AS_SEARCH_TOKEN_MATCH_DESCRIPTION">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="175">Use the component description</doc>
      </member>
      <member name="summary"
              value="16"
              c:identifier="AS_SEARCH_TOKEN_MATCH_SUMMARY">
      </member>
      <member name="keyword"
              value="32"
              c:identifier="AS_SEARCH_TOKEN_MATCH_KEYWORD">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="178">Use the component keyword</doc>
      </member>
      <member name="name" value="64" c:identifier="AS_SEARCH_TOKEN_MATCH_NAME">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="177">Use the component name</doc>
      </member>
      <member name="id" value="128" c:identifier="AS_SEARCH_TOKEN_MATCH_ID">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="179">Use the component ID</doc>
      </member>
    </bitfield>
    <enumeration name="SizeKind"
                 version="0.8.6"
                 glib:type-name="AsSizeKind"
                 glib:get-type="as_size_kind_get_type"
                 c:type="AsSizeKind">
      <doc xml:space="preserve"
           filename="src/as-artifact.h"
           line="49">The artifact size kind.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_SIZE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_SIZE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-artifact.h"
             line="51">Unknown size</doc>
      </member>
      <member name="download"
              value="1"
              c:identifier="AS_SIZE_KIND_DOWNLOAD"
              glib:nick="download"
              glib:name="AS_SIZE_KIND_DOWNLOAD">
        <doc xml:space="preserve"
             filename="src/as-artifact.h"
             line="52">Size of download of component</doc>
      </member>
      <member name="installed"
              value="2"
              c:identifier="AS_SIZE_KIND_INSTALLED"
              glib:nick="installed"
              glib:name="AS_SIZE_KIND_INSTALLED">
        <doc xml:space="preserve"
             filename="src/as-artifact.h"
             line="53">Size of installed component</doc>
      </member>
      <function name="from_string" c:identifier="as_size_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="71">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-artifact.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="77">an #AsSizeKind or %AS_SIZE_KIND_UNKNOWN for unknown</doc>
          <type name="SizeKind" c:type="AsSizeKind"/>
        </return-value>
        <parameters>
          <parameter name="size_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="73">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_size_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="53">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-artifact.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="59">string version of @size_kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="size_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-artifact.c"
                 line="55">the #AsSizeKind.</doc>
            <type name="SizeKind" c:type="AsSizeKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Suggested"
           c:symbol-prefix="suggested"
           c:type="AsSuggested"
           parent="GObject.Object"
           glib:type-name="AsSuggested"
           glib:get-type="as_suggested_get_type"
           glib:type-struct="SuggestedClass">
      <source-position filename="src/as-suggested.h" line="46"/>
      <constructor name="new" c:identifier="as_suggested_new">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="319">Creates a new #AsSuggested.</doc>
        <source-position filename="src/as-suggested.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="324">a new #AsSuggested</doc>
          <type name="Suggested" c:type="AsSuggested*"/>
        </return-value>
      </constructor>
      <method name="add_id" c:identifier="as_suggested_add_id">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="158">Add a component id to this suggested object.</doc>
        <source-position filename="src/as-suggested.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="suggested" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="160">a #AsSuggested instance.</doc>
            <type name="Suggested" c:type="AsSuggested*"/>
          </instance-parameter>
          <parameter name="cid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="161">The component id to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ids" c:identifier="as_suggested_get_ids">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="142">Get a list of components id that generated the suggestion</doc>
        <source-position filename="src/as-suggested.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="148">an array of components id</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="suggested" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="144">a #AsSuggested instance.</doc>
            <type name="Suggested" c:type="AsSuggested*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_suggested_get_kind">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="113">Gets the suggested kind.</doc>
        <source-position filename="src/as-suggested.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="119">the #AsSuggestedKind</doc>
          <type name="SuggestedKind" c:type="AsSuggestedKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="suggested" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="115">a #AsSuggested instance.</doc>
            <type name="Suggested" c:type="AsSuggested*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_valid" c:identifier="as_suggested_is_valid">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="172">Check if the essential properties of this suggestion are
populated with useful data.</doc>
        <source-position filename="src/as-suggested.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="179">%TRUE if we have useful data.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="suggested" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="174">a #AsSuggested instance.</doc>
            <type name="Suggested" c:type="AsSuggested*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_suggested_set_kind">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="128">Sets the suggested kind.</doc>
        <source-position filename="src/as-suggested.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="suggested" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="130">a #AsSuggested instance.</doc>
            <type name="Suggested" c:type="AsSuggested*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="131">the #AsSuggestedKind, e.g. %AS_SUGGESTED_KIND_HEURISTIC.</doc>
            <type name="SuggestedKind" c:type="AsSuggestedKind"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SuggestedClass"
            c:type="AsSuggestedClass"
            glib:is-gtype-struct-for="Suggested">
      <source-position filename="src/as-suggested.h" line="46"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-suggested.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-suggested.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-suggested.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-suggested.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-suggested.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-suggested.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="SuggestedKind"
                 glib:type-name="AsSuggestedKind"
                 glib:get-type="as_suggested_kind_get_type"
                 c:type="AsSuggestedKind">
      <doc xml:space="preserve"
           filename="src/as-suggested.h"
           line="48">The suggested type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_SUGGESTED_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_SUGGESTED_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-suggested.h"
             line="50">Unknown suggested kind</doc>
      </member>
      <member name="upstream"
              value="1"
              c:identifier="AS_SUGGESTED_KIND_UPSTREAM"
              glib:nick="upstream"
              glib:name="AS_SUGGESTED_KIND_UPSTREAM">
        <doc xml:space="preserve"
             filename="src/as-suggested.h"
             line="51">Suggestions provided by the upstream project.</doc>
      </member>
      <member name="heuristic"
              value="2"
              c:identifier="AS_SUGGESTED_KIND_HEURISTIC"
              glib:nick="heuristic"
              glib:name="AS_SUGGESTED_KIND_HEURISTIC">
        <doc xml:space="preserve"
             filename="src/as-suggested.h"
             line="52">Suggestions provided by automatic heuristics.</doc>
      </member>
      <function name="from_string"
                c:identifier="as_suggested_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="65">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-suggested.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="71">a #AsSuggestedKind or %AS_SUGGESTED_KIND_UNKNOWN for unknown</doc>
          <type name="SuggestedKind" c:type="AsSuggestedKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="67">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_suggested_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="46">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-suggested.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="52">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-suggested.c"
                 line="48">the %AsSuggestedKind.</doc>
            <type name="SuggestedKind" c:type="AsSuggestedKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="SystemInfo"
           c:symbol-prefix="system_info"
           c:type="AsSystemInfo"
           parent="GObject.Object"
           glib:type-name="AsSystemInfo"
           glib:get-type="as_system_info_get_type"
           glib:type-struct="SystemInfoClass">
      <source-position filename="src/as-system-info.h" line="47"/>
      <constructor name="new" c:identifier="as_system_info_new" version="0.10">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="960">Creates a new #AsSystemInfo.</doc>
        <source-position filename="src/as-system-info.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="965">a #AsSystemInfo</doc>
          <type name="SystemInfo" c:type="AsSystemInfo*"/>
        </return-value>
      </constructor>
      <method name="get_device_name_for_modalias"
              c:identifier="as_system_info_get_device_name_for_modalias"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="716">Return a human readable device name for the given modalias.
Will return the modalias again if no device name could be found,
and returns %NULL on error.
If @allow_fallback is set to %FALSE, this function will return %NULL and error
%AS_SYSTEM_INFO_ERROR_NOT_FOUND in case no suitable description could be found.</doc>
        <source-position filename="src/as-system-info.h" line="86"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="729">a human-readable device name, or %NULL on error.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="718">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
          <parameter name="modalias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="719">the modalias value to resolve (may contain wildcards).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="allow_fallback" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="720">fall back to low-quality data if no better information is available</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_display_length"
              c:identifier="as_system_info_get_display_length">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="915">Get the current display length for the given side kind.
If the display size is unknown, this function will return 0.</doc>
        <source-position filename="src/as-system-info.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="923">the display size in logical pixels.</doc>
          <type name="gulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="917">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
          <parameter name="side" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="918">the #AsDisplaySideKind to select.</doc>
            <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_kernel_name"
              c:identifier="as_system_info_get_kernel_name">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="354">Get the name of the current kernel, e.g. "Linux"</doc>
        <source-position filename="src/as-system-info.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="360">the current OS kernel name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="356">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kernel_version"
              c:identifier="as_system_info_get_kernel_version">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="370">Get the version of the current kernel, e.g. "6.2.0-2"</doc>
        <source-position filename="src/as-system-info.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="376">the current kernel version</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="372">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_memory_total"
              c:identifier="as_system_info_get_memory_total">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="431">Get the current total amount of physical memory in MiB.</doc>
        <source-position filename="src/as-system-info.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="437">the current total amount of usable memory in MiB</doc>
          <type name="gulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="433">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modaliases"
              c:identifier="as_system_info_get_modaliases">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="533">Get a list of modaliases for all the hardware on this system that has them.</doc>
        <source-position filename="src/as-system-info.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="539">a list of modaliases on the system.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="535">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_cid" c:identifier="as_system_info_get_os_cid">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="246">Get the AppStream component ID of the current operating system.</doc>
        <source-position filename="src/as-system-info.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="252">the component ID of the current OS.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="248">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_homepage"
              c:identifier="as_system_info_get_os_homepage">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="305">Get the homepage URL of the current operating system.</doc>
        <source-position filename="src/as-system-info.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="311">the homepage of the current OS.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="307">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_id" c:identifier="as_system_info_get_os_id">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="230">Get the ID of the current operating system.</doc>
        <source-position filename="src/as-system-info.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="236">the current OS ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="232">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_name" c:identifier="as_system_info_get_os_name">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="273">Get the humen-readable name of the current operating system.</doc>
        <source-position filename="src/as-system-info.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="279">the name of the current OS.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="275">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_version"
              c:identifier="as_system_info_get_os_version">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="289">Get the version string of the current operating system.</doc>
        <source-position filename="src/as-system-info.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="295">the version of the current OS.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="291">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_device_matching_modalias"
              c:identifier="as_system_info_has_device_matching_modalias">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="566">Check if there is a device on this system that matches the given modalias glob.</doc>
        <source-position filename="src/as-system-info.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="573">%TRUE if a matching device was found.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="568">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
          <parameter name="modalias_glob" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="569">the modalias value to to look for, may contain wildcards.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_input_control"
              c:identifier="as_system_info_has_input_control"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="866">Test if the current system has a specific user input control method.
Returns %AS_CHECK_RESULT_UNKNOWN if we could not test for an input control method,
%AS_CHECK_RESULT_ERROR on error and %AS_CHECK_RESULT_FALSE if the control was not found.</doc>
        <source-position filename="src/as-system-info.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="876">%AS_CHECK_RESULT_TRUE if control was found</doc>
          <type name="CheckResult" c:type="AsCheckResult"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="868">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="869">the #AsControlKind to test for.</doc>
            <type name="ControlKind" c:type="AsControlKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="modalias_to_syspath"
              c:identifier="as_system_info_modalias_to_syspath">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="549">Receive a path in /sys for the devices with the given modalias.</doc>
        <source-position filename="src/as-system-info.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="556">the syspath, or %NULL if none was found.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="551">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
          <parameter name="modalias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="552">the modalias value to resolve.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_length"
              c:identifier="as_system_info_set_display_length">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="937">Set the current display length for the given side kind.
The size needs to be in device-independent pixels, see the
AppStream documentation for more information:
https://freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-relations-display_length</doc>
        <source-position filename="src/as-system-info.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="939">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
          <parameter name="side" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="940">the #AsDisplaySideKind to select.</doc>
            <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
          </parameter>
          <parameter name="value_dip" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="941">the length value in device-independt pixels.</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_input_control"
              c:identifier="as_system_info_set_input_control">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="898">Explicitly mark a user input control as present or not present on this system.</doc>
        <source-position filename="src/as-system-info.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sysinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="900">a #AsSystemInfo instance.</doc>
            <type name="SystemInfo" c:type="AsSystemInfo*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="901">the #AsControlKind to set.</doc>
            <type name="ControlKind" c:type="AsControlKind"/>
          </parameter>
          <parameter name="found" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-system-info.c"
                 line="902">%TRUE if the control should be marked as found.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SystemInfoClass"
            c:type="AsSystemInfoClass"
            glib:is-gtype-struct-for="SystemInfo">
      <source-position filename="src/as-system-info.h" line="47"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-system-info.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-system-info.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-system-info.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-system-info.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-system-info.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-system-info.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="SystemInfoError"
                 glib:type-name="AsSystemInfoError"
                 glib:get-type="as_system_info_error_get_type"
                 c:type="AsSystemInfoError"
                 glib:error-domain="as-system-info-error-quark">
      <doc xml:space="preserve"
           filename="src/as-system-info.h"
           line="49">The error type.</doc>
      <member name="failed"
              value="0"
              c:identifier="AS_SYSTEM_INFO_ERROR_FAILED"
              glib:nick="failed"
              glib:name="AS_SYSTEM_INFO_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="src/as-system-info.h"
             line="51">Generic failure</doc>
      </member>
      <member name="not_found"
              value="1"
              c:identifier="AS_SYSTEM_INFO_ERROR_NOT_FOUND"
              glib:nick="not-found"
              glib:name="AS_SYSTEM_INFO_ERROR_NOT_FOUND">
        <doc xml:space="preserve"
             filename="src/as-system-info.h"
             line="52">Information was not found.</doc>
      </member>
      <function name="quark"
                c:identifier="as_system_info_error_quark"
                version="0.16.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-system-info.c"
               line="99">An error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="Translation"
           c:symbol-prefix="translation"
           c:type="AsTranslation"
           parent="GObject.Object"
           glib:type-name="AsTranslation"
           glib:get-type="as_translation_get_type"
           glib:type-struct="TranslationClass">
      <source-position filename="src/as-translation.h" line="45"/>
      <constructor name="new" c:identifier="as_translation_new">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="267">Creates a new #AsTranslation.</doc>
        <source-position filename="src/as-translation.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-translation.c"
               line="272">a #AsTranslation</doc>
          <type name="Translation" c:type="AsTranslation*"/>
        </return-value>
      </constructor>
      <method name="get_id" c:identifier="as_translation_get_id">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="151">The ID (e.g. Gettext translation domain) of this translation.</doc>
        <source-position filename="src/as-translation.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="153">a #AsTranslation instance.</doc>
            <type name="Translation" c:type="AsTranslation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind" c:identifier="as_translation_get_kind">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="122">The translation system type.</doc>
        <source-position filename="src/as-translation.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-translation.c"
               line="128">an enum of type #AsTranslationKind</doc>
          <type name="TranslationKind" c:type="AsTranslationKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="tr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="124">a #AsTranslation instance.</doc>
            <type name="Translation" c:type="AsTranslation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source_locale"
              c:identifier="as_translation_get_source_locale"
              version="0.14.6">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="178">The locale of the source strings for this component. If this has not been
explicitly specified, `en_US` will be returned.</doc>
        <source-position filename="src/as-translation.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-translation.c"
               line="185">The locale of the source strings for this component.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="180">a #AsTranslation instance.</doc>
            <type name="Translation" c:type="AsTranslation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_id" c:identifier="as_translation_set_id">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="164">Set the ID (e.g. Gettext domain) of this translation.</doc>
        <source-position filename="src/as-translation.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="tr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="166">a #AsTranslation instance.</doc>
            <type name="Translation" c:type="AsTranslation*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="167">The ID of this translation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind" c:identifier="as_translation_set_kind">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="137">Set the translation system type.</doc>
        <source-position filename="src/as-translation.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="tr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="139">a #AsTranslation instance.</doc>
            <type name="Translation" c:type="AsTranslation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="140">the new #AsTranslationKind</doc>
            <type name="TranslationKind" c:type="AsTranslationKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source_locale"
              c:identifier="as_translation_set_source_locale"
              version="0.14.6">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="195">Set the locale of the source strings for this component. In gettext, this is
referred to as the `C` locale. It’s almost always `en_US`, but for some
components it may not be.</doc>
        <source-position filename="src/as-translation.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="tr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="197">a #AsTranslation instance.</doc>
            <type name="Translation" c:type="AsTranslation*"/>
          </instance-parameter>
          <parameter name="locale"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="198">The POSIX locale that the source strings are in, or %NULL if unknown or default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="TranslationClass"
            c:type="AsTranslationClass"
            glib:is-gtype-struct-for="Translation">
      <source-position filename="src/as-translation.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-translation.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-translation.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-translation.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-translation.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-translation.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-translation.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="TranslationKind"
                 glib:type-name="AsTranslationKind"
                 glib:get-type="as_translation_kind_get_type"
                 c:type="AsTranslationKind">
      <doc xml:space="preserve"
           filename="src/as-translation.h"
           line="47">The translation type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_TRANSLATION_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_TRANSLATION_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-translation.h"
             line="49">Type invalid or not known</doc>
      </member>
      <member name="gettext"
              value="1"
              c:identifier="AS_TRANSLATION_KIND_GETTEXT"
              glib:nick="gettext"
              glib:name="AS_TRANSLATION_KIND_GETTEXT">
        <doc xml:space="preserve"
             filename="src/as-translation.h"
             line="50">Gettext translation domain</doc>
      </member>
      <member name="qt"
              value="2"
              c:identifier="AS_TRANSLATION_KIND_QT"
              glib:nick="qt"
              glib:name="AS_TRANSLATION_KIND_QT">
        <doc xml:space="preserve"
             filename="src/as-translation.h"
             line="51">Qt translation domain</doc>
      </member>
      <function name="from_string"
                c:identifier="as_translation_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="69">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-translation.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-translation.c"
               line="75">a #AsTranslationKind or %AS_TRANSLATION_KIND_UNKNOWN for unknown</doc>
          <type name="TranslationKind" c:type="AsTranslationKind"/>
        </return-value>
        <parameters>
          <parameter name="kind_str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="71">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_translation_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="51">Converts the enumerated value to a text representation.</doc>
        <source-position filename="src/as-translation.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-translation.c"
               line="57">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-translation.c"
                 line="53">the #AsTranslationKind.</doc>
            <type name="TranslationKind" c:type="AsTranslationKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="UrgencyKind"
                 glib:type-name="AsUrgencyKind"
                 glib:get-type="as_urgency_kind_get_type"
                 c:type="AsUrgencyKind">
      <doc xml:space="preserve"
           filename="src/as-enums.h"
           line="105">The urgency of an #AsRelease</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_URGENCY_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_URGENCY_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="107">Urgency is unknown or not set</doc>
      </member>
      <member name="low"
              value="1"
              c:identifier="AS_URGENCY_KIND_LOW"
              glib:nick="low"
              glib:name="AS_URGENCY_KIND_LOW">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="108">Low urgency</doc>
      </member>
      <member name="medium"
              value="2"
              c:identifier="AS_URGENCY_KIND_MEDIUM"
              glib:nick="medium"
              glib:name="AS_URGENCY_KIND_MEDIUM">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="109">Medium urgency</doc>
      </member>
      <member name="high"
              value="3"
              c:identifier="AS_URGENCY_KIND_HIGH"
              glib:nick="high"
              glib:name="AS_URGENCY_KIND_HIGH">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="110">High urgency</doc>
      </member>
      <member name="critical"
              value="4"
              c:identifier="AS_URGENCY_KIND_CRITICAL"
              glib:nick="critical"
              glib:name="AS_URGENCY_KIND_CRITICAL">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="111">Critical urgency</doc>
      </member>
      <function name="from_string"
                c:identifier="as_urgency_kind_from_string"
                version="0.6.5">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="157">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-enums.h" line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="163">a %AsUrgencyKind or %AS_URGENCY_KIND_UNKNOWN for unknown</doc>
          <type name="UrgencyKind" c:type="AsUrgencyKind"/>
        </return-value>
        <parameters>
          <parameter name="urgency_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-enums.c"
                 line="159">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_urgency_kind_to_string"
                version="0.6.5">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="133">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-enums.h" line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="139">string version of @urgency_kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="urgency_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-enums.c"
                 line="135">the %AsUrgencyKind.</doc>
            <type name="UrgencyKind" c:type="AsUrgencyKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="UrlKind"
                 glib:type-name="AsUrlKind"
                 glib:get-type="as_url_kind_get_type"
                 c:type="AsUrlKind">
      <doc xml:space="preserve"
           filename="src/as-enums.h"
           line="75">The URL type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_URL_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_URL_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="77">Type invalid or not known</doc>
      </member>
      <member name="homepage"
              value="1"
              c:identifier="AS_URL_KIND_HOMEPAGE"
              glib:nick="homepage"
              glib:name="AS_URL_KIND_HOMEPAGE">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="78">Project homepage</doc>
      </member>
      <member name="bugtracker"
              value="2"
              c:identifier="AS_URL_KIND_BUGTRACKER"
              glib:nick="bugtracker"
              glib:name="AS_URL_KIND_BUGTRACKER">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="79">Bugtracker</doc>
      </member>
      <member name="faq"
              value="3"
              c:identifier="AS_URL_KIND_FAQ"
              glib:nick="faq"
              glib:name="AS_URL_KIND_FAQ">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="80">FAQ page</doc>
      </member>
      <member name="help"
              value="4"
              c:identifier="AS_URL_KIND_HELP"
              glib:nick="help"
              glib:name="AS_URL_KIND_HELP">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="81">Help manual</doc>
      </member>
      <member name="donation"
              value="5"
              c:identifier="AS_URL_KIND_DONATION"
              glib:nick="donation"
              glib:name="AS_URL_KIND_DONATION">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="82">Page with information about how to donate to the project</doc>
      </member>
      <member name="translate"
              value="6"
              c:identifier="AS_URL_KIND_TRANSLATE"
              glib:nick="translate"
              glib:name="AS_URL_KIND_TRANSLATE">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="83">Page with instructions on how to translate the project / submit translations.</doc>
      </member>
      <member name="contact"
              value="7"
              c:identifier="AS_URL_KIND_CONTACT"
              glib:nick="contact"
              glib:name="AS_URL_KIND_CONTACT">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="84">Contact the developers</doc>
      </member>
      <member name="vcs_browser"
              value="8"
              c:identifier="AS_URL_KIND_VCS_BROWSER"
              glib:nick="vcs-browser"
              glib:name="AS_URL_KIND_VCS_BROWSER">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="85">Browse the source code</doc>
      </member>
      <member name="contribute"
              value="9"
              c:identifier="AS_URL_KIND_CONTRIBUTE"
              glib:nick="contribute"
              glib:name="AS_URL_KIND_CONTRIBUTE">
        <doc xml:space="preserve"
             filename="src/as-enums.h"
             line="86">Help developing</doc>
      </member>
      <function name="from_string" c:identifier="as_url_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="101">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-enums.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="107">a #AsUrlKind or %AS_URL_KIND_UNKNOWN for unknown</doc>
          <type name="UrlKind" c:type="AsUrlKind"/>
        </return-value>
        <parameters>
          <parameter name="url_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-enums.c"
                 line="103">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_url_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="69">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-enums.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="75">string version of @url_kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="url_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-enums.c"
                 line="71">the %AsUrlKind.</doc>
            <type name="UrlKind" c:type="AsUrlKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="UtilsError"
                 glib:type-name="AsUtilsError"
                 glib:get-type="as_utils_error_get_type"
                 c:type="AsUtilsError"
                 glib:error-domain="as-utils-error-quark">
      <doc xml:space="preserve"
           filename="src/as-utils.h"
           line="33">The error type.</doc>
      <member name="failed"
              value="0"
              c:identifier="AS_UTILS_ERROR_FAILED"
              glib:nick="failed"
              glib:name="AS_UTILS_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="src/as-utils.h"
             line="35">Generic failure</doc>
      </member>
      <function name="quark"
                c:identifier="as_utils_error_quark"
                version="0.14.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="64">An error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="Validator"
           c:symbol-prefix="validator"
           c:type="AsValidator"
           parent="GObject.Object"
           glib:type-name="AsValidator"
           glib:get-type="as_validator_get_type"
           glib:type-struct="ValidatorClass">
      <source-position filename="src/as-validator.h" line="46"/>
      <constructor name="new" c:identifier="as_validator_new">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3809">Creates a new #AsValidator.</doc>
        <source-position filename="src/as-validator.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3814">an #AsValidator</doc>
          <type name="Validator" c:type="AsValidator*"/>
        </return-value>
      </constructor>
      <method name="add_override"
              c:identifier="as_validator_add_override"
              version="0.15.4"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="608">Override the severity of a selected tag. For most tags, the severity
can not be lowered to a value that makes a validation
that would otherwise fail pass (so e.g. an ERROR can not become an INFO).
Some tags are explicitly allowed to have their severity lowered to enable
validation of e.g. incomplete metadata during development.
Increasing the severity of any tag is always allowed.</doc>
        <source-position filename="src/as-validator.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="610">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="611">the issue tag to override, e.g. "release-time-missing"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="severity_override" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="612">the new severity for the tag.</doc>
            <type name="IssueSeverity" c:type="AsIssueSeverity"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_release_bytes"
              c:identifier="as_validator_add_release_bytes"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="446">Add release metadata explicitly from bytes.</doc>
        <source-position filename="src/as-validator.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="448">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="release_fname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="449">File basename of the release metadata file to add.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="release_metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="450">Data of the release metadata file.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_release_file"
              c:identifier="as_validator_add_release_file"
              version="0.16.0"
              throws="1">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="489">Add a release metadata file to the validation process.</doc>
        <source-position filename="src/as-validator.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="491">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="release_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="492">Release metadata file to add.</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_issues" c:identifier="as_validator_clear_issues">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="308">Clears the list of issues</doc>
        <source-position filename="src/as-validator.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="310">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clear_release_data"
              c:identifier="as_validator_clear_release_data"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="430">Clear all release information that was explicitly added to the
validation process.</doc>
        <source-position filename="src/as-validator.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="432">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_check_urls" c:identifier="as_validator_get_check_urls">
        <source-position filename="src/as-validator.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="548">%TRUE in case we check if remote URLs exist.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="546">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_issue_files_count"
              c:identifier="as_validator_get_issue_files_count"
              version="0.16.0">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3552">Get the number of files for which issues have been found.</doc>
        <source-position filename="src/as-validator.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3558">The number of files that have issues.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3554">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_issues" c:identifier="as_validator_get_issues">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3569">Get a list of found metadata format issues.</doc>
        <source-position filename="src/as-validator.h" line="89"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3575">a list of #AsValidatorIssue instances, free with g_list_free()</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ValidatorIssue"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3571">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_issues_per_file"
              c:identifier="as_validator_get_issues_per_file"
              version="0.12.8">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3584">Get a hash table of filenames mapped to lists of issues.
This is useful if validation was requested for multiple files and
a list of issues per-file is desired without prior explicit sorting.</doc>
        <source-position filename="src/as-validator.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3592">a file to issue list mapping</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <array name="GLib.PtrArray">
              <type name="ValidatorIssue"/>
            </array>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3586">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_report_yaml"
              c:identifier="as_validator_get_report_yaml">
        <source-position filename="src/as-validator.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="yaml_report" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_strict"
              c:identifier="as_validator_get_strict"
              version="0.15.4">
        <source-position filename="src/as-validator.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="579">%TRUE in case we are in strict mode and consider any issues as fatal.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="577">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tag_explanation"
              c:identifier="as_validator_get_tag_explanation">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3737">Get the explanatory text for a given issue tag.</doc>
        <source-position filename="src/as-validator.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3743">Explanation text.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3739">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tag_severity"
              c:identifier="as_validator_get_tag_severity">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3755">Get the severity for a given issue tag.</doc>
        <source-position filename="src/as-validator.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3761">The #AsIssueSeverity</doc>
          <type name="IssueSeverity" c:type="AsIssueSeverity"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3757">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tags" c:identifier="as_validator_get_tags">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3773">Get an array of all tags known to the validator.</doc>
        <source-position filename="src/as-validator.h" line="111"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3779">A string array of tags</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3775">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_check_urls" c:identifier="as_validator_set_check_urls">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="557">Set this value to make the #AsValidator check whether remote URLs
actually exist.</doc>
        <source-position filename="src/as-validator.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="559">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="560">%TRUE if remote URLs should be checked for availability.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_strict"
              c:identifier="as_validator_set_strict"
              version="0.15.4">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="590">Enable or disable strict mode. In strict mode, any found issue will result
in a failed validation (except for issues of "pedantic" severity).
Otherwise, only a "warning" or "error" will cause the validation to fail.</doc>
        <source-position filename="src/as-validator.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="592">a #AsValidator instance.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="is_strict" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="593">%TRUE to enable strict mode.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="validate_bytes"
              c:identifier="as_validator_validate_bytes"
              version="0.14.0">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3133">Validate AppStream XML data from a byte array.
Remember to run %as_validator_clear_issues if you do not want previous
validation runs to affect the outcome of this validation.</doc>
        <source-position filename="src/as-validator.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3142">%TRUE if bytes validated successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3135">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3136">XML metadata as #GBytes.</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="validate_data" c:identifier="as_validator_validate_data">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3212">Validate AppStream XML data.
Remember to run %as_validator_clear_issues if you do not want previous
validation runs to affect the outcome of this validation.</doc>
        <source-position filename="src/as-validator.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3221">%TRUE if data validated successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3214">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3215">XML metadata.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="validate_file" c:identifier="as_validator_validate_file">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3027">Validate an AppStream XML file.
Remember to run %as_validator_clear_issues if you do not want previous
validation runs to affect the outcome of this validation.</doc>
        <source-position filename="src/as-validator.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3036">%TRUE if file validated successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3029">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="metadata_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3030">An AppStream XML file.</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="validate_tree" c:identifier="as_validator_validate_tree">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="3365">Validate a full directory tree for issues in AppStream metadata.</doc>
        <source-position filename="src/as-validator.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="3372">%TRUE if file validated successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="validator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3367">An instance of #AsValidator.</doc>
            <type name="Validator" c:type="AsValidator*"/>
          </instance-parameter>
          <parameter name="root_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator.c"
                 line="3368">The root directory of the filesystem tree that should be validated.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ValidatorClass"
            c:type="AsValidatorClass"
            glib:is-gtype-struct-for="Validator">
      <source-position filename="src/as-validator.h" line="46"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-validator.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-validator.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-validator.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-validator.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-validator.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-validator.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ValidatorError"
                 glib:type-name="AsValidatorError"
                 glib:get-type="as_validator_error_get_type"
                 c:type="AsValidatorError"
                 glib:error-domain="as-validator-error-quark">
      <doc xml:space="preserve"
           filename="src/as-validator.h"
           line="48">The error type.</doc>
      <member name="failed"
              value="0"
              c:identifier="AS_VALIDATOR_ERROR_FAILED"
              glib:nick="failed"
              glib:name="AS_VALIDATOR_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="src/as-validator.h"
             line="50">Generic failure</doc>
      </member>
      <member name="override_invalid"
              value="1"
              c:identifier="AS_VALIDATOR_ERROR_OVERRIDE_INVALID"
              glib:nick="override-invalid"
              glib:name="AS_VALIDATOR_ERROR_OVERRIDE_INVALID">
        <doc xml:space="preserve"
             filename="src/as-validator.h"
             line="51">The issue override was not accepted.</doc>
      </member>
      <member name="invalid_filename"
              value="2"
              c:identifier="AS_VALIDATOR_ERROR_INVALID_FILENAME"
              glib:nick="invalid-filename"
              glib:name="AS_VALIDATOR_ERROR_INVALID_FILENAME">
        <doc xml:space="preserve"
             filename="src/as-validator.h"
             line="52">The filename was invalid.</doc>
      </member>
      <function name="quark"
                c:identifier="as_validator_error_quark"
                version="0.15.4">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator.c"
               line="77">An error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="ValidatorIssue"
           c:symbol-prefix="validator_issue"
           c:type="AsValidatorIssue"
           parent="GObject.Object"
           glib:type-name="AsValidatorIssue"
           glib:get-type="as_validator_issue_get_type"
           glib:type-struct="ValidatorIssueClass">
      <source-position filename="src/as-validator-issue.h" line="45"/>
      <constructor name="new" c:identifier="as_validator_issue_new">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="390">Creates a new #AsValidatorIssue.</doc>
        <source-position filename="src/as-validator-issue.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="395">a #AsValidatorIssue</doc>
          <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
        </return-value>
      </constructor>
      <method name="get_cid" c:identifier="as_validator_issue_get_cid">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="267">The component-id this issue is about.</doc>
        <source-position filename="src/as-validator-issue.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="273">a component-id.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="269">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_explanation"
              c:identifier="as_validator_issue_get_explanation"
              version="0.12.8">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="232">Get an extended explanation on this issue, or return %NULL
if none is available.</doc>
        <source-position filename="src/as-validator-issue.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="239">the explanation</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="234">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename"
              c:identifier="as_validator_issue_get_filename">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="326">The name of the file this issue was found in.</doc>
        <source-position filename="src/as-validator-issue.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="332">the filename</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="328">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hint"
              c:identifier="as_validator_issue_get_hint"
              version="0.12.8">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="198">Get a short context hint for this issue.</doc>
        <source-position filename="src/as-validator-issue.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="204">the hint</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="200">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_line" c:identifier="as_validator_issue_get_line">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="297">Gets the line number where this issue was found.</doc>
        <source-position filename="src/as-validator-issue.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="303">the line number where this issue occured, or -1 if unknown.</doc>
          <type name="glong" c:type="glong"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="299">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="as_validator_issue_get_location">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="356">Builds a string containing all information about the location
where this issue occured that we know about.</doc>
        <source-position filename="src/as-validator-issue.h" line="99"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="363">the location hint as string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="358">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_severity"
              c:identifier="as_validator_issue_get_severity">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="169">Gets the severity of this issue.</doc>
        <source-position filename="src/as-validator-issue.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="175">a #AsIssueSeverity</doc>
          <type name="IssueSeverity" c:type="AsIssueSeverity"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="171">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tag"
              c:identifier="as_validator_issue_get_tag"
              version="0.12.8">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="135">Gets the issue tag string for this issue.</doc>
        <source-position filename="src/as-validator-issue.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="141">the tag</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="137">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_cid" c:identifier="as_validator_issue_set_cid">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="282">Sets the component-id this issue is about.</doc>
        <source-position filename="src/as-validator-issue.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="284">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
          <parameter name="cid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="285">a component-id.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_explanation"
              c:identifier="as_validator_issue_set_explanation"
              version="0.12.8">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="250">Set explanatory text for this issue.</doc>
        <source-position filename="src/as-validator-issue.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="252">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
          <parameter name="explanation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="253">the explanation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_filename"
              c:identifier="as_validator_issue_set_filename">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="341">Sets the name of the file the issue was found in.</doc>
        <source-position filename="src/as-validator-issue.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="343">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
          <parameter name="fname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="344">the filename.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hint"
              c:identifier="as_validator_issue_set_hint"
              version="0.12.8">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="215">Sets short issue hint.</doc>
        <source-position filename="src/as-validator-issue.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="217">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
          <parameter name="hint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="218">the hint.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_line" c:identifier="as_validator_issue_set_line">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="312">Sets the line number where this issue was found.</doc>
        <source-position filename="src/as-validator-issue.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="314">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
          <parameter name="line" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="315">the line number.</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_severity"
              c:identifier="as_validator_issue_set_severity">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="184">Sets the severity for this issue.</doc>
        <source-position filename="src/as-validator-issue.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="186">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
          <parameter name="severity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="187">the #AsIssueSeverity.</doc>
            <type name="IssueSeverity" c:type="AsIssueSeverity"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tag"
              c:identifier="as_validator_issue_set_tag"
              version="0.12.8">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="152">Sets the issue tag.</doc>
        <source-position filename="src/as-validator-issue.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="154">a #AsValidatorIssue instance.</doc>
            <type name="ValidatorIssue" c:type="AsValidatorIssue*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-validator-issue.c"
                 line="155">the tag.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ValidatorIssueClass"
            c:type="AsValidatorIssueClass"
            glib:is-gtype-struct-for="ValidatorIssue">
      <source-position filename="src/as-validator-issue.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-validator-issue.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-validator-issue.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-validator-issue.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-validator-issue.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-validator-issue.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-validator-issue.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <bitfield name="ValueFlags"
              glib:type-name="AsValueFlags"
              glib:get-type="as_value_flags_get_type"
              c:type="AsValueFlags">
      <doc xml:space="preserve"
           filename="src/as-component.h"
           line="154">Set how values assigned to an #AsComponent should be treated when
they are set or retrieved.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_VALUE_FLAG_NONE"
              glib:nick="none"
              glib:name="AS_VALUE_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="156">No flags.</doc>
      </member>
      <member name="duplicate_check"
              value="1"
              c:identifier="AS_VALUE_FLAG_DUPLICATE_CHECK"
              glib:nick="duplicate-check"
              glib:name="AS_VALUE_FLAG_DUPLICATE_CHECK">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="157">Check for duplicates when adding items to list values.</doc>
      </member>
      <member name="no_translation_fallback"
              value="2"
              c:identifier="AS_VALUE_FLAG_NO_TRANSLATION_FALLBACK"
              glib:nick="no-translation-fallback"
              glib:name="AS_VALUE_FLAG_NO_TRANSLATION_FALLBACK">
        <doc xml:space="preserve"
             filename="src/as-component.h"
             line="158">Don't fall back to C when retrieving translated values.</doc>
      </member>
    </bitfield>
    <bitfield name="VercmpFlags"
              glib:type-name="AsVercmpFlags"
              glib:get-type="as_vercmp_flags_get_type"
              c:type="AsVercmpFlags">
      <doc xml:space="preserve"
           filename="src/as-vercmp.h"
           line="31">The flags used when matching unique IDs.</doc>
      <member name="none"
              value="0"
              c:identifier="AS_VERCMP_FLAG_NONE"
              glib:nick="none"
              glib:name="AS_VERCMP_FLAG_NONE">
        <doc xml:space="preserve"
             filename="src/as-vercmp.h"
             line="33">No flags set</doc>
      </member>
      <member name="ignore_epoch"
              value="1"
              c:identifier="AS_VERCMP_FLAG_IGNORE_EPOCH"
              glib:nick="ignore-epoch"
              glib:name="AS_VERCMP_FLAG_IGNORE_EPOCH">
        <doc xml:space="preserve"
             filename="src/as-vercmp.h"
             line="34">Ignore epoch part of a version string.</doc>
      </member>
    </bitfield>
    <class name="Video"
           c:symbol-prefix="video"
           c:type="AsVideo"
           parent="GObject.Object"
           glib:type-name="AsVideo"
           glib:get-type="as_video_get_type"
           glib:type-struct="VideoClass">
      <source-position filename="src/as-video.h" line="45"/>
      <constructor name="new" c:identifier="as_video_new">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="547">Creates a new #AsVideo.</doc>
        <source-position filename="src/as-video.h" line="85"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="552">a #AsVideo</doc>
          <type name="Video" c:type="AsVideo*"/>
        </return-value>
      </constructor>
      <method name="get_codec_kind" c:identifier="as_video_get_codec_kind">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="167">Gets the video codec, if known.</doc>
        <source-position filename="src/as-video.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="173">the #AsVideoCodecKind</doc>
          <type name="VideoCodecKind" c:type="AsVideoCodecKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="169">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_container_kind"
              c:identifier="as_video_get_container_kind">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="198">Gets the video container format, if known.</doc>
        <source-position filename="src/as-video.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="204">the #AsVideoContainerKind</doc>
          <type name="VideoContainerKind" c:type="AsVideoContainerKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="200">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height" c:identifier="as_video_get_height">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="276">Gets the video height, if known.</doc>
        <source-position filename="src/as-video.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="282">height in pixels or 0 if unknown</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="278">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale" c:identifier="as_video_get_locale">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="307">Get locale for this video.</doc>
        <source-position filename="src/as-video.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="313">Locale string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="309">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="as_video_get_url">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="214">Gets the full qualified URL for the video, usually pointing at a mirror or CDN server.</doc>
        <source-position filename="src/as-video.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="220">a web URL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="216">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width" c:identifier="as_video_get_width">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="245">Gets the video width, if known.</doc>
        <source-position filename="src/as-video.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="251">width in pixels or 0 if unknown</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="247">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_codec_kind" c:identifier="as_video_set_codec_kind">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="152">Sets the video codec.</doc>
        <source-position filename="src/as-video.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="154">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="155">the #AsVideoCodecKind, e.g. %AS_VIDEO_CODEC_KIND_AV1.</doc>
            <type name="VideoCodecKind" c:type="AsVideoCodecKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_container_kind"
              c:identifier="as_video_set_container_kind">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="183">Sets the video container.</doc>
        <source-position filename="src/as-video.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="185">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="186">the #AsVideoContainerKind, e.g. %AS_VIDEO_CONTAINER_KIND_MKV.</doc>
            <type name="VideoContainerKind" c:type="AsVideoContainerKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_height" c:identifier="as_video_set_height">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="292">Sets the video height.</doc>
        <source-position filename="src/as-video.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="294">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="295">the height in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale" c:identifier="as_video_set_locale">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="322">Sets the locale for this video.</doc>
        <source-position filename="src/as-video.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="324">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
          <parameter name="locale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="325">the BCP47 locale string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="as_video_set_url">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="230">Sets the fully-qualified URL to use for the video.</doc>
        <source-position filename="src/as-video.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="232">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="233">the URL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width" c:identifier="as_video_set_width">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="261">Sets the video width.</doc>
        <source-position filename="src/as-video.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="263">a #AsVideo instance.</doc>
            <type name="Video" c:type="AsVideo*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="264">the width in pixels.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="VideoClass"
            c:type="AsVideoClass"
            glib:is-gtype-struct-for="Video">
      <source-position filename="src/as-video.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_as_reserved1" introspectable="0">
        <callback name="_as_reserved1">
          <source-position filename="src/as-video.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved2" introspectable="0">
        <callback name="_as_reserved2">
          <source-position filename="src/as-video.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved3" introspectable="0">
        <callback name="_as_reserved3">
          <source-position filename="src/as-video.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved4" introspectable="0">
        <callback name="_as_reserved4">
          <source-position filename="src/as-video.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved5" introspectable="0">
        <callback name="_as_reserved5">
          <source-position filename="src/as-video.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_as_reserved6" introspectable="0">
        <callback name="_as_reserved6">
          <source-position filename="src/as-video.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="VideoCodecKind"
                 glib:type-name="AsVideoCodecKind"
                 glib:get-type="as_video_codec_kind_get_type"
                 c:type="AsVideoCodecKind">
      <doc xml:space="preserve"
           filename="src/as-video.h"
           line="47">Supported video codecs.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_VIDEO_CODEC_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_VIDEO_CODEC_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-video.h"
             line="49">Unknown video codec</doc>
      </member>
      <member name="vp9"
              value="1"
              c:identifier="AS_VIDEO_CODEC_KIND_VP9"
              glib:nick="vp9"
              glib:name="AS_VIDEO_CODEC_KIND_VP9">
        <doc xml:space="preserve"
             filename="src/as-video.h"
             line="50">The VP9 video codec</doc>
      </member>
      <member name="av1"
              value="2"
              c:identifier="AS_VIDEO_CODEC_KIND_AV1"
              glib:nick="av1"
              glib:name="AS_VIDEO_CODEC_KIND_AV1">
        <doc xml:space="preserve"
             filename="src/as-video.h"
             line="51">The AV1 video codec</doc>
      </member>
      <function name="from_string"
                c:identifier="as_video_codec_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="74">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-video.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="80">a #AsVideoCodecKind, or %AS_VIDEO_CODEC_KIND_UNKNOWN for unknown.</doc>
          <type name="VideoCodecKind" c:type="AsVideoCodecKind"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="76">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="as_video_codec_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="93">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-video.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="99">string version of @codec</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="95">the #AsVideoCodecKind.</doc>
            <type name="VideoCodecKind" c:type="AsVideoCodecKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="VideoContainerKind"
                 glib:type-name="AsVideoContainerKind"
                 glib:get-type="as_video_container_kind_get_type"
                 c:type="AsVideoContainerKind">
      <doc xml:space="preserve"
           filename="src/as-video.h"
           line="63">Supported video codecs.</doc>
      <member name="unknown"
              value="0"
              c:identifier="AS_VIDEO_CONTAINER_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="AS_VIDEO_CONTAINER_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="src/as-video.h"
             line="65">Unknown video container</doc>
      </member>
      <member name="mkv"
              value="1"
              c:identifier="AS_VIDEO_CONTAINER_KIND_MKV"
              glib:nick="mkv"
              glib:name="AS_VIDEO_CONTAINER_KIND_MKV">
        <doc xml:space="preserve"
             filename="src/as-video.h"
             line="66">The Matroska video (MKV) container</doc>
      </member>
      <member name="webm"
              value="2"
              c:identifier="AS_VIDEO_CONTAINER_KIND_WEBM"
              glib:nick="webm"
              glib:name="AS_VIDEO_CONTAINER_KIND_WEBM">
        <doc xml:space="preserve"
             filename="src/as-video.h"
             line="67">The WebM video container</doc>
      </member>
      <function name="from_string"
                c:identifier="as_video_container_kind_from_string">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="112">Converts the text representation to an enumerated value.</doc>
        <source-position filename="src/as-video.h" line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="118">a #AsVideoContainerKind, or %AS_VIDEO_CONTAINER_KIND_UNKNOWN for unknown.</doc>
          <type name="VideoContainerKind" c:type="AsVideoContainerKind"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="114">the string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="as_video_container_kind_to_string">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="133">Converts the enumerated value to an text representation.</doc>
        <source-position filename="src/as-video.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="139">string version of @kind</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/as-video.c"
                 line="135">the #AsVideoContainerKind.</doc>
            <type name="VideoContainerKind" c:type="AsVideoContainerKind"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <function name="agreement_kind_from_string"
              c:identifier="as_agreement_kind_from_string"
              moved-to="AgreementKind.from_string"
              version="0.12.1">
      <doc xml:space="preserve"
           filename="src/as-agreement.c"
           line="102">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-agreement.h" line="73"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="108">a #AsAgreementKind or %AS_AGREEMENT_KIND_UNKNOWN for unknown</doc>
        <type name="AgreementKind" c:type="AsAgreementKind"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="104">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="agreement_kind_to_string"
              c:identifier="as_agreement_kind_to_string"
              moved-to="AgreementKind.to_string"
              version="0.12.1">
      <doc xml:space="preserve"
           filename="src/as-agreement.c"
           line="80">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-agreement.h" line="72"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-agreement.c"
             line="86">string version of @value</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-agreement.c"
               line="82">the #AsAgreementKind.</doc>
          <type name="AgreementKind" c:type="AsAgreementKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="artifact_kind_from_string"
              c:identifier="as_artifact_kind_from_string"
              moved-to="ArtifactKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-artifact.c"
           line="89">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-artifact.h" line="86"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="95">a #AsArtifactKind, or %AS_ARTIFACT_KIND_UNKNOWN for unknown.</doc>
        <type name="ArtifactKind" c:type="AsArtifactKind"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="91">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="artifact_kind_to_string"
              c:identifier="as_artifact_kind_to_string"
              moved-to="ArtifactKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-artifact.c"
           line="108">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-artifact.h" line="87"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="114">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="110">the #AsArtifactKind.</doc>
          <type name="ArtifactKind" c:type="AsArtifactKind"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="as-agreement">
      <doc xml:space="preserve"
           filename="src/as-agreement.c"
           line="22">Agreements can be used by components to specify GDPR, EULA or other warnings.

See also: #AsAgreementSection</doc>
    </docsection>
    <docsection name="as-agreement-section">
      <doc xml:space="preserve"
           filename="src/as-agreement-section.c"
           line="22">Agreements are typically split up into sections.
This class describes one agreement section.

See also: #AsAgreement</doc>
    </docsection>
    <docsection name="as-artifact">
      <doc xml:space="preserve"
           filename="src/as-artifact.c"
           line="21">Describes a artifact artifact

See also: #AsArtifact</doc>
    </docsection>
    <docsection name="as-branding">
      <doc xml:space="preserve"
           filename="src/as-branding.c"
           line="21">This class provides information contained in an AppStream branding tag.
See https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-branding
for more information.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-bundle">
      <doc xml:space="preserve"
           filename="src/as-bundle.c"
           line="21">This class provides information contained in an AppStream bundle tag.
See https://www.freedesktop.org/software/appstream/docs/chap-CatalogData.html#tag-ct-bundle
for more information.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-cache">
      <doc xml:space="preserve"
           filename="src/as-cache.c"
           line="21">Caches are used by #AsPool to quickly search for components while not keeping all
component data in memory.
This class is threadsafe.

See also: #AsPool</doc>
    </docsection>
    <docsection name="as-category">
      <doc xml:space="preserve"
           filename="src/as-category.c"
           line="32">This object represents a XDG category, as defined at:
https://specifications.freedesktop.org/menu-spec/menu-spec-1.0.html#category-registry

The #AsCategory object does not support all aspects of a menu. Its main purpose
is to be used in software-centers to group visual components (gui/web applications).

You can use %as_get_default_categories() to get a set of supported default categories.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-checksum">
      <doc xml:space="preserve"
           filename="src/as-checksum.c"
           line="21">A checksum for a file referenced in a release.

See also: #AsRelease</doc>
    </docsection>
    <docsection name="as-component">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="49">This object represents an Appstream software component which is associated
to a package in the distribution's repositories.
A component can be anything, ranging from an application to a font, a codec or
even a non-visual software project providing libraries and python-modules for
other applications to use.

The type of the component is stored as #AsComponentKind and can be queried to
find out which kind of component we're dealing with.

See also: #AsProvidesKind, #AsDatabase</doc>
    </docsection>
    <docsection name="as-content-rating">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="23">Content ratings are age-specific guidelines for applications.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-context">
      <doc xml:space="preserve"
           filename="src/as-context.c"
           line="21">Contains information about the context of AppStream metadata, from the
root node of the document.
Instances of #AsContext may be shared between #AsComponent instances.

You usually do not want to use this directly, but use the more convenient
#AsMetadata instead.

See also: #AsComponent, #AsMetadata</doc>
    </docsection>
    <docsection name="as-distro-extras">
      <doc xml:space="preserve"
           filename="src/as-distro-extras.c"
           line="24">This module mainly contains distribution-specific, non-public helper methods.</doc>
    </docsection>
    <docsection name="as-file-monitor">
      <doc xml:space="preserve"
           filename="src/as-file-monitor.c"
           line="22">This object will monitor a set of directories for changes.

See also: #AsPool</doc>
    </docsection>
    <docsection name="as-image">
      <doc xml:space="preserve"
           filename="src/as-image.c"
           line="22">Screenshot may have multiple versions of an image in different resolutions
or aspect ratios. This object allows access to the location and size of a
single image.

See also: #AsScreenshot</doc>
    </docsection>
    <docsection name="as-issue">
      <doc xml:space="preserve"
           filename="src/as-issue.c"
           line="21">Information about an issue that was resolved in a release.

See also: #AsRelease</doc>
    </docsection>
    <docsection name="as-launchable">
      <doc xml:space="preserve"
           filename="src/as-launchable.c"
           line="27">Components can provide multiple launch-entries to launch the software they belong to.
This class describes them.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-metadata">
      <doc xml:space="preserve"
           filename="src/as-metadata.c"
           line="21">This object parses MetaInfo data, AppStream Catalog metadata
and AppStream release metadata into #AsComponent representations.

It is also able to serialize #AsComponent entities into their
various AppStream XML/YAML representations.

See also: #AsComponent, #AsRelease, #AsPool</doc>
    </docsection>
    <docsection name="as-news-convert">
      <doc xml:space="preserve"
           filename="src/as-news-convert.c"
           line="22">Read NEWS and other types of release information files and convert them
to AppStream metainfo data.
Also, write NEWS files from #AsRelease release information.

These functions are private/internal.</doc>
    </docsection>
    <docsection name="as-pool">
      <doc xml:space="preserve"
           filename="src/as-pool.c"
           line="21">This class loads AppStream metadata from various sources and refines it with existing
knowledge about the system (e.g. by setting absolute paths for cached icons).
An #AsPool will use an on-disk cache to store metadata is has read and refined to
speed up the loading time when the same data is requested a second time.

You can find AppStream metadata matching various user-defined criteria, and also add new
metadata to the pool.
The caching behavior can be controlled by the application using #AsCacheFlags.

An AppStream cache object can also be created and read using the appstreamcli(1) utility.

This class is threadsafe.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-provided">
      <doc xml:space="preserve"
           filename="src/as-provided.c"
           line="30">Components can provide various items, like libraries, Python-modules,
firmware, binaries, etc.
Functions to work with these items are provided here.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-relation">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="33">A component can have recommends- or requires relations on other components, system properties,
hardware and other interfaces.
This class contains a representation of those relations.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-release">
      <doc xml:space="preserve"
           filename="src/as-release.c"
           line="22">This object represents a single upstream release, typically a minor update.
Releases can contain a localized description of paragraph and list elements
and also have a version number and timestamp.

Releases can be automatically generated by parsing upstream ChangeLogs or
.spec files, or can be populated using MetaInfo files.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-review">
      <doc xml:space="preserve"
           filename="src/as-review.c"
           line="23">This object represents a user-submitted software review.</doc>
    </docsection>
    <docsection name="as-screenshot">
      <doc xml:space="preserve"
           filename="src/as-screenshot.c"
           line="22">Screenshots have a localized caption and contain either a set of images
of different resolution or a video screencast showcasing the software.

See also: #AsImage, #AsVideo</doc>
    </docsection>
    <docsection name="as-suggested">
      <doc xml:space="preserve"
           filename="src/as-suggested.c"
           line="22">This class provides a list of other component-ids suggested by a software component, as well
as an origin of the suggestion (manually suggested by the upstream project, or
automatically determined by heuristics).</doc>
    </docsection>
    <docsection name="as-system-info">
      <doc xml:space="preserve"
           filename="src/as-system-info.c"
           line="21">This class reads information about the current operating system and device
that AppStream is running on. It can also be used by GUI toolkits to set
data that we can not automatically determine in a toolkit-independent way,
such as screen dimensions.

AppStream uses this information to verify component relations
(as set in requires/recommends/supports etc. tags).

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-tag">
      <doc xml:space="preserve"
           filename="src/as-tag.c"
           line="22">These functions will convert a tag enum such as %AS_TAG_COMPONENT to
it's string form, and also vice-versa.

These helper functions may be useful if implementing an AppStream parser.</doc>
    </docsection>
    <docsection name="as-translation">
      <doc xml:space="preserve"
           filename="src/as-translation.c"
           line="29">Describes the translation domain and translation system used by the upstream component.
See [the specification](https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-translation) for
more information on the corresponding XML tag.

See also: #AsComponent</doc>
    </docsection>
    <docsection name="as-utils">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="51">Functions which are used in libappstream and might be useful for others
as well.</doc>
    </docsection>
    <docsection name="as-validator">
      <doc xml:space="preserve"
           filename="src/as-validator.c"
           line="21">This object is able to validate AppStream XML metadata (catalog and metainfo)
and to generate a report about issues found with it.

See also: #AsMetadata</doc>
    </docsection>
    <docsection name="as-validator-issue">
      <doc xml:space="preserve"
           filename="src/as-validator-issue.c"
           line="21">See also: #AsValidator</doc>
    </docsection>
    <docsection name="as-vercmp">
      <doc xml:space="preserve"
           filename="src/as-vercmp.c"
           line="29">Compare software version numbers.</doc>
    </docsection>
    <docsection name="as-version">
      <doc xml:space="preserve"
           filename="src/as-version.c"
           line="22">These functions are used in client code to conditionalize compilation
depending on the version of libappstream headers installed.

Also, a function to obtain the AppStream version at runtime is provided.</doc>
    </docsection>
    <docsection name="as-video">
      <doc xml:space="preserve"
           filename="src/as-video.c"
           line="21">Screenshot may have a video instead of a static image associated with them.
This object allows access to the video and basic information about it.

See also: #AsScreenshot, #AsImage</doc>
    </docsection>
    <function name="bundle_kind_from_string"
              c:identifier="as_bundle_kind_from_string"
              moved-to="BundleKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-bundle.c"
           line="75">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-bundle.h" line="74"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="81">a #AsBundleKind or %AS_BUNDLE_KIND_UNKNOWN for unknown</doc>
        <type name="BundleKind" c:type="AsBundleKind"/>
      </return-value>
      <parameters>
        <parameter name="bundle_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-bundle.c"
               line="77">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="bundle_kind_to_string"
              c:identifier="as_bundle_kind_to_string"
              moved-to="BundleKind.to_string"
              version="0.8.0">
      <doc xml:space="preserve"
           filename="src/as-bundle.c"
           line="45">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-bundle.h" line="73"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-bundle.c"
             line="51">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-bundle.c"
               line="47">the %AsBundleKind.</doc>
          <type name="BundleKind" c:type="AsBundleKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="checksum_kind_from_string"
              c:identifier="as_checksum_kind_from_string"
              moved-to="ChecksumKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-checksum.c"
           line="68">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-checksum.h" line="68"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="74">a #AsChecksumKind or %AS_CHECKSUM_KIND_NONE for unknown</doc>
        <type name="ChecksumKind" c:type="AsChecksumKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="70">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="checksum_kind_to_string"
              c:identifier="as_checksum_kind_to_string"
              moved-to="ChecksumKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-checksum.c"
           line="44">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-checksum.h" line="67"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-checksum.c"
             line="50">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-checksum.c"
               line="46">the %AsChecksumKind.</doc>
          <type name="ChecksumKind" c:type="AsChecksumKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_kind_from_string"
              c:identifier="as_color_kind_from_string"
              moved-to="ColorKind.from_string"
              version="0.15.2">
      <doc xml:space="preserve"
           filename="src/as-branding.c"
           line="108">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-branding.h" line="89"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="114">a #AsColorKind or %AS_COLOR_KIND_UNKNOWN for unknown.</doc>
        <type name="ColorKind" c:type="AsColorKind"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="110">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_kind_to_string"
              c:identifier="as_color_kind_to_string"
              moved-to="ColorKind.to_string"
              version="0.15.2">
      <doc xml:space="preserve"
           filename="src/as-branding.c"
           line="90">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-branding.h" line="88"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="96">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="92">the %AsColorKind.</doc>
          <type name="ColorKind" c:type="AsColorKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_scheme_kind_from_string"
              c:identifier="as_color_scheme_kind_from_string"
              moved-to="ColorSchemeKind.from_string"
              version="0.15.2">
      <doc xml:space="preserve"
           filename="src/as-branding.c"
           line="146">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-branding.h" line="92"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="152">a #AsColorKind or %AS_COLOR_SCHEME_KIND_UNKNOWN for unknown.</doc>
        <type name="ColorSchemeKind" c:type="AsColorSchemeKind"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="148">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_scheme_kind_to_string"
              c:identifier="as_color_scheme_kind_to_string"
              moved-to="ColorSchemeKind.to_string"
              version="0.15.2">
      <doc xml:space="preserve"
           filename="src/as-branding.c"
           line="126">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-branding.h" line="91"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-branding.c"
             line="132">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-branding.c"
               line="128">the %AsColorSchemeKind.</doc>
          <type name="ColorSchemeKind" c:type="AsColorSchemeKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="component_kind_from_string"
              c:identifier="as_component_kind_from_string"
              moved-to="ComponentKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="204">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-component.h" line="111"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="210">a #AsComponentKind or %AS_COMPONENT_KIND_UNKNOWN for unknown</doc>
        <type name="ComponentKind" c:type="AsComponentKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="206">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="component_kind_to_string"
              c:identifier="as_component_kind_to_string"
              moved-to="ComponentKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="158">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-component.h" line="110"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="164">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="160">the #AsComponentKind.</doc>
          <type name="ComponentKind" c:type="AsComponentKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="component_scope_from_string"
              c:identifier="as_component_scope_from_string"
              moved-to="ComponentScope.from_string">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="319">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-component.h" line="152"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="325">a #AsComponentScope or %AS_COMPONENT_SCOPE_UNKNOWN for unknown</doc>
        <type name="ComponentScope" c:type="AsComponentScope"/>
      </return-value>
      <parameters>
        <parameter name="scope_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="321">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="component_scope_to_string"
              c:identifier="as_component_scope_to_string"
              moved-to="ComponentScope.to_string">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="301">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-component.h" line="151"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="307">string version of @scope</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="scope" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="303">the #AsComponentScope.</doc>
          <type name="ComponentScope" c:type="AsComponentScope"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_rating_system_format_age"
              c:identifier="as_content_rating_system_format_age"
              moved-to="ContentRatingSystem.format_age"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="293">Format @age as a human-readable string in the given rating @system. This is
the way to present system-specific strings in a UI.</doc>
      <source-position filename="src/as-content-rating.h" line="122"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="301">a newly allocated formatted version of
   @age, or %NULL if the given @system has no representation for @age</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="system" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="295">an #AsContentRatingSystem</doc>
          <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
        </parameter>
        <parameter name="age" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="296">a CSM age to format</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_rating_system_from_locale"
              c:identifier="as_content_rating_system_from_locale"
              moved-to="ContentRatingSystem.from_locale"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="683">Determine the most appropriate #AsContentRatingSystem for the given @locale.
Content rating systems are selected by territory. If no content rating system
seems suitable, %AS_CONTENT_RATING_SYSTEM_IARC is returned.</doc>
      <source-position filename="src/as-content-rating.h" line="125"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="691">the most relevant #AsContentRatingSystem</doc>
        <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
      </return-value>
      <parameters>
        <parameter name="locale" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="685">a locale, in the format described in `man 3 setlocale`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_rating_system_get_csm_ages"
              c:identifier="as_content_rating_system_get_csm_ages"
              moved-to="ContentRatingSystem.get_csm_ages"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="580">Get the CSM ages corresponding to the entries returned by
as_content_rating_system_get_formatted_ages() for this @system.</doc>
      <source-position filename="src/as-content-rating.h" line="128"/>
      <return-value transfer-ownership="container">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="589">an array of CSM ages</doc>
        <array length="1" zero-terminated="0" c:type="const guint*">
          <type name="guint" c:type="guint"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="system" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="582">an #AsContentRatingSystem</doc>
          <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
        </parameter>
        <parameter name="length_out"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="583">return location for the length of the
   returned array</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_rating_system_get_formatted_ages"
              c:identifier="as_content_rating_system_get_formatted_ages"
              moved-to="ContentRatingSystem.get_formatted_ages"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="523">Get an array of all the possible return values of
as_content_rating_system_format_age() for the given @system. The array is
sorted with youngest CSM age first.</doc>
      <source-position filename="src/as-content-rating.h" line="127"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="531">%NULL-terminated array of human-readable age strings</doc>
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="system" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="525">an #AsContentRatingSystem</doc>
          <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_rating_system_to_string"
              c:identifier="as_content_rating_system_to_string"
              moved-to="ContentRatingSystem.to_string"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="263">Get a human-readable string to identify @system. %NULL will be returned for
%AS_CONTENT_RATING_SYSTEM_UNKNOWN.</doc>
      <source-position filename="src/as-content-rating.h" line="121"/>
      <return-value transfer-ownership="none" nullable="1">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="270">a human-readable string for @system, or %NULL if unknown</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="system" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="265">an #AsContentRatingSystem</doc>
          <type name="ContentRatingSystem" c:type="AsContentRatingSystem"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_rating_value_from_string"
              c:identifier="as_content_rating_value_from_string"
              moved-to="ContentRatingValue.from_string"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="219">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-content-rating.h" line="114"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="225">a #AsContentRatingValue or %AS_CONTENT_RATING_VALUE_UNKNOWN for unknown</doc>
        <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="221">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_rating_value_to_string"
              c:identifier="as_content_rating_value_to_string"
              moved-to="ContentRatingValue.to_string"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="src/as-content-rating.c"
           line="195">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-content-rating.h" line="113"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-content-rating.c"
             line="201">string version of @value</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-content-rating.c"
               line="197">the #AsContentRatingValue.</doc>
          <type name="ContentRatingValue" c:type="AsContentRatingValue"/>
        </parameter>
      </parameters>
    </function>
    <function name="control_kind_from_string"
              c:identifier="as_control_kind_from_string"
              moved-to="ControlKind.from_string"
              version="0.12.11">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="329">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-relation.h" line="261"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="335">a #AsControlKind or %AS_CONTROL_KIND_UNKNOWN for unknown</doc>
        <type name="ControlKind" c:type="AsControlKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="331">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="control_kind_to_string"
              c:identifier="as_control_kind_to_string"
              moved-to="ControlKind.to_string"
              version="0.12.11">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="295">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-relation.h" line="260"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="301">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="297">the #AsControlKind.</doc>
          <type name="ControlKind" c:type="AsControlKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="display_length_kind_from_string"
              c:identifier="as_display_length_kind_from_string"
              moved-to="DisplayLengthKind.from_string"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="459">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-relation.h" line="267"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="465">a #AsDisplayLengthKind or %AS_DISPLAY_LENGTH_KIND_UNKNOWN for unknown</doc>
        <type name="DisplayLengthKind" c:type="AsDisplayLengthKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="461">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="display_length_kind_to_string"
              c:identifier="as_display_length_kind_to_string"
              moved-to="DisplayLengthKind.to_string"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="485">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-relation.h" line="266"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="491">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="487">the #AsDisplayLengthKind.</doc>
          <type name="DisplayLengthKind" c:type="AsDisplayLengthKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="display_side_kind_from_string"
              c:identifier="as_display_side_kind_from_string"
              moved-to="DisplaySideKind.from_string"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="383">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-relation.h" line="264"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="389">a #AsDisplaySideKind or %AS_DISPLAY_SIDE_KIND_UNKNOWN for unknown</doc>
        <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="385">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="display_side_kind_to_string"
              c:identifier="as_display_side_kind_to_string"
              moved-to="DisplaySideKind.to_string"
              version="0.12.12">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="363">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-relation.h" line="263"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="369">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="365">the #AsDisplaySideKind.</doc>
          <type name="DisplaySideKind" c:type="AsDisplaySideKind"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="flags_add"
                    c:identifier="as_flags_add"
                    introspectable="0">
      <source-position filename="src/as-enums.h" line="33"/>
      <parameters>
        <parameter name="bitfield">
        </parameter>
        <parameter name="enum">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="flags_contains"
                    c:identifier="as_flags_contains"
                    introspectable="0">
      <source-position filename="src/as-enums.h" line="36"/>
      <parameters>
        <parameter name="bitfield">
        </parameter>
        <parameter name="enum">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="flags_invert"
                    c:identifier="as_flags_invert"
                    introspectable="0">
      <source-position filename="src/as-enums.h" line="35"/>
      <parameters>
        <parameter name="bitfield">
        </parameter>
        <parameter name="enum">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="flags_remove"
                    c:identifier="as_flags_remove"
                    introspectable="0">
      <source-position filename="src/as-enums.h" line="34"/>
      <parameters>
        <parameter name="bitfield">
        </parameter>
        <parameter name="enum">
        </parameter>
      </parameters>
    </function-macro>
    <function name="format_kind_from_string"
              c:identifier="as_format_kind_from_string"
              moved-to="FormatKind.from_string"
              version="0.10">
      <doc xml:space="preserve"
           filename="src/as-enums.c"
           line="49">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-enums.h" line="129"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="55">a #AsFormatKind or %AS_FORMAT_KIND_UNKNOWN for unknown</doc>
        <type name="FormatKind" c:type="AsFormatKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="51">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_kind_to_string"
              c:identifier="as_format_kind_to_string"
              moved-to="FormatKind.to_string"
              version="0.10">
      <doc xml:space="preserve"
           filename="src/as-enums.c"
           line="29">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-enums.h" line="128"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="35">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="31">the #AsFormatKind.</doc>
          <type name="FormatKind" c:type="AsFormatKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_version_from_string"
              c:identifier="as_format_version_from_string"
              moved-to="FormatVersion.from_string"
              version="0.10">
      <doc xml:space="preserve"
           filename="src/as-context.c"
           line="82">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-context.h" line="65"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="88">a #AsFormatVersion. For unknown, the highest version
number is assumed.</doc>
        <type name="FormatVersion" c:type="AsFormatVersion"/>
      </return-value>
      <parameters>
        <parameter name="version_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="84">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_version_to_string"
              c:identifier="as_format_version_to_string"
              moved-to="FormatVersion.to_string"
              version="0.10">
      <doc xml:space="preserve"
           filename="src/as-context.c"
           line="64">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-context.h" line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-context.c"
             line="70">string version of @version</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="version" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-context.c"
               line="66">the #AsFormatKind.</doc>
          <type name="FormatVersion" c:type="AsFormatVersion"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_current_distro_component_id"
              c:identifier="as_get_current_distro_component_id">
      <doc xml:space="preserve"
           filename="src/as-system-info.c"
           line="977">Returns the component-ID of the current distribution based on contents
of the `/etc/os-release` file.
This function is a shorthand for %as_distro_details_get_cid</doc>
      <source-position filename="src/as-system-info.h" line="104"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="get_default_categories"
              c:identifier="as_get_default_categories"
              shadowed-by="get_default_categories_gi"
              introspectable="0">
      <doc xml:space="preserve"
           filename="src/as-category.c"
           line="745">Get a list of the default Freedesktop and AppStream categories
that software components (especially GUI applications) can be sorted
into in software centers.</doc>
      <source-position filename="src/as-category.h" line="82"/>
      <return-value transfer-ownership="container">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="753">a list of #AsCategory</doc>
        <array name="GLib.PtrArray" c:type="GPtrArray*">
          <type name="Category"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="with_special" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="747">Include special categories (e.g. "addons", and "all"/"featured" in submenus)</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_default_categories_gi"
              c:identifier="as_get_default_categories_gi"
              shadows="get_default_categories">
      <doc xml:space="preserve"
           filename="src/as-category.c"
           line="825">Get a list of the default Freedesktop and AppStream categories
that software components (especially GUI applications) can be sorted
into in software centers.

This function fully transfers ownership of the returned container,
to be used in GIR bindings.</doc>
      <source-position filename="src/as-category-gi.h" line="31"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-category.c"
             line="836">a list of #AsCategory</doc>
        <array name="GLib.PtrArray" c:type="GPtrArray*">
          <type name="Category"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="with_special" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-category.c"
               line="827">Include special categories (e.g. "addons", and "all"/"featured" in submenus)</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_license_url"
              c:identifier="as_get_license_url"
              version="0.12.7">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="655">Get a web URL to the license text and more license information for an SPDX
license identifier.</doc>
      <source-position filename="src/as-spdx.h" line="45"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="662">The license URL.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="license" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="657">The SPDX license ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gstring_replace" c:identifier="as_gstring_replace">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="851">Replaces the string @find with the string @replace in a #GString up to
@limit times. If the number of instances of @find in the #GString is
less than @limit, all instances are replaced. If @limit is `0`,
all instances of @find are replaced.</doc>
      <source-position filename="src/as-utils.h" line="121"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="863">the number of find and replace operations performed.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="853">a #GString</doc>
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
        <parameter name="find" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="854">the string to find in @string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="replace" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="855">the string to insert in place of @find</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="limit" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="856">the maximum instances of @find to replace with @replace, or `0` for no limit</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="icon_kind_from_string"
              c:identifier="as_icon_kind_from_string"
              moved-to="IconKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-icon.c"
           line="68">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-icon.h" line="67"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="74">a #AsIconKind or %AS_ICON_KIND_UNKNOWN for unknown</doc>
        <type name="IconKind" c:type="AsIconKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="70">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="icon_kind_to_string"
              c:identifier="as_icon_kind_to_string"
              moved-to="IconKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-icon.c"
           line="46">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-icon.h" line="68"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-icon.c"
             line="52">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-icon.c"
               line="48">the %AsIconKind.</doc>
          <type name="IconKind" c:type="AsIconKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="image_kind_from_string"
              c:identifier="as_image_kind_from_string"
              moved-to="ImageKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-image.c"
           line="74">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-image.h" line="63"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="80">a #AsImageKind, or %AS_IMAGE_KIND_UNKNOWN for unknown.</doc>
        <type name="ImageKind" c:type="AsImageKind"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="76">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="image_kind_to_string"
              c:identifier="as_image_kind_to_string"
              moved-to="ImageKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-image.c"
           line="93">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-image.h" line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-image.c"
             line="99">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-image.c"
               line="95">the #AsImageKind.</doc>
          <type name="ImageKind" c:type="AsImageKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="internet_kind_from_string"
              c:identifier="as_internet_kind_from_string"
              moved-to="InternetKind.from_string"
              version="0.15.5">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="511">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-relation.h" line="270"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="517">a #AsInternetKind or %AS_INTERNET_KIND_UNKNOWN for unknown</doc>
        <type name="InternetKind" c:type="AsInternetKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="513">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="internet_kind_to_string"
              c:identifier="as_internet_kind_to_string"
              moved-to="InternetKind.to_string"
              version="0.15.5">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="533">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-relation.h" line="269"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="539">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="535">the #AsInternetKind.</doc>
          <type name="InternetKind" c:type="AsInternetKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_spdx_license_exception_id"
              c:identifier="as_is_spdx_license_exception_id"
              version="0.12.10">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="182">Searches the known list of SPDX license exception IDs.</doc>
      <source-position filename="src/as-spdx.h" line="33"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="188">%TRUE if the string is a valid SPDX license exception ID</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="exception_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="184">a single SPDX license exception ID, e.g. "GCC-exception-3.1"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_spdx_license_expression"
              c:identifier="as_is_spdx_license_expression"
              version="0.9.8">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="214">Checks the licence string to check it being a valid licence.
NOTE: SPDX licenses can't typically contain brackets.</doc>
      <source-position filename="src/as-spdx.h" line="34"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="221">%TRUE if the icon is a valid "SPDX license"</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="license" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="216">a SPDX license string, e.g. "CC-BY-3.0 and GFDL-1.3"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_spdx_license_id"
              c:identifier="as_is_spdx_license_id"
              version="0.9.8">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="146">Searches the known list of SPDX license IDs.</doc>
      <source-position filename="src/as-spdx.h" line="32"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="152">%TRUE if the string is a valid SPDX license ID</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="license_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="148">a single SPDX license ID, e.g. "GPL-3.0"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="issue_kind_from_string"
              c:identifier="as_issue_kind_from_string"
              moved-to="IssueKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-issue.c"
           line="63">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-issue.h" line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="69">a #AsIssueKind or %AS_ISSUE_KIND_UNKNOWN for unknown</doc>
        <type name="IssueKind" c:type="AsIssueKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="65">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="issue_kind_to_string"
              c:identifier="as_issue_kind_to_string"
              moved-to="IssueKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-issue.c"
           line="45">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-issue.h" line="63"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-issue.c"
             line="51">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-issue.c"
               line="47">the %AsIssueKind.</doc>
          <type name="IssueKind" c:type="AsIssueKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="issue_severity_from_string"
              c:identifier="as_issue_severity_from_string"
              moved-to="IssueSeverity.from_string">
      <doc xml:space="preserve"
           filename="src/as-validator-issue.c"
           line="49">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-validator-issue.h" line="66"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="55">a #AsIssueSeverity, or %AS_ISSUE_SEVERITY_UNKNOWN for unknown.</doc>
        <type name="IssueSeverity" c:type="AsIssueSeverity"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="51">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="issue_severity_to_string"
              c:identifier="as_issue_severity_to_string"
              moved-to="IssueSeverity.to_string">
      <doc xml:space="preserve"
           filename="src/as-validator-issue.c"
           line="72">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-validator-issue.h" line="67"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-validator-issue.c"
             line="78">string version of @severity</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="severity" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-validator-issue.c"
               line="74">the #AsIssueSeverity.</doc>
          <type name="IssueSeverity" c:type="AsIssueSeverity"/>
        </parameter>
      </parameters>
    </function>
    <function name="launchable_kind_from_string"
              c:identifier="as_launchable_kind_from_string"
              moved-to="LaunchableKind.from_string"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="src/as-launchable.c"
           line="72">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-launchable.h" line="68"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="78">a #AsLaunchableKind or %AS_LAUNCHABLE_KIND_UNKNOWN for unknown</doc>
        <type name="LaunchableKind" c:type="AsLaunchableKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-launchable.c"
               line="74">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="launchable_kind_to_string"
              c:identifier="as_launchable_kind_to_string"
              moved-to="LaunchableKind.to_string"
              version="0.11.0">
      <doc xml:space="preserve"
           filename="src/as-launchable.c"
           line="48">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-launchable.h" line="67"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-launchable.c"
             line="54">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-launchable.c"
               line="50">the #AsLaunchableKind.</doc>
          <type name="LaunchableKind" c:type="AsLaunchableKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="license_is_free_license"
              c:identifier="as_license_is_free_license"
              version="0.12.10">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="723">Check if the given license is for free-as-in-freedom software.
A free software license is either approved by the Free Software Foundation
or the Open Source Initiative.

This function does *not* yet handle complex license expressions with AND and OR.
If the expression contains any of these, it will still simply check if all mentioned
licenses are Free licenses.
Currently, any license exception recognized by SPDX is assumed to not impact the free-ness
status of a software component.

Please note that this function does not give any legal advice. Please read the license texts
to learn more about the individual licenses and their conditions.</doc>
      <source-position filename="src/as-spdx.h" line="43"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="740">%TRUE if the license string contains only free-as-in-freedom licenses.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="license" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="725">The SPDX license string to test.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="license_is_metadata_license"
              c:identifier="as_license_is_metadata_license">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="588">Check if the metadata license is suitable for mixing with other
metadata and redistributing the bundled result (this means we
prefer permissive licenses here, to not require people shipping
catalog metadata to perform a full license review).

This method checks against a hardcoded list of permissive licenses
commonly used to license metadata under.</doc>
      <source-position filename="src/as-spdx.h" line="42"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="600">%TRUE if the license contains only permissive licenses suitable
as metadata license.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="license" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="590">The SPDX license string to test.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="license_is_metadata_license_id"
              c:identifier="as_license_is_metadata_license_id">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="530">Tests license ID against the vetted list of licenses that
can be used for metainfo metadata.
This function will not work for license expressions, if you need
to test an SPDX license expression for compliance, please
use %as_license_is_metadata_license insread.</doc>
      <source-position filename="src/as-spdx.h" line="41"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="540">%TRUE if the string is a valid metadata license ID.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="license_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="532">a single SPDX license ID, e.g. "FSFAP"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="license_to_spdx_id"
              c:identifier="as_license_to_spdx_id"
              version="0.9.8">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="422">Converts a non-SPDX license into an SPDX format string where possible.</doc>
      <source-position filename="src/as-spdx.h" line="39"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="428">the best-effort SPDX license string</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="license" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="424">a not-quite SPDX license string, e.g. "GPLv3+"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_convert_simple"
              c:identifier="as_markup_convert_simple"
              throws="1">
      <source-position filename="src/as-utils.h" line="91"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="markup" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_strsplit_words"
              c:identifier="as_markup_strsplit_words"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="70">Splits up a long line into an array of smaller strings, each being no longer
than @line_len. Words are not split.</doc>
      <source-position filename="src/as-utils.h" line="89"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="78">lines, or %NULL in event of an error</doc>
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="72">the text to split.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="line_len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="73">the maximum length of the output line</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="merge_kind_from_string"
              c:identifier="as_merge_kind_from_string"
              moved-to="MergeKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="280">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-component.h" line="133"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="286">a #AsMergeKind or %AS_MERGE_KIND_NONE for unknown</doc>
        <type name="MergeKind" c:type="AsMergeKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="282">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="merge_kind_to_string"
              c:identifier="as_merge_kind_to_string"
              moved-to="MergeKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="257">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-component.h" line="132"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="263">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="259">the #AsMergeKind.</doc>
          <type name="MergeKind" c:type="AsMergeKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="metadata_error_quark"
              c:identifier="as_metadata_error_quark"
              moved-to="MetadataError.quark">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-metadata.c"
             line="1629">An error quark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="pool_error_quark"
              c:identifier="as_pool_error_quark"
              moved-to="PoolError.quark">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-pool.c"
             line="2807">An error quark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="provided_kind_from_string"
              c:identifier="as_provided_kind_from_string"
              moved-to="ProvidedKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-provided.c"
           line="90">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-provided.h" line="86"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="96">a #AsProvidedKind or %AS_PROVIDED_KIND_UNKNOWN for unknown</doc>
        <type name="ProvidedKind" c:type="AsProvidedKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="92">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="provided_kind_to_l10n_string"
              c:identifier="as_provided_kind_to_l10n_string"
              moved-to="ProvidedKind.to_l10n_string">
      <doc xml:space="preserve"
           filename="src/as-provided.c"
           line="128">Converts the enumerated value to a localized text representation,
using the plural forms (e.g. "Libraries" instead of "Library").

This can be useful when displaying provided items in GUI dialogs.</doc>
      <source-position filename="src/as-provided.h" line="87"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="137">Pluralized, l10n string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="130">the #AsProvidedKind.</doc>
          <type name="ProvidedKind" c:type="AsProvidedKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="provided_kind_to_string"
              c:identifier="as_provided_kind_to_string"
              moved-to="ProvidedKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-provided.c"
           line="52">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-provided.h" line="85"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-provided.c"
             line="58">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-provided.c"
               line="54">the #AsProvidedKind.</doc>
          <type name="ProvidedKind" c:type="AsProvidedKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="relation_compare_from_string"
              c:identifier="as_relation_compare_from_string"
              moved-to="RelationCompare.from_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="187">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-relation.h" line="256"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="193">a #AsRelationCompare, or %AS_RELATION_COMPARE_UNKNOWN for unknown.</doc>
        <type name="RelationCompare" c:type="AsRelationCompare"/>
      </return-value>
      <parameters>
        <parameter name="compare_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="189">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="relation_compare_to_string"
              c:identifier="as_relation_compare_to_string"
              moved-to="RelationCompare.to_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="234">Converts the enumerated value to an text representation.
The enum is converted into a two-letter identifier ("eq", "ge", etc.)
for use in the XML representation.</doc>
      <source-position filename="src/as-relation.h" line="257"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="242">string version of @compare</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="compare" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="236">the #AsRelationCompare.</doc>
          <type name="RelationCompare" c:type="AsRelationCompare"/>
        </parameter>
      </parameters>
    </function>
    <function name="relation_compare_to_symbols_string"
              c:identifier="as_relation_compare_to_symbols_string"
              moved-to="RelationCompare.to_symbols_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="264">Converts the enumerated value to an text representation.
The enum is converted into an identifier consisting of two
mathematical comparison operators ("==", "&gt;=", etc.)
for use in the YAML representation and user interfaces.</doc>
      <source-position filename="src/as-relation.h" line="258"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="273">string version of @compare</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="compare" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="266">the #AsRelationCompare.</doc>
          <type name="RelationCompare" c:type="AsRelationCompare"/>
        </parameter>
      </parameters>
    </function>
    <function name="relation_error_quark"
              c:identifier="as_relation_error_quark"
              moved-to="RelationError.quark"
              version="0.16.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="69">An error quark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="relation_item_kind_from_string"
              c:identifier="as_relation_item_kind_from_string"
              moved-to="RelationItemKind.from_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="153">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-relation.h" line="254"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="159">a #AsRelationItemKind or %AS_RELATION_ITEM_KIND_UNKNOWN for unknown</doc>
        <type name="RelationItemKind" c:type="AsRelationItemKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="155">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="relation_item_kind_to_string"
              c:identifier="as_relation_item_kind_to_string"
              moved-to="RelationItemKind.to_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="119">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-relation.h" line="253"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="125">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="121">the #AsRelationKind.</doc>
          <type name="RelationItemKind" c:type="AsRelationItemKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="relation_kind_from_string"
              c:identifier="as_relation_kind_from_string"
              moved-to="RelationKind.from_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="97">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-relation.h" line="251"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="103">a #AsRelationKind or %AS_RELATION_KIND_UNKNOWN for unknown</doc>
        <type name="RelationKind" c:type="AsRelationKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="99">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="relation_kind_to_string"
              c:identifier="as_relation_kind_to_string"
              moved-to="RelationKind.to_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-relation.c"
           line="75">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-relation.h" line="250"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-relation.c"
             line="81">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-relation.c"
               line="77">the #AsRelationKind.</doc>
          <type name="RelationKind" c:type="AsRelationKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="release_kind_from_string"
              c:identifier="as_release_kind_from_string"
              moved-to="ReleaseKind.from_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-release.c"
           line="91">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-release.h" line="69"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="97">an #AsReleaseKind or %AS_RELEASE_KIND_UNKNOWN for unknown</doc>
        <type name="ReleaseKind" c:type="AsReleaseKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="93">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="release_kind_to_string"
              c:identifier="as_release_kind_to_string"
              moved-to="ReleaseKind.to_string"
              version="0.12.0">
      <doc xml:space="preserve"
           filename="src/as-release.c"
           line="71">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-release.h" line="68"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="77">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="73">the #AsReleaseKind.</doc>
          <type name="ReleaseKind" c:type="AsReleaseKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="release_url_kind_from_string"
              c:identifier="as_release_url_kind_from_string"
              moved-to="ReleaseUrlKind.from_string"
              version="0.12.5">
      <doc xml:space="preserve"
           filename="src/as-release.c"
           line="129">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-release.h" line="88"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="135">an #AsReleaseUrlKind or %AS_RELEASE_URL_KIND_UNKNOWN for unknown</doc>
        <type name="ReleaseUrlKind" c:type="AsReleaseUrlKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="131">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="release_url_kind_to_string"
              c:identifier="as_release_url_kind_to_string"
              moved-to="ReleaseUrlKind.to_string"
              version="0.12.5">
      <doc xml:space="preserve"
           filename="src/as-release.c"
           line="111">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-release.h" line="87"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-release.c"
             line="117">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-release.c"
               line="113">the #AsReleaseUrlKind.</doc>
          <type name="ReleaseUrlKind" c:type="AsReleaseUrlKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="releases_kind_from_string"
              c:identifier="as_releases_kind_from_string"
              moved-to="ReleasesKind.from_string"
              version="0.16.0">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="357">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-component.h" line="217"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="363">an #AsReleaseKind or %AS_RELEASE_KIND_UNKNOWN for unknown</doc>
        <type name="ReleasesKind" c:type="AsReleasesKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="359">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="releases_kind_to_string"
              c:identifier="as_releases_kind_to_string"
              moved-to="ReleasesKind.to_string"
              version="0.16.0">
      <doc xml:space="preserve"
           filename="src/as-component.c"
           line="337">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-component.h" line="216"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-component.c"
             line="343">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-component.c"
               line="339">the #AsReleaseKind.</doc>
          <type name="ReleasesKind" c:type="AsReleasesKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="screenshot_kind_from_string"
              c:identifier="as_screenshot_kind_from_string"
              moved-to="ScreenshotKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-screenshot.c"
           line="109">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-screenshot.h" line="83"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="115">a %AsScreenshotKind, or %AS_SCREENSHOT_KIND_UNKNOWN if not known.</doc>
        <type name="ScreenshotKind" c:type="AsScreenshotKind"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="111">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="screenshot_kind_to_string"
              c:identifier="as_screenshot_kind_to_string"
              moved-to="ScreenshotKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-screenshot.c"
           line="129">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-screenshot.h" line="84"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-screenshot.c"
             line="135">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-screenshot.c"
               line="131">the #AsScreenshotKind.</doc>
          <type name="ScreenshotKind" c:type="AsScreenshotKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="size_kind_from_string"
              c:identifier="as_size_kind_from_string"
              moved-to="SizeKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-artifact.c"
           line="71">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-artifact.h" line="68"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="77">an #AsSizeKind or %AS_SIZE_KIND_UNKNOWN for unknown</doc>
        <type name="SizeKind" c:type="AsSizeKind"/>
      </return-value>
      <parameters>
        <parameter name="size_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="73">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="size_kind_to_string"
              c:identifier="as_size_kind_to_string"
              moved-to="SizeKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-artifact.c"
           line="53">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-artifact.h" line="67"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-artifact.c"
             line="59">string version of @size_kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="size_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-artifact.c"
               line="55">the #AsSizeKind.</doc>
          <type name="SizeKind" c:type="AsSizeKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="spdx_license_detokenize"
              c:identifier="as_spdx_license_detokenize"
              version="0.9.8">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="374">De-tokenizes the SPDX licenses into a string.</doc>
      <source-position filename="src/as-spdx.h" line="37"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="380">string, or %NULL for invalid</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="license_tokens" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="376">license tokens, typically from as_spdx_license_tokenize()</doc>
          <type name="utf8" c:type="gchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="spdx_license_tokenize"
              c:identifier="as_spdx_license_tokenize"
              version="0.9.8">
      <doc xml:space="preserve"
           filename="src/as-spdx.c"
           line="314">Tokenizes the SPDX license string (or any simarly formatted string)
into parts. Any license parts of the string e.g. "LGPL-2.0+" are prefexed
with "@", the conjunctive replaced with "&amp;", the disjunctive replaced
with "|" and the WITH operator for license exceptions replaced with "^".
Brackets are added as indervidual tokens and other strings are
appended into single tokens where possible.</doc>
      <source-position filename="src/as-spdx.h" line="36"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="src/as-spdx.c"
             line="325">array of strings, or %NULL for invalid</doc>
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="license" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-spdx.c"
               line="316">a license string, e.g. "LGPLv2+ and (QPL or GPLv2) and MIT"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="suggested_kind_from_string"
              c:identifier="as_suggested_kind_from_string"
              moved-to="SuggestedKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-suggested.c"
           line="65">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-suggested.h" line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="71">a #AsSuggestedKind or %AS_SUGGESTED_KIND_UNKNOWN for unknown</doc>
        <type name="SuggestedKind" c:type="AsSuggestedKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="67">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="suggested_kind_to_string"
              c:identifier="as_suggested_kind_to_string"
              moved-to="SuggestedKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-suggested.c"
           line="46">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-suggested.h" line="65"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-suggested.c"
             line="52">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-suggested.c"
               line="48">the %AsSuggestedKind.</doc>
          <type name="SuggestedKind" c:type="AsSuggestedKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="system_info_error_quark"
              c:identifier="as_system_info_error_quark"
              moved-to="SystemInfoError.quark"
              version="0.16.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-system-info.c"
             line="99">An error quark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="translation_kind_from_string"
              c:identifier="as_translation_kind_from_string"
              moved-to="TranslationKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-translation.c"
           line="69">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-translation.h" line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="75">a #AsTranslationKind or %AS_TRANSLATION_KIND_UNKNOWN for unknown</doc>
        <type name="TranslationKind" c:type="AsTranslationKind"/>
      </return-value>
      <parameters>
        <parameter name="kind_str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-translation.c"
               line="71">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="translation_kind_to_string"
              c:identifier="as_translation_kind_to_string"
              moved-to="TranslationKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-translation.c"
           line="51">Converts the enumerated value to a text representation.</doc>
      <source-position filename="src/as-translation.h" line="63"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-translation.c"
             line="57">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-translation.c"
               line="53">the #AsTranslationKind.</doc>
          <type name="TranslationKind" c:type="AsTranslationKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="urgency_kind_from_string"
              c:identifier="as_urgency_kind_from_string"
              moved-to="UrgencyKind.from_string"
              version="0.6.5">
      <doc xml:space="preserve"
           filename="src/as-enums.c"
           line="157">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-enums.h" line="132"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="163">a %AsUrgencyKind or %AS_URGENCY_KIND_UNKNOWN for unknown</doc>
        <type name="UrgencyKind" c:type="AsUrgencyKind"/>
      </return-value>
      <parameters>
        <parameter name="urgency_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="159">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="urgency_kind_to_string"
              c:identifier="as_urgency_kind_to_string"
              moved-to="UrgencyKind.to_string"
              version="0.6.5">
      <doc xml:space="preserve"
           filename="src/as-enums.c"
           line="133">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-enums.h" line="131"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="139">string version of @urgency_kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="urgency_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="135">the %AsUrgencyKind.</doc>
          <type name="UrgencyKind" c:type="AsUrgencyKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="url_kind_from_string"
              c:identifier="as_url_kind_from_string"
              moved-to="UrlKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-enums.c"
           line="101">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-enums.h" line="126"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="107">a #AsUrlKind or %AS_URL_KIND_UNKNOWN for unknown</doc>
        <type name="UrlKind" c:type="AsUrlKind"/>
      </return-value>
      <parameters>
        <parameter name="url_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="103">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="url_kind_to_string"
              c:identifier="as_url_kind_to_string"
              moved-to="UrlKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-enums.c"
           line="69">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-enums.h" line="125"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-enums.c"
             line="75">string version of @url_kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="url_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-enums.c"
               line="71">the %AsUrlKind.</doc>
          <type name="UrlKind" c:type="AsUrlKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_build_data_id"
              c:identifier="as_utils_build_data_id"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1575">Builds an identifier string unique to the individual dataset using the supplied information.</doc>
      <source-position filename="src/as-utils.h" line="106"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="scope" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1577">Scope of the metadata as #AsComponentScope e.g. %AS_COMPONENT_SCOPE_SYSTEM</doc>
          <type name="ComponentScope" c:type="AsComponentScope"/>
        </parameter>
        <parameter name="bundle_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1578">Bundling system providing this data, e.g. 'package' or 'flatpak'</doc>
          <type name="BundleKind" c:type="AsBundleKind"/>
        </parameter>
        <parameter name="origin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1579">Origin string, e.g. 'os' or 'gnome-apps-nightly'</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="cid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1580">AppStream component ID, e.g. 'org.freedesktop.appstream.cli'</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="branch" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1581">Branch, e.g. '3-20' or 'master'</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_data_id_equal"
              c:identifier="as_utils_data_id_equal"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1732">Checks two component data IDs for equality allowing globs to match.</doc>
      <source-position filename="src/as-utils.h" line="117"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1739">%TRUE if the ID's should be considered equal.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data_id1" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1734">a data ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="data_id2" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1735">another data ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_data_id_get_cid"
              c:identifier="as_utils_data_id_get_cid">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1642">Get the component-id part of the data-id.</doc>
      <source-position filename="src/as-utils.h" line="112"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="data_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1644">The data-id.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_data_id_hash"
              c:identifier="as_utils_data_id_hash"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1755">Converts a data-id to a hash value.

This function implements the widely used DJB hash on the ID subset of the
data-id string.

It can be passed to g_hash_table_new() as the hash_func parameter,
when using non-NULL strings or unique_ids as keys in a GHashTable.</doc>
      <source-position filename="src/as-utils.h" line="119"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1767">a hash value corresponding to the key</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="data_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1757">a data ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_data_id_match"
              c:identifier="as_utils_data_id_match"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1673">Checks two data IDs for equality allowing globs to match, whilst also
allowing clients to whitelist sections that have to match.</doc>
      <source-position filename="src/as-utils.h" line="114"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1682">%TRUE if the IDs should be considered equal.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data_id1" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1675">a data ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="data_id2" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1676">another data ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="match_flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1677">a #AsDataIdMatchFlags bitfield, e.g. %AS_DATA_ID_MATCH_FLAG_ID</doc>
          <type name="DataIdMatchFlags" c:type="AsDataIdMatchFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_data_id_valid"
              c:identifier="as_utils_data_id_valid"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1617">Checks if a data ID is valid i.e. has the correct number of
sections.</doc>
      <source-position filename="src/as-utils.h" line="111"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1624">%TRUE if the ID is valid</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1619">a component data ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_error_quark"
              c:identifier="as_utils_error_quark"
              moved-to="UtilsError.quark"
              version="0.14.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="64">An error quark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="utils_guess_scope_from_path"
              c:identifier="as_utils_guess_scope_from_path"
              version="0.15.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="2628">Guess the #AsComponentScope that applies to a given path.</doc>
      <source-position filename="src/as-utils.h" line="134"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="2634">the #AsComponentScope</doc>
        <type name="ComponentScope" c:type="AsComponentScope"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="2630">The filename to test.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_install_metadata_file"
              c:identifier="as_utils_install_metadata_file"
              version="0.14.0"
              throws="1">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="2271">Installs an AppStream MetaInfo, AppStream Metadata Catalog or AppStream Icon tarball file
to the right place on the filesystem.
Please note that this function does almost no validation and may guess missing values such
as icon sizes and origin names.
Ensure your metadata is good before installing it.</doc>
      <source-position filename="src/as-utils.h" line="128"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="2285">%TRUE for success, %FALSE if error is set</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="location" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="2273">the #AsMetadataLocation, e.g. %AS_METADATA_LOCATION_CACHE</doc>
          <type name="MetadataLocation" c:type="AsMetadataLocation"/>
        </parameter>
        <parameter name="filename" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="2274">the full path of the file to install</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="origin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="2275">the origin to use for the installation, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="destdir" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="2276">the destdir to use, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_is_category_name"
              c:identifier="as_utils_is_category_name">
      <source-position filename="src/as-utils.h" line="98"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="category_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_is_desktop_environment"
              c:identifier="as_utils_is_desktop_environment"
              version="0.10.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1335">Searches the known list of desktop environments AppStream
knows about.</doc>
      <source-position filename="src/as-utils.h" line="100"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1342">%TRUE if the desktop-id is valid</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="desktop" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1337">a desktop environment id.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_is_platform_triplet"
              c:identifier="as_utils_is_platform_triplet"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1482">Test if the given string is a valid platform triplet recognized by
AppStream.</doc>
      <source-position filename="src/as-utils.h" line="126"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1489">%TRUE if triplet is valid.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="triplet" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1484">a platform triplet.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_is_tld"
              c:identifier="as_utils_is_tld"
              version="0.9.8">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1305">Searches the known list of TLDs we allow for AppStream IDs.
This excludes internationalized names.</doc>
      <source-position filename="src/as-utils.h" line="99"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1312">%TRUE if the TLD is valid</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="tld" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1307">a top-level domain without dot, e.g. "de", "org", "name"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_locale_is_compatible"
              c:identifier="as_utils_locale_is_compatible"
              version="0.9.5">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1180">Calculates if one locale is compatible with another.
When doing the calculation the locale and language code is taken into
account if possible.</doc>
      <source-position filename="src/as-utils.h" line="94"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="1189">%TRUE if the locale is compatible.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="locale1"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1182">a BCP47 or POSIX locale string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="locale2"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1183">a BCP47 or POSIX locale string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_posix_locale_to_bcp47"
              c:identifier="as_utils_posix_locale_to_bcp47">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="689">Converts a POSIX locale string to the corresponding IETF BCP47 format.
If the given locale is already in BCP47 format, no change will be done.</doc>
      <source-position filename="src/as-utils.h" line="96"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-utils.c"
             line="695">A locale string, free with g_free()</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="locale" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_sort_components_into_categories"
              c:identifier="as_utils_sort_components_into_categories">
      <doc xml:space="preserve"
           filename="src/as-utils.c"
           line="1513">Sorts all components in @cpts into the #AsCategory categories listed in @categories.</doc>
      <source-position filename="src/as-utils.h" line="102"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cpts" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1515">List of components.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Component"/>
          </array>
        </parameter>
        <parameter name="categories" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1516">List of categories to sort components into.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Category"/>
          </array>
        </parameter>
        <parameter name="check_duplicates" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-utils.c"
               line="1517">Whether to check for duplicates.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="validator_error_quark"
              c:identifier="as_validator_error_quark"
              moved-to="ValidatorError.quark"
              version="0.15.4">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-validator.c"
             line="77">An error quark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="vercmp" c:identifier="as_vercmp">
      <doc xml:space="preserve"
           filename="src/as-vercmp.c"
           line="145">Compare alpha and numeric segments of two software versions,
considering @flags.</doc>
      <source-position filename="src/as-vercmp.h" line="46"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-vercmp.c"
             line="154">&gt;&gt;0 if a is newer than b;
    0 if a and b are the same version;
    &lt;&lt;0 if b is newer than a</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="147">First version number</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="148">Second version number</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="149">Flags, e.g. %AS_VERCMP_FLAG_NONE</doc>
          <type name="VercmpFlags" c:type="AsVercmpFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="vercmp_simple" c:identifier="as_vercmp_simple">
      <doc xml:space="preserve"
           filename="src/as-vercmp.c"
           line="205">Compare alpha and numeric segments of two software versions.</doc>
      <source-position filename="src/as-vercmp.h" line="49"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-vercmp.c"
             line="212">&gt;&gt;0 if a is newer than b;
    0 if a and b are the same version;
    &lt;&lt;0 if b is newer than a</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="207">First version number</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="208">Second version number</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vercmp_test_match"
              c:identifier="as_vercmp_test_match"
              version="0.16.0">
      <doc xml:space="preserve"
           filename="src/as-vercmp.c"
           line="222">Compare two version numbers and check if the given version comparator matches.</doc>
      <source-position filename="src/as-vercmp.h" line="52"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-vercmp.c"
             line="231">%TRUE if the version comparison matches, %FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="ver1" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="224">first version number</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="compare" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="225">the comparison operator</doc>
          <type name="RelationCompare" c:type="AsRelationCompare"/>
        </parameter>
        <parameter name="ver2" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="226">second version number</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-vercmp.c"
               line="227">the #AsVercmpFlags to use</doc>
          <type name="VercmpFlags" c:type="AsVercmpFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="version_string"
              c:identifier="as_version_string"
              version="0.14.0">
      <doc xml:space="preserve"
           filename="src/as-version.c"
           line="40">Get the version of the AppStream library that is currently used
at runtime as a string.</doc>
      <source-position filename="src/as-version.h" line="47"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-version.c"
             line="46">a version number, e.g. "0.14.2"</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
    </function>
    <function name="video_codec_kind_from_string"
              c:identifier="as_video_codec_kind_from_string"
              moved-to="VideoCodecKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-video.c"
           line="74">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-video.h" line="79"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="80">a #AsVideoCodecKind, or %AS_VIDEO_CODEC_KIND_UNKNOWN for unknown.</doc>
        <type name="VideoCodecKind" c:type="AsVideoCodecKind"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="76">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="video_codec_kind_to_string"
              c:identifier="as_video_codec_kind_to_string"
              moved-to="VideoCodecKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-video.c"
           line="93">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-video.h" line="80"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="99">string version of @codec</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="95">the #AsVideoCodecKind.</doc>
          <type name="VideoCodecKind" c:type="AsVideoCodecKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="video_container_kind_from_string"
              c:identifier="as_video_container_kind_from_string"
              moved-to="VideoContainerKind.from_string">
      <doc xml:space="preserve"
           filename="src/as-video.c"
           line="112">Converts the text representation to an enumerated value.</doc>
      <source-position filename="src/as-video.h" line="82"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="118">a #AsVideoContainerKind, or %AS_VIDEO_CONTAINER_KIND_UNKNOWN for unknown.</doc>
        <type name="VideoContainerKind" c:type="AsVideoContainerKind"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="114">the string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="video_container_kind_to_string"
              c:identifier="as_video_container_kind_to_string"
              moved-to="VideoContainerKind.to_string">
      <doc xml:space="preserve"
           filename="src/as-video.c"
           line="133">Converts the enumerated value to an text representation.</doc>
      <source-position filename="src/as-video.h" line="83"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/as-video.c"
             line="139">string version of @kind</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/as-video.c"
               line="135">the #AsVideoContainerKind.</doc>
          <type name="VideoContainerKind" c:type="AsVideoContainerKind"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
