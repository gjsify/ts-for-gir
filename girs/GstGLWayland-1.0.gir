<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gst" version="1.0"/>
  <include name="GstBase" version="1.0"/>
  <include name="GstGL" version="1.0"/>
  <include name="GstVideo" version="1.0"/>
  <package name="gstreamer-gl-wayland-1.0"/>
  <c:include name="gst/gl/wayland/wayland.h"/>
  <namespace name="GstGLWayland"
             version="1.0"
             shared-library="libgstgl-1.0.so.0"
             c:identifier-prefixes="Gst"
             c:symbol-prefixes="gst">
    <class name="GLDisplayWayland"
           c:symbol-prefix="gl_display_wayland"
           c:type="GstGLDisplayWayland"
           parent="GstGL.GLDisplay"
           glib:type-name="GstGLDisplayWayland"
           glib:get-type="gst_gl_display_wayland_get_type"
           glib:type-struct="GLDisplayWaylandClass">
      <doc xml:space="preserve"
           filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
           line="45">the contents of a #GstGLDisplayWayland are private and should only be accessed
through the provided API</doc>
      <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="74"/>
      <constructor name="new" c:identifier="gst_gl_display_wayland_new">
        <doc xml:space="preserve"
             filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
             line="88">Create a new #GstGLDisplayWayland from the wayland display name.  See `wl_display_connect`()
for details on what is a valid name.</doc>
        <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                         line="77"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
               line="95">a new #GstGLDisplayWayland or %NULL</doc>
          <type name="GLDisplayWayland" c:type="GstGLDisplayWayland*"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
                 line="90">a display name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_display"
                   c:identifier="gst_gl_display_wayland_new_with_display">
        <doc xml:space="preserve"
             filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
             line="122">Creates a new display connection from a wl_display Display.</doc>
        <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                         line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
               line="128">a new #GstGLDisplayWayland</doc>
          <type name="GLDisplayWayland" c:type="GstGLDisplayWayland*"/>
        </return-value>
        <parameters>
          <parameter name="display"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
                 line="124">an existing, wayland display</doc>
            <type name="gpointer" c:type="wl_display*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="GstGL.GLDisplay" c:type="GstGLDisplay"/>
      </field>
      <field name="display">
        <type name="gpointer" c:type="wl_display*"/>
      </field>
      <field name="registry">
        <type name="gpointer" c:type="wl_registry*"/>
      </field>
      <field name="compositor">
        <type name="gpointer" c:type="wl_compositor*"/>
      </field>
      <field name="subcompositor">
        <type name="gpointer" c:type="wl_subcompositor*"/>
      </field>
      <field name="shell">
        <type name="gpointer" c:type="wl_shell*"/>
      </field>
      <field name="foreign_display" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLDisplayWaylandClass"
            c:type="GstGLDisplayWaylandClass"
            glib:is-gtype-struct-for="GLDisplayWayland">
      <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="74"/>
      <field name="object_class">
        <type name="GstGL.GLDisplayClass" c:type="GstGLDisplayClass"/>
      </field>
      <field name="_padding">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <function-macro name="GL_DISPLAY_WAYLAND"
                    c:identifier="GST_GL_DISPLAY_WAYLAND"
                    introspectable="0">
      <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GL_DISPLAY_WAYLAND_CAST"
                    c:identifier="GST_GL_DISPLAY_WAYLAND_CAST"
                    introspectable="0">
      <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GL_DISPLAY_WAYLAND_CLASS"
                    c:identifier="GST_GL_DISPLAY_WAYLAND_CLASS"
                    introspectable="0">
      <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GL_DISPLAY_WAYLAND"
                    c:identifier="GST_IS_GL_DISPLAY_WAYLAND"
                    introspectable="0">
      <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GL_DISPLAY_WAYLAND_CLASS"
                    c:identifier="GST_IS_GL_DISPLAY_WAYLAND_CLASS"
                    introspectable="0">
      <source-position filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <docsection name="gstgldisplay_wayland">
      <doc xml:space="preserve"
           filename="gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
           line="21">#GstGLDisplayWayland represents a connection to a Wayland `wl_display` handle
created internally (gst_gl_display_wayland_new()) or wrapped by the application
(gst_gl_display_wayland_new_with_display())</doc>
    </docsection>
  </namespace>
</repository>
